(function (React, ReactDOM) {
  'use strict';
  function _interopDefaultLegacy(e) {
    return e && typeof e === 'object' && ('default' in e) ? e : {
      'default': e
    };
  }
  function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);
    if (e) {
      Object.keys(e).forEach(function (k) {
        if (k !== 'default') {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: true,
            get: function () {
              return e[k];
            }
          });
        }
      });
    }
    n["default"] = e;
    return Object.freeze(n);
  }
  var React__namespace = _interopNamespace(React);
  var React__default = _interopDefaultLegacy(React);
  var ReactDOM__default = _interopDefaultLegacy(ReactDOM);
  var ReactDOM__namespace = _interopNamespace(ReactDOM);
  (function () {
    const env = {};
    try {
      if (process) {
        process.env = Object.assign({}, process.env);
        Object.assign(process.env, env);
        return;
      }
    } catch (e) {}
    globalThis.process = {
      env: env
    };
  })();
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || ({
      __proto__: []
    }) instanceof Array && (function (d, b) {
      d.__proto__ = b;
    }) || (function (d, b) {
      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    });
    return extendStatics(d, b);
  };
  function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }
  var __assign = function () {
    __assign = Object.assign || (function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
      return t;
    });
    return __assign.apply(this, arguments);
  };
  function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
  }
  function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !((i in from))) {
        if (!ar) ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
  }
  function lowerCase(str) {
    return str.toLowerCase();
  }
  var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];
  var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;
  function noCase(input, options) {
    if (options === void 0) {
      options = {};
    }
    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;
    var result = replace(replace(input, splitRegexp, "$1\0$2"), stripRegexp, "\0");
    var start = 0;
    var end = result.length;
    while (result.charAt(start) === "\0") start++;
    while (result.charAt(end - 1) === "\0") end--;
    return result.slice(start, end).split("\0").map(transform).join(delimiter);
  }
  function replace(input, re, value) {
    if (re instanceof RegExp) return input.replace(re, value);
    return re.reduce(function (input, re) {
      return input.replace(re, value);
    }, input);
  }
  function pascalCaseTransform(input, index) {
    var firstChar = input.charAt(0);
    var lowerChars = input.substr(1).toLowerCase();
    if (index > 0 && firstChar >= "0" && firstChar <= "9") {
      return "_" + firstChar + lowerChars;
    }
    return "" + firstChar.toUpperCase() + lowerChars;
  }
  function pascalCase(input, options) {
    if (options === void 0) {
      options = {};
    }
    return noCase(input, __assign({
      delimiter: "",
      transform: pascalCaseTransform
    }, options));
  }
  function dotCase(input, options) {
    if (options === void 0) {
      options = {};
    }
    return noCase(input, __assign({
      delimiter: "."
    }, options));
  }
  function snakeCase(input, options) {
    if (options === void 0) {
      options = {};
    }
    return dotCase(input, __assign({
      delimiter: "_"
    }, options));
  }
  var add$5 = ["M10.99 6.99h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"];
  var addClip$1 = ["M12 0a1 1 0 00-1 1v2H9a1 1 0 000 2h2v2a1 1 0 102 0V5h2a1 1 0 100-2h-2V1a1 1 0 00-1-1zM0 4a1 1 0 011-1h3.5a1 1 0 010 2H2v2a1 1 0 01-2 0V4zm1 12a1 1 0 01-1-1v-3a1 1 0 112 0v2h2.5a1 1 0 110 2H1zm11 0a1 1 0 001-1v-3a1 1 0 10-2 0v2H9a1 1 0 100 2h3zm-5.5-4a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"];
  var addColumnLeft$1 = ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 14H2V2h8v12zm4 0h-3V2h3v12zM4 9h1v1c0 .55.45 1 1 1s1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1H7V6c0-.55-.45-1-1-1s-1 .45-1 1v1H4c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var addColumnRight$1 = ["M8 9h1v1c0 .55.45 1 1 1s1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V6c0-.55-.45-1-1-1s-1 .45-1 1v1H8c-.55 0-1 .45-1 1s.45 1 1 1zm7-9H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 14H2V2h3v12zm9 0H6V2h8v12z"];
  var addLocation$1 = ["M8 0a1 1 0 110 2 6 6 0 106 6 1 1 0 012 0 8 8 0 11-8-8zm0 5a3 3 0 110 6 3 3 0 010-6zm5-5a1 1 0 011 1v.999L15 2a1 1 0 010 2h-1v1a1 1 0 01-2 0V4h-1a1 1 0 010-2h1V1a1 1 0 011-1z"];
  var addRowBottom$1 = ["M6 11h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1H9V8c0-.55-.45-1-1-1s-1 .45-1 1v1H6c-.55 0-1 .45-1 1s.45 1 1 1zm9-11H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V6h12v8zm0-9H2V2h12v3z"];
  var addRowTop$1 = ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2v-3h12v3zm0-4H2V2h12v8zM6 7h1v1c0 .55.45 1 1 1s1-.45 1-1V7h1c.55 0 1-.45 1-1s-.45-1-1-1H9V4c0-.55-.45-1-1-1s-1 .45-1 1v1H6c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var addToArtifact$1 = ["M14 4.01h-1v-1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1 0-.56-.45-1-1-1zm-13 2h6c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm8 6H1c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1 0-.56-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1 0-.56-.45-1-1-1z"];
  var addToFolder$1 = ["M.01 7V5H16v7c0 .55-.45 1-1 1H9.005v-2.99C8.974 8.332 7.644 7 5.996 7H.01zM15 2H7.416L5.706.29a.996.996 0 00-.71-.29H1C.45 0 0 .45 0 1v3h15.99V3c.01-.55-.44-1-.99-1zM5.997 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.589L.3 14.29a1.003 1.003 0 001.42 1.42l3.287-3.29v1.59c0 .55.45 1 1 1 .549 0 .999-.45.999-1v-4A1.02 1.02 0 005.996 9z"];
  var airplane$1 = ["M16 1.5A1.498 1.498 0 0013.44.44L9.91 3.97 2 1 1 3l5.93 3.95L3.88 10H1l-1 1 3 2 2 3 1-1v-2.88l3.05-3.05L13 15l2-1-2.97-7.91 3.53-3.53c.27-.27.44-.65.44-1.06z"];
  var alignCenter$1 = ["M4 4c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1H4zM1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm13 10H2c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm1-6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-5 5c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1h4z"];
  var alignJustify$1 = ["M15 12.98H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-14-10h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1 0 .56.45 1 1 1zm14 4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-3H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0 6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var alignLeft$1 = ["M13 13H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zM1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 3h8c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 12h4c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var alignRight$1 = ["M15 12.98H3c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm-14-10h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1 0 .56.45 1 1 1zm14 1H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0 6h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1zm0-3H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var alignmentBottom$1 = ["M10 12h3c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm5 2H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h3c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1z"];
  var alignmentHorizontalCenter$1 = ["M15 7h-1V6c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v1H7V3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4H1c-.55 0-1 .45-1 1s.45 1 1 1h1v4c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V9h2v1c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V9h1c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var alignmentLeft$1 = ["M9 9H5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zM1 0C.45 0 0 .45 0 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm13 2H5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"];
  var alignmentRight$1 = ["M11 9H7c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zm4-9c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-4 2H2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"];
  var alignmentTop$1 = ["M15 0H1C.45 0 0 .45 0 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM6 4H3c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm7 0h-3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"];
  var alignmentVerticalCenter$1 = ["M13 2H9V1c0-.55-.45-1-1-1S7 .45 7 1v1H3c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4v2H6c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1H9V7h4c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"];
  var annotation$1 = ["M15.52 2.77c.3-.29.48-.7.48-1.15C16 .73 15.27 0 14.38 0c-.45 0-.85.18-1.15.48l-1.34 1.34 2.3 2.3 1.33-1.35zM7.4 10.9l6.21-6.21-2.3-2.3L5.1 8.6l2.3 2.3zM14 14H2V2h6.34l2-2H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5.66l-2 2V14zM3 13l3.58-1.29-2.29-2.27L3 13z"];
  var antenna$1 = ["M2.673 10.758a1.396 1.396 0 01.093.234c.127.442.012.932-.362 1.212-.441.332-1.075.246-1.349-.233a8 8 0 1114.014-.225c-.259.488-.889.594-1.341.277-.382-.269-.513-.755-.4-1.2a1.259 1.259 0 01.085-.238 6 6 0 10-10.74.173zm2.464-1.862a1.783 1.783 0 01.076.404c.03.415-.096.831-.43 1.078-.444.328-1.08.237-1.314-.264a5.003 5.003 0 01-.24-.62l-.004-.011a5 5 0 119.574-.08l-.003.011c-.063.213-.14.422-.23.625-.226.504-.861.606-1.31.285-.338-.241-.47-.654-.448-1.07a1.737 1.737 0 01.07-.405 2.99 2.99 0 00-.216-2.233 3 3 0 00-5.525 2.28zM8 7a1 1 0 011 1v3.586l2.707 2.707a1 1 0 01-1.414 1.414L8 13.414l-2.293 2.293a1 1 0 01-1.414-1.414L7 11.586V8a1 1 0 011-1z"];
  var appHeader$1 = ["M15 0a1 1 0 011 1v14a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h14zM6 4a1 1 0 00-1.993-.117L4 4v8a1 1 0 001.993.117L6 12V9h4v3a1 1 0 001.993.117L12 12V4a1 1 0 00-1.993-.117L10 4v3H6V4z"];
  var application$1 = ["M3.5 7h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zM15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm-1 12H2V5h12v8zM3.5 9h4c.28 0 .5-.22.5-.5S7.78 8 7.5 8h-4c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5z"];
  var applications$1 = ["M3.5 11h2c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-2c-.28 0-.5.22-.5.5s.22.5.5.5zm0-2h5c.28 0 .5-.22.5-.5S8.78 8 8.5 8h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM11 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 10H2V7h8v7zm5-14H5c-.55 0-1 .45-1 1v2h2V2h8v7h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM3.5 13h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-3c-.28 0-.5.22-.5.5s.22.5.5.5z"];
  var archive$1 = ["M13.382 0a1 1 0 01.894.553L16 4v11a1 1 0 01-1 1H1a1 1 0 01-1-1V4L1.724.553A1 1 0 012.618 0h10.764zM8 6c-.55 0-1 .45-1 1v2.59l-.29-.29-.081-.076A.97.97 0 006 9a1.003 1.003 0 00-.71 1.71l2 2 .096.084c.168.13.38.206.614.206.28 0 .53-.11.71-.29l2-2 .084-.096A1.003 1.003 0 009.29 9.29l-.29.3V7l-.007-.116A1.004 1.004 0 008 6zm5-4H3L2 4h12l-1-2z"];
  var areaOfInterest$1 = ["M4 3.664C4 1.644 5.793 0 8 0s3.993 1.643 4 3.664C12 5.692 8 11 8 11S4 5.692 4 3.664zM6 4a2 2 0 104.001-.001A2 2 0 006 4zm7.504 6.269l-2.68-1.609.021-.033c.34-.538.688-1.115 1-1.687l3.67 2.202a1 1 0 01.266 1.482l-4 5A1 1 0 0111 16H5a1 1 0 01-.78-.376l-4-5a1 1 0 01.266-1.482l3.67-2.202a30.46 30.46 0 00.999 1.687l.021.033-2.68 1.609 2.985 3.73h5.038l2.985-3.73z"];
  var array$1 = ["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm4 7a1 1 0 110 2 1 1 0 010-2zM5 7a1 1 0 110 2 1 1 0 010-2zm6 0a1 1 0 110 2 1 1 0 010-2z"];
  var arrayBoolean$1 = ["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm7 6a1 1 0 01.993.883L12 7v2a1 1 0 01-.883.993L11 10H5a1 1 0 01-.993-.883L4 9V7a1 1 0 01.883-.993L5 6h6zm0 1H8v2h3V7z"];
  var arrayDate$1 = ["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm6.5 4a.5.5 0 01.5.5V5a1 1 0 01.993.883L12 6v5a1 1 0 01-.883.993L11 12H5a1 1 0 01-.993-.883L4 11V6a1 1 0 01.883-.993L5 5v-.5a.5.5 0 011 0V5h4v-.5a.5.5 0 01.5-.5zm.5 3H5v4h6V7z"];
  var arrayFloatingPoint$1 = ["M15.993.883A1 1 0 0015 0h-3l-.117.007A1 1 0 0011 1l.007.117A1 1 0 0012 2h2v12h-2l-.117.007A1 1 0 0012 16h3l.117-.007A1 1 0 0016 15V1l-.007-.117zM5 1a1 1 0 00-1-1H1L.883.007A1 1 0 000 1v14l.007.117A1 1 0 001 16h3l.117-.007A1 1 0 005 15l-.007-.117A1 1 0 004 14H2V2h2l.117-.007A1 1 0 005 1z", "M4.347 5.86c-.177.03-.36.047-.547.047v.703h1.344v3.86h.977V5h-.727a.844.844 0 01-.203.422 1.17 1.17 0 01-.367.281c-.14.073-.3.125-.477.157z", "M11.462 5.27c-.236-.176-.542-.264-.918-.264s-.685.088-.925.263a1.79 1.79 0 00-.557.662c-.13.266-.22.56-.27.88-.046.321-.068.632-.068.933 0 .3.022.612.067.933.05.32.14.617.271.887.135.266.321.487.557.662.24.17.549.256.925.256s.682-.085.918-.256c.24-.175.426-.396.556-.662a2.86 2.86 0 00.271-.887c.05-.321.075-.632.075-.933 0-.3-.025-.612-.075-.933a2.775 2.775 0 00-.27-.88 1.702 1.702 0 00-.557-.662zm-.452 4.34a.7.7 0 01-.466.157.711.711 0 01-.474-.158 1.214 1.214 0 01-.293-.436 2.791 2.791 0 01-.15-.647 6.443 6.443 0 01-.046-.782c0-.276.015-.534.045-.775.03-.246.08-.461.15-.647.076-.185.174-.33.294-.436a.69.69 0 01.474-.166.68.68 0 01.466.166c.126.105.223.25.294.436.075.186.128.401.158.647.03.24.045.5.045.775 0 .276-.015.537-.045.782-.03.246-.083.462-.158.647-.07.18-.168.326-.294.436z", "M7.082 9.445H8.17V10.5H7.082V9.445z"];
  var arrayNumeric$1 = ["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm6.904 5c.256 0 .483.037.68.112a1.343 1.343 0 01.812.788c.072.184.108.385.108.604 0 .23-.05.441-.152.636a1.314 1.314 0 01-.456.492v.016l.08.04c.055.031.111.072.168.124.085.077.163.172.232.284a1.673 1.673 0 01.24.872c0 .25-.043.477-.128.68a1.518 1.518 0 01-.896.852 1.937 1.937 0 01-.68.116c-.427 0-.792-.101-1.096-.304a1.362 1.362 0 01-.584-.864c-.01-.053.01-.088.064-.104l.696-.16.033-.002c.03.002.051.022.063.058.059.16.155.296.288.408.133.112.312.168.536.168.256 0 .453-.076.592-.228a.827.827 0 00.208-.58c0-.277-.08-.495-.24-.652-.16-.157-.376-.236-.648-.236h-.232l-.035-.005c-.03-.01-.045-.035-.045-.075v-.632l.005-.035c.01-.03.035-.045.075-.045h.216l.138-.009a.734.734 0 00.438-.207c.144-.144.216-.336.216-.576a.745.745 0 00-.192-.532c-.128-.136-.307-.204-.536-.204-.203 0-.363.05-.48.152a.815.815 0 00-.248.408c-.016.048-.048.067-.096.056l-.68-.16-.034-.012c-.028-.016-.038-.044-.03-.084a1.347 1.347 0 01.516-.828c.136-.104.296-.185.48-.244A1.98 1.98 0 0110.904 5zm-6.152.088l.035.005c.03.01.045.035.045.075v5.28l-.005.035c-.01.03-.035.045-.075.045h-.736l-.035-.005c-.03-.01-.045-.035-.045-.075V6.16H3.92l-.832.584-.032.016C3.02 6.773 3 6.751 3 6.696V5.88l.006-.04a.157.157 0 01.05-.072l.872-.632.04-.027a.236.236 0 01.104-.021h.68zM7.344 5c.256 0 .483.04.68.12.197.08.364.188.5.324s.24.296.312.48c.072.184.108.383.108.596 0 .245-.045.47-.136.676-.09.205-.216.404-.376.596l-1.584 1.92v.016h2.016l.035.005c.03.01.045.035.045.075v.64l-.005.035c-.01.03-.035.045-.075.045H5.808l-.035-.005c-.03-.01-.045-.035-.045-.075v-.6l.004-.04a.132.132 0 01.036-.064l1.92-2.392.1-.133a1.95 1.95 0 00.156-.267.985.985 0 00.096-.432.736.736 0 00-.188-.512c-.125-.139-.303-.208-.532-.208-.219 0-.39.061-.512.184a.826.826 0 00-.224.496c-.01.053-.04.075-.088.064L5.792 6.4l-.034-.012c-.028-.016-.038-.044-.03-.084a1.425 1.425 0 01.94-1.192A1.88 1.88 0 017.344 5z"];
  var arrayString$1 = ["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm1.61 5c.514 0 .962.212 1.343.637.382.425.573.997.573 1.716 0 .838-.258 1.588-.773 2.252-.514.663-1.327 1.2-2.437 1.609v-.465l.233-.095a3.09 3.09 0 001.274-1.017c.366-.505.55-1.03.55-1.577a.478.478 0 00-.057-.26c-.018-.037-.043-.056-.074-.056s-.08.025-.149.075c-.198.142-.446.214-.744.214-.36 0-.675-.145-.944-.433A1.453 1.453 0 014 6.572c0-.422.155-.79.465-1.102.31-.313.692-.47 1.144-.47zm4.474 0c.514 0 .963.212 1.344.637.381.425.572.997.572 1.716 0 .838-.257 1.588-.772 2.252-.515.663-1.327 1.2-2.437 1.609v-.465l.233-.095a3.09 3.09 0 001.274-1.017c.366-.505.549-1.03.549-1.577a.478.478 0 00-.056-.26c-.019-.037-.044-.056-.075-.056-.03 0-.08.025-.149.075-.198.142-.446.214-.744.214-.36 0-.674-.145-.944-.433a1.453 1.453 0 01-.405-1.028c0-.422.155-.79.466-1.102.31-.313.691-.47 1.144-.47z"];
  var arrayTimestamp$1 = ["M15 0a1 1 0 01.993.883L16 1v14a1 1 0 01-.883.993L15 16h-3a1 1 0 01-.117-1.993L12 14h2V2h-2a1 1 0 01-.993-.883L11 1a1 1 0 01.883-.993L12 0h3zM4 0a1 1 0 01.117 1.993L4 2H2v12h2a1 1 0 01.993.883L5 15a1 1 0 01-.883.993L4 16H1a1 1 0 01-.993-.883L0 15V1A1 1 0 01.883.007L1 0h3zm4 3a5 5 0 110 10A5 5 0 018 3zm0 1a4 4 0 100 8 4 4 0 000-8zm2.354 1.646a.5.5 0 01.057.638l-.057.07-2 2a.5.5 0 01-.638.057l-.07-.057-1-1a.5.5 0 01.638-.765l.07.057.646.647 1.646-1.647a.5.5 0 01.708 0z"];
  var arrowBottomLeft$1 = ["M14 3a1.003 1.003 0 00-1.71-.71L4 10.59V6c0-.55-.45-1-1-1s-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1H5.41l8.29-8.29c.19-.18.3-.43.3-.71z"];
  var arrowBottomRight$1 = ["M13 5c-.55 0-1 .45-1 1v4.59l-8.29-8.3a1.003 1.003 0 00-1.42 1.42l8.3 8.29H6c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"];
  var arrowDown$1 = ["M13 8c-.3 0-.5.1-.7.3L9 11.6V2c0-.5-.4-1-1-1s-1 .5-1 1v9.6L3.7 8.3C3.5 8.1 3.3 8 3 8c-.5 0-1 .5-1 1 0 .3.1.5.3.7l5 5c.2.2.4.3.7.3s.5-.1.7-.3l5-5c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1z"];
  var arrowLeft$1 = ["M13.99 6.99H4.41L7.7 3.7a1.003 1.003 0 00-1.42-1.42l-5 5a1.014 1.014 0 000 1.42l5 5a1.003 1.003 0 001.42-1.42L4.41 8.99H14c.55 0 1-.45 1-1s-.46-1-1.01-1z"];
  var arrowRight$1 = ["M14.7 7.29l-5-5a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l3.29 3.29H1.99c-.55 0-1 .45-1 1s.45 1 1 1h9.59l-3.29 3.29a1.003 1.003 0 001.42 1.42l5-5c.18-.18.29-.43.29-.71s-.12-.52-.3-.7z"];
  var arrowTopLeft$1 = ["M13.71 12.29L5.41 4H10c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V5.41l8.29 8.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"];
  var arrowTopRight$1 = ["M13 2H6c-.55 0-1 .45-1 1s.45 1 1 1h4.59L2.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L12 5.41V10c0 .55.45 1 1 1s1-.45 1-1V3c0-.55-.45-1-1-1z"];
  var arrowUp$1 = ["M13.7 6.3l-5-5C8.5 1.1 8.3 1 8 1s-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L7 4.4V14c0 .6.4 1 1 1s1-.4 1-1V4.4l3.3 3.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7z"];
  var arrowsHorizontal$1 = ["M15.7 7.3l-4-4c-.2-.2-.4-.3-.7-.3-.6 0-1 .5-1 1 0 .3.1.5.3.7L12.6 7H3.4l2.3-2.3c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1-.3 0-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7s.1.5.3.7l4 4c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7L3.4 9h9.2l-2.3 2.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l4-4c.2-.2.3-.4.3-.7s-.1-.5-.3-.7z"];
  var arrowsVertical$1 = ["M12 10c-.3 0-.5.1-.7.3L9 12.6V3.4l2.3 2.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7l-4-4C8.5.1 8.3 0 8 0s-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L7 3.4v9.2l-2.3-2.3c-.2-.2-.4-.3-.7-.3-.5 0-1 .4-1 1 0 .3.1.5.3.7l4 4c.2.2.4.3.7.3s.5-.1.7-.3l4-4c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1z"];
  var asterisk$1 = ["M14.54 11.18l.01-.02L9.8 8l4.75-3.17-.01-.02c.27-.17.46-.46.46-.81 0-.55-.45-1-1-1-.21 0-.39.08-.54.18l-.01-.02L9 6.13V1c0-.55-.45-1-1-1S7 .45 7 1v5.13L2.55 3.17l-.01.01A.969.969 0 002 3c-.55 0-1 .45-1 1 0 .35.19.64.46.82l-.01.01L6.2 8l-4.75 3.17.01.02c-.27.17-.46.46-.46.81 0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02L7 9.87V15c0 .55.45 1 1 1s1-.45 1-1V9.87l4.45 2.96.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1 0-.35-.19-.64-.46-.82z"];
  var automaticUpdates$1 = ["M8 14c-3.31 0-6-2.69-6-6 0-1.77.78-3.36 2-4.46V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1h1.74A7.95 7.95 0 000 8c0 4.42 3.58 8 8 8 .55 0 1-.45 1-1s-.45-1-1-1zM8 2a5.9 5.9 0 012.95.81l1.47-1.47A7.893 7.893 0 008 0c-.55 0-1 .45-1 1s.45 1 1 1zm2.71 6.71l5-5a1.003 1.003 0 00-1.42-1.42L10 6.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42l2 2c.18.18.43.29.71.29s.53-.11.71-.29zM16 8c0-.55-.06-1.08-.16-1.6l-1.87 1.87A5.966 5.966 0 0112 12.45V11c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-1.74A7.95 7.95 0 0016 8z"];
  var backlink$1 = ["M14 10a1 1 0 110 2h-.585l2.292 2.293a1 1 0 01-1.32 1.497l-.094-.083L12 13.415V14a1 1 0 11-2 0l.003-3.075.012-.1.012-.059.033-.108.034-.081.052-.098.067-.096.08-.09a1.01 1.01 0 01.112-.097l.11-.071.143-.065.076-.024.091-.02.116-.014L14 10zM6.036 6.136l-3.45 3.45-.117.127a2 2 0 002.818 2.818l.127-.117 3.45-3.449a4 4 0 01-.885 3.704l-.15.16-1 1A4 4 0 011.02 8.33l.15-.16 1-1a3.998 3.998 0 013.865-1.035zm4.671-1.843a1 1 0 01.083 1.32l-.083.094-5 5a1 1 0 01-1.497-1.32l.083-.094 5-5a1 1 0 011.414 0zm3.121-3.121a4 4 0 01.151 5.497l-.15.16-1 1a3.998 3.998 0 01-3.864 1.036l3.45-3.45.116-.128a2 2 0 00-2.818-2.818l-.127.117-3.45 3.45A4 4 0 017.02 2.33l.15-.16 1-1a4 4 0 015.657 0z"];
  var badge$1 = ["M13.36 4.59c-.15-1.13.5-2.01 1.1-2.87L13.43.53c-1.72.88-4.12.65-5.63-.53-1.51 1.18-3.91 1.41-5.63.52l-1.03 1.2c.61.86 1.25 1.74 1.1 2.87-.3 2.29-2.45 4.17-1.32 6.68.45 1.14 1.44 1.9 2.72 2.2 1.56.36 3.52.72 4.16 2.53.64-1.81 2.6-2.16 4.16-2.54 1.28-.3 2.27-1.06 2.72-2.2 1.12-2.5-1.03-4.38-1.32-6.67z"];
  var banCircle$1 = ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm3 9H5c-.55 0-1-.45-1-1s.45-1 1-1h6c.55 0 1 .45 1 1s-.45 1-1 1z"];
  var bankAccount$1 = ["M15.36 6.46l-.62-.14c-.31-1.12-.98-2.15-1.87-2.99l.4-1.77a.438.438 0 00-.49-.56c-.85.09-1.6.42-2.14.98-.84-.32-1.87-.51-2.85-.51-2.49 0-4.63 1.17-5.92 2.89-.18-.04-.36-.09-.53-.09-.76 0-1.34.61-1.34 1.4 0 .56.31 1.03.76 1.26-.05.33-.09.7-.09 1.07 0 1.68.71 3.17 1.83 4.34l-.27 1.59c-.09.56.35 1.07.89 1.07h.58c.45 0 .8-.33.89-.79l.04-.37c.94.42 2 .7 3.16.7 1.11 0 2.23-.23 3.16-.7l.05.37c.09.47.45.79.89.79h.58c.53 0 .98-.51.89-1.07l-.27-1.54c.62-.61 1.07-1.35 1.38-2.15l.8-.19c.4-.09.71-.47.71-.93V7.4c.09-.47-.22-.84-.62-.94zM12 8c-.6 0-1-.7-1-1.5S11.4 5 12 5s1 .7 1 1.5S12.6 8 12 8zM6.21 4.92c-.41.2-.91.04-1.12-.36-.21-.4-.04-.88.37-1.07 1.35-.65 2.73-.65 4.08 0 .41.2.58.68.37 1.07-.21.4-.71.56-1.12.36-.87-.43-1.71-.43-2.58 0z"];
  var barcode$1 = ["M0 14h2V2H0v12zm6 0h1V2H6v12zm2 0h1V2H8v12zm-5 0h2V2H3v12zM15 2v12h1V2h-1zm-5 12h1V2h-1v12zm2 0h2V2h-2v12z"];
  var p$1 = [];
  var blockedPerson$1 = ["M9.39 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.07-.01-.13-.02-.2.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.13-.39.27-.06.43-.36.5-.63.01-.03.03-.08.05-.12C8.18 7.8 6.94 6.04 6.94 4c0-.32.04-.62.09-.92-.17-.03-.35-.08-.51-.08-.65 0-1.37.2-1.88.59-.5.38-.87.92-1.05 1.51-.04.14-.07.27-.09.41-.09.48-.14 1.23-.14 1.74v.06c-.19.08-.36.27-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.12 15.5.03 16 .03 16h12.96s.15-.5-.22-1.36c-.37-.85-2.18-1.42-3.38-1.95zM11.97 0C9.75 0 7.94 1.79 7.94 4s1.8 4 4.03 4S16 6.21 16 4s-1.8-4-4.03-4zM9.96 4c0-1.1.9-2 2.01-2 .37 0 .72.11 1.02.28l-2.75 2.73c-.17-.3-.28-.64-.28-1.01zm2.01 2c-.37 0-.72-.11-1.02-.28l2.75-2.73c.18.3.28.64.28 1.01.01 1.1-.9 2-2.01 2z"];
  var bold$1 = ["M11.7 7c.2-.4.3-1 .3-1.5v-.4V5c0-.1 0-.2-.1-.3v-.1C11.4 3.1 10.1 2 8.5 2H4c-.5 0-1 .4-1 1v10c0 .5.4 1 1 1h5c2.2 0 4-1.8 4-4 0-1.2-.5-2.3-1.3-3zM6 5h2c.6 0 1 .4 1 1s-.4 1-1 1H6V5zm3 6H6V9h3c.6 0 1 .4 1 1s-.4 1-1 1z"];
  var book$1 = ["M2 1v14c0 .55.45 1 1 1h1V0H3c-.55 0-1 .45-1 1zm11-1h-1v7l-2-2-2 2V0H5v16h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var bookmark$1 = ["M11.2.01h-.15C11.03.01 11.02 0 11 0H5c-.02 0-.03.01-.05.01H4.8c-.44 0-.8.37-.8.82v14.75c0 .45.25.56.57.24l2.87-2.94c.31-.32.82-.32 1.13 0l2.87 2.94c.31.32.57.21.57-.24V.83C12 .38 11.64.01 11.2.01z"];
  var box$1 = ["M6 10h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1zm9.93-4.37v-.02L13.94.63C13.78.26 13.42 0 13 0H3c-.42 0-.78.26-.93.63L.08 5.61l-.01.02C.03 5.74 0 5.87 0 6v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.13-.03-.26-.07-.37zM9 2h3.32l1.2 3H9V2zM3.68 2H7v3H2.48l1.2-3zM14 14H2V7h12v7z"];
  var briefcase$1 = ["M15 3.98h-3v-2c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v2H1c-.55 0-1 .45-1 1v4h3v-1h2v1h6v-1h2v1h3v-4c0-.55-.45-1-1-1zm-5 0H6v-1h4v1zm3 7h-2v-1H5v1H3v-1H0v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-4h-3v1z"];
  var bringData$1 = ["M14 14a1 1 0 010 2H2a1 1 0 010-2h12zM7.995 3.005c.55 0 1 .45 1 .999v5.584l1.29-1.288a1.002 1.002 0 011.42 1.419l-3 2.996a1.015 1.015 0 01-1.42 0l-3-2.997A1.002 1.002 0 015.705 8.3l1.29 1.29V4.013c0-.55.45-1.009 1-1.009zM14 0a1 1 0 110 2 1 1 0 010-2zm-3 0a1 1 0 110 2 1 1 0 010-2zM8 0a1 1 0 110 2 1 1 0 010-2zM5 0a1 1 0 110 2 1 1 0 010-2zM2 0a1 1 0 110 2 1 1 0 010-2z"];
  var buggy$1 = ["M13.928.629A1 1 0 0012.89.006l-9 1a1 1 0 00-.747.48L.431 6.005A.5.5 0 000 6.5v3a.5.5 0 00.5.5h2.798c.341 0 .672.116.938.329l1.952 1.561A.5.5 0 006.5 12H10a.5.5 0 00.4-.2l.9-1.2a1.5 1.5 0 011.2-.6h3a.5.5 0 00.5-.5v-4a.5.5 0 00-.308-.462L13.928.628zM12.36 2.094l-.006-.016-3.166.352 1.121 3.083 2.052-3.419zm.467 1.166l-1.649 2.748 2.51-.594-.861-2.154zM9.603 6.496L8.166 2.543l-3.563.396L2.766 6H3.5a.5.5 0 01.367.16L6.218 8.7h1.914l1.452-2.177a.5.5 0 01.019-.027zM2.5 16a2.5 2.5 0 100-5 2.5 2.5 0 000 5zm11 0a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"];
  var build$1 = ["M15.39 12.41L7.7 6l1.07-1.1c.34-.34-.12-.63.12-1.26.88-2.17 3.41-2.35 3.41-2.35s.36-.37.71-.72C9.74-.81 7.53.53 6.54 1.4L3.12 4.9l-.71.72c-.39.4-.39 1.05 0 1.45l-.7.72c-.39-.4-1.02-.4-1.41 0s-.39 1.05 0 1.45l1.41 1.45c.39.4 1.02.4 1.41 0s.39-1.05 0-1.45l.71-.72c.39.4 1.02.4 1.41 0l.8-.82 6.39 7.67c.82.82 2.14.82 2.96 0 .81-.82.81-2.15 0-2.96z"];
  var calculator$1 = ["M13 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM6 14H4v-2h2v2zm0-3H4V9h2v2zm0-3H4V6h2v2zm3 6H7v-2h2v2zm0-3H7V9h2v2zm0-3H7V6h2v2zm3 6h-2V9h2v5zm0-6h-2V6h2v2zm0-3H4V2h8v3z"];
  var calendar$1 = ["M11 3c.6 0 1-.5 1-1V1c0-.6-.4-1-1-1s-1 .4-1 1v1c0 .5.4 1 1 1zm3-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H6v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h13c.6 0 1-.4 1-1V2c0-.6-.5-1-1-1zM5 13H2v-3h3v3zm0-4H2V6h3v3zm4 4H6v-3h3v3zm0-4H6V6h3v3zm4 4h-3v-3h3v3zm0-4h-3V6h3v3zM4 3c.6 0 1-.5 1-1V1c0-.6-.4-1-1-1S3 .4 3 1v1c0 .5.4 1 1 1z"];
  var camera$2 = ["M15 3h-2.59L10.7 1.29A.956.956 0 0010 1H6c-.28 0-.53.11-.71.29L3.59 3H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h2.56c1.1 1.22 2.67 2 4.44 2s3.34-.78 4.44-2H15c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zM3 6H1V5h2v1zm5 6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var caretDown$1 = ["M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z"];
  var caretLeft$1 = ["M9.5 4c-.13 0-.24.05-.33.13l-4 3.5c-.1.09-.17.22-.17.37s.07.28.17.37l4 3.5a.495.495 0 00.83-.37v-7c0-.28-.22-.5-.5-.5z"];
  var caretRight$1 = ["M11 8c0-.15-.07-.28-.17-.37l-4-3.5A.495.495 0 006 4.5v7a.495.495 0 00.83.37l4-3.5c.1-.09.17-.22.17-.37z"];
  var caretUp$1 = ["M11.87 9.17s.01 0 0 0l-3.5-4C8.28 5.07 8.15 5 8 5s-.28.07-.37.17l-3.5 4a.495.495 0 00.37.83h7a.495.495 0 00.37-.83z"];
  var cargoShip$1 = ["M10 1h3a1 1 0 011 1v2h-4V1zM2.25 4a.25.25 0 00-.25.25V9H.883a.5.5 0 00-.429.757l1.072 1.787c.207.344.477.638.791.87A9.76 9.76 0 011 12.5a.5.5 0 000 1c2.067 0 3.414-.543 4.161-.917.55.373 1.505.917 2.839.917 1.32 0 2.27-.533 2.822-.905l.004.002c.196.105.48.24.856.374.75.268 1.857.529 3.318.529a.5.5 0 000-1c-.326 0-.63-.014-.916-.039.47-.328.848-.79 1.07-1.347l.572-1.428A.5.5 0 0015.26 9H4V4.25A.25.25 0 003.75 4h-1.5zm2.714 9.56a.5.5 0 01.527.033c.455.325 1.277.907 2.509.907s2.054-.582 2.51-.907a.5.5 0 01.579-.001l.006.004.036.023c.034.022.09.055.168.097.154.082.394.197.72.313.649.232 1.642.471 2.981.471a.5.5 0 010 1c-1.46 0-2.568-.261-3.318-.53a6.316 6.316 0 01-.856-.373l-.004-.002c-.552.372-1.502.905-2.822.905-1.334 0-2.289-.544-2.839-.917-.747.374-2.094.917-4.161.917a.5.5 0 010-1c2.129 0 3.384-.63 3.964-.94zM14 5h-4v3h3a1 1 0 001-1V5zM5 2a1 1 0 011-1h3v3H5V2zm4 3H5v2a1 1 0 001 1h3V5z"];
  var cellTower$1 = ["M8.97 6.76c-.01-.05-.04-.08-.06-.13-.02-.05-.03-.1-.05-.15.08-.14.14-.3.14-.48 0-.55-.45-1-1-1s-1 .45-1 1c0 .18.06.34.14.48-.03.05-.03.1-.05.15-.02.05-.05.08-.06.13l-2 8c-.13.54.19 1.08.73 1.21a.995.995 0 001.21-.73L7.53 13h.94l.56 2.24a1 1 0 001.94-.48l-2-8zM3.72 1.7C4.1 1.3 4.09.67 3.7.28S2.67-.09 2.28.3c-3.05 3.12-3.05 8.28 0 11.4a.996.996 0 101.43-1.39c-2.28-2.35-2.28-6.27.01-8.61zM11.6 3.2c-.44-.33-1.07-.24-1.4.2-.33.44-.24 1.07.2 1.4.43.32.53 1.96-.04 2.43-.42.35-.48.98-.13 1.41.35.42.98.48 1.41.13 1.59-1.33 1.39-4.5-.04-5.57z", "M13.72.3c-.39-.4-1.02-.4-1.41-.02s-.41 1.02-.03 1.42c2.29 2.34 2.29 6.26 0 8.6-.39.39-.38 1.03.02 1.41s1.03.38 1.41-.02c3.05-3.11 3.05-8.27.01-11.39zM5.4 7.23c-.57-.47-.47-2.11-.04-2.43.44-.33.53-.96.2-1.4s-.96-.53-1.4-.2c-1.44 1.07-1.63 4.24-.04 5.57.42.35 1.05.3 1.41-.13.35-.42.29-1.06-.13-1.41z"];
  var changes$1 = ["M8.29 7.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L13 7.59V1c0-.55-.45-1-1-1s-1 .45-1 1v6.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42zM14.5 13h-13c-.83 0-1.5.67-1.5 1.5S.67 16 1.5 16h13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5zM1 5c.28 0 .53-.11.71-.29L3 3.41V10c0 .55.45 1 1 1s1-.45 1-1V3.41L6.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3C4.53.11 4.28 0 4 0s-.53.11-.71.29l-3 3A1.003 1.003 0 001 5z"];
  var chart$1 = ["M0 15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V9.4L0 11v4zm6-5.5V15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-5l-1 1-3-1.5zM13 7l-1 1v7c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V7.88c-.26.07-.58.12-1 .12-1.96 0-2-1-2-1zm2-6h-3c-.55 0-1 .45-1 1s.45 1 1 1h.59L8.8 6.78 5.45 5.11v.01C5.31 5.05 5.16 5 5 5s-.31.05-.44.11V5.1l-4 2v.01C.23 7.28 0 7.61 0 8c0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L5 7.12 8.55 8.9v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L14 4.41V5c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"];
  var chat$1 = ["M6 10c-1.1 0-2-.9-2-2V3H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1v2a1.003 1.003 0 001.71.71L5.41 13H10c.55 0 1-.45 1-1v-1.17l-.83-.83H6zm9-10H6c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var chevronBackward$1 = ["M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L6 6.59V4c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1s1-.45 1-1V9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L7.41 8z"];
  var chevronDown$1 = ["M12 5c-.28 0-.53.11-.71.29L8 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 5z"];
  var chevronForward$1 = ["M10 3c-.55 0-1 .45-1 1v2.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L7.59 8 4.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L9 9.41V12c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var chevronLeft$1 = ["M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C5.11 7.47 5 7.72 5 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 8z"];
  var chevronRight$1 = ["M10.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42L8.59 8 5.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var chevronUp$1 = ["M12.71 9.29l-4-4C8.53 5.11 8.28 5 8 5s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 7.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"];
  var circle$1 = ["M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm0 14c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6z"];
  var circleArrowDown$1 = ["M11 7c-.28 0-.53.11-.71.29L9 8.59V5c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 7zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"];
  var circleArrowLeft$1 = ["M11 7H7.41L8.7 5.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C4.11 7.47 4 7.72 4 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L7.41 9H11c.55 0 1-.45 1-1s-.45-1-1-1zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"];
  var circleArrowRight$1 = ["M8.71 4.29a1.003 1.003 0 00-1.42 1.42L8.59 7H5c-.55 0-1 .45-1 1s.45 1 1 1h3.59L7.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"];
  var circleArrowUp$1 = ["M8.71 4.29C8.53 4.11 8.28 4 8 4s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L7 7.41V11c0 .55.45 1 1 1s1-.45 1-1V7.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"];
  var citation$1 = ["M15.02 5c0-1.66-1.34-3-3-3s-3 1.34-3 3a2.996 2.996 0 003.6 2.94C12.1 9.76 11.14 11 10.02 11c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5-3.13 5-7 0-.2-.02-.39-.04-.58.01-.14.04-.28.04-.42zm-11-3c-1.66 0-3 1.34-3 3a2.996 2.996 0 003.6 2.94C4.1 9.76 3.14 11 2.02 11c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5-3.13 5-7 0-.2-.02-.39-.04-.58.01-.14.04-.28.04-.42 0-1.66-1.35-3-3-3z"];
  var clean$1 = ["M12 8l-1.2 2.796-2.8 1.2 2.8 1.197L12 16l1.2-2.807L16 12l-2.8-1.204zM5 0L3.5 3.5 0 4.995 3.5 6.5 5 10l1.5-3.5L10 5 6.5 3.5z"];
  var clip$1 = ["M0 1a1 1 0 011-1h4a1 1 0 010 2H2v3a1 1 0 01-2 0V1zm1 15a1 1 0 01-1-1v-4a1 1 0 112 0v3h3a1 1 0 110 2H1zm14 0a1 1 0 001-1v-4a1 1 0 10-2 0v3h-3a1 1 0 100 2h4zm0-16a1 1 0 011 1v4a1 1 0 11-2 0V2h-3a1 1 0 110-2h4zM8 11a3 3 0 100-6 3 3 0 000 6z"];
  var clipboard$1 = ["M11 2c0-.55-.45-1-1-1h.22C9.88.4 9.24 0 8.5 0S7.12.4 6.78 1H7c-.55 0-1 .45-1 1v1h5V2zm2 0h-1v2H5V2H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"];
  var cloud$1 = ["M12 6c-.03 0-.07 0-.1.01A5 5 0 002 7c0 .11.01.22.02.33A3.51 3.51 0 000 10.5C0 12.43 1.57 14 3.5 14H12c2.21 0 4-1.79 4-4s-1.79-4-4-4z"];
  var cloudDownload$1 = ["M11 11c-.28 0-.53.11-.71.29L9 12.59V8c0-.55-.45-1-1-1s-1 .45-1 1v4.59L5.71 11.3A.965.965 0 005 11a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 11zm1-7c-.03 0-.07 0-.1.01A5 5 0 002 5c0 .11.01.22.02.33A3.51 3.51 0 000 8.5c0 1.41.84 2.61 2.03 3.17C2.2 10.17 3.46 9 5 9c.06 0 .13.02.19.02C5.07 8.7 5 8.36 5 8c0-1.66 1.34-3 3-3s3 1.34 3 3c0 .36-.07.7-.19 1.02.06 0 .13-.02.19-.02 1.48 0 2.7 1.07 2.95 2.47A3.964 3.964 0 0016 8c0-2.21-1.79-4-4-4z"];
  var cloudUpload$1 = ["M8.71 7.29C8.53 7.11 8.28 7 8 7s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L7 10.41V15c0 .55.45 1 1 1s1-.45 1-1v-4.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM12 4c-.03 0-.07 0-.1.01A5 5 0 002 5c0 .11.01.22.02.33a3.495 3.495 0 00.07 6.37c-.05-.23-.09-.46-.09-.7 0-.83.34-1.58.88-2.12l3-3a2.993 2.993 0 014.24 0l3 3c.54.54.88 1.29.88 2.12 0 .16-.02.32-.05.47C15.17 10.78 16 9.5 16 8c0-2.21-1.79-4-4-4z"];
  var code$1 = ["M15.71 7.29l-3-3a1.003 1.003 0 00-1.42 1.42L13.59 8l-2.29 2.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM5 5a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L2.41 8 4.7 5.71c.19-.18.3-.43.3-.71zm4-3c-.48 0-.87.35-.96.81l-2 10c-.01.06-.04.12-.04.19 0 .55.45 1 1 1 .48 0 .87-.35.96-.81l2-10c.01-.06.04-.12.04-.19 0-.55-.45-1-1-1z"];
  var codeBlock$1 = ["M15 3h-2V2c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1H7V2c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-8.29 8.29a1.003 1.003 0 01-1.42 1.42l-3-3C2.11 9.53 2 9.28 2 9s.11-.53.29-.71l3-3a1.003 1.003 0 011.42 1.42L4.41 9l2.3 2.29zm7-1.58l-3 3a1.003 1.003 0 01-1.42-1.42L11.59 9l-2.3-2.29a1.003 1.003 0 011.42-1.42l3 3c.18.18.29.43.29.71s-.11.53-.29.71z"];
  var cog$1 = ["M15.19 6.39h-1.85c-.11-.37-.27-.71-.45-1.04l1.36-1.36c.31-.31.31-.82 0-1.13l-1.13-1.13a.803.803 0 00-1.13 0l-1.36 1.36c-.33-.17-.67-.33-1.04-.44V.79c0-.44-.36-.8-.8-.8h-1.6c-.44 0-.8.36-.8.8v1.86c-.39.12-.75.28-1.1.47l-1.3-1.3c-.3-.3-.79-.3-1.09 0L1.82 2.91c-.3.3-.3.79 0 1.09l1.3 1.3c-.2.34-.36.7-.48 1.09H.79c-.44 0-.8.36-.8.8v1.6c0 .44.36.8.8.8h1.85c.11.37.27.71.45 1.04l-1.36 1.36c-.31.31-.31.82 0 1.13l1.13 1.13c.31.31.82.31 1.13 0l1.36-1.36c.33.18.67.33 1.04.44v1.86c0 .44.36.8.8.8h1.6c.44 0 .8-.36.8-.8v-1.86c.39-.12.75-.28 1.1-.47l1.3 1.3c.3.3.79.3 1.09 0l1.09-1.09c.3-.3.3-.79 0-1.09l-1.3-1.3c.19-.35.36-.71.48-1.1h1.85c.44 0 .8-.36.8-.8v-1.6a.816.816 0 00-.81-.79zm-7.2 4.6c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"];
  var collapseAll$1 = ["M7.29 6.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L8 4.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4zm1.42 2.58C8.53 9.11 8.28 9 8 9s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 11.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4z"];
  var colorFill$1 = ["M3.093 7c.017-.05.036-.1.058-.15.106-.248.225-.397.263-.436L7 2.828 11.172 7H3.093zM6.5 13c1 0 2.5-1 3-1.5l3.086-3.086L14 7l-1.414-1.414-4.172-4.172L7 0 5.586 1.414 2 5c-.5.5-1 1.5-1 2.5s.5 2 1 2.5l2 2c.5.5 1.5 1 2.5 1zm7-4l1.125 1.667c.238.353.375.666.375 1 0 .666-.375 1.333-1.5 1.333s-1.5-.667-1.5-1.333c0-.334.137-.647.375-1L13.5 9zM0 15a1 1 0 011-1h14a1 1 0 110 2H1a1 1 0 01-1-1z"];
  var columnLayout$1 = ["M15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 13H2V3h2v10zm3 0H5V3h2v10zm7 0H8V3h6v10z"];
  var comment$1 = ["M14 1H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h2v3a1.003 1.003 0 001.71.71L8.41 12H14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM3.5 8C2.67 8 2 7.33 2 6.5S2.67 5 3.5 5 5 5.67 5 6.5 4.33 8 3.5 8zm4 0C6.67 8 6 7.33 6 6.5S6.67 5 7.5 5 9 5.67 9 6.5 8.33 8 7.5 8zm4 0c-.83 0-1.5-.67-1.5-1.5S10.67 5 11.5 5s1.5.67 1.5 1.5S12.33 8 11.5 8z"];
  var comparison$1 = ["M7.99-.01c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1v-14c0-.55-.45-1-1-1zm-3 3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm10 0h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-4v-2h4v2zm0 3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-4v-2h4v2zm-10-3h-4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"];
  var compass$1 = ["M12 8c0 .14-.03.27-.08.39l-3 6.99c-.15.37-.51.62-.92.62s-.77-.25-.92-.61l-3-6.99a1.006 1.006 0 010-.79l3-6.99C7.23.25 7.59 0 8 0s.77.25.92.61l3 6.99c.05.13.08.26.08.4zM8 3.54L6.09 8h3.82L8 3.54z"];
  var compressed$1 = ["M15.93 5.63v-.02L13.94.63C13.78.26 13.42 0 13 0H3c-.42 0-.78.26-.93.63L.08 5.61l-.01.02C.03 5.74 0 5.87 0 6v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.13-.03-.26-.07-.37zM9 2h3.32l1.2 3H9V2zM3.68 2H7v3H2.48l1.2-3zM14 14H2V7h5v2.59l-1.29-1.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L9 9.59V7h5v7z"];
  var confirm$1 = ["M8.7 4.29a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l5-5a1.003 1.003 0 00-1.42-1.42l-4.29 4.3L8.7 4.29zm5.22 3.01c.03.23.07.45.07.69 0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6c.81 0 1.59.17 2.3.46l1.5-1.5A7.998 7.998 0 00-.01 7.99c0 4.42 3.58 8 8 8s8-3.58 8-8c0-.83-.13-1.64-.36-2.39l-1.71 1.7z"];
  var console$2 = ["M15 15H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h14c.55 0 1 .45 1 1v12c0 .55-.45 1-1 1zM14 5H2v8h12V5zM4 6c.28 0 .53.11.71.29l2 2c.18.18.29.43.29.71s-.11.53-.29.71l-2 2a1.003 1.003 0 01-1.42-1.42L4.59 9l-1.3-1.29A1.003 1.003 0 014 6zm5 4h3c.55 0 1 .45 1 1s-.45 1-1 1H9c-.55 0-1-.45-1-1s.45-1 1-1z"];
  var contrast$1 = ["M15.2 6.4h-1.44c-.13-.47-.32-.92-.56-1.34L14.26 4c.31-.31.31-.82 0-1.13l-1.13-1.13a.803.803 0 00-1.13 0L10.94 2.8c-.42-.24-.86-.42-1.34-.56V.8c0-.44-.36-.8-.8-.8H7.2c-.44 0-.8.36-.8.8v1.44c-.5.14-.96.34-1.4.59l-1-1c-.3-.3-.79-.3-1.09 0L1.83 2.91c-.3.3-.3.79 0 1.09l1 1c-.25.44-.45.9-.59 1.4H.8c-.44 0-.8.36-.8.8v1.6c0 .44.36.8.8.8h1.44c.13.47.32.92.56 1.34L1.74 12c-.31.31-.31.82 0 1.13l1.13 1.13c.31.31.82.31 1.13 0l1.06-1.06c.42.24.86.42 1.34.56v1.44c0 .44.36.8.8.8h1.6c.44 0 .8-.36.8-.8v-1.44c.5-.14.96-.33 1.4-.59l1 1c.3.3.79.3 1.09 0l1.09-1.09c.3-.3.3-.79 0-1.09l-1-1c.25-.43.45-.9.59-1.4h1.44c.44 0 .8-.36.8-.8V7.2a.818.818 0 00-.81-.8zM8 12c-2.21 0-4-1.79-4-4s1.79-4 4-4v8z"];
  var control$1 = ["M13 8H8v5h5V8zm0-5H8v4h5V3zm2-3H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V2h12v12zM7 3H3v10h4V3z"];
  var creditCard$1 = ["M14.99 2.95h-14c-.55 0-1 .45-1 1v1h16v-1c0-.55-.45-1-1-1zm-15 10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-6h-16v6zm5.5-2h5c.28 0 .5.22.5.5s-.22.5-.5.5h-5c-.28 0-.5-.22-.5-.5s.23-.5.5-.5zm-3 0h1c.28 0 .5.22.5.5s-.22.5-.5.5h-1c-.28 0-.5-.22-.5-.5s.23-.5.5-.5z"];
  var cross$5 = ["M9.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L8 6.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L9.41 8z"];
  var crown$1 = ["M2 6l3 2 3-4 3 4 3-2-1 6H3L2 6zm6-5a1 1 0 110 2 1 1 0 010-2zM1 3a1 1 0 110 2 1 1 0 010-2zm14 0a1 1 0 110 2 1 1 0 010-2zM3 13h10v2H3v-2z"];
  var cube$1 = ["M14.194 3.54L8 7.41 1.806 3.54 7.504.283a1 1 0 01.992 0l5.698 3.255zm.75.71a1 1 0 01.056.33v6.84a1 1 0 01-.504.868L8.5 15.714V8.277l6.444-4.027zm-13.888 0L7.5 8.277v7.437l-5.996-3.426A1 1 0 011 11.42V4.58a1 1 0 01.056-.33z"];
  var cubeAdd$1 = ["M14 2h1a1 1 0 010 2h-1v1a1 1 0 01-2 0V4h-1a1 1 0 010-2h1V1a1 1 0 012 0v1zM9.136.65a3.001 3.001 0 00.992 5.222c.018.058.038.115.059.172L8 7.41 1.806 3.54 7.504.283a1 1 0 01.992 0l.64.365zM15 7.235v4.184a1 1 0 01-.504.868L8.5 15.714V8.277l2.187-1.367A2.994 2.994 0 0013 8c.768 0 1.47-.289 2-.764zM1.056 4.25L7.5 8.277v7.437l-5.996-3.426A1 1 0 011 11.42V4.58a1 1 0 01.056-.33z"];
  var cubeRemove$1 = ["M10.365 5.933L8 7.41 1.806 3.54 7.504.283a1 1 0 01.992 0l.64.365a3.001 3.001 0 001.228 5.283zM15 6v5.42a1 1 0 01-.504.868L8.5 15.714V8.277L12.143 6H15zM1.056 4.25L7.5 8.277v7.437l-5.996-3.426A1 1 0 011 11.42V4.58a1 1 0 01.056-.33zM11 2h4a1 1 0 010 2h-4a1 1 0 010-2z"];
  var curvedRangeChart$1 = ["M15 12H3.12l1.81-1.39c1.73 1.01 5.53-.03 9.08-2.61l-1.22-1.5C10.3 8.3 7.86 9.37 6.65 9.29L14.3 3.4l-.6-.8-7.83 6.03c-.01-1.07 1.8-3.19 4.47-5.13L9.12 2C5.38 4.7 3.34 8.1 4.25 9.87L2 11.6V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var cut$1 = ["M13 2s.71-1.29 0-2L8.66 5.07l1.05 1.32L13 2zm.07 8c-.42 0-.82.09-1.18.26L3.31 0c-.69.71 0 2 0 2l3.68 5.02-2.77 3.24A2.996 2.996 0 000 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-.46-.11-.89-.29-1.27L8.1 8.54l2.33 3.19c-.18.39-.29.82-.29 1.27 0 1.66 1.31 3 2.93 3S16 14.66 16 13s-1.31-3-2.93-3zM3 14c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm10.07 0c-.54 0-.98-.45-.98-1s.44-1 .98-1 .98.45.98 1-.44 1-.98 1z"];
  var cycle$1 = ["M13 9a3 3 0 110 6 3 3 0 010-6zM3 9a3 3 0 110 6 3 3 0 010-6zm6.169-5.27l.087.09 1.51 1.746 1.589.549a1 1 0 01.65 1.16l-.032.112a1 1 0 01-1.159.65l-.112-.032-1.843-.636a1 1 0 01-.337-.198l-.092-.093-.959-1.109L7.041 7.5l1.691 1.819a1 1 0 01.26.556L9 10v3a1 1 0 01-1.993.117L7 13l-.001-2.608-2.056-2.211a1 1 0 01-.081-1.264l.082-.1 2.825-3.026a1 1 0 011.4-.061zM13 10.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm-10 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3zM11 1a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"];
  var dashboard$1 = ["M5 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM4 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-2c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-2 6c0 1.1.9 2 2 2s2-.9 2-2c0-.53-2-5-2-5s-2 4.47-2 5zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm4-9c0-.55-.45-1-1-1s-1 .45-1 1 .45 1 1 1 1-.45 1-1zm0 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"];
  var dataConnection$1 = ["M1 9.52c.889.641 2.308 1.133 4.003 1.354L5 11a5.994 5.994 0 002.664 4.988c-.217.008-.44.012-.664.012-3.215 0-5.846-.85-5.993-1.906L1 14V9.52zM11 6c2.762 0 5 2.238 5 5s-2.238 5-5 5-5-2.238-5-5 2.238-5 5-5zm1 1l-4 5h2.5l-.5 3 4-5h-2.5l.5-3zm1-3.48v1.822a6.002 6.002 0 00-7.9 4.556l-.248-.03c-2.168-.28-3.733-.966-3.845-1.774L1 8V3.52C2.22 4.4 4.44 5 7 5s4.78-.6 6-1.48zM7 0c3.31 0 6 .9 6 2s-2.69 2-6 2c-3.32 0-6-.9-6-2s2.68-2 6-2z"];
  var dataLineage$1 = ["M1.067 0C.477 0 0 .478 0 1.067V3.2c0 .59.478 1.067 1.067 1.067h2.24a5.342 5.342 0 002.9 3.734 5.337 5.337 0 00-2.9 3.733h-2.24C.477 11.733 0 12.21 0 12.8v2.133C0 15.523.478 16 1.067 16H6.4c.59 0 1.067-.478 1.067-1.067V12.8c0-.59-.478-1.067-1.067-1.067H4.401a4.27 4.27 0 013.92-3.194l.212-.006V9.6c0 .59.478 1.067 1.067 1.067h5.333c.59 0 1.067-.478 1.067-1.067V6.4c0-.59-.478-1.067-1.067-1.067H9.6c-.59 0-1.067.478-1.067 1.067v1.067a4.268 4.268 0 01-4.132-3.2H6.4c.59 0 1.067-.478 1.067-1.067V1.067C7.467.477 6.989 0 6.4 0H1.067z"];
  var database$1 = ["M8 4c3.31 0 6-.9 6-2s-2.69-2-6-2C4.68 0 2 .9 2 2s2.68 2 6 2zm-6-.48V8c0 1.1 2.69 2 6 2s6-.9 6-2V3.52C12.78 4.4 10.56 5 8 5s-4.78-.6-6-1.48zm0 6V14c0 1.1 2.69 2 6 2s6-.9 6-2V9.52C12.78 10.4 10.56 11 8 11s-4.78-.6-6-1.48z"];
  var _delete$1 = ["M11.99 4.99a1.003 1.003 0 00-1.71-.71l-2.29 2.3L5.7 4.29a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l2.29 2.29-2.29 2.29A1.003 1.003 0 005.7 11.7l2.29-2.29 2.29 2.29a1.003 1.003 0 001.42-1.42L9.41 7.99 11.7 5.7c.18-.18.29-.43.29-.71zm-4-5c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"];
  var delta$1 = ["M8 0L0 16h16L8 0zM7 5l5 10H2L7 5z"];
  var deriveColumn$1 = ["M6.08 6.67h-.84c.24-.92.56-1.6.96-2.03.24-.27.48-.4.71-.4.05 0 .08.01.11.04s.04.06.04.1c0 .04-.03.11-.1.21-.06.1-.1.2-.1.29 0 .13.05.24.15.33.1.09.23.14.39.14.17 0 .31-.06.42-.17A.58.58 0 008 4.73c0-.22-.09-.39-.26-.53-.17-.13-.44-.2-.81-.2-.59 0-1.12.16-1.59.48-.48.32-.93.85-1.36 1.59-.15.26-.29.42-.42.49s-.35.11-.64.1l-.19.65h.81l-1.19 4.37c-.2.72-.33 1.16-.4 1.33-.1.24-.26.45-.46.62-.08.07-.18.1-.3.1-.03 0-.06-.01-.08-.03l-.03-.04c0-.02.03-.06.09-.11.06-.06.09-.14.09-.26 0-.13-.05-.23-.14-.32a.6.6 0 00-.4-.13c-.21 0-.38.05-.51.16s-.21.25-.21.4c0 .16.08.3.23.42.16.12.4.18.74.18.53 0 .99-.13 1.4-.39.41-.26.76-.65 1.07-1.19.3-.54.62-1.4.94-2.59l.68-2.53h.82l.2-.63zM15 0H8c-.55 0-1 .45-1 1v2h2V2h5v12H9v-1H7v2c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM8.3 9.94c.18.52.33.89.46 1.13.13.24.28.4.44.51.17.1.37.16.62.16.24 0 .49-.08.74-.25.33-.21.66-.58 1.01-1.09l-.21-.11c-.23.31-.41.5-.52.57a.44.44 0 01-.26.07c-.12 0-.24-.07-.36-.21-.2-.24-.46-.91-.8-2 .3-.49.55-.81.75-.96.15-.11.3-.16.47-.16.06 0 .17.02.34.06.16.04.31.06.43.06.17 0 .31-.06.43-.17.1-.11.16-.25.16-.43 0-.19-.06-.33-.17-.44-.12-.11-.28-.16-.49-.16-.19 0-.37.04-.54.13-.17.09-.39.27-.65.56-.2.21-.48.58-.87 1.11-.15-.66-.41-1.26-.78-1.81l-2.05.33-.04.21c.15-.03.28-.04.39-.04.2 0 .37.08.5.25.21.26.5 1.03.88 2.33-.29.37-.49.61-.6.72-.18.18-.33.3-.44.36-.09.04-.19.07-.3.07-.09 0-.23-.04-.42-.13a.866.866 0 00-.36-.09c-.2 0-.36.06-.49.18a.59.59 0 00-.19.46c0 .17.06.32.18.43.12.11.28.16.48.16.2 0 .38-.04.55-.11.17-.08.39-.24.65-.49.24-.27.6-.66 1.06-1.21z"];
  var desktop$1 = ["M15 0H1C.45 0 0 .45 0 1v10c0 .55.45 1 1 1h4.75l-.5 2H4c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1h-1.25l-.5-2H15c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 10H2V2h12v8z"];
  var diagnosis$1 = ["M3.2 1a1 1 0 01.117 1.993L3.2 3H3v3a2 2 0 001.85 1.995L5 8a2 2 0 001.995-1.85L7 6V3h-.2a1 1 0 01-.993-.883L5.8 2a1 1 0 01.883-.993L6.8 1H8a1 1 0 01.993.883L9 2v4a4.002 4.002 0 01-3.007 3.876v.007L6 10a3 3 0 005.995.176L12 10V7.792a2.5 2.5 0 112 0V10a5 5 0 01-10 0c0-.042.003-.084.008-.125A4 4 0 011.005 6.2L1 6V2a1 1 0 01.883-.993L2 1h1.2z"];
  var diagramTree$1 = ["M15 8v3h-2V9H9v2H7V9H3v2H1V8a1 1 0 011-1h5V5h2v2h5a1 1 0 011 1zM1 12h2a1 1 0 011 1v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a1 1 0 011-1zm12 0h2a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2a1 1 0 011-1zm-6 0h2a1 1 0 011 1v2a1 1 0 01-1 1H7a1 1 0 01-1-1v-2a1 1 0 011-1zM7 0h2a1 1 0 011 1v2a1 1 0 01-1 1H7a1 1 0 01-1-1V1a1 1 0 011-1z"];
  var directionLeft$1 = ["M16 1.99l-16 6 16 6-4-6z"];
  var directionRight$1 = ["M16 7.99l-16-6 4 6-4 6z"];
  var disable$1 = ["M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm-6 8c0-3.31 2.69-6 6-6 1.3 0 2.49.42 3.47 1.12l-8.35 8.35c-.7-.98-1.12-2.17-1.12-3.47zm6 6c-1.3 0-2.49-.42-3.47-1.12l8.35-8.35c.7.98 1.12 2.17 1.12 3.47 0 3.32-2.68 6-6 6z"];
  var divide$4 = ["M9 5a1 1 0 11-2 0 1 1 0 012 0zM5 7c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1H5zm3 5a1 1 0 100-2 1 1 0 000 2z"];
  var document$2 = ["M9 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5L9 0zm3 14H4V2h4v4h4v8z"];
  var documentOpen$1 = ["M6 12c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1h1.59L1.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L6 10.41V12zm4-12H4c-.55 0-1 .45-1 1v4h2V2h4v4h4v8H5.24l-1.8 1.8c.16.12.35.2.56.2h10c.55 0 1-.45 1-1V5l-5-5z"];
  var documentShare$1 = ["M10 14H2V2h4v4h1c0-.83.36-1.55.91-2.09l-.03-.03.9-.9C8.3 2.45 8 1.77 8 1L7 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V8.22c-.53.48-1.23.78-2 .78v5zm5-14h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 001.42 1.42L14 3.41V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var dollar$1 = ["M12.83 9.51c-.1-.3-.25-.58-.45-.84s-.45-.49-.75-.7c-.3-.2-.65-.36-1.05-.48-.16-.04-.43-.11-.8-.2-.35-.09-.73-.18-1.12-.28-.39-.1-.74-.19-1.06-.27-.31-.08-.49-.12-.54-.13-.43-.12-.78-.29-1.05-.52-.27-.23-.4-.55-.4-.95 0-.29.07-.53.21-.72.14-.19.32-.34.54-.46.22-.11.46-.19.72-.24.26-.05.52-.08.77-.08.74 0 1.35.15 1.83.46.48.3.75.83.81 1.56h2.14c0-.6-.13-1.13-.38-1.58-.25-.45-.59-.84-1.02-1.15-.43-.31-.93-.54-1.49-.7-.24-.06-.49-.1-.75-.14V1c0-.55-.45-1-1-1s-1 .45-1 1v1.08c-.23.03-.46.07-.68.13-.54.13-1.02.34-1.44.61-.42.28-.76.63-1.02 1.05-.26.43-.39.93-.39 1.5 0 .3.04.59.13.88.09.29.23.56.44.82.21.26.48.49.83.7.35.21.79.38 1.31.51.85.21 1.56.38 2.14.52.58.13 1.08.28 1.52.42.25.09.48.23.69.44.21.21.32.53.32.97 0 .21-.05.42-.14.63-.09.21-.24.39-.45.55-.21.16-.47.29-.81.39-.33.1-.73.15-1.2.15-.43 0-.84-.05-1.21-.14-.37-.09-.7-.24-.99-.43-.29-.2-.51-.45-.67-.76-.16-.31-.24-.68-.24-1.12H3c.01.71.15 1.32.43 1.84.27.52.64.94 1.1 1.27.46.33.99.58 1.61.74.27.07.56.12.85.16V15c0 .55.45 1 1 1s1-.45 1-1v-1.05c.3-.03.61-.08.9-.15.58-.13 1.1-.34 1.56-.63.46-.29.83-.66 1.11-1.11.28-.45.42-1 .42-1.64 0-.31-.05-.61-.15-.91z"];
  var dot$7 = ["M8 5a3 3 0 100 6 3 3 0 100-6z"];
  var doubleCaretHorizontal$1 = ["M13.71 7.29l-3-3A1.003 1.003 0 009 5v6a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM6 4c-.28 0-.53.11-.71.29l-3 3C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l3 3A1.003 1.003 0 007 11V5c0-.55-.45-1-1-1z"];
  var doubleCaretVertical$1 = ["M5 7h6a1.003 1.003 0 00.71-1.71l-3-3C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-3 3A1.003 1.003 0 005 7zm6 2H5a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 9z"];
  var doubleChevronDown$1 = ["M7.29 8.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L8 6.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4zM12 8c-.28 0-.53.11-.71.29L8 11.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 8z"];
  var doubleChevronLeft$1 = ["M4.41 8L7.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 8zm5 0l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C7.11 7.47 7 7.72 7 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L9.41 8z"];
  var doubleChevronRight$1 = ["M9 8c0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4C8.89 8.53 9 8.28 9 8zm4.71-.71l-4-4a1.003 1.003 0 00-1.42 1.42L11.59 8 8.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var doubleChevronUp$1 = ["M4 8c.28 0 .53-.11.71-.29L8 4.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-4 4A1.003 1.003 0 004 8zm4.71-.71C8.53 7.11 8.28 7 8 7s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4z"];
  var doughnutChart$1 = ["M11.86 7h4.05C15.45 3.39 12.61.52 9 .07v4.07A4 4 0 0111.86 7zM12 8c0 2.21-1.79 4-4 4s-4-1.79-4-4 1.79-4 4-4V0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8h-4z"];
  var download$1 = ["M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM11.7 9.7l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-3-3A1.003 1.003 0 015.7 8.28l1.29 1.29V3.99c0-.55.45-1 1-1s1 .45 1 1v5.59l1.29-1.29a1.003 1.003 0 011.71.71c0 .27-.11.52-.29.7z"];
  var dragHandleHorizontal$1 = ["M2 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm8-2c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-4-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"];
  var dragHandleVertical$1 = ["M6 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4-6c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zM6 13c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm4 8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"];
  var draw$1 = ["M14.9 11c-.3 0-.5.1-.7.3l-3 3c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1zm-1-1v-.2l-1-5c-.1-.3-.3-.6-.6-.7l-11-4-.3.3 5.8 5.8c.2-.1.4-.2.6-.2.8 0 1.5.7 1.5 1.5S8.3 9 7.4 9s-1.5-.7-1.5-1.5c0-.2.1-.4.2-.6L.3 1.1l-.3.3 4 11c.1.3.4.6.7.6l5 1h.2c.3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7z"];
  var drawerLeft$1 = ["M7 0a1 1 0 011 1v14a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h6zM6 2H2v12h4V2zm2 5h4.59L11.3 5.71A.965.965 0 0111 5a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42L12.59 9H8V7z"];
  var drawerLeftFilled$1 = ["M1 0h6a1 1 0 011 1v14a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1zm7 7h4.59L11.3 5.71A.965.965 0 0111 5a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42L12.59 9H8V7z"];
  var drawerRight$1 = ["M15 0a1 1 0 011 1v14a1 1 0 01-1 1H9a1 1 0 01-1-1V1a1 1 0 011-1h6zm-1 2h-4v12h4V2zM8 7H3.41L4.7 5.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 9H8V7z"];
  var drawerRightFilled$1 = ["M9 0h6a1 1 0 011 1v14a1 1 0 01-1 1H9a1 1 0 01-1-1V1a1 1 0 011-1zM8 7H3.41L4.7 5.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 9H8V7z"];
  var driveTime$1 = ["M15.12 4.76h-1.05l-.76-2.12c-.19-.53-.76-1.08-1.27-1.24 0 0-1.32-.4-4.04-.4-2.72 0-4.04.4-4.04.4-.5.16-1.07.71-1.26 1.24l-.77 2.12H.88c-.48 0-.88.42-.88.94s.4.94.88.94h.38L1 7c-.03.69 0 1.44 0 2v5c0 .66.38 1 1 1s1-.34 1-1v-1h10v1c0 .66.38 1 1 1s1-.34 1-1V9c0-.56-.01-1.37 0-2l-.26-.37h.38c.48 0 .88-.42.88-.93 0-.52-.4-.94-.88-.94zM5 10H3V8h2v2zm8 0h-2V8h2v2zm0-4H3c-.18 0-.06-.82 0-1l.73-1.63C3.79 3.19 3.82 3 4 3h8c.18 0 .21.19.27.37L13 5c.06.18.18 1 0 1z"];
  var duplicate$1 = ["M15 0H5c-.55 0-1 .45-1 1v2h2V2h8v7h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 10H2V6h8v8z"];
  var edit$1 = ["M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z"];
  var eject$1 = ["M4 9h8a1.003 1.003 0 00.71-1.71l-4-4C8.53 3.11 8.28 3 8 3s-.53.11-.71.29l-4 4A1.003 1.003 0 004 9zm8 1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1z"];
  var emoji$1 = ["M8 0a8 8 0 110 16A8 8 0 018 0zm0 1a7 7 0 100 14A7 7 0 008 1zM4 8c.228 2.262 2 4 4 4 1.938 0 3.77-1.738 3.984-3.8L12 8h1c-.128 2.888-2.317 5-5 5a5 5 0 01-4.995-4.783L3 8h1zm2-3a1 1 0 110 2 1 1 0 010-2zm4 0a1 1 0 110 2 1 1 0 010-2z"];
  var endorsed$1 = ["M15.86 7.5l-.81-1.42V4.5c0-.36-.19-.68-.49-.87l-1.37-.8-.81-1.41c-.19-.31-.51-.49-.86-.49H9.89L8.5.14a.948.948 0 00-1 0l-1.39.8H4.52a1 1 0 00-.86.49l-.8 1.37-1.44.83c-.3.19-.49.51-.49.87v1.65l-.8 1.37c-.08.15-.13.32-.13.49s.05.34.14.49l.8 1.37v1.65c0 .36.19.68.49.87l1.42.81.8 1.37c.19.31.51.49.86.49H6.1l1.39.8c.15.09.32.14.48.14s.34-.05.49-.14l1.39-.8h1.63a1 1 0 00.86-.49l.81-1.41 1.37-.8c.3-.19.49-.51.49-.87V9.93l.81-1.42a.89.89 0 00.04-1.01zm-4.12-.82l-4.01 4.01c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-2-2c-.18-.19-.3-.44-.3-.71a1.003 1.003 0 011.71-.71l1.3 1.3 3.3-3.3a1.003 1.003 0 011.71.71.95.95 0 01-.29.7z"];
  var envelope$1 = ["M0 3.06v9.88L4.94 8 0 3.06zM14.94 2H1.06L8 8.94 14.94 2zm-6.41 8.53c-.14.14-.32.22-.53.22s-.39-.08-.53-.22L6 9.06 1.06 14h13.88L10 9.06l-1.47 1.47zM11.06 8L16 12.94V3.06L11.06 8z"];
  var equals$8 = ["M3 5h10a1 1 0 010 2H3a1 1 0 110-2zm0 4h10a1 1 0 010 2H3a1 1 0 010-2z"];
  var eraser$1 = ["M8.06 13.91l7.63-7.44c.41-.4.41-1.05 0-1.45L10.86.3c-.41-.4-1.08-.4-1.49 0L.31 9.13c-.41.4-.41 1.05 0 1.45l5.58 5.44h8.12v-.01c.55 0 1-.45 1-1s-.45-1-1-1H7.96l.1-.1zm-2.17.06L1.67 9.85l4.22-4.11 4.22 4.11-4.22 4.12z"];
  var error$1 = ["M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13h-2v-2h2v2zm0-3h-2v-7h2v7z"];
  var euro$1 = ["M6.52 3.18c.51-.27 1.12-.4 1.83-.4.48 0 .91.06 1.27.18.37.12.68.29.96.51.18.14.3.33.44.51l1.53-1.53c-.12-.11-.23-.22-.36-.32a5.61 5.61 0 00-1.74-.83c-.66-.2-1.36-.3-2.1-.3-.99 0-1.88.18-2.66.53-.79.35-1.45.82-2 1.41-.55.58-.96 1.27-1.26 2.06H2c-.55 0-1 .45-1 1s.45 1 1 1h.04c-.01.17-.04.33-.04.5 0 .17.03.33.04.5H2c-.55 0-1 .45-1 1s.45 1 1 1h.43c0 .01 0 .02.01.02a6.2 6.2 0 001.25 2.07 5.77 5.77 0 002 1.4c.78.34 1.67.51 2.66.51.81 0 1.54-.12 2.21-.36.67-.24 1.25-.59 1.75-1.03l.03-.03-1.55-1.33c-.01.01-.02.03-.03.04-.29.3-.63.53-1.02.69-.4.17-.85.25-1.37.25-.71 0-1.32-.13-1.83-.4s-.93-.62-1.25-1.07c-.19-.24-.34-.49-.46-.76H9c.55 0 1-.45 1-1s-.45-1-1-1H4.35c-.01-.17-.03-.33-.03-.5 0-.17.02-.34.03-.5H10c.55 0 1-.45 1-1s-.45-1-1-1H4.83c.13-.27.27-.52.44-.76.32-.44.74-.8 1.25-1.06zM14 8.98v0z"];
  var exchange$1 = ["M1.99 5.99c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zm4.15 1.86a.495.495 0 10.7-.7L5.7 5.99h5.79c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H5.7l1.15-1.15a.495.495 0 10-.7-.7l-2 2c-.1.09-.16.21-.16.35s.06.26.15.35l2 2.01zm7.85-1.86c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zM9.85 8.14a.533.533 0 00-.36-.15.495.495 0 00-.35.85l1.15 1.15h-5.8c-.28 0-.5.22-.5.5s.22.5.5.5h5.79l-1.15 1.15a.495.495 0 10.7.7l2-2c.09-.09.15-.22.15-.35s-.06-.26-.15-.35l-1.98-2z"];
  var excludeRow$1 = ["M0 10a1.003 1.003 0 001.71.71L3 9.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 8 5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L3 6.59l-1.29-1.3A1.003 1.003 0 00.29 6.71L1.59 8 .29 9.29C.11 9.47 0 9.72 0 10zm1-7h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 10H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-1-7H9c-1.1 0-2 .9-2 2s.9 2 2 2h5c1.1 0 2-.9 2-2s-.9-2-2-2z"];
  var expandAll$1 = ["M4 7c.28 0 .53-.11.71-.29L8 3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-4 4A1.003 1.003 0 004 7zm8 2c-.28 0-.53.11-.71.29L8 12.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 9z"];
  var _export$1 = ["M4 6c.28 0 .53-.11.71-.29L7 3.41V11c0 .55.45 1 1 1s1-.45 1-1V3.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4C8.53.11 8.28 0 8 0s-.53.11-.71.29l-4 4A1.003 1.003 0 004 6zm11 5c-.55 0-1 .45-1 1v2H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"];
  var eyeOff$1 = ["M16 7.97v-.02-.01-.02-.02a.672.672 0 00-.17-.36c-.49-.63-1.07-1.2-1.65-1.72l-3.16 2.26a2.978 2.978 0 01-2.98 2.9c-.31 0-.6-.06-.88-.15L5.09 12.3c.44.19.9.36 1.37.47.97.23 1.94.24 2.92.05.88-.17 1.74-.54 2.53-.98 1.25-.7 2.39-1.67 3.38-2.75.18-.2.37-.41.53-.62.09-.1.15-.22.17-.36v-.02-.02-.01-.02-.03c.01-.02.01-.03.01-.04zm-.43-4.17c.25-.18.43-.46.43-.8 0-.55-.45-1-1-1-.22 0-.41.08-.57.2l-.01-.01-2.67 1.91c-.69-.38-1.41-.69-2.17-.87a6.8 6.8 0 00-2.91-.05c-.88.18-1.74.54-2.53.99-1.25.7-2.39 1.67-3.38 2.75-.18.2-.37.41-.53.62-.23.29-.23.63-.01.92.51.66 1.11 1.25 1.73 1.79.18.16.38.29.56.44l-2.09 1.5.01.01c-.25.18-.43.46-.43.8 0 .55.45 1 1 1 .22 0 .41-.08.57-.2l.01.01 14-10-.01-.01zm-10.41 5a3.03 3.03 0 01-.11-.8 2.99 2.99 0 012.99-2.98c.62 0 1.19.21 1.66.53L5.16 8.8z"];
  var eyeOn$1 = ["M10.29 6.7c.18.18.43.29.71.29s.53-.11.71-.29l4-4c.17-.18.29-.43.29-.7a1.003 1.003 0 00-1.71-.71L11 4.58 9.71 3.29A.997.997 0 009 3c-.55 0-1 .44-1 1a1 1 0 00.3.7l1.99 2zM16 7.96v-.02-.01-.02-.02a.64.64 0 00-.17-.36c-.3-.4-.65-.76-1-1.12l-1.7 1.7c-.55.55-1.3.88-2.13.88-.06 0-.11-.01-.17-.02C10.42 10.15 9.32 11 8.01 11A3.005 3.005 0 016.4 5.46c-.24-.43-.39-.93-.39-1.46 0-.26.04-.5.1-.74-.7.2-1.37.5-2.01.86-1.26.7-2.4 1.68-3.4 2.77-.18.21-.36.41-.53.63-.22.29-.22.64 0 .93.51.67 1.12 1.27 1.73 1.81 1.33 1.17 2.85 2.15 4.53 2.55.97.23 1.95.24 2.92.05.89-.18 1.74-.54 2.54-.99 1.25-.71 2.4-1.69 3.39-2.78.18-.2.37-.41.54-.63.09-.1.15-.23.17-.37v-.02-.02-.01-.02-.03c.01-.01.01-.02.01-.03zM8.01 9c.48 0 .87-.35.96-.81a.55.55 0 01-.07-.09l-.02.01L7.8 7.03c-.45.1-.79.48-.79.96 0 .56.45 1.01 1 1.01z"];
  var eyeOpen$1 = ["M8.002 7.003a1.003 1.003 0 000 2.005 1.003 1.003 0 000-2.005zm7.988.972v-.02-.01-.02-.02a.675.675 0 00-.17-.36c-.509-.673-1.118-1.264-1.737-1.806-1.328-1.173-2.846-2.155-4.523-2.546a6.702 6.702 0 00-2.925-.06c-.889.18-1.738.541-2.546.992C2.84 4.837 1.692 5.81.694 6.902c-.18.211-.36.411-.53.632a.742.742 0 000 .932c.51.672 1.119 1.264 1.738 1.805 1.328 1.173 2.846 2.156 4.523 2.547.968.23 1.947.24 2.925.04.889-.18 1.738-.542 2.546-.993 1.248-.712 2.397-1.684 3.395-2.777.18-.2.37-.411.54-.632.09-.1.149-.23.169-.36v-.02-.02-.01-.02-.03c0-.01-.01-.01-.01-.02zm-7.988 3.038a2.998 2.998 0 01-2.995-3.008 2.998 2.998 0 012.995-3.008 2.998 2.998 0 012.996 3.008 2.998 2.998 0 01-2.996 3.008z"];
  var fastBackward$1 = ["M14 3c-.24 0-.44.09-.62.23l-.01-.01L9 6.72V4c0-.55-.45-1-1-1-.24 0-.44.09-.62.23v-.01l-5 4 .01.01C2.16 7.41 2 7.68 2 8s.16.59.38.77v.01l5 4 .01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V9.28l4.38 3.5.01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var fastForward$1 = ["M15 8c0-.32-.16-.59-.38-.77l.01-.01-5-4-.01.01A.987.987 0 009 3c-.55 0-1 .45-1 1v2.72l-4.38-3.5v.01A.987.987 0 003 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01L8 9.28V12c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01 5-4-.01-.01c.22-.18.38-.45.38-.77z"];
  var feed$1 = ["M1.99 11.99c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.89-2-2-2zm1-4c-.55 0-1 .45-1 1s.45 1 1 1c1.66 0 3 1.34 3 3 0 .55.45 1 1 1s1-.45 1-1c0-2.76-2.24-5-5-5zm0-4c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7 3.13 7 7 0 .55.45 1 1 1s1-.45 1-1a9 9 0 00-9-9zm0-4c-.55 0-1 .45-1 1s.45 1 1 1c6.08 0 11 4.92 11 11 0 .55.45 1 1 1s1-.45 1-1c0-7.18-5.82-13-13-13z"];
  var feedSubscribed$1 = ["M3 2c1.06 0 2.08.16 3.06.45.13-.71.52-1.32 1.05-1.76C5.82.25 4.44 0 3 0c-.55 0-1 .45-1 1s.45 1 1 1zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm8.32-6.33a.99.99 0 001.4 0l3.98-3.98c.19-.18.3-.42.3-.7 0-.55-.45-.99-1-.99-.28 0-.52.11-.7.29l-3.28 3.28-1.29-1.29a.99.99 0 00-.7-.29 1 1 0 00-1 .99c0 .27.11.52.29.7l2 1.99zm3.73.53l-.93.93-.02-.02c-.17.17-.35.33-.56.45C13.47 9.16 14 11.02 14 13c0 .55.45 1 1 1s1-.45 1-1c0-2.5-.73-4.82-1.95-6.8zM3 8c-.55 0-1 .45-1 1s.45 1 1 1c1.66 0 3 1.34 3 3 0 .55.45 1 1 1s1-.45 1-1c0-2.76-2.24-5-5-5zm5.91-.91l-.03.03-2-2 .03-.03c-.11-.11-.23-.2-.33-.33A8.9 8.9 0 003 4c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7 3.13 7 7 0 .55.45 1 1 1s1-.45 1-1c0-1.87-.57-3.61-1.55-5.06-.61-.11-1.13-.42-1.54-.85z"];
  var film$1 = ["M15 1h-5v2H6V1H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h5v-2h4v2h5c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 13H2v-2h2v2zm0-3H2V8h2v2zm0-3H2V5h2v2zm0-3H2V2h2v2zm6 6H6V5h4v5zm4 3h-2v-2h2v2zm0-3h-2V8h2v2zm0-3h-2V5h2v2zm0-3h-2V2h2v2z"];
  var filter$1 = ["M13.99.99h-12a1.003 1.003 0 00-.71 1.71l4.71 4.71V14a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V7.41L14.7 2.7a1.003 1.003 0 00-.71-1.71z"];
  var filterKeep$1 = ["M15 10c-.28 0-.53.11-.71.29L12 12.59l-1.29-1.29A.965.965 0 0010 11a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0015 10zm-3-8c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L4 6.41V12a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7z"];
  var filterList$1 = ["M9 8c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1h-5c-.55 0-1 .45-1 1zm3-6c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L4 6.41V12a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7zm3 8h-5c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0 3h-5c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var filterOpen$1 = ["M15.707 10.293a1 1 0 010 1.414l-3 3c-.63.63-1.707.184-1.707-.707V8c0-.89 1.077-1.337 1.707-.707l3 3zM12 2c0 .28-.11.53-.29.7L8 6.41V10c0 .28-.11.53-.29.71l-2 2A1.003 1.003 0 014 12V6.41L.29 2.71A1.003 1.003 0 011 1h10c.55 0 1 .45 1 1z"];
  var filterRemove$1 = ["M12 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L4 6.41V12a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71V6.41l3.71-3.71c.18-.17.29-.42.29-.7zm2.41 10l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L13 10.59 11.71 9.3A.965.965 0 0011 9a1.003 1.003 0 00-.71 1.71l1.3 1.29-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l1.29-1.3 1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L14.41 12z"];
  var flag$1 = ["M2.99 2.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1s1-.45 1-1v-11c0-.55-.45-1-1-1zm0-3c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm2 3.03v7.23c2.07-2.11 5.92 1.75 9 0V3.02c-3 2.07-6.94-2.03-9 0z"];
  var flame$1 = ["M9.217 0c0 1.368.368 2.462 1.104 3.282C12.774 5.197 14 7.385 14 9.846c0 2.735-1.472 4.786-4.415 6.154 2.165-2.4 1.84-3.385-.368-6.4-2.342 1.2-1.967 2-1.592 3.6-.786 0-1.5 0-1.875-.4 0 .547.898 2 1.464 3.2-2.943-.82-6.092-5.744-4.988-6.154.736-.273 1.594-.137 2.575.41C3.575 5.333 5.047 1.915 9.217 0z"];
  var flash$1 = ["M4 8c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1zm4-4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S7 .45 7 1v2c0 .55.45 1 1 1zM3.79 5.21a1.003 1.003 0 001.42-1.42l-1.5-1.5a1.003 1.003 0 00-1.42 1.42l1.5 1.5zm.71 5.29c-.28 0-.53.11-.71.29l-1.5 1.5a1.003 1.003 0 001.42 1.42l1.5-1.5a1.003 1.003 0 00-.71-1.71zm7-5c.28 0 .53-.11.71-.29l1.5-1.5a1.003 1.003 0 00-1.42-1.42l-1.5 1.5a1.003 1.003 0 00.71 1.71zm.71 5.29a1.003 1.003 0 00-1.42 1.42l1.5 1.5a1.003 1.003 0 001.42-1.42l-1.5-1.5zM15 7h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.45-1-1-1zM8 5C6.34 5 5 6.34 5 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm0 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0 3c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1z"];
  var floatingPoint$1 = ["M1 5.326c.274 0 .541-.023.8-.069.259-.046.491-.122.697-.228a1.71 1.71 0 00.537-.412c.153-.167.252-.373.297-.617h1.063v8H2.966V6.354H1V5.326zM12.172 4.01c.55 0 .997.128 1.342.385.352.25.623.572.814.968.198.389.33.818.396 1.287.073.47.11.924.11 1.364 0 .44-.037.895-.11 1.364-.066.47-.198.902-.396 1.298-.19.389-.462.711-.814.968-.345.25-.792.374-1.342.374s-1.001-.125-1.353-.374a2.74 2.74 0 01-.814-.968 4.618 4.618 0 01-.396-1.298 9.795 9.795 0 01-.099-1.364c0-.44.033-.895.099-1.364.073-.47.205-.898.396-1.287.198-.396.47-.719.814-.968.352-.257.803-.385 1.353-.385zm0 6.963c.271 0 .499-.077.682-.231.183-.161.326-.374.429-.638.11-.271.187-.587.231-.946.044-.36.066-.74.066-1.144 0-.403-.022-.781-.066-1.133a3.724 3.724 0 00-.231-.946 1.51 1.51 0 00-.429-.638.995.995 0 00-.682-.242c-.279 0-.51.08-.693.242a1.656 1.656 0 00-.429.638 4.08 4.08 0 00-.22.946c-.044.352-.066.73-.066 1.133s.022.785.066 1.144c.044.36.117.675.22.946.11.264.253.477.429.638.183.154.414.231.693.231zM8.089 10.5H6.5v1.543h1.589V10.5z"];
  var floppyDisk$1 = ["M15.71 2.29l-2-2A.997.997 0 0013 0h-1v6H4V0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V3c0-.28-.11-.53-.29-.71zM14 15H2V9c0-.55.45-1 1-1h10c.55 0 1 .45 1 1v6zM11 1H9v4h2V1z"];
  var flowBranch$1 = ["M10.643 6.595c.22.418.344.894.344 1.399 0 .439-.094.855-.263 1.231l3.265 3.462-.002-1.75a.973.973 0 01.314-.68.99.99 0 011.388.048c.186.2.316.46.3.715l-.009 4.03a.959.959 0 01-.3.68.972.972 0 01-.698.266l-4.053.002a.97.97 0 01-.679-.314 1.031 1.031 0 01.05-1.42.972.972 0 01.698-.266l1.7-.001-3.305-3.35a2.998 2.998 0 01-4.228-1.653H.999a1 1 0 010-2h4.166a2.998 2.998 0 014.06-1.735l3.449-3.268-1.745.002a.979.979 0 01-.631-1.692c.199-.186.459-.316.713-.3l4.025.009c.247.008.493.1.679.3.186.2.274.451.265.7l.002 4.046a.972.972 0 01-.313.68 1.03 1.03 0 01-1.42-.05.973.973 0 01-.266-.7V3.295l-3.34 3.301z"];
  var flowEnd$1 = ["M9.702 7.31c.176.176.293.41.293.684a.976.976 0 01-.283.695c-1.888 1.91-2.892 2.918-3.011 3.027-.179.164-.42.284-.693.284a.995.995 0 01-.997-.985c0-.274.112-.541.292-.72.12-.12.624-.551 1.514-1.293H.98c-.536 0-.975-.47-.975-1.008 0-.537.439-.996.975-.996h5.837c-.895-.752-1.4-1.187-1.514-1.304a1.03 1.03 0 01-.292-.705C5.01 4.45 5.464 4 6 4c.272 0 .52.108.695.294A535.7 535.7 0 009.702 7.31zM13 11.002c-1.657 0-3-1.347-3-3.008a3.004 3.004 0 013-3.007c1.657 0 3 1.346 3 3.007a3.004 3.004 0 01-3 3.008z"];
  var flowLinear$1 = ["M4.16 9.002H.977C.44 9.002 0 8.532 0 7.994c0-.537.44-.99.978-.99h3.18A3.01 3.01 0 016.995 5a3.01 3.01 0 012.839 2.004h2.98c-.898-.756-1.404-1.193-1.518-1.31a1.03 1.03 0 01-.293-.705c0-.538.454-.989.992-.989.274 0 .521.108.697.294.118.124 1.122 1.13 3.014 3.016a.96.96 0 01.293.684.975.975 0 01-.284.695l-3.018 3.027a.974.974 0 01-.694.284c-.553 0-1-.447-1-.985 0-.274.117-.545.293-.72l1.518-1.293H9.833A3.01 3.01 0 016.996 11 3.01 3.01 0 014.16 9.002z"];
  var flowReview$1 = ["M5.175 7.004a3.003 3.003 0 012.83-2.001c1.305 0 2.416.835 2.83 2.001h1.985c-.896-.756-1.401-1.193-1.515-1.31a1.03 1.03 0 01-.292-.705c0-.538.453-.989.99-.989a.95.95 0 01.696.294c.117.124 1.12 1.13 3.008 3.016.176.176.293.41.293.684a.976.976 0 01-.283.695l-3.013 3.027a.995.995 0 01-1.691-.702c0-.273.116-.544.292-.72l1.515-1.292h-1.98a3.003 3.003 0 01-2.835 2.016A3.003 3.003 0 015.17 9.002H3.18l1.515 1.292c.176.176.292.447.292.72a.995.995 0 01-1.69.702L.282 8.69A.976.976 0 010 7.994c0-.273.117-.508.293-.684A535.858 535.858 0 003.3 4.294.95.95 0 013.997 4c.537 0 .99.45.99.989 0 .273-.12.528-.292.705-.114.117-.62.554-1.515 1.31h1.995z"];
  var flowReviewBranch$1 = ["M10.392 10.647A3.002 3.002 0 016.16 8.995H3.37l1.338 1.318c.172.178.287.41.282.683-.01.536-.524.995-.99.995-.465 0-.63-.187-.747-.294L.281 8.682A.956.956 0 010 7.994a.971.971 0 01.294-.687l3.01-3.028a.973.973 0 01.697-.27c.536.01.998.485.989 1.021a.971.971 0 01-.295.687L3.37 6.997h2.79a3.002 3.002 0 014.106-1.716l2.416-2.277-1.732.004a.99.99 0 01-.679-.329.978.978 0 01.05-1.378c.199-.186.459-.315.714-.3l4.012.005c.248.009.493.1.68.3.185.2.273.45.264.699L15.99 6.05a.973.973 0 01-.314.679 1.03 1.03 0 01-1.421-.048.971.971 0 01-.265-.699V4.29L11.65 6.602c.219.416.343.89.343 1.394 0 .451-.1.88-.279 1.263L14 11.68l-.004-1.73a.982.982 0 01.323-.68.978.978 0 011.378.049c.187.2.316.46.3.714l-.004 4.011a.983.983 0 01-.3.691.972.972 0 01-.7.265l-4.046-.001a.987.987 0 01-.679-.326 1.017 1.017 0 01.048-1.41.972.972 0 01.699-.265h1.693l-2.315-2.35z"];
  var flows$1 = ["M13.5 6a2.5 2.5 0 00-2.45 2h-1.3L5.74 4l-.75.75L8.25 8h-3.3a2.5 2.5 0 100 1h3.3l-3.26 3.25.75.75 4.01-4h1.3a2.5 2.5 0 102.45-3z"];
  var folderClose$1 = ["M-.01 14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7h-16v7zm15-10H7.41L5.7 2.3a.965.965 0 00-.71-.3h-4c-.55 0-1 .45-1 1v3h16V5c0-.55-.45-1-1-1z"];
  var folderNew$1 = ["M10.165 7a3.003 3.003 0 002.827 2 3.003 3.003 0 002.827-2H16v7c0 .55-.45 1-1 1H1.01c-.55 0-1-.45-1-1V7h10.155zM8.76 6H0V3c0-.55.45-1 1-1h1.998c.28 0 .53.11.71.29L5.417 4h2.578c0 .768.29 1.469.765 2zm6.23-3c.55 0 1 .45 1 1s-.45 1-1 1h-.999v1c0 .55-.45 1-1 1-.549 0-.998-.45-.998-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 .999-1 .55 0 1 .45 1 1v1h.999z"];
  var folderOpen$1 = ["M2.06 6.69c.14-.4.5-.69.94-.69h11V5c0-.55-.45-1-1-1H6.41l-1.7-1.71A.997.997 0 004 2H1c-.55 0-1 .45-1 1v9.84l2.05-6.15h.01zM16 8c0-.55-.45-1-1-1H4a.99.99 0 00-.94.69l-2 6c-.04.09-.06.2-.06.31 0 .55.45 1 1 1h11c.44 0 .81-.29.94-.69l2-6c.04-.09.06-.2.06-.31z"];
  var folderShared$1 = ["M8.76 5.98c-.47-.53-.77-1.22-.77-1.99h-.58L5.7 2.29a.965.965 0 00-.71-.3h-4c-.55 0-1 .45-1 1v3h8.76l.01-.01zm6.23-2.99h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.3a.99.99 0 00-.29.7 1.003 1.003 0 001.71.71l3.29-3.29V8c0 .55.45 1 1 1s1-.45 1-1V4c0-.56-.45-1.01-1-1.01zm-1.98 7.23l-.9.9-.01-.01c-.54.55-1.28.89-2.11.89-1.66 0-3-1.34-3-3 0-.77.3-1.47.78-2H-.01v7c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.18c-.31.11-.65.18-1 .18-.76-.01-1.45-.31-1.98-.78z"];
  var folderSharedOpen$1 = ["M13.02 10.22l-.9.9-.01-.01c-.54.55-1.28.89-2.11.89-1.66 0-3-1.34-3-3 0-.77.3-1.47.78-2H4a.99.99 0 00-.94.69l-2 6c-.04.09-.06.2-.06.31 0 .55.45 1 1 1h11c.44 0 .81-.29.94-.69l1.11-3.32c-.01 0-.03.01-.05.01-.77 0-1.45-.3-1.98-.78zM2.06 6.69c.14-.4.5-.69.94-.69h5.76l.01-.01C8.3 5.46 8 4.77 8 4H6.41l-1.7-1.71A.997.997 0 004 2H1c-.55 0-1 .45-1 1v9.84l2.05-6.15h.01zM15 3h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 001.42 1.42L14 6.41V8c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var follower$1 = ["M9.37 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.06-.01-.12-.01-.19.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.12-.39.28-.06.44-.36.5-.63.06-.11.19-.39.16-.7-.04-.4-.2-.59-.38-.67v-.07c0-.52-.05-1.26-.14-1.74a2.72 2.72 0 00-.09-.43 3.02 3.02 0 00-1.04-1.51C7.87 3.2 7.15 3 6.5 3c-.64 0-1.36.2-1.87.59-.5.38-.87.92-1.05 1.51-.04.13-.07.27-.09.4-.09.49-.14 1.24-.14 1.75v.06c-.19.07-.36.26-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.13 15.5.02 16 .02 16h12.96s.15-.5-.22-1.36c-.38-.85-2.19-1.42-3.39-1.95zm6.33-10.4l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H9.99c-.55 0-1 .45-1 1s.45 1 1 1h2.58l-.29.29a1.003 1.003 0 001.42 1.42l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var following$1 = ["M9.37 12.69c-1.2-.53-1.04-.85-1.08-1.29-.01-.06-.01-.12-.01-.19.41-.37.75-.87.97-1.44 0 0 .01-.03.01-.04.05-.13.09-.26.12-.39.28-.06.44-.36.5-.63.06-.11.19-.39.16-.7-.04-.4-.2-.59-.38-.67v-.07c0-.52-.05-1.26-.14-1.74a2.72 2.72 0 00-.09-.43 3.02 3.02 0 00-1.04-1.51C7.87 3.2 7.15 3 6.5 3c-.64 0-1.36.2-1.87.59-.5.38-.87.92-1.05 1.51-.04.13-.07.27-.09.4-.09.49-.14 1.24-.14 1.75v.06c-.19.07-.36.26-.4.68-.03.31.1.59.16.7.06.28.23.59.51.64.04.14.08.27.13.39 0 .01.01.02.01.02v.01c.22.59.57 1.1.99 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.12 1.29-1.2.53-3.01 1.1-3.38 1.95C-.13 15.5.02 16 .02 16h12.96s.15-.5-.22-1.36c-.38-.85-2.19-1.42-3.39-1.95zM14.99 2h-2.58l.29-.29A1.003 1.003 0 0011.28.29l-2 2c-.17.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L12.41 4h2.58c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var font$1 = ["M13.93 14.67L8.94.67h-.01C8.79.28 8.43 0 8 0s-.79.28-.93.67h-.01l-5 14h.01c-.04.1-.07.21-.07.33 0 .55.45 1 1 1 .43 0 .79-.28.93-.67h.01L5.49 11h5.02l1.55 4.34h.01c.14.38.5.66.93.66.55 0 1-.45 1-1 0-.12-.03-.23-.07-.33zM6.2 9L8 3.97 9.8 9H6.2z"];
  var fork$1 = ["M13.7 9.29a1.003 1.003 0 00-1.42 1.42l.29.29H11.4l-5-5h6.17l-.29.29a1.003 1.003 0 001.42 1.42l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.29.29H.99c-.55 0-1 .45-1 1s.45 1 1 1h2.59l6.71 6.71c.18.18.43.29.71.29h1.59l-.29.29a1.003 1.003 0 001.42 1.42l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71l-2.02-2z"];
  var form$1 = ["M2 11v2h2v-2H2zM1 9h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1zm9-6h5c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1zM6 1a1.003 1.003 0 01.71 1.71l-3 4C3.53 6.89 3.28 7 3 7s-.53-.11-.71-.29l-2-2a1.003 1.003 0 011.42-1.42L3 4.59l2.29-3.3C5.47 1.11 5.72 1 6 1zm4 10h5c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1z"];
  var fuel$1 = ["M1.949 1H0v2h2c.31 0 .6.161.762.426l1.965 3.193-1.352 1.08A1 1 0 003 8.482V13.9c0 .607.448 1.1 1 1.1h11c.552 0 1-.492 1-1.1V2s0-1-1-1H9c-.5 0-1 .5-1 1v2L6.388 5.29 4.455 2.35A3 3 0 001.95 1zM14 3v1h-4V3h4z"];
  var fullCircle$1 = ["M8 0a8 8 0 100 16A8 8 0 108 0z"];
  var fullStackedChart$1 = ["M13 12h1c.55 0 1-.45 1-1V8h-3v3c0 .55.45 1 1 1zM10 2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3h3V2zm0 4H7v3h3V6zm5-4c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v2h3V2zm0 3h-3v2h3V5zM5 5H2v3h3V5zm-2 7h1c.55 0 1-.45 1-1V9H2v2c0 .55.45 1 1 1zm12 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM5 2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h3V2zm3 10h1c.55 0 1-.45 1-1v-1H7v1c0 .55.45 1 1 1z"];
  var fullscreen$1 = ["M3.41 2H5c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v4c0 .55.45 1 1 1s1-.45 1-1V3.41L5.29 6.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L3.41 2zM6 9c-.28 0-.53.11-.71.29L2 12.59V11c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.41l3.29-3.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1zm9 1c-.55 0-1 .45-1 1v1.59L10.71 9.3A.965.965 0 0010 9a1.003 1.003 0 00-.71 1.71l3.3 3.29H11c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm0-10h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.29a1.003 1.003 0 001.42 1.42L14 3.41V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var _function$1 = ["M8.12 4.74H6.98c.33-1.29.75-2.24 1.28-2.84.33-.37.64-.56.95-.56.06 0 .11.02.15.05.04.04.06.09.06.15 0 .05-.04.15-.13.29-.09.14-.13.28-.13.4 0 .18.07.33.2.46.14.13.31.19.52.19.22 0 .41-.08.56-.23.15-.16.23-.37.23-.63 0-.3-.11-.55-.34-.74C10.1 1.09 9.74 1 9.24 1c-.78 0-1.49.22-2.12.67-.64.45-1.24 1.2-1.81 2.23-.2.36-.38.59-.56.69-.18.1-.46.15-.85.15l-.26.9h1.08l-1.59 6.12c-.27 1.01-.44 1.63-.54 1.86-.14.34-.34.63-.62.87-.11.1-.24.15-.4.15a.15.15 0 01-.11-.04l-.04-.05c0-.03.04-.08.12-.16.08-.08.12-.2.12-.36 0-.18-.06-.33-.19-.44-.12-.12-.3-.18-.54-.18-.28 0-.51.08-.68.23-.16.14-.25.32-.25.53 0 .22.1.42.31.59.21.17.53.25.97.25.7 0 1.32-.18 1.87-.54.54-.36 1.02-.92 1.42-1.67.41-.75.82-1.96 1.25-3.63l.91-3.54h1.1l.29-.89zm5.43 1.52c.2-.15.41-.23.62-.23.08 0 .23.03.45.09s.41.09.57.09c.23 0 .42-.08.57-.23.16-.16.24-.36.24-.61 0-.26-.08-.47-.23-.62-.15-.15-.37-.23-.66-.23-.25 0-.5.06-.72.18-.23.12-.51.38-.86.78-.26.3-.64.81-1.15 1.55-.2-.91-.55-1.75-1.05-2.51l-2.72.46-.06.29c.2-.04.37-.06.51-.06.27 0 .49.11.67.34.28.36.67 1.45 1.17 3.26-.39.52-.66.85-.8 1.01-.24.26-.44.42-.59.5-.12.06-.25.09-.41.09-.11 0-.3-.06-.56-.18-.18-.08-.34-.12-.48-.12-.27 0-.48.08-.66.25-.17.17-.26.38-.26.64 0 .25.08.44.24.6.16.15.37.23.64.23.26 0 .5-.05.73-.16.23-.11.52-.34.86-.69.35-.35.82-.9 1.43-1.67.23.73.44 1.25.61 1.58s.37.57.59.71c.22.15.5.22.83.22.32 0 .65-.11.98-.34.44-.3.88-.81 1.34-1.53l-.26-.15c-.31.43-.54.7-.69.8-.1.07-.22.1-.35.1-.16 0-.32-.1-.48-.3-.27-.34-.62-1.27-1.06-2.8.4-.68.73-1.13 1-1.34z"];
  var ganttChart$1 = ["M10 10c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1zM6 7c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1zm9 5H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM4 5h3c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var geofence$1 = ["M6 9c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1s-1-.45-1-1v-1.59l-3.29 3.3A1.003 1.003 0 010 15c0-.28.11-.53.3-.71L3.59 11H2c-.55 0-1-.45-1-1s.45-1 1-1zM9.088.004l.097.013.097.024.057.018.1.042.054.029.095.061.052.04 6 5 .05.046.076.08.053.07.06.095.051.11c.056.141.079.294.067.446l-.014.105-.037.143-.035.087-.043.083-4 7-.034.056-.059.08-.038.044-.096.092-.114.082-.116.062-.086.034-.109.03-.1.017-.069.006H8.83c.088-.25.144-.515.163-.79L9 13v-3a3 3 0 00-2.824-2.995L6 7H3c-.351 0-.689.06-1.002.171L2 5l.002-.07.013-.1.015-.073.025-.085.043-.104.056-.101.045-.066.079-.093.084-.078.083-.062 6-4 .07-.043.12-.056.111-.036.108-.022.083-.01h.031c.046-.002.083 0 .12.003z"];
  var geolocation$1 = ["M-.01 6.66l7.34 2 2 7.33 6.66-16z"];
  var geosearch$1 = ["M8.82 12.4h.66c.23 0 .36-.17.36-.4v-1.48l.19-.18c-.27.03-.55.06-.83.06-.28 0-.56-.03-.84-.07.02.04.05.08.07.13V12c0 .23.15.4.39.4zM6.4 15.1A5.51 5.51 0 01.9 9.6c0-.49.06-.98.18-1.43.03 0 .05-.01.08-.01h.08v.44c0 .19.17.34.36.34.03 0 .07-.01.1-.01l.71.7c.07.07.19.07.26 0s.07-.19 0-.26l-.7-.72c0-.02.03-.03.03-.05v-.11c0-.15.08-.2.23-.33h.42c.08 0 .15-.01.22-.04h.02c.02-.02.03-.02.04-.04.01-.01.01-.01.02-.01l.02-.01.9-.9c-.13-.26-.24-.52-.34-.8h-.5v-.43c0-.01.05.05.04-.08h.31c-.03-.13-.06-.26-.08-.39h-.57c.16-.12.34-.24.51-.36-.02-.23-.04-.46-.04-.7 0-.12.01-.23.02-.34A6.385 6.385 0 000 9.6C0 13.13 2.87 16 6.4 16c3.1 0 5.67-2.22 6.26-5.15l-.78-.88c-.21 2.85-2.58 5.13-5.48 5.13zm-1.7-2.93v-.28h.12c.23 0 .39-.19.39-.42v-.54s.01-.01 0-.01L3.77 9.45h-.62c-.23 0-.38.19-.38.42v1.6c0 .23.14.42.38.42h.26v1.61c0 .23.22.41.45.41s.45-.18.45-.41v-.97H4.3c.24 0 .4-.13.4-.36zm11.07-2.34l-2.94-2.94c.11-.17.21-.34.3-.52.01-.03.03-.06.04-.09.08-.18.16-.36.22-.55v-.01c.06-.19.1-.38.14-.58.01-.05.01-.09.02-.14.03-.2.05-.4.05-.61a4.4 4.4 0 00-4.4-4.4C6.77 0 4.8 1.97 4.8 4.4s1.97 4.4 4.4 4.4c.21 0 .41-.02.61-.05.04 0 .09-.01.14-.02.2-.03.39-.08.58-.14h.01c.19-.06.37-.14.55-.22.03-.01.06-.03.09-.04.18-.09.35-.19.52-.3l2.94 2.94a.8.8 0 00.57.23c.44 0 .8-.36.8-.8a.895.895 0 00-.24-.57zM9.2 7.6C7.43 7.6 6 6.17 6 4.4c0-1.77 1.43-3.2 3.2-3.2s3.2 1.43 3.2 3.2c0 1.77-1.43 3.2-3.2 3.2zm1.54 4.26v-.52c0-.09-.1-.17-.19-.17s-.19.07-.19.17v.52c0 .09.1.17.19.17s.19-.07.19-.17z"];
  var gitBranch$1 = ["M12 1c-1.66 0-3 1.34-3 3 0 1.25.76 2.32 1.85 2.77A2.02 2.02 0 019 8H7c-.73 0-1.41.2-2 .55V5.82C6.16 5.4 7 4.3 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.82v4.37c-1.16.4-2 1.51-2 2.81 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.04-.53-1.95-1.32-2.49.35-.31.81-.51 1.32-.51h2c1.92 0 3.52-1.35 3.91-3.15A2.996 2.996 0 0012 1zM4 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 12c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var gitCommit$1 = ["M15 7h-3.14c-.45-1.72-2-3-3.86-3S4.59 5.28 4.14 7H1c-.55 0-1 .45-1 1s.45 1 1 1h3.14c.45 1.72 2 3 3.86 3s3.41-1.28 3.86-3H15c.55 0 1-.45 1-1s-.45-1-1-1zm-7 3c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"];
  var gitMerge$1 = ["M12 6c-1.3 0-2.4.84-2.82 2H9c-1.62 0-3-.96-3.63-2.34C6.33 5.16 7 4.16 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.81v4.37C1.84 10.6 1 11.7 1 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V8.43A5.89 5.89 0 009 10h.18A2.996 2.996 0 0015 9c0-1.66-1.34-3-3-3zm-8 8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var gitNewBranch$1 = ["M14 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3.18 4.8C10.51 7.51 9.82 8 9 8H7c-.73 0-1.41.2-2 .55V5.82C6.16 5.4 7 4.3 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.82v4.37c-1.16.4-2 1.51-2 2.81 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.04-.53-1.95-1.32-2.49.35-.31.81-.51 1.32-.51h2c1.9 0 3.49-1.33 3.89-3.11-.29.07-.58.11-.89.11-.41 0-.8-.08-1.18-.2zM4 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 12c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var gitPull$1 = ["M3 1C1.34 1 0 2.34 0 4c0 1.3.84 2.4 2 2.82v3.37C.84 10.6 0 11.7 0 13c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V6.82C5.16 6.4 6 5.3 6 4c0-1.66-1.34-3-3-3zm0 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm11 5.18V6c0-1.66-1.34-3-3-3H9.41l1.29-1.29c.19-.18.3-.43.3-.71A1.003 1.003 0 009.29.29l-3 3C6.11 3.47 6 3.72 6 4c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L9.41 5H11c.55 0 1 .45 1 1v4.18A2.996 2.996 0 0013 16c1.66 0 3-1.34 3-3 0-1.3-.84-2.4-2-2.82zM13 14c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var gitPush$1 = ["M4 6h1V5H4v1zm9 3c0-.28-.11-.53-.29-.71l-3-3C9.53 5.11 9.28 5 9 5s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L8 8.41V15c0 .55.45 1 1 1s1-.45 1-1V8.41l1.29 1.29c.18.19.43.3.71.3.55 0 1-.45 1-1zM5 3H4v1h1V3zm10-3H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h5v-2H2v-1h4v-1H3V2h11v9h-2v1h2v1h-2v2h3c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var gitRepo$1 = ["M5 9H4v1h1V9zm10-9H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h3v1l2-1 2 1v-1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM4 13H2v-1h2v1zm10 0H8v-1h6v1zm0-2H3V2h11v9zM5 3H4v1h1V3zm0 4H4v1h1V7zm0-2H4v1h1V5z"];
  var glass$1 = ["M2 0v4c0 2.97 2.16 5.43 5 5.91V14H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1H9V9.91c2.84-.48 5-2.94 5-5.91V0H2z"];
  var globe$1 = ["M4.45 7.83c-.26 0-.41.21-.41.46v1.75c0 .26.16.46.41.46h.29v1.77c0 .25.24.45.49.45s.49-.2.49-.45V11.2h-.01c.26 0 .44-.14.44-.4v-.3h.14c.26 0 .43-.2.43-.46v-.59s.01-.01 0-.01l-1.58-1.6h-.69zM8.51 3.9h.22c.06 0 .12-.01.12-.07 0-.06-.05-.07-.12-.07h-.22c-.06 0-.12.01-.12.07.01.06.06.07.12.07zm-2.33-.05c.07-.07.07-.19 0-.26l-.5-.5a.187.187 0 00-.26 0c-.07.07-.07.19 0 .26l.5.5c.07.07.19.07.26 0zm3.06.89c.07 0 .14-.06.14-.12v-.31c0-.07-.07-.12-.14-.12s-.14.06-.14.12v.31c0 .07.07.12.14.12zM8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-.55.1-1.07.23-1.57h.11v.47c0 .2.18.37.39.37.03 0 .08-.01.11-.02l.78.77c.08.08.2.08.28 0 .08-.08.08-.2 0-.28l-.75-.78c0-.02.04-.04.04-.06v-.12c0-.16.09-.22.25-.36h.46c.09 0 .17-.01.24-.05h.02c.02-.01.03-.02.05-.03.01-.01.01-.01.02-.01l.02-.02 1.59-1.58c.18-.18.18-.46 0-.64s-.47-.15-.65.03l-.3.34h-.57v-.48c0-.01.05.05.05-.09h.64c.12 0 .22-.09.22-.21s-.1-.21-.22-.21H4.1c.18-.15.34-.31.54-.44l.01-.01c.21-.14.45-.25.68-.37.15-.07.29-.15.44-.21.17-.07.35-.11.53-.17.18-.05.35-.12.53-.16a6.05 6.05 0 013.47.35c.05.02.1.05.16.08.25.11.48.24.71.39.25.16.49.34.71.55H10.6s0-.03-.01-.03c-.04 0-.09 0-.13.03l-.51.51a.17.17 0 000 .23c.06.06.17.06.23 0l.42-.44.01-.02h.25c0 .14-.07.09-.07.12v.07c0 .22-.15.37-.36.37h-.38c-.19 0-.38.21-.38.4v.17h-.1c-.12 0-.2.06-.2.18v.25h-.23c-.17 0-.3.11-.3.28 0 .17.13.26.3.26.07 0 .14.03.19-.11l.04.01.49-.46h.17l.39.37c.03.03.08.02.12-.01.03-.03.03-.12 0-.15l-.32-.35h.23l.09.12c.18.18.48.17.66-.01l.09-.1h.4c.02 0 .08.05.08.05v.24l-.05-.01h-.36c-.11 0-.21.1-.21.21 0 .11.09.21.21.21h.41v.15c-.14.21-.24.42-.45.42h-.94v-.01l-.44-.44a.47.47 0 00-.66 0l-.42.43v.01H8.6c-.26 0-.49.21-.49.46v.92c0 .26.23.45.49.45h.9c.34.14.57.35.72.69v1.68c0 .26.17.44.42.44h.72c.26 0 .4-.18.4-.44V9l.89-.86.03-.02.02-.01h.03c.07-.08.15-.19.15-.31v-.91c0-.18-.16-.32-.31-.46H13c.01.28.21.42.46.42h.42c.08.37.12.76.12 1.15 0 3.31-2.69 6-6 6zm4.54-4.27c-.1 0-.21.08-.21.18v.57c0 .1.11.18.21.18.1 0 .21-.08.21-.18v-.57c0-.1-.11-.18-.21-.18zM8.37 3.19c0-.25-.2-.42-.46-.42h-.54c-.25 0-.42.18-.42.43 0 .03-.1.04.05.08v.47c0 .15.06.27.21.27s.21-.12.21-.27v-.14h.5c.24 0 .45-.16.45-.42z"];
  var globeNetwork$1 = ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm5.17 5h-2.44c-.21-1.11-.51-2.03-.91-2.69 1.43.46 2.61 1.43 3.35 2.69zM10 8c0 .73-.05 1.39-.12 2H6.12C6.05 9.39 6 8.73 6 8s.05-1.39.12-2h3.76c.07.61.12 1.27.12 2zM8 2c.67 0 1.36 1.1 1.73 3H6.27C6.64 3.1 7.33 2 8 2zm-1.82.31c-.4.66-.71 1.58-.91 2.69H2.83a6.025 6.025 0 013.35-2.69zM2 8c0-.7.13-1.37.35-2h2.76C5.04 6.62 5 7.28 5 8s.04 1.38.11 2H2.35C2.13 9.37 2 8.7 2 8zm.83 3h2.44c.21 1.11.51 2.03.91 2.69A6.025 6.025 0 012.83 11zM8 14c-.67 0-1.36-1.1-1.73-3h3.46c-.37 1.9-1.06 3-1.73 3zm1.82-.31c.4-.66.7-1.58.91-2.69h2.44a6.025 6.025 0 01-3.35 2.69zM13.65 10h-2.76c.07-.62.11-1.28.11-2s-.04-1.38-.11-2h2.76c.22.63.35 1.3.35 2s-.13 1.37-.35 2z"];
  var graph$1 = ["M14 3c-1.06 0-1.92.83-1.99 1.88l-1.93.97A2.95 2.95 0 008 5c-.56 0-1.08.16-1.52.43L3.97 3.34C3.98 3.23 4 3.12 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.24 0 .47-.05.68-.13l2.51 2.09C5.08 7.29 5 7.63 5 8c0 .96.46 1.81 1.16 2.35l-.56 1.69c-.91.19-1.6.99-1.6 1.96 0 1.1.9 2 2 2s2-.9 2-2c0-.51-.2-.97-.51-1.32l.56-1.69A2.99 2.99 0 0011 8c0-.12-.02-.24-.04-.36l1.94-.97c.32.21.69.33 1.1.33 1.1 0 2-.9 2-2s-.9-2-2-2z"];
  var graphRemove$1 = ["M12.89 8.11l-.01.01-.38-.38-.38.38-.02-.02c-.54.55-1.27.9-2.1.9-1.66 0-3-1.34-3-3 0-.83.35-1.56.9-2.1l-.02-.02.38-.38-.38-.38.01-.01C7.35 2.57 7 1.83 7 1c0-.34.07-.65.17-.96A8.004 8.004 0 000 8c0 4.42 3.58 8 8 8 4.14 0 7.54-3.14 7.96-7.17-.31.1-.62.17-.96.17-.83 0-1.57-.35-2.11-.89zm1.02-4.61l1.79-1.79c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-1.79 1.8L10.71.3A.965.965 0 0010 0a1.003 1.003 0 00-.71 1.71l1.79 1.79-1.79 1.79a1.003 1.003 0 001.42 1.42l1.79-1.79 1.79 1.79a1.003 1.003 0 001.42-1.42l-1.8-1.79z"];
  var greaterThan$1 = ["M2.713 5.958a1 1 0 01.574-1.916l10 3c.95.285.95 1.63 0 1.916l-10 3a1 1 0 01-.574-1.916L9.52 8 2.713 5.958z"];
  var greaterThanOrEqualTo$1 = ["M2.713 3.958a1 1 0 01.574-1.916l10 3c.95.285.95 1.63 0 1.916l-10 3a1 1 0 01-.574-1.916L9.52 6 2.713 3.958zM3 12h10a1 1 0 010 2H3a1 1 0 010-2z"];
  var grid$1 = ["M15 9c.55 0 1-.45 1-1s-.45-1-1-1h-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1H9V1c0-.55-.45-1-1-1S7 .45 7 1v1H4V1c0-.55-.45-1-1-1S2 .45 2 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v3H1c-.55 0-1 .45-1 1s.45 1 1 1h1v3H1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h3v1c0 .55.45 1 1 1s1-.45 1-1v-1h3v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V9h1zm-8 3H4V9h3v3zm0-5H4V4h3v3zm5 5H9V9h3v3zm0-5H9V4h3v3z"];
  var gridView$1 = ["M0 1v6h7V0H1C.45 0 0 .45 0 1zm0 14c0 .55.45 1 1 1h6V9H0v6zM15 0H9v7h7V1c0-.55-.45-1-1-1zM9 16h6c.55 0 1-.45 1-1V9H9v7z"];
  var groupObjects$1 = ["M5 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6-3H5C2.24 3 0 5.24 0 8s2.24 5 5 5h6c2.76 0 5-2.24 5-5s-2.24-5-5-5zm0 9H5c-2.21 0-4-1.79-4-4s1.79-4 4-4h6c2.21 0 4 1.79 4 4s-1.79 4-4 4zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var groupedBarChart$1 = ["M10 12c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1zm3 0c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1zm2 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-9-1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1zm-3 0c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1v9c0 .55.45 1 1 1z"];
  var hand$1 = ["M15 5c0-.55-.45-1-1-1-.41 0-.76.24-.91.59v.01s0 .01-.01.01L11.57 8h-.36l.78-4.84C12 3.11 12 3.05 12 3a1 1 0 00-1.99-.16v.01L9.18 8H9V1c0-.55-.45-1-1-1S7 .45 7 1v7h-.09l-.93-5.18A1 1 0 005 2c-.55 0-1 .45-1 1 0 .05 0 .11.01.16L5.26 11h-.04L2.83 7.44C2.65 7.18 2.35 7 2 7c-.55 0-1 .45-1 1 0 .17.04.33.12.47l3 5.69h.01v.01A5.002 5.002 0 0013 11v-.59l1.93-5.05c.05-.11.07-.23.07-.36z"];
  var handDown$1 = ["M14.72 7.87c-1.54-.67-2.99-2.68-3.7-3.95C10.11 1.95 9.93 0 6.14 0 4.05 0 2.71.61 1.92 2.12 1.27 3.36 1 5.21 1 7.83v.79c0 .65.6 1.18 1.35 1.18.34 0 .64-.11.88-.29.17.48.68.84 1.29.84.41 0 .78-.16 1.03-.42.23.37.67.63 1.19.63.57 0 1.05-.31 1.25-.74l.01.63v4.05c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V7.9c.58.41 1.55 1.21 2.47 1.29 1.57.14 1.82-1.07 1.25-1.32z"];
  var handLeft$1 = ["M12.08 4.97c-1.26-.71-3.27-2.15-3.95-3.7C7.88.7 6.67.96 6.81 2.52c.09.93.89 1.9 1.3 2.48H1.5C.67 5 0 5.67 0 6.5S.67 8 1.5 8h4.05l.63.01c-.44.2-.75.69-.75 1.25 0 .52.26.96.63 1.19-.26.25-.42.61-.42 1.03 0 .61.35 1.12.84 1.29-.18.24-.29.54-.29.88 0 .75.54 1.35 1.19 1.35h.79c2.62 0 4.47-.28 5.71-.92 1.51-.79 2.12-2.14 2.12-4.22 0-3.79-1.95-3.97-3.92-4.89z"];
  var handRight$1 = ["M14.5 5H7.89c.41-.58 1.21-1.55 1.3-2.47C9.34.97 8.12.71 7.87 1.28c-.67 1.54-2.68 2.99-3.95 3.7C1.95 5.89 0 6.07 0 9.86c0 2.09.61 3.43 2.12 4.22 1.24.65 3.09.92 5.71.92h.79c.65 0 1.18-.6 1.18-1.35 0-.34-.11-.64-.29-.88.48-.17.84-.68.84-1.29 0-.41-.16-.78-.42-1.03.37-.23.63-.67.63-1.19 0-.57-.31-1.05-.74-1.25l.63-.01h4.05c.83 0 1.5-.67 1.5-1.5S15.33 5 14.5 5z"];
  var handUp$1 = ["M13.65 6.19c-.34 0-.64.11-.88.29-.17-.48-.68-.84-1.29-.84-.41 0-.78.16-1.03.42-.23-.37-.67-.63-1.19-.63-.57 0-1.05.31-1.25.74L8 5.55V1.5C8 .67 7.33 0 6.5 0S5 .67 5 1.5v6.61c-.58-.41-1.55-1.21-2.48-1.3C.96 6.67.7 7.88 1.28 8.13c1.54.67 2.99 2.68 3.7 3.95C5.89 14.05 6.07 16 9.86 16c2.09 0 3.43-.61 4.22-2.12.64-1.24.92-3.09.92-5.71v-.79c0-.65-.6-1.19-1.35-1.19z"];
  var hat$1 = ["M15 10c.495 0 .933.379.993.882L16 11v.505c0 1.461-3.524 2.45-7.707 2.493L8 14c-4.31 0-8-1-8-2.495V11c0-.561.466-1 1-1 .895 0 3 1 7 1l.381-.003C12.135 10.937 14.134 10 15 10zm-4-8c1.13 0 2.02 2.153 2.671 6.46-1.063.266-2.644.652-4.887.727l-.403.01L8 9.2c-2.664 0-4.488-.444-5.673-.74C2.98 4.153 3.87 2 5 2c2 0 1.329 2 3 2s1-2 3-2z"];
  var header$1 = ["M13 1c-.55 0-1 .45-1 1v5H4V2c0-.55-.45-1-1-1s-1 .45-1 1v12c0 .55.45 1 1 1s1-.45 1-1V9h8v5c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"];
  var headerOne$1 = ["M14.06 8c-.04.23-.12.44-.25.61-.13.17-.29.3-.48.41-.18.11-.39.18-.62.23-.23.04-.46.07-.71.07v1.03h1.74V16H15V8h-.94zM7 0c-.56 0-1 .45-1 1v4H2V1c0-.55-.45-1-1-1-.56 0-1 .45-1 1v10c0 .55.45 1 1 1 .56 0 1-.45 1-1V7h4v4c0 .55.45 1 1 1 .56 0 1-.45 1-1V1c0-.54-.45-1-1-1z"];
  var headerThree$1 = ["M1 0C.44 0 0 .45 0 1v10c0 .54.45 1 1 1 .56 0 1-.45 1-1V7h4v4c0 .54.45 1 1 1 .56 0 1-.45 1-1V1c0-.54-.45-1-1-1-.56 0-1 .45-1 1v4H2V1c0-.54-.45-1-1-1zm13.71 11.72c.41.08.72.3.95.65.23.35.34.77.34 1.27 0 .37-.07.7-.2.97-.14.29-.32.54-.55.74-.23.2-.5.36-.8.47-.3.11-.62.16-.96.16-.41 0-.77-.06-1.08-.19-.31-.12-.56-.31-.77-.54-.21-.24-.36-.52-.47-.85-.11-.33-.16-.7-.17-1.1h1.14c-.01.47.09.86.32 1.17.23.31.57.47 1.02.47.39 0 .71-.12.97-.36s.39-.58.39-1.02c0-.3-.05-.53-.16-.71-.11-.17-.25-.31-.43-.4-.17-.09-.37-.15-.59-.17-.22-.02-.44-.03-.67-.02v-.93c.19.01.38 0 .57-.04.19-.03.36-.1.51-.19.14-.09.26-.22.35-.38.09-.16.14-.36.14-.59 0-.33-.1-.59-.31-.79-.2-.2-.47-.3-.79-.3-.21 0-.38.04-.53.13-.15.09-.27.21-.37.36-.1.15-.17.32-.22.51-.05.19-.07.38-.06.58h-1.15c.01-.38.08-.72.19-1.04.11-.32.27-.6.47-.83.19-.23.44-.42.72-.55.28-.13.6-.2.96-.2.28 0 .55.04.82.13.27.08.51.21.72.38.21.17.38.38.51.64s.19.56.19.9c0 .39-.08.73-.24 1.02-.16.29-.42.5-.76.63v.02z"];
  var headerTwo$1 = ["M13.17 13.93c-.17.15-.33.29-.46.44-.13.16-.22.32-.27.49h3.55V16H11c.01-.65.16-1.22.44-1.71s.67-.91 1.17-1.27c.24-.18.49-.36.75-.54.25-.18.49-.36.71-.57.21-.2.39-.42.53-.65.14-.24.21-.51.22-.82 0-.14-.02-.29-.05-.45-.03-.16-.09-.31-.18-.45a1.13 1.13 0 00-.37-.35c-.16-.09-.37-.14-.63-.14-.24 0-.43.05-.59.15-.16.1-.29.24-.38.42-.1.17-.17.38-.21.62-.05.24-.07.5-.08.77h-1.19c0-.43.05-.83.16-1.2s.27-.69.49-.96c.21-.25.48-.46.79-.62.31-.15.67-.23 1.07-.23.45 0 .82.08 1.11.23.3.16.55.36.73.6.19.24.32.5.39.79.08.28.12.54.12.79 0 .31-.04.6-.13.85s-.22.49-.37.7c-.15.21-.32.41-.52.59s-.4.35-.61.51l-.63.45c-.21.14-.39.28-.57.42zM0 1c0-.55.44-1 1-1 .55 0 1 .46 1 1v10c0 .55-.44 1-1 1-.55 0-1-.46-1-1V1zm6 0c0-.55.44-1 1-1 .55 0 1 .46 1 1v10c0 .55-.44 1-1 1-.55 0-1-.46-1-1V1zM2 5h4v2H2V5z"];
  var headset$1 = ["M14.85 6.34C14.18 2.72 11.37 0 8 0S1.82 2.72 1.15 6.34C.47 6.9 0 8.1 0 9.5 0 11.43.9 13 2 13c0 1.1.9 2 2 2h2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1H4c-.55 0-1-.45-1-1 .55 0 1-.45 1-1V7c0-.45-.3-.81-.71-.94C3.97 3.7 5.81 2 8 2s4.03 1.7 4.71 4.06c-.41.13-.71.49-.71.94v5c0 .55.45 1 1 1h1c1.1 0 2-1.57 2-3.5 0-1.4-.47-2.6-1.15-3.16z"];
  var heart$1 = ["M16 5.095c0-2.255-1.88-4.083-4.2-4.083-1.682 0-3.13.964-3.8 2.352a4.206 4.206 0 00-3.8-2.352C1.88 1.012 0 2.84 0 5.095c0 .066.007.13.01.194H.004c.001.047.01.096.014.143l.013.142c.07.8.321 1.663.824 2.573C2.073 10.354 4.232 12.018 8 15c3.767-2.982 5.926-4.647 7.144-6.854.501-.905.752-1.766.823-2.562.007-.055.012-.11.016-.164.003-.043.012-.088.013-.13h-.006c.003-.066.01-.13.01-.195z"];
  var heartBroken$1 = ["M7.71 8.87L6.17 6.55l.02-.01A.906.906 0 016 6c0-.07.03-.13.04-.19h-.02l.78-3.92C6.09 1.34 5.19 1 4.2 1 1.88 1 0 2.83 0 5.09c0 .07.01.13.01.19H0c0 .05.01.1.01.14 0 .05.01.1.01.14.07.8.32 1.66.82 2.57 1.07 1.94 2.88 3.47 5.86 5.84l-.68-2.74h.02C6.03 11.16 6 11.08 6 11c0-.28.11-.53.29-.71l1.42-1.42zM16 5.09C16 2.83 14.12 1 11.8 1c-1.2 0-2.27.5-3.04 1.28l-.7 3.51 1.77 2.66-.01.01c.1.15.18.33.18.54 0 .28-.11.53-.29.71l-1.6 1.6.75 3.01c3.23-2.56 5.16-4.15 6.28-6.18.5-.91.75-1.77.82-2.56.01-.05.01-.11.02-.16 0-.04.01-.09.01-.13h-.01c.01-.07.02-.14.02-.2z"];
  var heatGrid$1 = ["M0 10h5V7H0v3zm1-2h3v1H1V8zm14-5h-4v3h5V4c0-.55-.45-1-1-1zm0 2h-3V4h3v1zM0 4v2h5V3H1c-.55 0-1 .45-1 1zm0 9c0 .55.45 1 1 1h4v-3H0v2zm6-7h4V3H6v3zm0 8h4v-3H6v3zm1-2h2v1H7v-1zm4 2h4c.55 0 1-.45 1-1v-2h-5v3zm0-4h5V7h-5v3zm-5 0h4V7H6v3z"];
  var heatmap$1 = ["M2 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm11-7c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm3 4.5A2.5 2.5 0 0013.5 6c-.98 0-1.82.57-2.23 1.39-.6-.78-1.51-1.3-2.56-1.36.18-.49.29-.99.29-1.53C9 2.01 6.99 0 4.5 0S0 2.01 0 4.5 2.01 9 4.5 9c.19 0 .37-.03.56-.06-.03.19-.06.37-.06.56C5 11.43 6.57 13 8.5 13c1.63 0 2.98-1.11 3.37-2.62.44.38 1 .62 1.63.62A2.5 2.5 0 0016 8.5zM14.5 13c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"];
  var helicopter$1 = ["M.5 2a.5.5 0 01.5.5V4h7V3H2.5a.5.5 0 010-1h13a.5.5 0 010 1H10v1h1c2.26 0 4 1.79 4 4 0 1.87-1.247 3.44-3 3.878V13h.382l1.894-.947a.5.5 0 11.448.894L12.618 14H4.5a.5.5 0 010-1H7v-2.306C5.749 9.736 5 8.368 5 7L1 6v1.5a.5.5 0 01-1 0v-5A.5.5 0 01.5 2zM8 11.316V13h3v-1a6.73 6.73 0 01-3-.684zM11 5v3h3a3 3 0 00-3-3z"];
  var help$1 = ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13H7v-2h2v2zm1.93-6.52c-.14.32-.35.64-.62.97L9.25 8.83c-.12.15-.24.29-.28.42-.04.13-.09.3-.09.52V10H7.12V8.88s.05-.51.21-.71L8.4 6.73c.22-.26.35-.49.44-.68.09-.19.12-.38.12-.58 0-.3-.1-.55-.28-.75-.18-.19-.44-.28-.76-.28-.33 0-.59.1-.78.29-.19.19-.33.46-.4.81-.03.11-.1.15-.2.14l-1.7-.25c-.12-.01-.16-.08-.14-.19.12-.82.46-1.47 1.03-1.94.57-.48 1.32-.72 2.25-.72.47 0 .9.07 1.29.22s.72.34 1 .59c.28.25.49.55.65.89.15.35.22.72.22 1.12s-.07.75-.21 1.08z"];
  var helperManagement$1 = ["M13 5h-2v2h2V5zm0 6h-2v2h2v-2zm0-3h-2v2h2V8zm2-8H1C.4 0 0 .4 0 1v14c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V1c0-.6-.4-1-1-1zm-1 14H2V2h12v12zm-7-3H5v2h2v-2zm3 0H8v2h2v-2z"];
  var highPriority$1 = ["M9 14v2H7v-2h2zm1-14L9 12H7L6 0h4z"];
  var highlight$1 = ["M9.12 11.07l2-2.02.71.71 4-4.04L10.17 0l-4 4.04.71.71-2 2.02 4.24 4.3zM2 12.97h4c.28 0 .53-.11.71-.3l1-1.01-3.42-3.45-3 3.03c-.18.18-.29.44-.29.72 0 .55.45 1.01 1 1.01zm13 1.01H1c-.55 0-1 .45-1 1.01S.45 16 1 16h14c.55 0 1-.45 1-1.01s-.45-1.01-1-1.01z"];
  var history$1 = ["M8 3c-.55 0-1 .45-1 1v4c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L9 7.59V4c0-.55-.45-1-1-1zm0-3a7.95 7.95 0 00-6 2.74V1c0-.55-.45-1-1-1S0 .45 0 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.54C4.64 2.78 6.23 2 8 2c3.31 0 6 2.69 6 6 0 2.61-1.67 4.81-4 5.63v-.01c-.63.23-1.29.38-2 .38-3.31 0-6-2.69-6-6 0-.55-.45-1-1-1s-1 .45-1 1c0 4.42 3.58 8 8 8 .34 0 .67-.03 1-.07.02 0 .04-.01.06-.01C12.98 15.4 16 12.06 16 8c0-4.42-3.58-8-8-8z"];
  var home$1 = ["M2 10v5c0 .55.45 1 1 1h3v-5h4v5h3c.55 0 1-.45 1-1v-5L8 4l-6 6zm13.71-2.71L14 5.59V2c0-.55-.45-1-1-1s-1 .45-1 1v1.59L8.71.29C8.53.11 8.28 0 8 0s-.53.11-.71.29l-7 7a1.003 1.003 0 001.42 1.42L8 2.41l6.29 6.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"];
  var horizontalBarChart$1 = ["M4 5h7c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zM1 1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1zm14 6H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-6 5H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1z"];
  var horizontalBarChartAsc$1 = ["M1 3h5c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 4h7c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 6H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 11h10c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var horizontalBarChartDesc$1 = ["M15 1H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM8 9H1c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm-2 4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm5-8H1c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var horizontalDistribution$1 = ["M2 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm13 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-5 2H7c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"];
  var horizontalInbetween$1 = ["M0 16V0h1a1 1 0 011 1v14a1 1 0 01-1 1H0zM15 0h1v16h-1a1 1 0 01-1-1V1a1 1 0 011-1zM6.707 6.707a1 1 0 00-1.414-1.414l-2 2a1 1 0 000 1.414l2 2a1 1 0 001.414-1.414L5.414 8l1.293-1.293zm4-1.414a1 1 0 00-1.414 1.414L10.586 8 9.293 9.293a1 1 0 101.414 1.414l2-2a1 1 0 000-1.414l-2-2z"];
  var hurricane$1 = ["M3.5 12c-.86 0-2.5-.5-3.5-1 1 3.5 4.506 4 7 4a7 7 0 007-7l-.006-.004a5.974 5.974 0 00-1.29-3.988c.896.066 2.37.53 3.296.992-1-3.5-4.506-4-7-4a6.998 6.998 0 00-6.14 3.635 5.972 5.972 0 00-.859 3.226L2 8l.006.005a5.98 5.98 0 001.771 3.99A7.469 7.469 0 013.5 12zM8 6a2 2 0 100 4 2 2 0 000-4z", "M0 0h16v16H0z"];
  var idNumber$1 = ["M2 5v7h12V5H2zm0-2h12c1.1 0 2 .9 2 2v7c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z", "M7.9 10.48c-.14-.33-.84-.55-1.3-.75-.46-.2-.4-.33-.42-.5v-.07c.16-.14.29-.33.37-.56 0 0 0-.01.01-.02.02-.05.03-.1.05-.15.1-.01.16-.13.19-.23.03-.04.07-.15.06-.27-.02-.16-.08-.24-.15-.26v-.03c0-.2-.02-.48-.05-.67-.01-.05-.02-.1-.03-.16-.07-.23-.21-.44-.4-.58-.2-.15-.48-.23-.73-.23s-.53.08-.72.23c-.19.14-.33.35-.4.58-.02.05-.03.1-.03.16-.05.18-.06.47-.06.67v.03c-.07.03-.14.1-.15.26-.02.12.03.22.06.27.02.1.09.22.2.24.01.05.03.1.05.15v.01c.08.23.22.42.38.56v.07c-.02.17.03.29-.43.5-.46.2-1.16.42-1.3.75s-.09.52-.09.52H8c-.01 0 .05-.19-.1-.52zM10 6h2c.55 0 1 .45 1 1s-.45 1-1 1h-2c-.55 0-1-.45-1-1s.45-1 1-1zM10 9h2c.55 0 1 .45 1 1s-.45 1-1 1h-2c-.55 0-1-.45-1-1s.45-1 1-1z"];
  var imageRotateLeft$1 = ["M13 2h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C8.11 2.47 8 2.72 8 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H13c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3zm-5.5 9c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM10 7H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 6.33L7 12l-1 1-2-3-2 2.67V9h7v4.33z"];
  var imageRotateRight$1 = ["M5.71 5.71l2-2C7.89 3.53 8 3.28 8 3c0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H3C1.34 2 0 3.34 0 5v3c0 .55.45 1 1 1s1-.45 1-1V5c0-.55.45-1 1-1h1.59l-.3.29a1.003 1.003 0 001.42 1.42zM12.5 11c.28 0 .5-.22.5-.5s-.22-.5-.5-.5-.5.22-.5.5.22.5.5.5zM15 7H6c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 6.33L12 12l-1 1-2-3-2 2.67V9h7v4.33z"];
  var _import$1 = ["M7.29 11.71c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L9 8.59V1c0-.55-.45-1-1-1S7 .45 7 1v7.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l4 4zM15 11c-.55 0-1 .45-1 1v2H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"];
  var inbox$1 = ["M13.91 2.6c-.16-.36-.51-.61-.92-.61h-10c-.41 0-.77.25-.92.61L-.01 7.45v5.54c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7.45L13.91 2.6zm-1.92 5.39c-.55 0-1 .45-1 1v1h-6v-1c0-.55-.45-1-1-1H1.94l1.71-4h8.68l1.71 4h-2.05z"];
  var inboxFiltered$1 = ["M6.432 2c.094.14.202.273.324.394L8.42 4H3.66L1.95 8H4c.55 0 1 .45 1 1v1h6.557c.693 0 1.363-.262 1.837-.736l.103-.102.85-1.14a2.564 2.564 0 00.623-1.682V5.058L16 7.46V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h3.432zm9.048-2c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V3.71L8.17.98A.566.566 0 018 .57c0-.31.26-.57.57-.57h6.91z"];
  var inboxGeo$1 = ["M6.341 2A5.99 5.99 0 006 4H3.66L1.95 8H4c.55 0 1 .45 1 1v1h7a5.978 5.978 0 004-1.528V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h3.341zm3.679 2.145c0-.125.075-.23.205-.225h.345l.79.8c.005 0 0 .005 0 .005v.295c0 .13-.085.23-.215.23h-.07v.15c0 .13-.09.2-.215.2v.535c0 .125-.12.225-.245.225s-.245-.1-.245-.225V5.25h-.145c-.125 0-.205-.1-.205-.23v-.875zm2.235-2.195c-.03 0-.055-.005-.06-.035 0-.03.03-.035.06-.035h.11c.035 0 .06.005.06.035 0 .03-.03.035-.06.035h-.11zm-1.165-.025a.094.094 0 01-.13 0l-.25-.25a.094.094 0 010-.13.094.094 0 01.13 0l.25.25a.094.094 0 010 .13zm1.53.445c-.035 0-.07-.025-.07-.06v-.155c0-.03.035-.06.07-.06s.07.025.07.06v.155c0 .03-.035.06-.07.06zM12 0c2.21 0 4 1.79 4 4s-1.79 4-4 4-4-1.79-4-4 1.79-4 4-4zm0 7c1.655 0 3-1.345 3-3 0-.195-.02-.39-.06-.575h-.21c-.125 0-.225-.07-.23-.21h-.215c.075.07.155.14.155.23V3.9c0 .06-.04.115-.075.155h-.015l-.01.005-.015.01-.445.43v.815c0 .13-.07.22-.2.22h-.36c-.125 0-.21-.09-.21-.22v-.84a.627.627 0 00-.36-.345h-.45c-.13 0-.245-.095-.245-.225v-.46c0-.125.115-.23.245-.23l.13-.005.21-.215c.09-.09.24-.09.33 0l.22.225h.47c.105 0 .155-.105.225-.21v-.075h-.205a.106.106 0 01-.105-.105.11.11 0 01.105-.105h.18l.025.005v-.12s-.03-.025-.04-.025h-.2l-.045.05a.235.235 0 01-.33.005l-.045-.06h-.115l.16.175c.015.015.015.06 0 .075-.02.015-.045.02-.06.005l-.195-.185h-.085l-.245.23-.02-.005c-.025.07-.06.055-.095.055-.085 0-.15-.045-.15-.13s.065-.14.15-.14h.115v-.125c0-.06.04-.09.1-.09h.05V2.36c0-.095.095-.2.19-.2h.19c.105 0 .18-.075.18-.185V1.94c0-.015.035.01.035-.06h-.125l-.005.01-.21.22a.085.085 0 01-.115 0 .085.085 0 010-.115l.255-.255c.02-.015.045-.015.065-.015.005 0 .005.015.005.015h.64a2.327 2.327 0 00-.355-.275 2.452 2.452 0 00-.355-.195c-.03-.015-.055-.03-.08-.04a3.025 3.025 0 00-1.735-.175c-.09.02-.175.055-.265.08-.09.03-.18.05-.265.085-.075.03-.145.07-.22.105-.115.06-.235.115-.34.185l-.005.005c-.1.065-.18.145-.27.22h.455c.06 0 .11.045.11.105s-.05.105-.11.105h-.32c0 .07-.025.04-.025.045v.24h.285l.15-.17c.09-.09.235-.105.325-.015.09.09.09.23 0 .32l-.795.79-.01.01c-.005 0-.005 0-.01.005l-.025.015h-.01a.235.235 0 01-.12.025h-.23c-.08.07-.125.1-.125.18v.06c0 .01-.02.02-.02.03l.375.39c.04.04.04.1 0 .14-.04.04-.1.04-.14 0l-.39-.385a.213.213 0 01-.055.01c-.105 0-.195-.085-.195-.185v-.235h-.055A3.1 3.1 0 009 4c0 1.655 1.345 3 3 3zm2.27-2.135c.05 0 .105.04.105.09v.285c0 .05-.055.09-.105.09-.05 0-.105-.04-.105-.09v-.285c0-.05.055-.09.105-.09zm-2.085-3.27c0 .13-.105.21-.225.21h-.25v.07c0 .075-.03.135-.105.135s-.105-.06-.105-.135V1.64c-.075-.02-.025-.025-.025-.04 0-.125.085-.215.21-.215h.27c.13 0 .23.085.23.21z"];
  var inboxSearch$1 = ["M5.639 2a5.391 5.391 0 00-.144 2H3.66L1.95 8H4c.55 0 1 .45 1 1v1h6V9c0-.088.012-.174.033-.255.12-.007.238-.019.39-.038.154-.008.252-.03.442-.077a5.34 5.34 0 00.24-.05h.05l.122-.04 1.266 1.271c.425.47 1.116.769 1.847.769.21 0 .414-.025.61-.071V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h2.639zM15.82 7.53c.1.12.17.27.18.44 0 .34-.27.61-.61.61a.57.57 0 01-.43-.18l-2.24-2.25c-.13.08-.26.16-.4.23-.02.01-.05.02-.07.03-.14.06-.27.12-.42.17h-.01c-.14.05-.29.08-.44.11-.04.01-.08.02-.11.02-.15.02-.3.04-.46.04-1.85 0-3.35-1.51-3.35-3.37S8.96.01 10.81 0c1.85 0 3.35 1.51 3.35 3.37 0 .16-.02.31-.04.47-.01.04-.01.07-.02.11-.02.15-.05.29-.1.44v.01c-.05.15-.11.28-.17.42-.01.02-.02.05-.03.07-.07.14-.14.27-.23.4l2.25 2.24zm-5.01-1.94c1.22 0 2.21-.99 2.21-2.22 0-1.23-.99-2.22-2.21-2.22S8.6 2.14 8.6 3.37c0 1.22.99 2.22 2.21 2.22z"];
  var inboxUpdate$1 = ["M8.1 2a5.023 5.023 0 000 2H3.66L1.95 8H4c.55 0 1 .45 1 1v1h6V9c0-.55.45-1 1-1h2.05c.708 0 1.352-.241 1.905-.645L16 7.46V13c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V7.46l2.08-4.85C2.23 2.25 2.59 2 3 2h5.1zM13 6a3 3 0 110-6 3 3 0 010 6z"];
  var infoSign$1 = ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM7 3h2v2H7V3zm3 10H6v-1h1V7H6V6h3v6h1v1z"];
  var inheritance$1 = ["M5 8c0 1.66 1.34 3 3 3h4.59L11.3 9.71A.965.965 0 0111 9a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42l1.3-1.29H8c-2.76 0-5-2.24-5-5H1a1 1 0 01-1-1V1a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H5zM2 2v4h4V2H2z"];
  var inheritedGroup$1 = ["M1 7c.51 0 .935.388.993.884L2 8v3c0 .51.388.935.884.993L3 12h1.59l-.3-.29a1.003 1.003 0 011.324-1.504l.096.084 2 2c.18.18.29.43.29.71 0 .233-.076.446-.206.614l-.084.096-2 2A1.003 1.003 0 014 15c0-.24.08-.458.224-.629l.076-.081.29-.29H3a2.996 2.996 0 01-2.995-2.823L0 11V8c0-.55.45-1 1-1zm5.388-7c.629 0 1.338.21 1.838.6.48.38.85.91 1.019 1.52.04.13.07.27.09.4.09.48.14 1.22.14 1.73v.07c.18.08.34.27.37.67.03.32-.09.59-.16.71-.06.28-.21.58-.48.63-.03.13-.07.26-.12.39 0 .01-.01.04-.01.04-.22.58-.55 1.08-.949 1.45v.18c.04.45-.12.77 1.059 1.3 1.179.53 2.947 1.09 3.307 1.95.37.86.22 1.36.22 1.36H9c0-.539-.21-1.045-.583-1.417l-2-2A1.997 1.997 0 005 9c-.149 0-.296-.015-.442-.045.099-.19.082-.37.101-.575 0-.05.01-.11.01-.17-.41-.35-.75-.86-.969-1.45v-.01s-.01-.01-.01-.02c-.04-.12-.09-.26-.12-.39-.28-.05-.44-.36-.5-.64-.06-.12-.19-.39-.16-.71.04-.41.21-.6.39-.68v-.06c0-.51.05-1.26.14-1.74.02-.13.05-.27.09-.4.17-.6.54-1.13 1.02-1.51C5.048.21 5.757 0 6.387 0zm4.625 2.04c.49 0 1.05.16 1.439.46.38.29.67.7.8 1.17.03.1.05.21.07.31.07.37.11.94.11 1.33v.05c.139.06.269.21.289.51.02.25-.07.45-.13.54-.05.21-.16.44-.38.48a1.711 1.711 0 01-.1.33c-.17.44-.43.83-.749 1.11v.14c.03.35-.09.59.83 1 .929.41 2.317.84 2.597 1.5.29.66.17 1.04.17 1.04H13.66v.01c-.05-.24-.14-.5-.25-.76-.36-.86-1.119-1.33-2.687-2-.14-.06-.59-.25-.6-.25-.21-.09-.36-.15-.5-.22.02-.1.02-.2.03-.31 0-.04.01-.08.01-.13-.07-.06-.13-.12-.19-.19.22-.32.4-.67.54-1.05.02-.06.02-.06.03-.1.29-.23.48-.57.59-.96.16-.33.25-.73.21-1.16-.03-.4-.16-.76-.37-1.03-.02-.53-.07-1.13-.15-1.54-.01-.06-.02-.12-.03-.19.23-.06.48-.09.72-.09z"];
  var innerJoin$1 = ["M6.6 3.3C5.3 4.4 4.5 6.1 4.5 8s.8 3.6 2.1 4.7c-.5.2-1 .3-1.6.3-2.8 0-5-2.2-5-5s2.2-5 5-5c.6 0 1.1.1 1.6.3zm-1.96 8.68C3.92 10.83 3.5 9.46 3.5 8s.42-2.83 1.14-3.98C2.6 4.2 1 5.91 1 8s1.6 3.8 3.64 3.98zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3zm.35 1.02c.73 1.15 1.14 2.52 1.14 3.98s-.42 2.83-1.14 3.98c2.04-.18 3.64-1.9 3.64-3.98s-1.6-3.8-3.64-3.98z"];
  var insert$1 = ["M5 9h2v2c0 .6.4 1 1 1s1-.4 1-1V9h2c.6 0 1-.4 1-1s-.4-1-1-1H9V5c0-.6-.4-1-1-1s-1 .4-1 1v2H5c-.6 0-1 .4-1 1s.4 1 1 1zm10-9H1C.4 0 0 .4 0 1v14c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V1c0-.6-.4-1-1-1zm-1 14H2V2h12v12z"];
  var intersection$1 = ["M10 3c-.92 0-1.76.26-2.5.69C6.76 3.26 5.92 3 5 3 2.24 3 0 5.24 0 8s2.24 5 5 5c.92 0 1.76-.26 2.5-.69.74.43 1.58.69 2.5.69 2.76 0 5-2.24 5-5s-2.24-5-5-5zm-4.1 7.85c-.29.09-.59.15-.9.15-1.66 0-3-1.34-3-3s1.34-3 3-3c.31 0 .61.06.9.15C5.33 5.96 5 6.94 5 8s.33 2.04.9 2.85zM10 11c-.31 0-.61-.06-.9-.15.57-.81.9-1.79.9-2.85s-.33-2.04-.9-2.85c.29-.09.59-.15.9-.15 1.66 0 3 1.34 3 3s-1.34 3-3 3z"];
  var ipAddress$1 = ["M5 2.66C5 4.14 8 8 8 8s3-3.86 3-5.34C10.99 1.2 9.66 0 8 0S5 1.2 5 2.66zM7 3c0-.55.45-1 1-1s1 .45 1 1-.45 1-1 1-1-.45-1-1zM10.5 10H8v5h1v-4h1v1H9v1h2v-3h-.5zM2 9h12c.55 0 1 .45 1 1v5c0 .55-.45 1-1 1H2c-.55 0-1-.45-1-1v-5c0-.55.45-1 1-1zm4 1v5h1v-5H6z"];
  var issue$1 = ["M8 16A8 8 0 118 0a8 8 0 010 16zm0-2A6 6 0 108 2a6 6 0 000 12zm1-2H7v-2h2v2zm0-3H7V4h2v5z"];
  var issueClosed$1 = ["M9.296.104a2.99 2.99 0 00-1.003.664 2.987 2.987 0 00-.75 1.25 6 6 0 106.28 4.527c.043-.039.085-.079.127-.12l1.456-1.456A8 8 0 119.296.105zm2.532 5.2a.997.997 0 01-.707-.294L9.707 3.596a1 1 0 011.414-1.414l.707.707 1.768-1.768a1 1 0 111.414 1.415L12.536 5.01a.997.997 0 01-.708.293zM9 12H7v-2h2v2zm0-3H7V4h2v5z"];
  var issueNew$1 = ["M10.568.421c-.01.04-.018.08-.026.121-.837.156-1.53.73-1.85 1.497a6 6 0 105.27 5.273 2.51 2.51 0 001.496-1.854c.04-.008.081-.016.121-.026A8 8 0 1110.568.421zM9 12H7v-2h2v2zm0-3H7V4h2v5zm1-6c0-.55.45-1 1-1h1V1c0-.55.45-1 1-1s1 .45 1 1v1h1c.55 0 1 .45 1 1s-.45 1-1 1h-1v1.005c0 .55-.45 1-1 1s-1-.45-1-1V4h-1c-.55 0-1-.45-1-1z"];
  var italic$1 = ["M9.8 4H11c.5 0 1-.4 1-1s-.4-1-1-1H7c-.5 0-1 .4-1 1s.4 1 1 1h.8l-1.6 8H5c-.5 0-1 .4-1 1s.4 1 1 1h4c.5 0 1-.4 1-1s-.4-1-1-1h-.8l1.6-8z"];
  var joinTable$1 = ["M15 5h-3V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h3v3c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-5-1v2H6V4h4zm0 6H6V7h4v3zM2 4h3v2H2V4zm0 5V7h3v2H2zm4 4v-2h4v2H6zm8 0h-3v-2h3v2zm0-3h-3V8h3v2z"];
  var key$2 = ["M11 0C8.24 0 6 2.24 6 5c0 1.02.31 1.96.83 2.75L.29 14.29a1.003 1.003 0 001.42 1.42L3 14.41l1.29 1.29c.18.19.43.3.71.3s.53-.11.71-.29l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71L6.41 11l1.83-1.83c.8.52 1.74.83 2.76.83 2.76 0 5-2.24 5-5s-2.24-5-5-5zm0 8c-.23 0-.45-.03-.66-.08-.01 0-.02-.01-.03-.01-.21-.05-.41-.12-.6-.21a3.014 3.014 0 01-1.62-2c0-.01-.01-.02-.01-.03C8.03 5.45 8 5.23 8 5c0-1.66 1.34-3 3-3s3 1.34 3 3-1.34 3-3 3z"];
  var keyBackspace$1 = ["M15 2H6c-.28 0-.53.11-.71.29l-5 5C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l5 5c.18.18.43.29.71.29h9c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-2.29 7.29a1.003 1.003 0 01-1.42 1.42L10 9.41 8.71 10.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71L8.59 8l-1.3-1.29a1.003 1.003 0 011.42-1.42L10 6.59l1.29-1.29c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L11.41 8l1.3 1.29z"];
  var keyCommand$1 = ["M12 9h-1V7h1c1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3v1H7V4c0-1.66-1.34-3-3-3S1 2.34 1 4s1.34 3 3 3h1v2H4c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3v-1h2v1c0 1.66 1.34 3 3 3s3-1.34 3-3-1.34-3-3-3zm0-6c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM4 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm0-8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm5 4H7V7h2v2zm3 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var keyControl$1 = ["M12.71 5.29l-4-4C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"];
  var keyDelete$1 = ["M15.71 7.29l-5-5A.997.997 0 0010 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h9c.28 0 .53-.11.71-.29l5-5c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zm-7 2a1.003 1.003 0 01-1.42 1.42L6 9.41 4.71 10.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71L4.59 8l-1.3-1.29a1.003 1.003 0 011.42-1.42L6 6.59 7.29 5.3c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L7.41 8l1.3 1.29z"];
  var keyEnter$1 = ["M14 2c-.55 0-1 .45-1 1v3c0 1.66-1.34 3-3 3H4.41L5.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L4.41 11H10c2.76 0 5-2.24 5-5V3c0-.55-.45-1-1-1z"];
  var keyEscape$1 = ["M2 7c.55 0 1-.45 1-1V4.41L7.29 8.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 3H6c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm7-5.9v2A5 5 0 113.1 9h-2c.49 3.39 3.38 6 6.9 6 3.87 0 7-3.13 7-7 0-3.52-2.61-6.41-6-6.9z"];
  var keyOption$1 = ["M11 4h4c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1s.45 1 1 1zm4 8h-3.43L5.86 2.49h-.02A.975.975 0 005 2H1c-.55 0-1 .45-1 1s.45 1 1 1h3.43l5.71 9.51.01-.01c.18.3.49.5.85.5h4c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var keyShift$1 = ["M13.71 7.29l-5-5C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-5 5A1.003 1.003 0 003 9h2v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V9h2a1.003 1.003 0 00.71-1.71z"];
  var keyTab$1 = ["M15 10H4.41L5.7 8.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L2 9.59V8c0-.55-.45-1-1-1s-1 .45-1 1v6c0 .55.45 1 1 1s1-.45 1-1v-1.59l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 12H15c.55 0 1-.45 1-1s-.45-1-1-1zm0-9c-.55 0-1 .45-1 1v1.59L11.71 1.3A.965.965 0 0011 1a1.003 1.003 0 00-.71 1.71L11.59 4H1c-.55 0-1 .45-1 1s.45 1 1 1h10.59L10.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L14 6.41V8c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"];
  var knownVehicle$1 = ["M15 3a.997.997 0 00-.707.293L12 5.586l-1.293-1.293a1 1 0 10-1.414 1.414l2 2a.997.997 0 001.414 0l3-3A1 1 0 0015 3zm-.879 6.121l-.007-.007c-.313.309-.69.552-1.114.702V10h-.998H12h-1v-.184c-.424-.15-.8-.395-1.112-.704l-.01.01-2-2 .012-.012A2.978 2.978 0 017.184 6H3c-.176 0-.06-.824 0-1l.73-1.63C3.79 3.192 3.823 3 4 3H7.78C8.328 2.39 9.115 2 10 2c.768 0 1.461.293 1.987.77l.844-.844c-.238-.244-.524-.442-.794-.524C12.037 1.402 10.72 1 8 1c-2.72 0-4.037.402-4.037.402-.508.155-1.078.711-1.268 1.237l-.763 2.117H.88c-.484 0-.88.423-.88.939s.396.939.88.939h.375L1 7c-.034.685 0 1.436 0 2v5c0 .657.384 1 1 1s1-.343 1-1v-1h10v1c0 .657.384 1 1 1s1-.343 1-1V9l-.003-.754-.876.875zM5.001 10H3V8h2v2z"];
  var labTest$1 = ["M11 1a1 1 0 010 2v3l3 7v1.25a.75.75 0 01-.75.75H2.75a.75.75 0 01-.75-.75V13l3-7V3a1 1 0 110-2h6zM9 3H7v3l-1.714 4h5.428L9 6V3z"];
  var label$1 = ["M11 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7l-5-5zm3 10H2V4h8v2H3v1h7v1h4v4zm-3-5V4l3 3h-3zm-8 3h10V9H3v1z"];
  var layer$1 = ["M16 8c0-.37-.21-.68-.51-.85l.01-.01-7-4-.01.01C8.34 3.06 8.18 3 8 3s-.34.06-.49.15l-.01-.02-7 4 .01.01C.21 7.32 0 7.63 0 8s.21.68.51.85l-.01.01 7 4 .01-.01c.15.09.31.15.49.15s.34-.06.49-.15l.01.01 7-4-.01-.01c.3-.17.51-.48.51-.85z"];
  var layerOutline$1 = ["M7.504 3.132l-7 4a1 1 0 000 1.736l7 4a1 1 0 00.992 0l7-4a1 1 0 000-1.736l-7-4a1 1 0 00-.992 0zM8 5.152L12.983 8 8 10.847 3.016 8 8 5.152z"];
  var layers$1 = ["M.55 4.89l7 3c.14.07.29.11.45.11.16 0 .31-.04.45-.11l7-3a.998.998 0 00-.06-1.81L8.4.08a1.006 1.006 0 00-.79 0l-6.99 3a.992.992 0 00-.07 1.81zM15 11c-.16 0-.31.04-.45.11L8 14l-6.55-2.9c-.14-.06-.29-.1-.45-.1-.55 0-1 .45-1 1 0 .39.23.73.55.89l7 3c.14.07.29.11.45.11.16 0 .31-.04.45-.11l7-3c.32-.16.55-.5.55-.89 0-.55-.45-1-1-1zm0-4c-.16 0-.31.04-.45.11L8 10 1.45 7.11A.997.997 0 001 7c-.55 0-1 .45-1 1 0 .39.23.73.55.89l7 3c.14.07.29.11.45.11.16 0 .31-.04.45-.11l7-3c.32-.16.55-.5.55-.89 0-.55-.45-1-1-1z"];
  var layout$1 = ["M14 4c-1.1 0-2 .9-2 2 0 .47.17.9.44 1.24l-.68.91A1.996 1.996 0 009.07 9.5H7.93C7.71 8.64 6.93 8 6 8c-.47 0-.9.17-1.24.44l-.91-.68c.1-.23.15-.49.15-.76 0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .37.11.71.28 1.01L3.01 5.28C2.71 5.11 2.37 5 2 5 .9 5 0 5.9 0 7s.9 2 2 2c.47 0 .9-.17 1.24-.44l.91.68c-.1.23-.15.49-.15.76 0 .37.11.71.28 1.01l-1.27 1.27C2.71 12.11 2.37 12 2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.37-.11-.71-.28-1.01l1.27-1.27c.3.17.64.28 1.01.28.93 0 1.71-.64 1.93-1.5h1.14c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2 0-.47-.17-.9-.44-1.24l.68-.91c.23.1.49.15.76.15 1.1 0 2-.9 2-2s-.9-2-2-2z"];
  var layoutAuto$1 = ["M14 9.5c-.56 0-1.06.23-1.42.59L8.99 8l3.59-2.09A2.002 2.002 0 0016 4.5c0-1.1-.9-2-2-2s-2 .9-2 2c0 .19.03.37.08.54L8.5 7.13v-3.2c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v3.2L3.92 5.04c.05-.17.08-.35.08-.54 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.56 0 1.06-.23 1.42-.59L7.01 8l-3.59 2.09A2.002 2.002 0 000 11.5c0 1.1.9 2 2 2s2-.9 2-2c0-.19-.03-.37-.08-.54L7.5 8.87v3.2c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-3.2l3.58 2.09c-.05.17-.08.35-.08.54 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"];
  var layoutBalloon$1 = ["M14 11c-.2 0-.38.04-.56.09L12.42 9.4c.36-.36.58-.85.58-1.4 0-.55-.22-1.04-.58-1.4l1.01-1.69c.19.05.37.09.57.09 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .55.22 1.04.58 1.4l-1.01 1.69C11.38 6.04 11.2 6 11 6c-.93 0-1.71.64-1.93 1.5H6.93C6.71 6.64 5.93 6 5 6c-.2 0-.38.04-.56.09L3.42 4.4C3.78 4.04 4 3.55 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.2 0 .38-.04.56-.09L3.58 6.6C3.22 6.96 3 7.45 3 8c0 .55.22 1.04.58 1.4l-1.01 1.69C2.38 11.04 2.2 11 2 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.55-.22-1.04-.58-1.4l1.01-1.69c.19.05.37.09.57.09.93 0 1.71-.64 1.93-1.5h2.14c.22.86 1 1.5 1.93 1.5.2 0 .38-.04.56-.09l1.01 1.69c-.35.36-.57.85-.57 1.4 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"];
  var layoutCircle$1 = ["M14.16 6.02c-.12-.36-.26-.7-.43-1.03.17-.29.27-.63.27-.99 0-1.1-.9-2-2-2-.36 0-.7.1-.99.27-.33-.17-.67-.31-1.03-.43A1.987 1.987 0 008 0C6.95 0 6.1.81 6.02 1.84c-.36.12-.7.26-1.03.43C4.7 2.1 4.36 2 4 2c-1.1 0-2 .9-2 2 0 .36.1.7.27.99-.17.33-.31.67-.43 1.03C.81 6.1 0 6.95 0 8c0 1.05.81 1.9 1.84 1.98.12.36.26.7.43 1.03-.17.29-.27.63-.27.99 0 1.1.9 2 2 2 .36 0 .7-.1.99-.27.33.17.67.32 1.03.43C6.1 15.19 6.95 16 8 16c1.05 0 1.9-.81 1.98-1.84.36-.12.7-.26 1.03-.43.29.17.63.27.99.27 1.1 0 2-.9 2-2 0-.36-.1-.7-.27-.99.17-.33.31-.67.43-1.03C15.19 9.9 16 9.05 16 8c0-1.05-.81-1.9-1.84-1.98zm-.99 3.79c-.05.16-.11.31-.17.46-.3-.17-.64-.27-1-.27-1.1 0-2 .9-2 2 0 .36.1.7.27 1-.15.07-.3.12-.46.17C9.5 12.48 8.81 12 8 12s-1.5.48-1.81 1.17c-.16-.06-.32-.11-.46-.17.17-.3.27-.64.27-1 0-1.1-.9-2-2-2-.36 0-.7.1-1 .27-.07-.15-.12-.3-.17-.46C3.52 9.5 4 8.81 4 8s-.48-1.5-1.17-1.81c.06-.16.11-.32.17-.46.3.17.64.27 1 .27 1.1 0 2-.9 2-2 0-.36-.1-.7-.27-1 .15-.07.3-.12.46-.17C6.5 3.52 7.19 4 8 4s1.5-.48 1.81-1.17c.16.06.32.11.46.17-.17.3-.27.64-.27 1 0 1.1.9 2 2 2 .36 0 .7-.1 1-.27.07.15.12.3.17.46C12.48 6.5 12 7.19 12 8s.48 1.5 1.17 1.81z"];
  var layoutGrid$1 = ["M2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 0C6.9 0 6 .9 6 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var layoutGroupBy$1 = ["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 5c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-7c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 1C.9 1 0 1.9 0 3s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm5 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var layoutHierarchy$1 = ["M14.5 12.07V9.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2-.93 0-1.71.64-1.93 1.5H9.93c-.18-.7-.73-1.25-1.43-1.43V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v2.14c-.7.18-1.25.73-1.43 1.43H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8c0 .93.64 1.71 1.5 1.93v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93V9.93c.7-.18 1.25-.73 1.43-1.43h2.14c.18.7.73 1.25 1.43 1.43v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93V9.93c.7-.18 1.25-.73 1.43-1.43h2.14c.18.7.73 1.25 1.43 1.43v2.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93z"];
  var layoutLinear$1 = ["M14 6c-.93 0-1.71.64-1.93 1.5H9.93C9.71 6.64 8.93 6 8 6s-1.71.64-1.93 1.5H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.93 0 1.71-.64 1.93-1.5h2.13C6.29 9.36 7.07 10 8 10s1.71-.64 1.93-1.5h2.13c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2C16 6.9 15.1 6 14 6z"];
  var layoutSkewGrid$1 = ["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12-2c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6-3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var layoutSortedClusters$1 = ["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM8 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var learning$1 = ["M8.441 1.104a.985.985 0 00-.882 0L.365 5c-.487.253-.487.747 0 1L7.56 9.896a.985.985 0 00.882 0L15.635 6c.487-.253.487-.747 0-1L8.44 1.104z", "M14 5.5l.016 4.514c.002.548.447.99.994.99a.99.99 0 00.99-.99V5.5h-2zM3.371 9.047l4.387 2.432a.5.5 0 00.485 0l4.39-2.432a.25.25 0 01.371.218v2.955a.25.25 0 01-.134.222l-4.635 2.436a.5.5 0 01-.466 0l-4.635-2.436A.25.25 0 013 12.22V9.265a.25.25 0 01.371-.218z"];
  var leftJoin$1 = ["M6.6 3.3C6.1 3.1 5.6 3 5 3 2.2 3 0 5.2 0 8s2.2 5 5 5c.6 0 1.1-.1 1.6-.3C5.3 11.6 4.5 9.9 4.5 8s.8-3.6 2.1-4.7zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3zm.35 1.02c.73 1.15 1.14 2.52 1.14 3.98s-.42 2.83-1.14 3.98c2.04-.18 3.64-1.9 3.64-3.98s-1.6-3.8-3.64-3.98z"];
  var lessThan$1 = ["M13.287 5.958a1 1 0 00-.574-1.916l-10 3c-.95.285-.95 1.631 0 1.916l10 3a1 1 0 00.574-1.916L6.48 8l6.807-2.042z"];
  var lessThanOrEqualTo$1 = ["M13.287 3.958a1 1 0 00-.575-1.916l-10 3c-.95.285-.95 1.63 0 1.916l10 3a1 1 0 00.575-1.916L6.48 6l6.807-2.042zM13 12H3a1 1 0 000 2h10a1 1 0 000-2z"];
  var lifesaver$1 = ["M9.405 11.746C8.968 11.91 8.495 12 8 12c-.494 0-.968-.09-1.405-.254l-.702 1.873C6.548 13.865 7.258 14 8 14c.742 0 1.452-.135 2.107-.38l-.702-1.874zm2.341-2.341l1.873.702C13.865 9.452 14 8.742 14 8c0-.742-.135-1.452-.38-2.107l-1.874.702c.164.437.254.91.254 1.405 0 .494-.09.968-.254 1.405zM9.405 4.254l.702-1.873A5.987 5.987 0 008 2c-.742 0-1.452.135-2.107.38l.702 1.874C7.032 4.09 7.505 4 8 4c.494 0 .968.09 1.405.254zM4.254 6.595L2.38 5.893A5.987 5.987 0 002 8c0 .742.135 1.452.38 2.107l1.874-.702A3.991 3.991 0 014 8c0-.494.09-.968.254-1.405zM8 16A8 8 0 118 0a8 8 0 010 16zm0-6a2 2 0 100-4 2 2 0 000 4z"];
  var lightbulb$1 = ["M9.01 14h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.44-1-1-1zm1-3h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.44-1-1-1zm-2-11C5.26 0 3.03 1.95 3.03 4.35c0 2.37 1.63 2.64 1.94 5.22 0 .24.22.44.5.44h5.09c.28 0 .5-.19.5-.44C11.37 6.99 13 6.72 13 4.35 13 1.95 10.77 0 8.01 0z"];
  var lightning$1 = ["M7 9H5a1 1 0 01-1-1L4.89.876A1 1 0 015.884 0h4.27a.847.847 0 01.793 1.144L9.125 6h2.05a.825.825 0 01.754 1.16L8.16 15.64A.606.606 0 017 15.394V9z"];
  var link$1 = ["M4.99 11.99c.28 0 .53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42l-6 6a1.003 1.003 0 00.71 1.71zm3.85-2.02L6.4 12.41l-1 1-.01-.01c-.36.36-.85.6-1.4.6-1.1 0-2-.9-2-2 0-.55.24-1.04.6-1.4l-.01-.01 1-1 2.44-2.44c-.33-.1-.67-.16-1.03-.16-1.1 0-2.09.46-2.81 1.19l-.02-.02-1 1 .02.02c-.73.72-1.19 1.71-1.19 2.81 0 2.21 1.79 4 4 4 1.1 0 2.09-.46 2.81-1.19l.02.02 1-1-.02-.02c.73-.72 1.19-1.71 1.19-2.81 0-.35-.06-.69-.15-1.02zm7.15-5.98c0-2.21-1.79-4-4-4-1.1 0-2.09.46-2.81 1.19l-.02-.02-1 1 .02.02c-.72.72-1.19 1.71-1.19 2.81 0 .36.06.69.15 1.02l2.44-2.44 1-1 .01.01c.36-.36.85-.6 1.4-.6 1.1 0 2 .9 2 2 0 .55-.24 1.04-.6 1.4l.01.01-1 1-2.43 2.45c.33.09.67.15 1.02.15 1.1 0 2.09-.46 2.81-1.19l.02.02 1-1-.02-.02a3.92 3.92 0 001.19-2.81z"];
  var list$1 = ["M1 3h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 10H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var listColumns$1 = ["M6 1c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1h5zm9-12c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5zm0 4c.55 0 1 .45 1 1s-.45 1-1 1h-5c-.55 0-1-.45-1-1s.45-1 1-1h5z"];
  var listDetailView$1 = ["M6 9H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm9-12h-5c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM6 5H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var locate$1 = ["M15 7h-.09A6.98 6.98 0 009 1.1V1c0-.55-.45-1-1-1S7 .45 7 1v.09A6.98 6.98 0 001.1 7H1c-.55 0-1 .45-1 1s.45 1 1 1h.1A6.969 6.969 0 007 14.91V15c0 .55.45 1 1 1s1-.45 1-1v-.09A6.98 6.98 0 0014.9 9h.1c.55 0 1-.45 1-1s-.45-1-1-1zm-6.02 5.9c-.05-.5-.46-.9-.98-.9s-.93.4-.98.9A5.017 5.017 0 013.1 8.98c.5-.05.9-.46.9-.98s-.4-.93-.9-.98A5.017 5.017 0 017.02 3.1c.05.5.46.9.98.9s.93-.4.98-.9c1.97.39 3.52 1.95 3.92 3.92-.5.05-.9.46-.9.98s.4.93.9.98a5.017 5.017 0 01-3.92 3.92zM8 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var lock$1 = ["M13.96 7H12V3.95C12 1.77 10.21 0 8 0S4 1.77 4 3.95V7H1.96c-.55 0-.96.35-.96.9v6.91c0 .54.41 1.19.96 1.19h12c.55 0 1.04-.65 1.04-1.19V7.9c0-.55-.49-.9-1.04-.9zM6 7V3.95c0-1.09.9-1.97 2-1.97s2 .88 2 1.97V7H6z"];
  var logIn$1 = ["M11 8c0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L7.59 7H1c-.55 0-1 .45-1 1s.45 1 1 1h6.59L6.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71zm4-8H9c-.55 0-1 .45-1 1s.45 1 1 1h5v12H9c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var logOut$1 = ["M7 14H2V2h5c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm8.71-6.71l-3-3a1.003 1.003 0 00-1.42 1.42L12.59 7H6c-.55 0-1 .45-1 1s.45 1 1 1h6.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var manual$1 = ["M15.99 1.13c-.02-.41-.33-.77-.78-.87C12.26-.36 9.84.13 8 1.7 6.16.13 3.74-.36.78.26.33.35.03.72.01 1.13H0v12c0 .08 0 .17.02.26.12.51.65.82 1.19.71 2.63-.55 4.59-.04 6.01 1.57.02.03.06.04.08.06.02.02.03.04.05.06.04.03.09.04.13.07.05.03.09.05.14.07.11.04.23.07.35.07h.04c.12 0 .24-.03.35-.07.05-.02.09-.05.14-.07.04-.02.09-.04.13-.07.02-.02.03-.04.05-.06.03-.02.06-.03.08-.06 1.42-1.6 3.39-2.12 6.01-1.57.54.11 1.07-.21 1.19-.71.04-.09.04-.18.04-.26l-.01-12zM7 12.99c-1.4-.83-3.07-1.14-5-.93V1.96c2.11-.28 3.75.2 5 1.46v9.57zm7-.92c-1.93-.21-3.6.1-5 .93V3.42c1.25-1.26 2.89-1.74 5-1.46v10.11z"];
  var manuallyEnteredData$1 = ["M1 8h3.76l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm14.49-4.01c.31-.32.51-.76.51-1.24C16 1.78 15.22 1 14.25 1c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.45-1.43zM1 4h7.76l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm0 6c-.55 0-1 .45-1 1 0 .48.35.86.8.96L2.76 10H1zm9.95-6.43l-6.69 6.69 2.47 2.47 6.69-6.69-2.47-2.47zm4.25 2.47L13.24 8H15c.55 0 1-.45 1-1 0-.48-.35-.86-.8-.96zM2 15l3.86-1.39-2.46-2.44L2 15zm13-5h-3.76l-2 2H15c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var manyToMany$1 = ["M3 3a1 1 0 100 2 1 1 0 000-2zm3 1c0 .047-.001.094-.003.14.255.081.538.209.832.41.406.28.8.676 1.171 1.225.37-.549.765-.945 1.171-1.224a3.14 3.14 0 01.832-.411 3 3 0 11.77 1.87 1.038 1.038 0 00-.47.19c-.291.2-.752.672-1.227 1.8.475 1.128.936 1.6 1.227 1.8.183.126.336.173.47.19a3 3 0 11-.77 1.87 3.141 3.141 0 01-.832-.41c-.406-.28-.8-.676-1.171-1.225-.37.549-.765.945-1.171 1.224-.294.202-.577.33-.832.411a3 3 0 11-.77-1.87c.134-.017.287-.064.47-.19.291-.2.752-.672 1.227-1.8-.475-1.128-.936-1.6-1.227-1.8a1.038 1.038 0 00-.47-.19A3 3 0 116 4zm6 0a1 1 0 112 0 1 1 0 01-2 0zm-9 7a1 1 0 100 2 1 1 0 000-2zm9 1a1 1 0 112 0 1 1 0 01-2 0z"];
  var manyToOne$1 = ["M3 2a1 1 0 100 2 1 1 0 000-2zm0-2c1.385 0 2.551.94 2.896 2.215.168.044.34.096.51.158 1.076.394 2.237 1.242 2.575 2.93.161.809.664 1.211 1.293 1.443a3 3 0 110 2.508c-.629.232-1.132.634-1.293 1.442-.338 1.69-1.499 2.537-2.575 2.93a5.436 5.436 0 01-.51.159A3.001 3.001 0 010 13a3 3 0 015.726-1.254c.629-.232 1.132-.634 1.293-1.442.216-1.076.765-1.81 1.413-2.304-.648-.493-1.197-1.228-1.413-2.304-.161-.808-.664-1.21-1.293-1.442A3 3 0 113 0zm1 13a1 1 0 10-2 0 1 1 0 002 0zm8-5a1 1 0 102 0 1 1 0 00-2 0z"];
  var map$1 = ["M15.55 3.17l-4.49-3A.975.975 0 009.99.15L5.53 2.82 1.56.17A1.003 1.003 0 000 1v11c0 .35.18.65.45.83l4.49 3a.975.975 0 001.07.02l4.46-2.67 3.97 2.65A1.003 1.003 0 0016 15V4c0-.35-.18-.65-.45-.83zM5 13.46l-3-2v-8.6l2.94 1.96c.02.02.04.03.06.04v8.6zm5-2.32s-.01 0-.01.01L6 13.53V4.86s.01 0 .01-.01L10 2.47v8.67zm4 1.99l-2.94-1.96c-.02-.01-.04-.02-.05-.03v-8.6l3 2v8.59z"];
  var mapCreate$1 = ["M14 6.82v6.32l-2.94-1.96c-.02-.01-.04-.02-.05-.03V6.22c-.08-.07-.15-.16-.22-.24-.28-.02-.54-.08-.79-.16v5.32s-.01 0-.01.01L6 13.53V4.86s.01 0 .01-.01l2.05-1.23C8.02 3.42 8 3.21 8 3c0-.98.47-1.84 1.2-2.39l-3.67 2.2L1.56.17A1.003 1.003 0 000 1v11c0 .35.18.65.45.83l4.49 3a.975.975 0 001.07.02l4.46-2.67 3.97 2.65A1.003 1.003 0 0016 15V5.82c-.25.09-.52.14-.8.16-.33.36-.73.67-1.2.84zm-9 6.64l-3-2v-8.6l2.94 1.96c.02.02.04.03.06.04v8.6zM11 4h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var mapMarker$1 = ["M8.46 0C5.42 0 2.95 2.39 2.95 5.33 2.95 8.28 8.46 16 8.46 16s5.51-7.72 5.51-10.67C13.96 2.39 11.5 0 8.46 0zm0 8a2.5 2.5 0 010-5 2.5 2.5 0 010 5z"];
  var maximize$1 = ["M5.99 8.99c-.28 0-.53.11-.71.29l-3.29 3.29v-1.59c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.41L6.7 10.7a1.003 1.003 0 00-.71-1.71zm9-9h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59l-3.3 3.3a.99.99 0 00-.29.7 1.003 1.003 0 001.71.71l3.29-3.29V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z"];
  var media$1 = ["M11.99 6.99c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm3-5h-14c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-10c0-.55-.45-1-1-1zm-1 9l-5-3-1 2-3-4-3 5v-7h12v7z"];
  var menu$1 = ["M1 4h14c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 8H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm0-5H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var menuClosed$1 = ["M14.99 6.99h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm-12-2c-.28 0-.53.11-.71.29l-2 2a1.014 1.014 0 000 1.42l2 2a1.003 1.003 0 001.71-.71v-4c0-.55-.45-1-1-1zm3-1h9c.55 0 1-.45 1-1s-.45-1-1-1h-9c-.55 0-1 .45-1 1s.45 1 1 1zm9 8h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var menuOpen$1 = ["M9.99 11.99h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm5.71 5.3l-2-2a1.003 1.003 0 00-1.71.71v4a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71z"];
  var mergeColumns$1 = ["M5.71 5.29a1.003 1.003 0 00-1.42 1.42l.3.29H2V2h3v1.51c.52.06.99.29 1.34.65l.66.66V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-3.82l-.66.66c-.35.35-.82.59-1.34.65V14H2V9h2.59l-.3.29a1.003 1.003 0 001.42 1.42l2-2C7.89 8.53 8 8.28 8 8c0-.28-.11-.53-.29-.71l-2-2zM15 0h-5c-.55 0-1 .45-1 1v3.82l.66-.66c.35-.35.82-.59 1.34-.65V2h3v5h-2.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C8.11 7.47 8 7.72 8 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H14v5h-3v-1.51c-.52-.06-.99-.29-1.34-.65L9 11.18V15c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var mergeLinks$1 = ["M8 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0 4c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm0-8c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6 3c-.93 0-1.71.64-1.93 1.5H11V3c0-1.66-1.34-3-3-3S5 1.34 5 3v4.5H3.93C3.71 6.64 2.93 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.93 0 1.71-.64 1.93-1.5H5V13c0 1.66 1.34 3 3 3s3-1.34 3-3V8.5h1.07c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2s-.9-2-2-2zm-4 7c0 1.1-.9 2-2 2s-2-.9-2-2V3c0-1.1.9-2 2-2s2 .9 2 2v10z"];
  var minimize$1 = ["M15.99.99a1.003 1.003 0 00-1.71-.71l-3.29 3.29V1.99c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H12.4l3.3-3.29c.18-.18.29-.43.29-.71zm-10 8h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.29 14.28a1.003 1.003 0 001.42 1.42L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4a1.02 1.02 0 00-1.01-1.01z"];
  var minus$1 = ["M13 7H3c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var mobilePhone$1 = ["M12 0H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM8 15c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3-3H5V3h6v9z"];
  var mobileVideo$1 = ["M15 4c-.28 0-.53.11-.71.29L12 6.59V4c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V9.41l2.29 2.29c.18.19.43.3.71.3.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"];
  var modal$1 = ["M15 1a1 1 0 011 1v12a1 1 0 01-1 1H1a1 1 0 01-1-1V2a1 1 0 011-1h14zm-1 4H2v8h12V5zm-3-3H9v2h2V2zm3 0h-2v2h2V2z"];
  var modalFilled$1 = ["M15 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm1 4H0V3h16v2zm-3-2h-2V1h2v2z"];
  var moon$1 = ["M15 11.38A7.835 7.835 0 017.85 16C3.51 16 0 12.49 0 8.15 0 4.97 1.89 2.23 4.62 1c-.45.99-.7 2.08-.7 3.23a7.85 7.85 0 007.85 7.85c1.15 0 2.24-.25 3.23-.7z"];
  var more$1 = ["M2 6.03a2 2 0 100 4 2 2 0 100-4zM14 6.03a2 2 0 100 4 2 2 0 100-4zM8 6.03a2 2 0 100 4 2 2 0 100-4z"];
  var mountain$1 = ["M16 13H3l6-9h1l2 2h1l3 7zm-2.5-3.5l-1-2.5h-1l-2-2-3 4.5L9 8l1 1 1-1 2.5 1.5zM5.94 7l-4.122 6H0l5-6h.94z"];
  var move$1 = ["M15.71 7.29l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H9V3.41l.29.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2C8.53.11 8.28 0 8 0s-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l.29-.3V7H3.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L3.41 9H7v3.59l-.29-.29A.965.965 0 006 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2a1.003 1.003 0 00-1.42-1.42l-.29.3V9h3.59l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var mugshot$1 = ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14h-.15c-.03-.09-.04-.16-.08-.25-.34-.79-2.01-1.31-3.12-1.8-1.11-.49-.96-.79-1-1.2-.01-.06-.01-.12-.01-.18.38-.34.69-.8.89-1.33 0 0 .01-.03.01-.04.04-.12.08-.24.11-.36.25-.05.4-.33.46-.59.06-.1.18-.36.15-.65-.04-.37-.19-.55-.35-.62v-.06c0-.48-.04-1.16-.13-1.61-.02-.12-.05-.25-.08-.37-.16-.55-.51-1.05-.96-1.39C9.26 3.19 8.6 3 8 3c-.59 0-1.26.19-1.73.55-.45.35-.8.84-.96 1.39-.04.13-.06.25-.08.38-.09.45-.13 1.13-.13 1.61v.06c-.18.06-.33.24-.37.62-.03.29.09.54.15.65.06.26.21.54.47.59.03.12.07.25.11.36 0 .01.01.02.01.02v.01c.21.54.53 1.01.92 1.35 0 .05-.01.11-.01.16-.04.41.08.7-1.03 1.2-1.11.49-2.77 1.01-3.12 1.8-.04.09-.05.16-.08.25H2V2h12v12z"];
  var multiSelect$1 = ["M12 3.98H4c-.55 0-1 .45-1 1v1h8v5h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm3-3H7c-.55 0-1 .45-1 1v1h8v5h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm-6 6H1c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm-1 5H2v-3h6v3z"];
  var music$1 = ["M15 0c-.07 0-.13.03-.19.04V.02l-10 2v.02C4.35 2.13 4 2.52 4 3v9.12c-.31-.07-.65-.12-1-.12-1.66 0-3 .9-3 2s1.34 2 3 2 3-.9 3-2V6.32l8-1.6v5.4c-.31-.07-.65-.12-1-.12-1.66 0-3 .9-3 2s1.34 2 3 2 3-.9 3-2V1c0-.55-.45-1-1-1z"];
  var nest$1 = ["M2 2c.55 0 1 .45 1 1v3c0 1.66 1.34 3 3 3h5.59L10.3 7.71A.965.965 0 0110 7a1.003 1.003 0 011.71-.71l3 3c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-3 3a1.003 1.003 0 01-1.42-1.42l1.3-1.29H6c-2.76 0-5-2.24-5-5V3c0-.55.45-1 1-1z"];
  var newDrawing$1 = ["M14.9 11c.6 0 1 .5 1 1 0 .257-.073.44-.22.614l-.08.086-3 3c-.2.2-.4.3-.7.3-.5 0-1-.4-1-1 0-.257.073-.44.22-.614l.08-.086 3-3c.2-.2.4-.3.7-.3zM1.3.1l6.734 2.45a3.005 3.005 0 002.095 3.322 3.005 3.005 0 003.401 2.081L13.9 9.8v.2c0 .257-.073.44-.22.614l-.08.086-3 3c-.171.171-.343.27-.577.294L9.9 14h-.2l-5-1-.1-.01c-.231-.05-.45-.26-.56-.49L4 12.4l-4-11 .3-.3 5.8 5.8c-.1.2-.2.4-.2.6 0 .8.6 1.5 1.5 1.5s1.5-.7 1.5-1.5S8.2 6 7.4 6c-.16 0-.32.064-.48.14l-.12.06L1 .4l.3-.3zM13 0c.55 0 1 .45 1 1v1h1c.55 0 1 .45 1 1s-.45 1-1 1h-1v1c0 .503-.376.922-.861.99l-.013.002A.999.999 0 0113 6l.097-.006-.027.004a1 1 0 01-.037.001L13 6c-.55 0-1-.45-1-1V4h-1a.993.993 0 01-.855-.482A1 1 0 0110 3c0-.55.45-1 1-1h1V1c0-.55.45-1 1-1z"];
  var newGridItem$1 = ["M6 0H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm5 14c0-.55-.45-1-1-1s-1 .45-1 1v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1s-.45-1-1-1zM6 9H1c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1zm9 4c-.55 0-1 .45-1 1-.55 0-1 .45-1 1s.45 1 1 1h1c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm-4-4h-1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1s1-.45 1-1c.55 0 1-.45 1-1s-.45-1-1-1zm4-9h-5c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm0 9h-1c-.55 0-1 .45-1 1s.45 1 1 1c0 .55.45 1 1 1s1-.45 1-1v-1c0-.55-.45-1-1-1z"];
  var newLayer$1 = ["M13.982 6.272l1.518.868-.01.01c.3.17.51.48.51.85s-.21.68-.51.85l.01.01-7 4-.01-.01A.94.94 0 018 13a.94.94 0 01-.49-.15l-.01.01-7-4 .01-.01A.977.977 0 010 8c0-.37.21-.68.51-.86L.5 7.13l7-4 .01.02A.94.94 0 018 3c.086 0 .168.014.246.038a2 2 0 105.736 3.234zM14 3c.55 0 1 .45 1 1s-.45 1-1 1h-1v1c0 .55-.45 1-1 1s-1-.45-1-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 1-1s1 .45 1 1v1h1z"];
  var newLayers$1 = ["M13 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5H9a1 1 0 110-2h2V1a1 1 0 012 0v2zm-3-1.983V2H9a2 2 0 100 4h1v1c0 .279.057.544.16.785l-1.71.855c-.14.07-.29.11-.45.11-.16 0-.31-.04-.45-.11l-7-3.5a.992.992 0 01.07-1.81l6.99-3a1.006 1.006 0 01.79 0l1.6.687zm.91 7.66a2 2 0 003.085-1.54l.555-.277c.14-.07.29-.11.45-.11.55 0 1 .45 1 1 0 .39-.23.73-.55.89l-7 3.5c-.14.07-.29.11-.45.11-.16 0-.31-.04-.45-.11l-7-3.5C.23 8.48 0 8.14 0 7.75c0-.55.45-1 1-1 .16 0 .31.04.45.11L8 10.13l2.91-1.453zM15 10.25c.55 0 1 .45 1 1 0 .39-.23.73-.55.89l-7 3.5c-.14.07-.29.11-.45.11-.16 0-.31-.04-.45-.11l-7-3.5c-.32-.16-.55-.5-.55-.89 0-.55.45-1 1-1 .16 0 .31.04.45.1L8 13.63l6.55-3.27c.14-.07.29-.11.45-.11z"];
  var newLink$1 = ["M15 3h-1V2c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3.5 6a2.5 2.5 0 00-2.45 2h-4.1a2.5 2.5 0 100 1h4.1a2.5 2.5 0 102.45-3z"];
  var newObject$1 = ["M8 4c0 .6.4 1 1 1h2v2c0 .6.4 1 1 1s1-.4 1-1V5h2c.6 0 1-.4 1-1s-.4-1-1-1h-2V1c0-.6-.4-1-1-1s-1 .4-1 1v2H9c-.6 0-1 .5-1 1zm6.5 2.5V7c0 1.4-1.1 2.5-2.5 2.5S9.5 8.4 9.5 7v-.5H9C7.6 6.5 6.5 5.4 6.5 4S7.6 1.5 9 1.5h.5V1c0-.3.1-.6.1-.8C9.1.1 8.6 0 8 0 3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8c0-.6-.1-1.3-.2-1.9-.4.3-.8.4-1.3.4z"];
  var newPerson$1 = ["M9.12 12.69c-1.17-.53-1.01-.85-1.05-1.29-.01-.06-.01-.12-.01-.19.4-.37.73-.87.94-1.44 0 0 .01-.03.01-.04.05-.14.09-.27.12-.4.27-.06.43-.36.49-.63.06-.11.19-.39.16-.7-.04-.41-.2-.6-.38-.68v-.07c0-.51-.05-1.25-.14-1.74-.02-.13-.05-.27-.09-.4-.17-.6-.53-1.14-1.01-1.52C7.66 3.2 6.96 3 6.33 3c-.62 0-1.33.2-1.82.59-.49.38-.85.92-1.02 1.52-.04.13-.07.26-.09.4-.09.49-.13 1.23-.13 1.74v.06c-.19.08-.35.27-.39.68-.03.31.1.59.16.7.06.28.22.59.5.64.03.14.07.27.11.4 0 .01.01.02.01.02v.01c.22.59.55 1.1.96 1.46 0 .06-.01.12-.01.17-.04.44.08.76-1.09 1.29-1.17.53-2.93 1.1-3.29 1.95-.35.87-.2 1.37-.2 1.37h12.6s.15-.5-.22-1.36c-.36-.85-2.12-1.42-3.29-1.95zM14.89 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var newPrescription$1 = ["M9.82 11.66l2.48-2.87c.12-.2.13-.37.04-.53-.11-.19-.3-.26-.52-.26h-1.29c-.27 0-.49.13-.63.34L8.44 9.9 6.95 8a.482.482 0 00-.08-.1L5.82 6.55c.57-.24 1.04-.57 1.42-1.01.49-.57.74-1.27.74-2.08 0-.51-.1-.99-.32-1.42-.21-.43-.51-.8-.89-1.11A4.1 4.1 0 005.42.24C4.91.08 4.34 0 3.72 0H.61C.26 0 0 .23 0 .56v9.89c0 .33.26.55.61.55h.8c.36 0 .61-.23.61-.56V6.99H3.3l3.73 4.74-2.71 3.48c-.12.2-.13.37-.04.53.11.19.3.26.52.26h1.27c.27 0 .51-.12.64-.34l1.69-2.15 1.66 2.14c.12.21.34.35.62.35h1.43c.2 0 .39-.08.5-.25.12-.18.09-.38-.02-.55l-2.77-3.54zM4.18 5H1.99V2.02h2.19c.62 0 1.08.13 1.38.37.29.22.44.62.44 1.08 0 .45-.15.94-.44 1.17-.31.23-.76.36-1.38.36zM15 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zM9.99 3.01c0 .02.01.04.01.06V2.95c0 .02-.01.04-.01.06z"];
  var newTextBox$1 = ["M5 6.5c0 .28.22.5.5.5H7v3.5c0 .28.22.5.5.5s.5-.22.5-.5V7h1.5c.28 0 .5-.22.5-.5S9.78 6 9.5 6h-4c-.28 0-.5.22-.5.5zM15 2h-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V4h1c.55 0 1-.45 1-1s-.45-1-1-1zm-2 5c-.55 0-1 .45-1 1v5H3V4h5c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1z"];
  var ninja$1 = ["M16 5s-2.52 2.11-4.96 1.99C11.03 4.89 10.39.23 5 0c0 0 2.11 2.54 1.96 4.99C4.86 5.01.23 5.65 0 11c0 0 2.56-2.12 5.02-1.95.02 2.11.67 6.72 5.98 6.95 0 0-2.09-2.54-1.94-4.99 2.11-.02 6.71-.68 6.94-6.01zM8 9.5c-.83 0-1.5-.67-1.5-1.5S7.17 6.5 8 6.5s1.5.67 1.5 1.5S8.83 9.5 8 9.5z"];
  var notEqualTo$1 = ["M7.58 5l.44-2.196a1 1 0 011.96.392L9.62 5H13a1 1 0 010 2H9.22l-.4 2H13a1 1 0 010 2H8.42l-.44 2.196a1 1 0 01-1.96-.392L6.38 11H3a1 1 0 010-2h3.78l.4-2H3a1 1 0 110-2h4.58z"];
  var notifications$1 = ["M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm6-5c-.55 0-1-.45-1-1V6c0-2.43-1.73-4.45-4.02-4.9 0-.04.02-.06.02-.1 0-.55-.45-1-1-1S7 .45 7 1c0 .04.02.06.02.1A4.992 4.992 0 003 6v4c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var notificationsSnooze$1 = ["M9 14c0 1.1-.9 2-2 2s-2-.9-2-2zM7 0c.404 0 .755.243.912.59L7.9.6c-.7.6-.9 1.36-.9 1.9 0 .8.267 1.433.8 1.9-.533.6-.795 1.222-.784 1.867l.004.358A2.8 2.8 0 009.82 9.4L12 9.399V10c0 .51.388.935.884.993L13 11c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V6c0-2.43 1.73-4.45 4.02-4.9L6 1c0-.55.45-1 1-1z", "M13 6.702a.632.632 0 00-.632-.632h-1.743l2.208-2.734A.75.75 0 0013 2.864v-.3A.565.565 0 0012.435 2H9.561a.561.561 0 100 1.123h1.814L9.221 5.795A1 1 0 009 6.423v.279c0 .349.283.631.632.631h2.736A.632.632 0 0013 6.702z"];
  var notificationsUpdated$1 = ["M8 16c1.1 0 2-.9 2-2H6c0 1.1.9 2 2 2zm3.399-13.667l-.413.412A2.99 2.99 0 009 1.99a3 3 0 00-3 2.99c0 .8.32 1.558.876 2.114l2.002 1.992A2.99 2.99 0 0013 9.184V10c0 .55.45 1 1 1s1 .45 1 1-.45 1-1 1H2c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V6c0-2.43 1.73-4.45 4.02-4.9 0-.04-.02-.06-.02-.1 0-.55.45-1 1-1s1 .45 1 1c0 .04-.02.06-.02.1a4.97 4.97 0 012.419 1.233zM10.29 7.67l-2-1.99a.99.99 0 01-.29-.7 1 1 0 011-.99c.27 0 .52.11.7.29l1.29 1.29 3.28-3.28c.18-.18.42-.29.7-.29.55 0 1 .44 1 .99 0 .28-.11.52-.3.7l-3.98 3.98a.99.99 0 01-1.4 0z"];
  var numberedList$1 = ["M2.76 7h1.26V0h-.94c-.04.21-.12.39-.25.54-.13.15-.29.27-.48.36-.18.09-.39.16-.62.2-.23.04-.46.06-.71.06v.9h1.74V7zm-.59 7.17c.18-.12.37-.25.58-.37a10.763 10.763 0 001.24-.83c.2-.16.37-.33.52-.51.15-.19.28-.39.37-.61.09-.22.14-.47.14-.74 0-.22-.04-.45-.12-.7-.08-.26-.21-.49-.4-.69-.18-.21-.43-.39-.72-.52-.3-.14-.68-.21-1.12-.21-.41 0-.77.07-1.08.2-.32.14-.58.32-.8.56-.22.23-.38.51-.49.84-.11.32-.16.67-.16 1.05h1.19c.01-.24.03-.47.08-.67.05-.21.11-.39.21-.54.09-.15.22-.27.38-.36.16-.09.35-.13.59-.13.26 0 .47.04.63.12.16.08.29.18.38.3.09.12.15.25.18.39s.05.27.05.4c-.01.27-.08.5-.22.71-.14.21-.32.4-.53.57-.22.18-.45.34-.71.49-.26.15-.51.31-.74.47-.5.31-.89.68-1.17 1.11-.3.41-.44.91-.45 1.48h5v-1H1.43c.05-.15.14-.29.27-.43.14-.13.29-.26.47-.38zM15.01 1.99h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.44-1-1-1zm0 9h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.44-1-1-1z"];
  var numerical$1 = ["M2.79 4.61c-.13.17-.29.3-.48.41-.18.11-.39.18-.62.23-.23.04-.46.07-.71.07v1.03h1.74V12h1.26V4h-.94c-.04.23-.12.44-.25.61zm4.37 5.31c.18-.14.37-.28.58-.42l.63-.45c.21-.16.41-.33.61-.51s.37-.38.52-.59c.15-.21.28-.45.37-.7.09-.25.13-.54.13-.85 0-.25-.04-.52-.12-.8-.07-.29-.2-.55-.39-.79a2.18 2.18 0 00-.73-.6c-.29-.15-.66-.23-1.11-.23-.41 0-.77.08-1.08.23-.31.16-.58.37-.79.64-.22.27-.38.59-.49.96-.11.37-.16.77-.16 1.2h1.19c.01-.27.03-.53.08-.77.04-.24.11-.45.21-.62.09-.18.22-.32.38-.42.16-.1.35-.15.59-.15.26 0 .47.05.63.14.15.09.28.21.37.35.09.14.15.29.18.45.03.16.05.31.05.45-.01.31-.08.58-.22.82-.14.23-.32.45-.53.65-.22.21-.46.39-.71.57-.26.18-.51.36-.75.54-.5.36-.89.78-1.17 1.27-.28.49-.43 1.06-.44 1.71h5v-1.15H6.43c.05-.17.14-.33.27-.49.13-.15.29-.29.46-.44zm8.5-1.56c-.23-.35-.54-.57-.95-.65v-.02c.34-.13.6-.34.76-.63.16-.29.24-.63.24-1.02 0-.34-.06-.64-.19-.9s-.3-.47-.51-.64c-.21-.17-.45-.3-.72-.38-.27-.09-.54-.13-.82-.13-.36 0-.68.07-.96.2-.28.13-.53.32-.72.55-.2.23-.36.51-.47.83-.11.32-.18.66-.19 1.04h1.15c-.01-.2.01-.39.06-.58.05-.19.12-.36.22-.51.1-.15.22-.27.37-.36.15-.09.32-.13.53-.13.32 0 .59.1.79.3.21.2.31.46.31.79 0 .23-.05.43-.14.59-.09.16-.21.29-.35.38-.15.09-.32.16-.51.19-.19.04-.38.05-.57.04v.93c.23-.01.45 0 .67.02.22.02.42.08.59.17.18.09.32.23.43.4.11.18.16.41.16.71 0 .44-.13.78-.39 1.02s-.58.36-.97.36c-.45 0-.79-.16-1.02-.47-.23-.31-.33-.7-.32-1.17H11c.01.4.06.77.17 1.1.11.33.26.61.47.85.21.23.46.42.77.54.31.13.67.19 1.08.19.34 0 .66-.05.96-.16.3-.11.57-.27.8-.47.23-.2.41-.45.55-.74.13-.27.2-.6.2-.97 0-.5-.11-.92-.34-1.27z"];
  var office$1 = ["M15 5h-3V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h3v-4h4v4h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM5 10H2V7h3v3zm0-5H2V2h3v3zm5 5H7V7h3v3zm0-5H7V2h3v3zm4 9h-2v-2h2v2zm0-4h-2V7h2v3z"];
  var offline$1 = ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zM6 14l1-5H4l6-7-1 5h3l-6 7z"];
  var oilField$1 = ["M15 14h-1.35l-3.34-7.51 2.46-.95 1.45 3.21c.09.2.36.3.6.23.1-.03.18-.08.24-.15.05-.08 1.23-1.56.87-4.2-.11-.79-.52-4.62-3.26-4.62-.93 0-1.68.62-1.67 1.37 0 .14.03.28.09.42l.87 1.92L.64 8.07v.01A.98.98 0 000 9c0 .55.45 1 1 1 .13 0 .25-.03.36-.07v.01l1.04-.4L3.67 14H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM4.27 8.81L7.14 7.7 5.2 12.08l-.93-3.27zM6.54 14L9 8.46 11.46 14H6.54z"];
  var oneColumn$1 = ["M11.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1zm-6 5c-.28 0-.53.11-.71.29l-2 2a1.014 1.014 0 000 1.42l2 2a1.003 1.003 0 001.71-.71v-4c0-.55-.45-1-1-1z"];
  var oneToMany$1 = ["M14 3a1 1 0 11-2 0 1 1 0 012 0zm-3.726 1.254a3 3 0 10-.17-2.039 5.467 5.467 0 00-.51.158c-1.076.394-2.237 1.242-2.575 2.93-.161.809-.664 1.211-1.293 1.443a3 3 0 100 2.508c.629.232 1.132.634 1.293 1.442.338 1.69 1.499 2.537 2.575 2.93.17.063.342.115.51.159a3.001 3.001 0 10.17-2.04c-.629-.231-1.132-.633-1.293-1.441C8.765 9.228 8.216 8.494 7.568 8c.648-.493 1.197-1.228 1.413-2.304.161-.808.664-1.21 1.293-1.442zM13 14a1 1 0 110-2 1 1 0 010 2zM4 8a1 1 0 10-2 0 1 1 0 002 0z"];
  var oneToOne$1 = ["M2 8a1 1 0 112 0 1 1 0 01-2 0zm3.83-1a3.001 3.001 0 100 2h4.34a3.001 3.001 0 100-2H5.83zM13 7a1 1 0 100 2 1 1 0 000-2z"];
  var openApplication$1 = ["M5 0h10c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1H8v-2h6V3H6v5H4V1c0-.55.45-1 1-1zm2.5 5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h2c.28 0 .5-.22.5-.5S9.78 6 9.5 6h-2c-.28 0-.5.22-.5.5s.22.5.5.5zM11 8.5c0 .28-.165.5-.375.5h-2.25C8.165 9 8 8.78 8 8.5s.165-.5.375-.5h2.25c.21 0 .375.22.375.5zM5 14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L5 12.41V14z"];
  var outdated$1 = ["M8 0c4.42 0 8 3.58 8 8 0 4.06-3.02 7.4-6.94 7.92-.02 0-.04.01-.06.01-.33.04-.66.07-1 .07-4.42 0-8-3.58-8-8 0-.55.45-1 1-1s1 .45 1 1c0 3.31 2.69 6 6 6 .71 0 1.37-.15 2-.38v.01c2.33-.82 4-3.02 4-5.63 0-3.31-2.69-6-6-6-1.78 0-3.36.78-4.46 2H5c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v1.74A7.95 7.95 0 018 0zm1 12H7v-2h2v2zm0-3H7V4h2v5z"];
  var pageLayout$1 = ["M15 .95H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-12c0-.55-.45-1-1-1zm-9 12H2v-6h4v6zm8 0H7v-6h7v6zm0-7H2v-3h12v3z"];
  var panelStats$1 = ["M10 4h3v1h-3zM10 6h3v1h-3zM10 8h3v1h-3zM10 10h3v1h-3z", "M15 1H1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zM8 12H2V3h6v9zm6 0H9V3h5v9z"];
  var panelTable$1 = ["M15 1H1c-.6 0-1 .4-1 1v11c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zM8 9H6V7h2v2zm0-3H6V4h2v2zm-6 6V3h3v9H2zm4 0v-2h2v2H6zm8 0H9v-2h5v2zm0-3H9V7h5v2zm0-3H9V4h5v2z"];
  var paperclip$1 = ["M14.68 2.31A4.54 4.54 0 0011.46.99c-1.15 0-2.31.44-3.19 1.32L.95 9.63c-.63.63-.95 1.46-.95 2.28a3.21 3.21 0 003.23 3.22c.83 0 1.66-.31 2.3-.95l7.31-7.32c.76-.77.76-1.98.01-2.73s-1.99-.76-2.75 0l-6.07 6.08c-.24.25-.24.65.01.9s.65.25.91.01l6.07-6.08c.25-.25.67-.25.91-.01.25.25.25.67 0 .92l-7.31 7.32c-.75.75-2.04.74-2.76.01-.75-.75-.73-2.02.01-2.76L9.2 3.21c1.24-1.24 3.35-1.26 4.58-.03 1.24 1.24 1.24 3.36 0 4.6l-7.12 7.13c-.24.25-.24.64.01.88.24.24.63.24.88.01v.01l7.13-7.13A4.41 4.41 0 0016 5.51c0-1.16-.44-2.32-1.32-3.2z"];
  var paragraph$1 = ["M13 1H6C3.8 1 2 2.8 2 5s1.8 4 4 4v5c0 .6.4 1 1 1s1-.5 1-1V3h2v11c0 .6.4 1 1 1s1-.5 1-1V3h1c.5 0 1-.4 1-1s-.4-1-1-1z"];
  var path$1 = ["M14.5 0h-13C.67 0 0 .67 0 1.5S.67 3 1.5 3H7v3H3.5C2.67 6 2 6.67 2 7.5S2.67 9 3.5 9H7v3H5.5c-.83 0-1.5.67-1.5 1.5S4.67 15 5.5 15h5c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5H9V9h3.5c.83 0 1.5-.67 1.5-1.5S13.33 6 12.5 6H9V3h5.5c.83 0 1.5-.67 1.5-1.5S15.33 0 14.5 0z"];
  var pathSearch$1 = ["M15 14.62l-4-2.4V9.77c-.32.09-.66.15-1 .18v2.27l-4 2.4V8.71c-.38-.31-.72-.66-1-1.06v6.97l-4-2.4V8c.55 0 1-.45 1-1s-.45-1-1-1V1.38l3.15 1.89c.08-.34.18-.66.32-.97L.76.07v.01A.496.496 0 00.5 0C.22 0 0 .22 0 .5v12c0 .18.1.33.25.42v.01l5 3v-.01c.07.05.16.08.25.08s.18-.03.25-.08v.01l4.74-2.85 4.74 2.85v-.01c.09.05.18.08.27.08.28 0 .5-.22.5-.5v-3.78c-.3.17-.63.28-1 .28v2.62zM2 5c0 .55.45 1 1 1s1-.45 1-1-.45-1-1-1-1 .45-1 1zm6-1c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm7.75-.92l-1.19-.72c.18.43.29.9.36 1.38l.08.04v3.39l1 1V3.5c0-.18-.1-.33-.25-.42zM10 2c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3.3 4.89c.44-.7.7-1.51.7-2.39C14 2.01 11.99 0 9.5 0S5 2.01 5 4.5 7.01 9 9.5 9c.88 0 1.69-.26 2.39-.7l2.41 2.41c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71l-2.41-2.4zM9.5 8C7.57 8 6 6.43 6 4.5S7.57 1 9.5 1 13 2.57 13 4.5 11.43 8 9.5 8z"];
  var pause$1 = ["M6 3H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm6 0h-2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var people$1 = ["M13.69 13.98c-.05-.24-.14-.5-.25-.76-.36-.86-1.12-1.33-2.69-2-.14-.06-.59-.25-.6-.25-.21-.09-.36-.15-.5-.22.02-.1.02-.2.03-.31 0-.04.01-.08.01-.13-.07-.06-.13-.12-.19-.19.22-.32.4-.67.54-1.05.02-.06.02-.06.03-.1.29-.23.48-.57.59-.96.16-.33.25-.73.21-1.16-.03-.4-.16-.76-.37-1.03-.02-.53-.07-1.13-.15-1.54-.01-.06-.02-.12-.03-.19.23-.06.48-.09.72-.09.49 0 1.05.16 1.44.46.38.29.67.7.8 1.17.03.1.05.21.07.31.07.37.11.94.11 1.33v.05c.14.06.27.21.29.51.02.25-.07.45-.13.54-.05.21-.16.44-.38.48-.02.1-.05.2-.09.3 0 .01-.01.03-.01.03-.17.44-.43.83-.75 1.11v.14c.03.35-.09.59.83 1 .93.41 2.32.84 2.6 1.5.29.66.17 1.04.17 1.04h-2.3zm-1.17-.38c.37.86.22 1.36.22 1.36H.06s-.14-.5.22-1.36 2.13-1.43 3.31-1.96c1.17-.54 1.05-.86 1.09-1.3 0-.05.01-.11.01-.17-.41-.35-.75-.86-.97-1.45v-.01s-.01-.01-.01-.02c-.04-.12-.09-.26-.12-.39-.28-.05-.44-.36-.5-.64-.06-.12-.19-.39-.16-.71.04-.41.21-.6.39-.68v-.06c0-.51.05-1.26.14-1.74.02-.13.05-.27.09-.4.17-.6.54-1.13 1.02-1.51.5-.39 1.21-.6 1.84-.6s1.34.21 1.84.6c.48.38.85.91 1.02 1.52.04.13.07.27.09.4.09.48.14 1.22.14 1.73v.07c.18.08.34.27.37.67.03.32-.09.59-.16.71-.06.28-.21.58-.48.63-.03.13-.07.26-.12.39 0 .01-.01.04-.01.04-.22.58-.55 1.08-.95 1.45v.18c.04.45-.12.77 1.06 1.3 1.18.53 2.95 1.09 3.31 1.95z"];
  var percentage$1 = ["M6 6V4c0-1.1-.9-2-2-2H3c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2h1c1.1 0 2-.9 2-2zM3.5 6c-.28 0-.5-.22-.5-.5v-1c0-.28.22-.5.5-.5s.5.22.5.5v1c0 .28-.22.5-.5.5zM13 8h-1c-1.1 0-2 .9-2 2v2c0 1.1.9 2 2 2h1c1.1 0 2-.9 2-2v-2c0-1.1-.9-2-2-2zm0 3.5c0 .28-.22.5-.5.5s-.5-.22-.5-.5v-1c0-.28.22-.5.5-.5s.5.22.5.5v1zM12 3a1.003 1.003 0 00-1.87-.5l-5.99 9.98c-.09.15-.14.33-.14.52a1.003 1.003 0 001.87.5l5.99-9.98c.09-.15.14-.33.14-.52z"];
  var person$1 = ["M15.68 14.32c-.46-1.05-2.68-1.75-4.16-2.4-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15A3.671 3.671 0 0010.32.72C9.68.25 8.79-.01 8-.01c-.79 0-1.68.25-2.31.73-.61.47-1.06 1.13-1.28 1.86-.05.17-.09.33-.11.5-.12.6-.17 1.51-.17 2.15v.08c-.24.09-.45.32-.5.83-.03.38.13.72.2.86.08.35.28.72.63.78.04.17.09.33.15.49 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.37 1.59-1.48.65-3.7 1.35-4.16 2.4-.46 1.05-.27 1.67-.27 1.67h15.92c-.01.01.18-.61-.28-1.66z"];
  var phone$1 = ["M15.9 12.41c-.06-.06-3.37-2-3.48-2.05a.794.794 0 00-.32-.08c-.15 0-.34.11-.57.32-.23.22-.94 1.19-1.15 1.4-.21.22-.38.32-.52.32-.07 0-.15-.02-.25-.06-.1-.04-1.16-.58-3.36-2.52-2.2-1.93-2.49-3.2-2.5-3.55 0-.14.11-.31.32-.52.22-.21.45-.41.7-.6.25-.19.49-.4.7-.62.22-.23.32-.42.32-.57 0-.11-.03-.21-.08-.32C5.66 3.46 3.66.15 3.59.08 3.44-.07 2.85 0 2.55.16.16 1.46-.03 3.2 0 3.89c.04.71.49 4.46 4.16 7.95C8.72 16.17 11.89 16 12.1 16c.69 0 2.82-.38 3.72-2.55.13-.32.25-.87.08-1.04z"];
  var pieChart$1 = ["M7 1.08c-3.37.5-5.97 3.4-5.97 6.92 0 3.87 3.13 7 6.98 7 3.52 0 6.42-2.61 6.91-6H7V1.08z", "M8 0v8h8c0-4.42-3.58-8-8-8z"];
  var pin$1 = ["M9.41.92c-.51.51-.41 1.5.15 2.56L4.34 7.54C2.8 6.48 1.45 6.05.92 6.58l3.54 3.54-3.54 4.95 4.95-3.54 3.54 3.54c.53-.53.1-1.88-.96-3.42l4.06-5.22c1.06.56 2.04.66 2.55.15L9.41.92z"];
  var pivot$1 = ["M4.57 7.02L.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4.27-4.27c-.58-.35-1.07-.84-1.41-1.42zM15 8c-.55 0-1 .45-1 1v.59l-2.57-2.57c-.34.58-.83 1.07-1.41 1.41L12.59 11H12c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-4-3c0-1.66-1.34-3-3-3S5 3.34 5 5s1.34 3 3 3 3-1.34 3-3zM8 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var pivotTable$1 = ["M2 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm0-4H1C.45 0 0 .45 0 1v1c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm11.71 4.29C13.53 4.11 13.28 4 13 4s-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l.29-.3V9c0 1.66-1.34 3-3 3H7.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H9c2.76 0 5-2.24 5-5V7.41l.29.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2zM15 0H5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var play$1 = ["M12 8c0-.35-.19-.64-.46-.82l.01-.02-6-4-.01.02A.969.969 0 005 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 6-4-.01-.02c.27-.18.46-.47.46-.82z"];
  var playbook$1 = ["M4.293.293a1 1 0 011.414 1.414L4.414 3l1.293 1.293a1 1 0 01-1.414 1.414L3 4.414 1.707 5.707A1 1 0 01.293 4.293L1.586 3 .293 1.707A1 1 0 011.707.293L3 1.586 4.293.293z", "M14.29 4.71L13 3.41V6a3 3 0 01-3 3H4a1 1 0 00-1 1v5a1 1 0 11-2 0v-5a3 3 0 013-3h6a1 1 0 001-1V3.41L9.71 4.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71l3-3c.18-.18.43-.29.71-.29.28 0 .53.11.71.29l3 3a1.003 1.003 0 01-1.42 1.42z", "M16 13a3 3 0 11-6 0 3 3 0 016 0zm-2 0a1 1 0 11-2 0 1 1 0 012 0z"];
  var plus$1 = ["M13 7H9V3c0-.55-.45-1-1-1s-1 .45-1 1v4H3c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1V9h4c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var polygonFilter$1 = ["M14 5c-.24 0-.47.05-.68.13L9.97 2.34c.01-.11.03-.22.03-.34 0-1.1-.9-2-2-2S6 .9 6 2c0 .04.01.08.01.12L2.88 4.21C2.61 4.08 2.32 4 2 4 .9 4 0 4.9 0 6c0 .74.4 1.38 1 1.72v4.55c-.6.35-1 .99-1 1.73 0 1.1.9 2 2 2 .74 0 1.38-.4 1.72-1h4.55c.35.6.98 1 1.72 1 1.1 0 2-.9 2-2 0-.37-.11-.7-.28-1L14 9c1.11-.01 2-.9 2-2s-.9-2-2-2zm-4.01 7c-.73 0-1.37.41-1.71 1H3.73c-.18-.3-.43-.55-.73-.72V7.72c.6-.34 1-.98 1-1.72 0-.04-.01-.08-.01-.12l3.13-2.09c.27.13.56.21.88.21.24 0 .47-.05.68-.13l3.35 2.79c-.01.11-.03.22-.03.34 0 .37.11.7.28 1l-2.29 4z"];
  var power$1 = ["M8 8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S7 .45 7 1v6c0 .55.45 1 1 1zm3-5.32v2.34c1.21.91 2 2.35 2 3.98 0 2.76-2.24 5-5 5s-5-2.24-5-5c0-1.63.79-3.06 2-3.98V2.68C2.64 3.81 1 6.21 1 9c0 3.87 3.13 7 7 7s7-3.13 7-7c0-2.79-1.64-5.19-4-6.32z"];
  var predictiveAnalysis$1 = ["M16 6.41c0-1.01-.49-1.94-1.29-2.49-.43-1.92-2.07-3.28-4-3.28-.46 0-.92.08-1.35.24C8.83.31 8.11 0 7.34 0c-.9 0-1.74.44-2.28 1.16-.12-.01-.24-.02-.36-.02-1.31 0-2.42.89-2.77 2.17C.78 3.72 0 4.84 0 6.13c0 .38.07.76.21 1.12C.07 7.6 0 7.98 0 8.36c0 1.11.58 2.11 1.51 2.63.54.56 1.27.87 2.03.87.49 0 .95-.12 1.37-.36a2.85 2.85 0 002.18 1.04c.52 0 1.03-.14 1.47-.42.49.39 1.07.65 1.69.73 1.04 1.15 1.84 2.63 1.84 2.64 0 0 .28.49.26.49.77 0 1.41-.16 1.32-1.04 0 .02-.73-2.31-.73-2.31.41-.21.75-.55.97-.98.9-.52 1.47-1.53 1.47-2.61 0-.24-.03-.48-.08-.71.45-.52.7-1.21.7-1.92zm-1.23 1.02l-.15-.16-.61-.67c-.27-.29-.54-.94-.58-1.39l-.1-1.01c-.05-.59-.94-.58-.91.11 0 .02.1 1.01.1 1.01.03.29.12.62.24.93-.06-.01-.12-.02-.18-.02 0 0-2.06-.1-2.05-.11-.58-.02-.71.97-.04 1l2.05.11c.42.02 1.04.3 1.29.58l.49.54.02.05c.08.21.12.44.12.66 0 .74-.41 1.41-1.07 1.75l-.16.08-.07.18c-.15.38-.48.66-.88.74l-.54.11.7 2.2c-.38-.61-.95-1.43-1.62-2.14l-.12-.13-.17-.01c-.41-.03-.8-.17-1.14-.38l1.36-1.18c.35-.31.83-.44.99-.39 0 0 .63.17.62.18.63.16.83-.74.23-.97l-.62-.18c-.55-.16-1.33.18-1.79.58l-1.53 1.33-.31.26c-.35.29-.75.44-1.2.44-.64 0-1.23-.33-1.58-.86V9.15c0-.4.17-.79.27-.85 0 0 .52-.34.51-.35.71-.53.18-1.23-.49-.89 0-.01-.52.35-.52.35-.26.15-.45.44-.58.77-.11-.11-.22-.2-.34-.28 0 0-1.53-1.01-1.53-1.02-.65-.45-1.2.51-.49.89 0-.01 1.51 1.02 1.51 1.02.37.24.62.78.62 1.09v.67c-.34.19-.63.29-.99.29-.54 0-1.05-.23-1.41-.63l-.05-.06-.07-.04c-.65-.34-1.05-1-1.05-1.73 0-.3.07-.6.2-.87l.12-.25L1.15 7c-.13-.27-.2-.56-.2-.87 0-.9.61-1.68 1.48-1.89l.31-.08.05-.34a1.926 1.926 0 012.38-1.58l.32.08.18-.31c.35-.6.99-.97 1.67-.97.44 0 .86.15 1.2.42l-.36.36v-.01l-.25.26c-.33.27-.74.42-.89.4 0 0-.67-.1-.67-.11-.67-.13-.87.86-.14 1.02.01 0 .67.11.67.11.02 0 .05 0 .07.01-.11.37-.15.77-.1 1.12 0 0 .17.99.15.99.11.52 1.06.36.93-.18 0-.01-.15-.99-.15-.99-.05-.37.12-.94.36-1.19l.39-.4c.05-.05.1-.09.15-.14l.74-.76c.4-.18.83-.27 1.27-.27 1.55 0 2.86 1.12 3.11 2.67l.04.25.21.12c.61.35.98 1 .98 1.7 0 .36-.1.7-.28 1.01z"];
  var prescription$1 = ["M10.91 8.34c.14-.21.36-.34.63-.34h1.29c.22 0 .41.07.52.26.09.16.08.33-.04.53l-2.49 2.87 2.77 3.54c.12.17.14.37.02.55-.11.17-.3.25-.5.25h-1.44a.69.69 0 01-.61-.35L9.4 13.51l-1.69 2.15c-.13.21-.36.34-.63.34H5.8c-.22 0-.41-.07-.52-.26-.09-.16-.08-.33.04-.53l2.71-3.48L4.3 6.99H3.03v3.47c0 .33-.26.56-.62.56h-.8c-.35-.01-.61-.23-.61-.56V.56c0-.33.26-.56.62-.56h3.11c.62 0 1.19.08 1.7.24.51.16.96.39 1.34.69a3.194 3.194 0 011.21 2.53c0 .81-.25 1.5-.74 2.08-.37.44-.84.77-1.42 1.01L7.88 7.9c.04.04.07.08.08.1l1.49 1.9 1.46-1.56zM5.18 5c.62 0 1.08-.13 1.39-.37.29-.23.44-.71.44-1.16s-.15-.87-.44-1.1C6.26 2.12 5.8 2 5.18 2H2.99v3h2.19z"];
  var presentation$1 = ["M15 1H9c0-.55-.45-1-1-1S7 .45 7 1H1c-.55 0-1 .45-1 1s.45 1 1 1v8c0 .55.45 1 1 1h3.59L3.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 13.41V15c0 .55.45 1 1 1s1-.45 1-1v-1.59l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L10.41 12H14c.55 0 1-.45 1-1V3c.55 0 1-.45 1-1s-.45-1-1-1zm-2 9H3V3h10v7z"];
  var print$1 = ["M12 2.02c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h8v-1zm3 2H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h1v-3h12v3h1c.55 0 1-.45 1-1v-6c0-.56-.45-1-1-1zm-1 3h-2v-1h2v1zm-3 6H5v-3H3v4c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-4h-2v3z"];
  var projects$1 = ["M14 3c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v1h12V3zm-2-3H4c-.55 0-1 .45-1 1h10c0-.55-.45-1-1-1zm3 5H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-3 6c0 .55-.45 1-1 1H5c-.55 0-1-.45-1-1V9h1v2h6V9h1v2z"];
  var properties$1 = ["M2 6C.9 6 0 6.9 0 8s.9 2 2 2 2-.9 2-2-.9-2-2-2zm4-3h9c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1zm-4 9c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm13-5H6c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zm0 6H6c-.55 0-1 .45-1 1s.45 1 1 1h9c.55 0 1-.45 1-1s-.45-1-1-1zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var property$1 = ["M3 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-.5-6.5a2.5 2.5 0 000 5 2.5 2.5 0 000-5zM7 3h8c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zm8 10H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zM3 0C1.9 0 1 .9 1 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 6H7c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"];
  var publishFunction$1 = ["M12.16 3.76c.15-.11.3-.16.47-.16.06 0 .17.02.34.06.16.04.31.06.43.06a.58.58 0 00.6-.6c0-.19-.06-.33-.17-.44-.11-.11-.28-.16-.49-.16-.19 0-.37.04-.54.13-.17.09-.39.27-.65.55-.2.21-.48.58-.87 1.11a5.22 5.22 0 00-.78-1.79l-2.05.32-.04.21c.15-.03.28-.04.39-.04.2 0 .37.08.5.25.21.26.5 1.03.88 2.33-.29.36-.49.6-.6.71-.18.19-.33.31-.45.36-.09.04-.19.07-.3.07-.09 0-.23-.04-.42-.13a.904.904 0 00-.36-.09c-.2 0-.36.06-.49.18a.59.59 0 00-.19.46c0 .18.06.32.18.43.12.11.28.16.48.16.2 0 .38-.04.55-.12.17-.08.39-.24.65-.49s.62-.65 1.07-1.19c.18.52.33.89.46 1.13.13.24.28.4.44.51.17.1.37.16.62.16.24 0 .49-.08.74-.25.33-.21.66-.58 1.01-1.09l-.21-.11c-.23.31-.41.5-.52.57a.44.44 0 01-.26.07c-.12 0-.24-.07-.36-.21-.2-.24-.46-.91-.8-2 .29-.49.54-.81.74-.96zM6.37 5.83l.68-2.53h.83l.2-.64h-.84c.24-.91.56-1.59.96-2.01.24-.27.48-.4.71-.4.05 0 .08.01.11.04s.04.06.04.1c0 .04-.03.11-.1.21-.06.1-.1.2-.1.29 0 .13.05.24.15.33.1.09.23.14.39.14.17 0 .31-.06.42-.17.12-.12.18-.27.18-.46 0-.21-.08-.39-.25-.52C9.57.07 9.3 0 8.93 0c-.59 0-1.12.16-1.59.48-.48.32-.93.85-1.36 1.59-.15.26-.29.42-.42.49s-.35.11-.64.1l-.19.65h.81L4.35 7.68c-.2.72-.33 1.16-.4 1.33-.1.24-.26.45-.46.62a.48.48 0 01-.31.1c-.03 0-.06-.01-.08-.03l-.03-.03c0-.02.03-.06.09-.11.06-.06.09-.15.09-.26 0-.13-.05-.23-.14-.32-.1-.09-.23-.13-.41-.13-.21 0-.38.05-.51.16A.52.52 0 002 9.4c0 .16.08.3.23.42.16.12.4.18.74.18.53 0 .99-.13 1.4-.39.41-.26.76-.65 1.07-1.19.3-.53.61-1.39.93-2.59zm2.34 3.46A.997.997 0 008 9c-.28 0-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l.29-.3V15c0 .55.45 1 1 1s1-.45 1-1v-2.59l.29.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2z"];
  var pulse$1 = ["M15 8h-1.46l-1.7-2.55-.02.01A.984.984 0 0011 5c-.43 0-.79.27-.93.65h-.01l-1.69 4.51-1.38-8.32h-.02A.989.989 0 006 1c-.41 0-.77.25-.92.61L2.34 8H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.41 0 .77-.25.92-.61l1.65-3.86 1.44 8.63h.02c.08.47.47.84.97.84.43 0 .79-.27.93-.65h.01l2.31-6.17.92 1.38.02-.01c.17.26.46.45.81.45h2c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var rain$1 = ["M3.5 8a2.5 2.5 0 11.608-4.926 4.002 4.002 0 017.381-1.03A3 3 0 1112 8H3.501zM3 10a1 1 0 012 0v4a1 1 0 11-2 0v-4zm7-1a1 1 0 00-1 1v5a1 1 0 102 0v-5a1 1 0 00-1-1zm2 1a1 1 0 112 0v2a1 1 0 11-2 0v-2zM7 9a1 1 0 00-1 1v2a1 1 0 102 0v-2a1 1 0 00-1-1z"];
  var random$2 = ["M11.48 4h1.11l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H11c-.32 0-.59.16-.77.38l-.01-.01L8.28 4.8l1.28 1.6L11.48 4zm2.23 6.29a1.003 1.003 0 00-1.42 1.42l.3.29h-1.11l-7.7-9.62h-.01A.996.996 0 003 2H1c-.55 0-1 .45-1 1s.45 1 1 1h1.52l7.7 9.62.01-.01c.18.23.45.39.77.39h1.59l-.29.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2zM2.52 12H1c-.55 0-1 .45-1 1s.45 1 1 1h2c.32 0 .59-.16.77-.38l.01.01 1.94-2.42L4.44 9.6 2.52 12z"];
  var record$1 = ["M8 3a5 5 0 100 10A5 5 0 108 3z"];
  var rectHeight$1 = ["M3 15V1h10v14H3zm0 1a1 1 0 01-1-1V1a1 1 0 011-1h10a1 1 0 011 1v14a1 1 0 01-1 1H3zM8.707 3.293a1 1 0 00-1.414 0l-2 2a1 1 0 001.414 1.414L8 5.414l1.293 1.293a1 1 0 001.414-1.414l-2-2zm-2 6a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L8 10.586 6.707 9.293z"];
  var rectWidth$1 = ["M1 3h14v10H1V3zM0 3a1 1 0 011-1h14a1 1 0 011 1v10a1 1 0 01-1 1H1a1 1 0 01-1-1V3zm10.707 2.293a1 1 0 00-1.414 1.414L10.586 8 9.293 9.293a1 1 0 001.414 1.414l2-2a1 1 0 000-1.414l-2-2zm-4 1.414a1 1 0 00-1.414-1.414l-2 2a1 1 0 000 1.414l2 2a1 1 0 001.414-1.414L5.414 8l1.293-1.293z"];
  var rectangle$1 = ["M1 3h14c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1zm1 2v6h12V5H2z"];
  var redo$1 = ["M12 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3.71-6.71l-3-3a1.003 1.003 0 00-1.42 1.42L12.59 4H5C2.24 4 0 6.24 0 9s2.24 5 5 5h4v-2H5c-1.66 0-3-1.34-3-3s1.34-3 3-3h7.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var refresh$1 = ["M14.99 6.99c-.55 0-1 .45-1 1 0 3.31-2.69 6-6 6-1.77 0-3.36-.78-4.46-2h1.46c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1v-1.74a7.95 7.95 0 006 2.74c4.42 0 8-3.58 8-8 0-.55-.45-1-1-1zm0-7c-.55 0-1 .45-1 1v1.74a7.95 7.95 0 00-6-2.74c-4.42 0-8 3.58-8 8 0 .55.45 1 1 1s1-.45 1-1c0-3.31 2.69-6 6-6 1.77 0 3.36.78 4.46 2h-1.46c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"];
  var regressionChart$1 = ["M13 6.5c0 .83.67 1.5 1.5 1.5S16 7.33 16 6.5 15.33 5 14.5 5 13 5.67 13 6.5zM8.5 5c.83 0 1.5-.67 1.5-1.5S9.33 2 8.5 2 7 2.67 7 3.5 7.67 5 8.5 5zM9 9.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5S11.33 8 10.5 8 9 8.67 9 9.5zM4.5 8C5.33 8 6 7.33 6 6.5S5.33 5 4.5 5 3 5.67 3 6.5 3.67 8 4.5 8zM15 12H3.26l12.03-8.59-.58-.81L2 11.67V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var remove$1 = ["M10.99 6.99h-6c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z"];
  var removeColumn$1 = ["M14 0H4c-.55 0-1 .45-1 1v3h2V2h3v12H5v-2H3v3c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14h-3V2h3v12zm-8.71-3.29a1.003 1.003 0 001.42-1.42L4.41 8 5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L3 6.59l-1.29-1.3A1.003 1.003 0 00.29 6.71L1.59 8 .29 9.29a1.003 1.003 0 001.42 1.42L3 9.41l1.29 1.3z"];
  var removeColumnLeft$1 = ["M4 9h4c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zm11-9H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 14H2V2h8v12zm4 0h-3V2h3v12z"];
  var removeColumnRight$1 = ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 14H2V2h3v12zm9 0H6V2h8v12zM8 9h4c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var removeRowBottom$1 = ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V6h12v8zm0-9H2V2h12v3zm-8 6h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var removeRowTop$1 = ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2v-3h12v3zm0-4H2V2h12v8zM6 7h4c.55 0 1-.45 1-1s-.45-1-1-1H6c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var repeat$1 = ["M10 5c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1s-1 .45-1 1v1.74A7.95 7.95 0 008 0C3.58 0 0 3.58 0 8c0 4.06 3.02 7.4 6.94 7.92.02 0 .04.01.06.01.33.04.66.07 1 .07 4.42 0 8-3.58 8-8 0-.55-.45-1-1-1s-1 .45-1 1c0 3.31-2.69 6-6 6-.71 0-1.37-.15-2-.38v.01C3.67 12.81 2 10.61 2 8c0-3.31 2.69-6 6-6 1.77 0 3.36.78 4.46 2H11c-.55 0-1 .45-1 1z"];
  var reset$2 = ["M6 5c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v1.74A7.95 7.95 0 018 0c4.42 0 8 3.58 8 8 0 4.06-3.02 7.4-6.94 7.92-.02 0-.04.01-.06.01-.33.04-.66.07-1 .07-4.42 0-8-3.58-8-8 0-.55.45-1 1-1s1 .45 1 1c0 3.31 2.69 6 6 6 .71 0 1.37-.15 2-.38v.01c2.33-.82 4-3.02 4-5.63 0-3.31-2.69-6-6-6-1.77 0-3.36.78-4.46 2H5c.55 0 1 .45 1 1z"];
  var resolve$1 = ["M6.6 3.3C6.1 3.1 5.6 3 5 3 2.2 3 0 5.2 0 8s2.2 5 5 5c.6 0 1.1-.1 1.6-.3C5.3 11.6 4.5 9.9 4.5 8s.8-3.6 2.1-4.7zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c-.6 0-1.1.1-1.6.3 1.3 1.2 2.1 2.9 2.1 4.7s-.8 3.6-2.1 4.7c.5.2 1 .3 1.6.3 2.8 0 5-2.2 5-5s-2.2-5-5-5z"];
  var rig$1 = ["M5.71 3c0 1.1.96 2 2.14 2C9.04 5 10 3.96 10 3c0-1.96-1.47-3-2.14-3H5c0 1.96 2.68 1.4.71 3zm2.5 3l.01.01s0-.01-.01-.01zm6.5 8.29L10 9.59V7c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v2.58l-4.71 4.7c-.18.19-.29.44-.29.72a1.003 1.003 0 001.71.71L6 12.42V15c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.58l3.29 3.29a1.003 1.003 0 001.42-1.42z"];
  var rightJoin$1 = ["M6.6 3.3C5.3 4.4 4.5 6.1 4.5 8s.8 3.6 2.1 4.7c-.5.2-1 .3-1.6.3-2.8 0-5-2.2-5-5s2.2-5 5-5c.6 0 1.1.1 1.6.3zm-1.96 8.68C3.92 10.83 3.5 9.46 3.5 8s.42-2.83 1.14-3.98C2.6 4.2 1 5.91 1 8s1.6 3.8 3.64 3.98zM8 4c-1.2.9-2 2.4-2 4s.8 3.1 2 4c1.2-.9 2-2.3 2-4s-.8-3.1-2-4zm3-1c2.8 0 5 2.2 5 5s-2.2 5-5 5c-.6 0-1.1-.1-1.6-.3 1.3-1.1 2.1-2.9 2.1-4.7s-.8-3.5-2.1-4.7c.5-.2 1-.3 1.6-.3z"];
  var ring$1 = ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 12c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"];
  var rocket$1 = ["M6 12C4.397 7.46 4.415 4.465 8 0c3.585 4.485 3.602 7.48 2 12H6zm3-7a1 1 0 11-2 0 1 1 0 012 0zm-7 8.022l3-1-.054-.158C4.636 10.954 4.076 9.317 4 8L3 9l-1 4.022zm9-1l3 1L13 9l-1-1c-.076 1.317-.635 2.954-.946 3.864l-.054.158zM7 13h2c0 1.5-.5 2.5-1 3-.5-.5-1-1.5-1-3z"];
  var rocketSlant$1 = ["M3.992 10c2-5 5-9 11-9 0 6-4 9-9 11l-2-2zm7.714-4.285a1 1 0 11-1.414-1.414 1 1 0 011.414 1.414zm-6.555-.218L2.992 6l-3 2L3.24 9.195c.542-1.301 1.166-2.556 1.911-3.698zM7.992 16l-1.236-3.232c1.3-.539 2.552-1.158 3.694-1.898L9.992 13l-2 3zm-4.931-4.94L5 13c-.992.991-2.186 1.154-3.001 1-.154-.815.07-1.948 1.06-2.94z"];
  var rotateDocument$1 = ["M12 2h-1.59l.29-.29c.19-.18.3-.43.3-.71A1.003 1.003 0 009.29.29l-2 2C7.11 2.47 7 2.72 7 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H12c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3zM5.71 5.29A.997.997 0 005 5H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V9c0-.28-.11-.53-.29-.71l-3-3zM7 14H2V7h2v2c0 .55.45 1 1 1h2v4z"];
  var rotatePage$1 = ["M8 6H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm-1 8H3V8h4v6zm5-12h-1.59l.29-.29c.19-.18.3-.43.3-.71A1.003 1.003 0 009.29.29l-2 2C7.11 2.47 7 2.72 7 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H12c.55 0 1 .45 1 1v3c0 .55.45 1 1 1s1-.45 1-1V5c0-1.66-1.34-3-3-3z"];
  var route$1 = ["M11.669 5.066l.099.189c.113.213.236.434.367.661.226.39.468.78.709 1.151l-.198-.004-.48-.004c-1.745.003-2.369.233-2.369.688 0 .053.226.19 1.038.436l.84.24C13.9 9.064 15 9.83 15 11.63c0 2.123-1.607 3.122-4.027 3.366-.651.065-1.266.075-2.043.05l-.958-.035H5.196l.268-.406c.336-.517.672-1.052.998-1.593h1.636l.572.023c.857.036 1.475.034 2.103-.03 1.526-.153 2.227-.59 2.227-1.375 0-.531-.402-.84-1.66-1.22l-.691-.198c-1.04-.293-1.764-.562-2.222-.946C8.8 8.366 9 7.612 9 6.997a5.03 5.03 0 00-.184-1.334c.645-.395 1.598-.562 2.853-.597zM4 3a4.007 4.007 0 014 3.997C8 9.21 4 15 4 15l-.416-.62C2.56 12.827 0 8.767 0 6.997A4.002 4.002 0 014 3zm0 2a2 2 0 10.001 4.001A2 2 0 004 5zm10-4c1.103 0 1.996.896 2 1.999C16 4.105 14 7 14 7l-.293-.44C13.15 5.707 12 3.838 12 2.999 12 1.896 12.897 1 14 1z"];
  var satellite$1 = ["M3 9c0-.6.4-1 1-1s1 .4 1 1c0 1.1.9 2 2 2 .6 0 1 .4 1 1s-.4 1-1 1c-2.2 0-4-1.8-4-4zM0 9c0-.6.4-1 1-1s1 .4 1 1c0 2.8 2.2 5 5 5 .6 0 1 .4 1 1s-.4 1-1 1c-3.9 0-7-3.1-7-7zm7 1c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1zm1.3-2.8c-.4-.4-.4-1 0-1.4l4.5-4.5c.4-.4 1-.4 1.4 0l.5.5c.4.4.4 1 0 1.4l-4.5 4.5c-.4.4-1 .4-1.4 0l-.5-.5zM5.2.3c.4-.4 1-.4 1.4 0l2.1 2.1c.4.4.4 1 0 1.4l-.9.9c-.4.4-1 .4-1.4 0L4.3 2.6c-.4-.4-.4-1 0-1.4l.9-.9zm7 7c.4-.4 1-.4 1.4 0l2.1 2.1c.4.4.4 1 0 1.4l-.9.9c-.4.4-1 .4-1.4 0l-2.1-2.1c-.4-.4-.4-1 0-1.4l.9-.9z"];
  var saved$1 = ["M6.71 9.29a1.003 1.003 0 00-1.42 1.42l2 2a.997.997 0 001.6-.27h.01l2-4h-.01c.06-.13.11-.28.11-.44 0-.55-.45-1-1-1-.39 0-.72.23-.89.56H9.1l-1.38 2.76-1.01-1.03zM9 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5L9 0zm3 14H4V2h4v4h4v8z"];
  var scatterPlot$1 = ["M15 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm-.5-7c.83 0 1.5-.67 1.5-1.5S15.33 2 14.5 2 13 2.67 13 3.5 13.67 5 14.5 5zm-3 4c.83 0 1.5-.67 1.5-1.5S12.33 6 11.5 6 10 6.67 10 7.5 10.67 9 11.5 9zm-4-2C8.33 7 9 6.33 9 5.5S8.33 4 7.5 4 6 4.67 6 5.5 6.67 7 7.5 7zm-3 4c.83 0 1.5-.67 1.5-1.5S5.33 8 4.5 8 3 8.67 3 9.5 3.67 11 4.5 11z"];
  var search$1 = ["M15.55 13.43l-2.67-2.68a6.94 6.94 0 001.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"];
  var searchAround$1 = ["M13.5 11c-.51 0-.98.15-1.38.42l-2.4-2.41c.17-.3.28-.64.28-1.01s-.11-.71-.28-1.01l2.41-2.41c.39.27.86.42 1.37.42a2.5 2.5 0 000-5A2.5 2.5 0 0011 2.5c0 .51.15.98.42 1.38l-2.41 2.4C8.71 6.11 8.37 6 8 6s-.71.11-1.01.28l-2.41-2.4c.27-.4.42-.87.42-1.38a2.5 2.5 0 00-5 0A2.5 2.5 0 002.5 5c.51 0 .98-.15 1.38-.42l2.41 2.41C6.11 7.29 6 7.63 6 8s.11.71.28 1.01l-2.41 2.41c-.39-.27-.86-.42-1.37-.42a2.5 2.5 0 000 5A2.5 2.5 0 005 13.5c0-.51-.15-.98-.42-1.38l2.41-2.41c.3.18.64.29 1.01.29s.71-.11 1.01-.28l2.41 2.41c-.27.39-.42.86-.42 1.37a2.5 2.5 0 005 0 2.5 2.5 0 00-2.5-2.5zm0-10c.83 0 1.5.67 1.5 1.5S14.33 4 13.5 4 12 3.33 12 2.5 12.67 1 13.5 1zm-11 3C1.67 4 1 3.33 1 2.5S1.67 1 2.5 1 4 1.67 4 2.5 3.33 4 2.5 4zm0 11c-.83 0-1.5-.67-1.5-1.5S1.67 12 2.5 12s1.5.67 1.5 1.5S3.33 15 2.5 15zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"];
  var searchTemplate$1 = ["M15.55 13.43l-2.67-2.67c.7-1.09 1.11-2.38 1.11-3.77 0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.41 3.77-1.11l2.67 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm2.5-6h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0-2h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm0 4h-5c-.28 0-.5.22-.5.5s.22.5.5.5h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5z"];
  var searchText$1 = ["M9 4H5c-.55 0-1 .45-1 1s.45 1 1 1h1v3c0 .55.45 1 1 1s1-.45 1-1V6h1c.55 0 1-.45 1-1s-.45-1-1-1zm6.56 9.44l-2.67-2.67C13.59 9.68 14 8.39 14 7c0-3.87-3.13-7-7-7S0 3.13 0 7s3.13 7 7 7c1.39 0 2.68-.41 3.77-1.11l2.67 2.67a1.498 1.498 0 102.12-2.12zM7 12c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"];
  var segmentedControl$1 = ["M15 4H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 6H8V6h6v4z"];
  var select$1 = ["M16 15c0-.28-.12-.52-.31-.69l.02-.02-3.12-3.12 3.41-.84-8.05-2.86c.03-.09.05-.17.05-.27V2c0-.55-.45-1-1-1H3c0-.55-.45-1-1-1S1 .45 1 1c-.55 0-1 .45-1 1s.45 1 1 1v4c0 .55.45 1 1 1h5.2c.1 0 .18-.02.27-.05L10.33 16l.85-3.41 3.12 3.12.02-.02c.16.19.4.31.68.31.04 0 .07-.02.1-.02s.06.02.1.02c.44 0 .8-.36.8-.8 0-.04-.02-.07-.02-.1s.02-.06.02-.1zM6 6H3V3h3v3z"];
  var selection$1 = ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-9C6.34 5 5 6.34 5 8s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"];
  var sendMessage$1 = ["M15.399 9.01L1.527 15.875c-.535.267-1.175.081-1.421-.427A.953.953 0 010 15V10l8-2-8-2V1c0-.528.407-1 1.004-1 .169 0 .416.04.567.116L15.403 7.07a1.084 1.084 0 01-.005 1.939z"];
  var sendTo$1 = ["M15 7.5c-.8 0-1.5-.4-2-1l-1.2 1.2c-.4.5-1.1.7-1.8.7-1.4.1-2.5-1-2.5-2.4 0-.7.3-1.3.7-1.8L9.5 3c-.6-.5-1-1.2-1-2 0-.3.1-.7.2-1H8C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8v-.7c-.3.1-.6.2-1 .2zM15 0h-4c-.6 0-1 .5-1 1s.4 1 1 1h1.6L9.3 5.3c-.2.2-.3.4-.3.7 0 .5.4 1 1 1 .3 0 .5-.1.7-.3L14 3.4V5c0 .6.4 1 1 1 .5 0 1-.4 1-1V1c0-.5-.4-1-1-1z"];
  var sendToGraph$1 = ["M6 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1zm8 .5c-.56 0-1.06.23-1.42.59l-2.13-1.24L8.99 8l3.59-2.09A2.002 2.002 0 0016 4.5c0-1.1-.9-2-2-2s-2 .9-2 2c0 .19.03.37.08.54L8.5 7.13v-3.2c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S6 .9 6 2c0 .93.64 1.71 1.5 1.93v3.2l-.88-.52-2.7-1.57c.05-.17.08-.35.08-.54 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.56 0 1.06-.23 1.42-.59l2.13 1.24 3.84 2.24 2.7 1.57c-.06.17-.09.35-.09.54 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"];
  var sendToMap$1 = ["M6 9H2c-.55 0-1 .45-1 1s.45 1 1 1h1.59L.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L5 12.41V14c0 .55.45 1 1 1s1-.45 1-1v-4c0-.55-.45-1-1-1zm9.55-5.83l-4.49-3A.975.975 0 009.99.15L5.53 2.82 1.56.17A1.003 1.003 0 000 1v6h2V2.87l2.94 1.96.06.03V7h1V4.86s.01 0 .01-.01L10 2.47v8.67s-.01 0-.01.01l-.99.58v2.33l1.47-.88 3.97 2.65A1.003 1.003 0 0016 15V4c0-.35-.18-.65-.45-.83zM14 13.13l-2.94-1.96c-.02-.01-.04-.02-.05-.03v-8.6l3 2v8.59z"];
  var seriesAdd$1 = ["M10.68 7.9c.44.54 1.07.92 1.79 1.05l-2.76 2.76c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l1.68-1.69zM15 3c.55 0 1 .45 1 1s-.45 1-1 1h-1v1c0 .55-.45 1-1 1s-1-.45-1-1V5h-1c-.55 0-1-.45-1-1s.45-1 1-1h1V2c0-.55.45-1 1-1s1 .45 1 1v1h1z"];
  var seriesConfiguration$1 = ["M9.94 9.64c.65.23 1.34.36 2.06.36.14 0 .29-.01.43-.01L9.7 12.71c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.3L5 9.41l-3 3V14h12.99c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 7.11 4.72 7 5 7c.28 0 .53.11.71.29L9 10.59l.94-.95zm4.73-6.44h.92c.22 0 .4.18.4.4v.8c0 .22-.18.4-.4.4h-.93c-.06.2-.14.38-.24.55l.66.65c.15.15.15.4 0 .55l-.54.55c-.15.15-.4.15-.55 0l-.65-.65c-.17.1-.36.18-.55.24v.91c0 .22-.18.4-.4.4h-.8c-.22 0-.4-.18-.4-.4v-.93c-.18-.06-.36-.13-.52-.22l-.68.68c-.15.16-.41.16-.57 0l-.56-.56a.417.417 0 010-.57l.68-.68c-.08-.16-.16-.33-.22-.52h-.93c-.22 0-.4-.18-.4-.4v-.8c0-.22.18-.4.4-.4h.93c.06-.2.14-.38.24-.55l-.65-.64a.392.392 0 010-.55l.54-.55a.38.38 0 01.54 0l.65.65c.18-.1.36-.18.55-.24V.4c0-.22.18-.4.4-.4h.8c.22 0 .4.18.4.4v.93c.18.06.35.14.52.22l.68-.68c.15-.16.41-.16.57 0l.57.57c.15.16.15.41 0 .57l-.68.68c.09.16.16.33.22.51zm-4.18.8c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5c-.82 0-1.5.67-1.5 1.5z"];
  var seriesDerived$1 = ["M10.66 7.92c.44.54 1.07.91 1.8 1.03L9.71 11.7c-.18.19-.43.3-.71.3s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l1.66-1.67zM12.3 5.3l.3-.3H8c-.6 0-1-.4-1-1s.4-1 1-1h4.6l-.3-.3c-.2-.2-.3-.4-.3-.7 0-.6.5-1 1-1 .3 0 .5.1.7.3l2 2c.2.2.3.4.3.7s-.1.5-.3.7l-2 2c-.2.2-.4.3-.7.3-.6 0-1-.4-1-1 0-.3.1-.5.3-.7z"];
  var seriesFiltered$1 = ["M9.29 9.3c.3.62.8 1.12 1.42 1.41l-1 1c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L5 8.41l-3 3V13h13c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1 .45 1 1v4.59l2.29-2.3C4.47 6.11 4.72 6 5 6s.53.11.71.29L9 9.59l.29-.29zM15.48 1c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V4.71L8.17 1.98A.566.566 0 018 1.57c0-.31.26-.57.57-.57h6.91z"];
  var seriesSearch$1 = ["M9.6 8.94a4.937 4.937 0 001.82.01c.1-.01.22-.04.39-.08l.23-.07c.04-.01.08-.02.11-.04l.22.22-2.7 2.72c-.18.19-.43.3-.71.3s-.53-.11-.71-.3L4.98 8.41l-2.99 3V13h12.94c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V3.99c0-.55.45-1 1-1s1 .45 1 1v4.59l2.28-2.3c.17-.18.42-.29.7-.29s.53.11.7.29l3.28 3.3.64-.64zm6.22-.41c.1.12.17.27.18.44 0 .34-.27.61-.61.61a.57.57 0 01-.43-.18l-2.24-2.25c-.13.08-.26.16-.4.23-.02.01-.05.02-.07.03-.14.06-.27.12-.42.17h-.01c-.14.05-.29.08-.44.11-.04.01-.08.02-.11.02-.15.02-.3.04-.46.04-1.85 0-3.35-1.51-3.35-3.37S8.96 1.01 10.81 1c1.85 0 3.35 1.51 3.35 3.37 0 .16-.02.31-.04.47-.01.04-.01.07-.02.11-.02.15-.05.29-.1.44v.01c-.05.15-.11.28-.17.42-.01.02-.02.05-.03.07-.07.14-.14.27-.23.4l2.25 2.24zm-5.01-1.94c1.22 0 2.21-.99 2.21-2.22 0-1.23-.99-2.22-2.21-2.22S8.6 3.14 8.6 4.37c0 1.22.99 2.22 2.21 2.22z"];
  var settings$1 = ["M3 1c0-.55-.45-1-1-1S1 .45 1 1v3h2V1zm0 4H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm12-4c0-.55-.45-1-1-1s-1 .45-1 1v2h2V1zM9 1c0-.55-.45-1-1-1S7 .45 7 1v6h2V1zM1 15c0 .55.45 1 1 1s1-.45 1-1v-5H1v5zM15 4h-2c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-2 11c0 .55.45 1 1 1s1-.45 1-1V9h-2v6zM9 8H7c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-2 7c0 .55.45 1 1 1s1-.45 1-1v-2H7v2z"];
  var shapes$1 = ["M5.92 8.139c.44-.282 1.006-.121 1.264.358l2.689 4.988c.083.155.127.33.127.51C10 14.55 9.587 15 9.077 15H3.924a.864.864 0 01-.438-.12c-.449-.263-.617-.873-.376-1.362l2.465-4.989c.08-.162.2-.297.346-.39zM12 4a3 3 0 110 6 3 3 0 010-6zM6 1a1 1 0 011 1v4a1 1 0 01-1 1H2a1 1 0 01-1-1V2a1 1 0 011-1h4z"];
  var share$1 = ["M10.99 13.99h-9v-9h4.76l2-2H.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V7.24l-2 2v4.75zm4-14h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L7.29 7.28a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l5.29-5.29V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z"];
  var sharedFilter$1 = ["M13.843 15.163c.232.53.138.837.138.837H6.017s-.088-.308.138-.837c.226-.53 1.338-.88 2.079-1.206.735-.332.66-.53.685-.8 0-.03.006-.068.006-.105a2.171 2.171 0 01-.61-.892v-.006s-.006-.006-.006-.012c-.025-.074-.056-.16-.075-.24-.176-.031-.276-.222-.314-.394a.8.8 0 01-.1-.437c.025-.253.131-.37.244-.419v-.037c0-.313.032-.775.088-1.07A1.835 1.835 0 018.85 8.37c.315-.24.76-.37 1.156-.37.396 0 .842.13 1.156.37.301.233.534.56.64.935.026.08.045.166.057.246.057.295.088.75.088 1.064v.043c.113.05.214.167.232.413a.75.75 0 01-.1.437c-.038.172-.132.357-.301.387a1.77 1.77 0 01-.076.24.136.136 0 01-.006.025 2.346 2.346 0 01-.597.892v.111c.025.277-.075.474.666.8.741.326 1.853.67 2.079 1.2z", "M14.852 15h1.131s.083-.27-.12-.732c-.16-.373-.82-.641-1.411-.88a15.328 15.328 0 01-.409-.17c-.565-.25-.57-.412-.577-.61-.001-.03-.002-.06-.005-.09v-.097c.22-.2.401-.469.522-.781 0 0 .005-.016.005-.022.028-.07.05-.14.066-.21.149-.026.231-.188.264-.339a.655.655 0 00.088-.382c-.016-.215-.104-.318-.203-.36v-.039c0-.274-.028-.673-.077-.931a1.598 1.598 0 00-.61-1.034 1.736 1.736 0 00-1.285-.3c.236.285.42.622.529.996.038.124.065.248.083.36.048.257.079.578.093.867a1.736 1.736 0 01.08 1.624 1.65 1.65 0 01-.217.453 1.42 1.42 0 01-.176.209c-.08.204-.178.4-.292.585l.202.083c.285.117.64.261.9.387.226.11.475.245.698.414.213.161.476.408.63.764.034.08.065.159.091.235zM12.14 14.12l.09.037zM11 1c.55 0 1 .45 1 1 0 .28-.11.53-.29.7L8 6.41v1.374a2.813 2.813 0 00-.833 1.589 6.925 6.925 0 00-.092.86 1.64 1.64 0 00-.25.739l-.001.004c-.02.217.006.413.046.573L5.71 12.71A1.003 1.003 0 014 12V6.41L.29 2.71A1.003 1.003 0 011 1h10z"];
  var shield$1 = ["M8 16c4.667-3.048 7-7.238 7-12.571-1.556 0-3.889-1.143-7-3.429-3.111 2.286-5.444 3.429-7 3.429C1 8.762 3.333 12.952 8 16zM8 2.121c2.005 1.388 3.715 2.304 5.186 2.735-.342 3.702-2.05 6.683-5.186 9.038V2.121z"];
  var ship$1 = ["M5.44.804L5.2 2H3a1 1 0 00-1 1v3.714l-1.08.309a.988.988 0 00-.69 1.192c.366 1.432.897 3.324 1.309 4.26a.644.644 0 00.005.01c-.175.01-.356.015-.544.015a.5.5 0 000 1c2.067 0 3.414-.543 4.161-.917.55.373 1.505.917 2.839.917 1.32 0 2.27-.533 2.822-.905l.004.002c.196.105.48.24.856.374.75.268 1.857.529 3.318.529a.5.5 0 000-1c-.295 0-.572-.012-.834-.032a.995.995 0 00.308-.458l1.208-3.74a1 1 0 00-.677-1.269L14 6.714V3a1 1 0 00-1-1h-2.2L10.56.804A1 1 0 009.58 0H6.42a1 1 0 00-.98.804zM4 6.143l3-.857V4H4v2.143zm5-.857l3 .857V4H9v1.286zm-4.036 8.273a.5.5 0 01.527.034c.455.325 1.277.907 2.509.907s2.054-.582 2.51-.907a.5.5 0 01.579-.001l.006.004.036.023c.034.022.09.055.168.097.154.082.394.197.72.313.649.232 1.642.471 2.981.471a.5.5 0 010 1c-1.46 0-2.568-.261-3.318-.53a6.316 6.316 0 01-.856-.373l-.004-.002c-.552.372-1.502.905-2.822.905-1.334 0-2.289-.544-2.839-.917-.747.374-2.094.917-4.161.917a.5.5 0 010-1c2.129 0 3.384-.63 3.964-.94z"];
  var shop$1 = ["M3 2h10c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1zm9 11H4v-3H2v5c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-5h-2v3zm4-6l-1.01-3.17C14.9 3.36 14.49 3 14 3H2c-.49 0-.9.36-.98.83L.01 7H0c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2c0 1.1.9 2 2 2s2-.9 2-2z"];
  var shoppingCart$1 = ["M14 10H7.72l-.33-1H13c.39 0 .72-.23.89-.56h.01l2-4h-.01c.06-.13.11-.28.11-.44 0-.55-.45-1-1-1H5.39l-.44-1.32h-.01C4.8 1.29 4.44 1 4 1H1c-.55 0-1 .45-1 1s.45 1 1 1h2.28l2.33 7H4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2h6c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zM6.05 5h7.33l-1 2H6.72l-.67-2z"];
  var signalSearch$1 = ["M5.474 7.971A5.31 5.31 0 006.66 8.9l.007.019.018.056c.015.038.038.06.045.098l1.5 5.999a.75.75 0 01-1.455.36l-.42-1.68h-.704l-.42 1.68a.746.746 0 01-.907.547.746.746 0 01-.547-.907l1.5-6c.007-.037.03-.06.044-.097.015-.037.015-.075.038-.112a.722.722 0 01-.105-.36c0-.207.084-.394.22-.53zM2.795 5.277a.763.763 0 00-.015-1.065.756.756 0 00-1.065.015c-2.286 2.34-2.286 6.21 0 8.549a.747.747 0 101.072-1.042c-1.709-1.763-1.709-4.702.008-6.457zM7.808 9.388a5.318 5.318 0 001.58.211 2.236 2.236 0 01-.656.98.756.756 0 01-1.057-.098.756.756 0 01.097-1.057l.036-.036zM11.544 9.105l.378.378a6.02 6.02 0 01-1.638 3.285c-.285.3-.757.3-1.057.015a.74.74 0 01-.015-1.057 4.52 4.52 0 001.185-2.24c.4-.083.785-.212 1.147-.381z", "M4.054 9.424c-.427-.352-.352-1.582-.03-1.822a.752.752 0 00.15-1.05.752.752 0 00-1.05-.15c-1.079.802-1.221 3.18-.03 4.177a.75.75 0 10.96-1.155zM9.318 0a4.318 4.318 0 014.317 4.318c0 .206-.02.402-.049.598-.01.05-.01.088-.02.138-.039.196-.078.382-.137.569v.01c-.059.186-.137.363-.216.54l-.039.087a5.285 5.285 0 01-.294.51l2.884 2.886a.878.878 0 01.236.559.787.787 0 01-.785.785.785.785 0 01-.56-.226L11.772 7.89a5.285 5.285 0 01-.51.295l-.089.039c-.176.079-.353.157-.54.216h-.01a3.701 3.701 0 01-.568.137c-.05.01-.099.02-.138.02-.196.03-.392.049-.598.049A4.318 4.318 0 015 4.327 4.332 4.332 0 019.318 0zm-.02 1.1A3.195 3.195 0 006.1 4.298a3.195 3.195 0 003.198 3.198 3.195 3.195 0 003.198-3.198A3.195 3.195 0 009.298 1.1z"];
  var simCard$1 = ["M13.71 4.29l-4-4A.997.997 0 009 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5c0-.28-.11-.53-.29-.71zM7 6h2v2H7V6zM4 6h2v2H4V6zm2 8H4v-2h2v2zm3 0H7v-2h2v2zm3 0h-2v-2h2v2zm0-3H4V9h8v2zm0-3h-2V6h2v2z"];
  var slash$1 = ["M10 2a.99.99 0 00-.96.73l-2.99 9.96A1.003 1.003 0 007 14c.46 0 .85-.31.96-.73l2.99-9.96A1.003 1.003 0 0010 2z"];
  var smallCross$1 = ["M9.41 8l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L8 6.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42L6.59 8 4.3 10.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 9.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L9.41 8z"];
  var smallMinus$1 = ["M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var smallPlus$1 = ["M11 7H9V5c0-.55-.45-1-1-1s-1 .45-1 1v2H5c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V9h2c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var smallSquare$1 = ["M5 5v6h6V5H5zM4 3a1 1 0 00-1 1v8a1 1 0 001 1h8a1 1 0 001-1V4a1 1 0 00-1-1H4z"];
  var smallTick$1 = ["M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z"];
  var snowflake$1 = ["M13.364 9l.879.879a1 1 0 11-1.415 1.414l-2.12-2.121A1.003 1.003 0 0110.568 9H9v1.604c.042.03.083.065.121.103l2.122 2.121a1 1 0 01-1.415 1.415L9 13.414V15a1 1 0 01-2 0v-1.636l-.879.879a1 1 0 11-1.414-1.415l2.121-2.12c.054-.054.111-.1.172-.139V9H5.38c-.038.06-.084.118-.137.172l-2.122 2.12A1 1 0 111.707 9.88L2.586 9H1a1 1 0 110-2h1.536l-.829-.828a1 1 0 011.414-1.415L5.243 6.88c.038.038.072.079.103.121H7V5.38a1.003 1.003 0 01-.172-.137L4.708 3.12A1 1 0 016.12 1.707L7 2.586V1a1 1 0 112 0v1.536l.828-.829a1 1 0 011.415 1.414L9.12 5.243A1.007 1.007 0 019 5.346V7h1.604c.03-.042.065-.083.103-.121l2.121-2.122a1 1 0 011.415 1.415L13.414 7H15a1 1 0 010 2h-1.636z"];
  var socialMedia$1 = ["M9.5 4c.4 0 .8-.1 1.1-.3C12 4.5 12.9 6 13 7.6c0 .5.5.9 1 .9.6 0 1-.4 1-1v-.2c-.2-2.4-1.5-4.4-3.5-5.5-.1-1-.9-1.8-2-1.8s-2 .9-2 2 .9 2 2 2zM4 8.5c0-.7-.4-1.3-.9-1.7.3-1.4 1.2-2.6 2.5-3.3.3-.1.6-.4.6-.9s-.4-1-1-1c-.2 0-.3 0-.5.1-1.9 1-3.2 2.8-3.6 5C.4 7.1 0 7.8 0 8.5c0 1.1.9 2 2 2s2-.9 2-2zm8.8 1.2c-1.1 0-2 .9-2 2v.3c-.8.6-1.8.9-2.8.9-1.2 0-2.3-.4-3.2-1.1-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.6.3.8C4.6 14.4 6.2 15 8 15c1.5 0 3-.5 4.1-1.3.2.1.5.1.7.1 1.1 0 2-.9 2-2s-.9-2.1-2-2.1z"];
  var sort$1 = ["M5 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 001 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 005 12zm3-9h7c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm7 2H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0 8H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var sortAlphabetical$1 = ["M6 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 002 12a1.003 1.003 0 00-.71 1.71l2 2c.19.18.44.29.71.29.28 0 .53-.11.71-.29l2-2c.18-.18.29-.43.29-.71a.99.99 0 00-1-1zm7.93-.95v-1.04H9.25v1.11h2.94L9 14.96V16h5.02v-1.11h-3.27l3.18-3.84zm-1.42-4.84l.62 1.78H15L11.94.01H10.1L7 7.99h1.81l.64-1.78h3.06zm-1.52-4.24h.02l1.03 2.93H9.92l1.07-2.93z"];
  var sortAlphabeticalDesc$1 = ["M5.99 11.99c-.28 0-.53.11-.71.29l-.29.29V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29a1.003 1.003 0 00-1.42 1.42l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l2-2c.18-.18.29-.43.29-.71 0-.56-.45-1.01-1-1.01zM12.7 10h-1.38L9 15.99h1.36l.48-1.33h2.3l.46 1.33H15L12.7 10zm-1.51 3.67l.8-2.2h.02l.77 2.2h-1.59zm3.8-7.17h-4.57l4.45-5.12V0H8.34v1.48h4.1L7.99 6.59v1.39h7V6.5z"];
  var sortAsc$1 = ["M8 7h3c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm0-4h1c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm0 8h5c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm-3 1c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 001 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 005 12zm10 1H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var sortDesc$1 = ["M5 12c-.28 0-.53.11-.71.29l-.29.3V9c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29A.965.965 0 001 12a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 005 12zm4 1H8c-.55 0-1 .45-1 1s.45 1 1 1h1c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H8c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm-2 4H8c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H8c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var sortNumerical$1 = ["M6 11.99c-.28 0-.53.11-.71.29l-.29.3V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l2-2A1.003 1.003 0 006 11.99zm7.91-.08c-.06-.36-.17-.68-.33-.96-.16-.28-.37-.51-.64-.69-.27-.17-.61-.26-1.03-.26-.28 0-.54.06-.78.17-.23.11-.43.26-.6.45-.17.19-.3.41-.39.67a2.492 2.492 0 00-.04 1.52 1.623 1.623 0 00.89 1.03c.22.11.45.16.68.16.26 0 .5-.05.7-.15s.38-.26.53-.5l.02.02c-.01.16-.03.34-.07.54-.03.2-.09.4-.17.57-.08.18-.18.33-.31.45s-.29.19-.5.19a.63.63 0 01-.48-.21c-.13-.14-.21-.31-.25-.5H10.1c.03.25.1.48.19.68.1.2.22.37.38.5.16.14.33.24.54.31s.42.1.65.1c.39 0 .72-.09.99-.27.27-.18.49-.41.66-.7.17-.29.29-.61.37-.97.08-.36.12-.72.12-1.07 0-.36-.03-.72-.09-1.08zm-1.14.54c-.04.13-.09.24-.16.34a.78.78 0 01-.27.24c-.11.06-.24.09-.39.09a.75.75 0 01-.37-.09.777.777 0 01-.26-.25c-.07-.1-.12-.22-.15-.35-.03-.13-.05-.26-.05-.4 0-.13.02-.26.05-.39.04-.13.09-.24.16-.34.07-.1.16-.18.26-.24s.22-.09.35-.09c.14 0 .26.03.37.09.11.06.2.14.28.24a1.32 1.32 0 01.23.74c0 .15-.02.28-.05.41zm-1.56-4.47H13V0h-1.42c-.05.3-.16.56-.31.76-.16.21-.35.37-.58.5-.23.13-.49.21-.78.26-.3.05-.6.07-.91.06V2.8h2.21v5.18z"];
  var sortNumericalDesc$1 = ["M6 11.99c-.28 0-.53.11-.71.29l-.29.3V8.99c0-.55-.45-1-1-1s-1 .45-1 1v3.59l-.29-.29a.982.982 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 006 11.99zm7.86-9.45c-.09-.48-.26-.9-.5-1.28S12.8.58 12.4.35C12 .12 11.49 0 10.86 0c-.43 0-.82.07-1.17.22s-.65.35-.9.6-.44.55-.58.89c-.14.34-.2.71-.2 1.11 0 .31.05.61.15.91.1.3.26.57.48.8.23.24.52.43.85.58.33.14.68.21 1.03.21.4 0 .75-.07 1.05-.2.3-.13.57-.35.79-.66l.02.02c-.02.21-.05.45-.1.73-.05.27-.13.53-.25.76-.12.24-.27.44-.47.6-.19.16-.44.25-.75.25a.98.98 0 01-.72-.29c-.19-.18-.31-.4-.37-.66H8.15c.05.34.14.64.29.9.15.26.34.49.57.67.23.18.5.32.8.41.31.1.63.15.98.15.58 0 1.08-.12 1.48-.36.4-.24.73-.55.99-.93.26-.39.44-.82.56-1.29.12-.48.18-.96.18-1.44s-.05-.96-.14-1.44zm-1.71.72c-.05.17-.14.32-.24.46-.11.13-.24.24-.41.31-.16.08-.36.12-.58.12-.21 0-.39-.04-.55-.13-.16-.08-.29-.19-.39-.33-.12-.14-.19-.29-.24-.46-.05-.17-.08-.35-.08-.54 0-.18.03-.35.08-.52.06-.16.14-.31.25-.44.11-.13.24-.24.4-.32.16-.08.33-.12.52-.12.21 0 .4.04.56.12.16.08.3.19.41.32.11.14.2.29.26.46.06.17.09.35.09.52 0 .2-.03.38-.08.55zm-.46 7.31c-.12.15-.26.28-.44.37-.17.09-.37.16-.58.2-.22.04-.44.05-.67.05v.92h1.65v3.88h1.33V10h-1.06c-.03.23-.11.42-.23.57z"];
  var splitColumns$1 = ["M12 10a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H9V2h3v1.71c.31-.13.64-.21 1-.21s.69.08 1 .21V1c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2.71c.31-.13.64-.21 1-.21s.69.08 1 .21V2h3v5H3.41l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L3.41 9H7v5H4v-1.71c-.31.13-.64.21-1 .21s-.69-.08-1-.21V15c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-2.71c-.31.13-.64.21-1 .21s-.69-.08-1-.21V14H9V9h3.59l-.29.29c-.19.18-.3.43-.3.71z"];
  var square$1 = ["M15 0H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H2V2h12v12z"];
  var stackedChart$1 = ["M10 2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3h3V2zm3 10h1c.55 0 1-.45 1-1V8h-3v3c0 .55.45 1 1 1zm2-7c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v2h3V5zm-5 1H7v3h3V6zM5 7c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v1h3V7zm3 5h1c.55 0 1-.45 1-1v-1H7v1c0 .55.45 1 1 1zm7 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h1c.55 0 1-.45 1-1V9H2v2c0 .55.45 1 1 1z"];
  var stadiumGeometry$1 = ["M12 6H4a2 2 0 100 4h8a2 2 0 100-4zM4 4a4 4 0 100 8h8a4 4 0 000-8H4z"];
  var star$1 = ["M8 0l2.5 5.3 5.5.8-4 4.1.9 5.8L8 13.3 3.1 16l.9-5.8-4-4.1 5.5-.8z"];
  var starEmpty$1 = ["M16 6.11l-5.53-.84L8 0 5.53 5.27 0 6.11l4 4.1L3.06 16 8 13.27 12.94 16 12 10.21l4-4.1zM4.91 13.2l.59-3.62L3 7.02l3.45-.53L8 3.2l1.55 3.29 3.45.53-2.5 2.56.59 3.62L8 11.49 4.91 13.2z"];
  var stepBackward$1 = ["M12 3c-.24 0-.44.09-.62.23l-.01-.01L7 6.72V4c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V9.28l4.38 3.5.01-.01c.17.14.37.23.61.23.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var stepChart$1 = ["M15 12H2v-2h3c.55 0 1-.45 1-1V7h2v1c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h-2V6c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v2H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var stepForward$1 = ["M12 3h-1c-.55 0-1 .45-1 1v2.72l-4.38-3.5v.01A.987.987 0 005 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .24 0 .44-.09.62-.23l.01.01L10 9.28V12c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var stop$1 = ["M12 3H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h8c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var stopwatch$1 = ["M9 2v1.083A6.002 6.002 0 018 15 6 6 0 017 3.083V2H6a1 1 0 110-2h4a1 1 0 010 2H9zM8 5a4 4 0 104 4H8V5z"];
  var strikethrough$1 = ["M14 7H8.65c-.38-.09-.73-.18-1.04-.26-.31-.08-.49-.13-.54-.14-.43-.11-.79-.29-1.05-.52-.27-.23-.4-.55-.4-.95 0-.29.07-.53.21-.72s.32-.34.54-.46c.22-.11.46-.19.72-.24.26-.05.52-.07.77-.07.74 0 1.36.15 1.84.46.32.2.55.5.68.9h2.22c-.06-.33-.17-.64-.32-.92-.25-.45-.59-.84-1.02-1.15-.43-.31-.93-.54-1.49-.7S8.59 2 7.95 2c-.55 0-1.1.07-1.63.2-.54.13-1.02.34-1.45.62-.42.28-.76.63-1.02 1.05-.26.42-.39.92-.39 1.5 0 .3.04.59.13.88.08.26.21.51.39.75H2c-.55 0-1 .45-1 1s.45 1 1 1h7.13c.25.07.49.14.71.22.25.09.48.23.7.44.21.21.32.53.32.97 0 .21-.05.43-.14.63-.09.21-.24.39-.45.55-.21.16-.48.29-.81.39-.33.1-.73.15-1.2.15-.44 0-.84-.05-1.21-.14-.37-.09-.7-.24-.99-.43-.29-.2-.51-.45-.67-.76-.01 0-.01-.01-.02-.02H3.14a3.68 3.68 0 001.39 2.03c.46.34 1 .58 1.62.74.61.15 1.27.23 1.97.23.61 0 1.2-.07 1.79-.2.58-.13 1.11-.34 1.56-.63.46-.29.83-.66 1.11-1.11.28-.45.42-1 .42-1.64 0-.3-.05-.6-.15-.9-.05-.19-.13-.36-.22-.52H14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var style$1 = ["M14 14H2V2h8.76l2-2H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6.24l-2 2V14zm1.4-14L9.7 5.7l2.1 2.1L16 3.6V0h-.6zM4 11.92c2.33.15 4.42.15 6.15-1.5.82-.83.82-2.25 0-3.08-.45-.38-.98-.6-1.5-.6-.53 0-1.05.22-1.43.6-.82.91-1.27 3.38-3.22 4.58z"];
  var swapHorizontal$1 = ["M0 7.02L.05 7H0v.02zm2-2.03h9.57l-1.29 1.29A1.003 1.003 0 0011.7 7.7l2.99-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2.99-3a1.07 1.07 0 00-.71-.28 1.003 1.003 0 00-.71 1.71L11.57 3H2c-.55 0-1 .45-1 1a1 1 0 001 .99zM15.96 9H16v-.02l-.04.02zM14 11.01H4.43l1.29-1.29A1.003 1.003 0 004.3 8.3l-2.99 3a.99.99 0 00-.29.7c0 .28.11.53.29.71l2.99 3a1.003 1.003 0 001.42-1.42L4.43 13H14c.55 0 1-.45 1-1s-.45-.99-1-.99z"];
  var swapVertical$1 = ["M9 0h-.02L9 .04V0zM7 16h.02L7 15.95V16zM4.7 1.31c-.18-.18-.43-.29-.7-.29s-.53.11-.71.29l-3 2.99a1.003 1.003 0 001.42 1.42L3 4.43V14c0 .55.45 1 1 1s1-.45 1-1V4.43l1.29 1.29c.18.18.43.29.7.29A1.003 1.003 0 007.7 4.3l-3-2.99zM15 9.99c-.28 0-.53.11-.71.29L13 11.57V2c0-.55-.45-1-1-1s-1 .45-1 1v9.57l-1.29-1.29a.99.99 0 00-.7-.29 1.003 1.003 0 00-.71 1.71l3 2.99c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-2.99c.18-.18.29-.43.29-.71-.01-.55-.46-1-1.01-1z"];
  var _switch$1 = ["M9.293 2.293l1.414 1.414-4.999 5a3 3 0 11-1.415-1.415l5-5zM13 7a3 3 0 110 6 3 3 0 010-6zM3 9a1 1 0 100 2 1 1 0 000-2zm10 0a1 1 0 100 2 1 1 0 000-2z"];
  var symbolCircle$1 = ["M8 3.01a5 5 0 100 10 5 5 0 100-10z"];
  var symbolCross$1 = ["M12 6.01h-2v-2c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v2H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2h2c.55 0 1-.45 1-1v-2c0-.56-.45-1-1-1z"];
  var symbolDiamond$1 = ["M12 8.01c0-.19-.07-.36-.16-.51l.01-.01-3-5-.01.01c-.17-.29-.48-.49-.84-.49s-.67.2-.84.49l-.02-.01-3 5 .02.01c-.09.15-.16.32-.16.51s.07.36.16.51h-.02l3 5 .01-.01c.18.29.49.5.85.5s.67-.2.84-.49l.01.01 3-5-.01-.01c.09-.16.16-.32.16-.51z"];
  var symbolRectangle$1 = ["M13 4H3c-.5 0-1 .5-1 1v6c0 .5.5 1 1 1h10c.5 0 1-.5 1-1V5c0-.5-.5-1-1-1z"];
  var symbolSquare$1 = ["M12 3.01H4c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-8c0-.56-.45-1-1-1z"];
  var symbolTriangleDown$1 = ["M13 4.01c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 .16.05.31.11.44H3.1l4 8h.01c.16.33.49.56.89.56s.72-.23.89-.56h.01l4-8h-.01c.06-.14.11-.28.11-.44z"];
  var symbolTriangleUp$1 = ["M12.89 11.56l-3.99-8h-.01c-.17-.32-.5-.55-.89-.55s-.72.23-.89.55H7.1l-4 8h.01c-.06.14-.11.29-.11.45 0 .55.45 1 1 1h8c.55 0 1-.45 1-1 0-.16-.05-.31-.11-.45z"];
  var syringe$1 = ["M11.146.146a.5.5 0 000 .708l.647.646L10.5 2.793 8.854 1.146a.5.5 0 10-.708.708l.647.646-1.146 1.146-5.5 5.5a.5.5 0 000 .708l.646.646-1.647 1.646a.5.5 0 000 .708l.647.646-1.647 1.646a.5.5 0 00.708.708L2.5 14.207l.646.647a.5.5 0 00.708 0L5.5 13.207l.646.647a.5.5 0 00.708 0l5.5-5.5L13.5 7.207l.646.647a.5.5 0 00.708-.708L13.207 5.5 14.5 4.207l.646.647a.5.5 0 00.708-.708l-4-4a.5.5 0 00-.708 0zM11.293 8l-.793.793-1.646-1.647a.5.5 0 10-.708.708L9.793 9.5 8.5 10.793 6.854 9.146a.5.5 0 10-.708.708L7.793 11.5 6.5 12.793 3.207 9.5 8 4.707 11.293 8zM8.707 4L12 7.293l.793-.793L9.5 3.207 8.707 4zm-6.5 8.5L3.5 13.793 4.793 12.5 3.5 11.207 2.207 12.5zm11.586-9L12.5 2.207 11.207 3.5 12.5 4.793 13.793 3.5z"];
  var tag$1 = ["M1 3a2 2 0 012-2h4.584a2 2 0 011.414.586l5.413 5.412a2 2 0 010 2.829L9.827 14.41a2 2 0 01-2.829 0L1.586 8.998A2 2 0 011 7.584V3zm3.487-.007a1.494 1.494 0 100 2.988 1.494 1.494 0 000-2.988z"];
  var takeAction$1 = ["M9 11a1.003 1.003 0 001.71.71l4-4a1.003 1.003 0 00-1.42-1.42l-4 4c-.18.18-.29.43-.29.71zM4 6c.28 0 .53-.11.71-.29l4-4A1.003 1.003 0 007.29.29l-4 4A1.003 1.003 0 004 6zm4 4l5-5-.79-.79.5-.5a1.003 1.003 0 00-1.42-1.42l-.5.5L10 2 5 7l.79.79-5.5 5.5a1.003 1.003 0 001.42 1.42l5.5-5.5L8 10zm7 4H7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var tank$1 = ["M3.7 3.4a1 1 0 01.8-.4h5.086a1 1 0 01.707.293L11 4h3a1 1 0 110 2h-3v1h2.5a2.5 2.5 0 010 5h-11a2.5 2.5 0 010-5H3V4.667a1 1 0 01.2-.6l.5-.667zM2.5 9h11a.5.5 0 010 1h-11a.5.5 0 110-1z"];
  var target$1 = ["M7 4a1 1 0 012 0v2a1 1 0 01-2 0V4zM10 7a1 1 0 000 2h2a1 1 0 000-2h-2zM3 8a1 1 0 011-1h2a1 1 0 010 2H4a1 1 0 01-1-1zM8 9a1 1 0 00-1 1v2a1 1 0 002 0v-2a1 1 0 00-1-1z", "M8 16A8 8 0 108 0a8 8 0 000 16zm0-2A6 6 0 108 2a6 6 0 000 12z"];
  var taxi$1 = ["M15.12 6.63h-.38L15 7c-.01.3-.01.64 0 .98V8c0 .07-.03.13-.04.19h.02L14 13.1v.9c0 .55-.45 1-1 1s-1-.45-1-1v-1H4v1c0 .55-.45 1-1 1s-1-.45-1-1v-.9l-.98-4.9h.02C1.03 8.13 1 8.07 1 8H.99c0-.33 0-.67.01-1l.26-.37H.88C.4 6.63 0 6.21 0 5.69s.4-.94.88-.94h1.05l.77-2.11c.19-.53.76-1.08 1.26-1.24 0 0 .68-.2 2.05-.32C6.01 1.05 6 1.03 6 1c0-.55.45-1 1-1h2c.55 0 1 .45 1 1 0 .03-.01.05-.02.08 1.37.12 2.05.32 2.05.32.51.15 1.08.71 1.27 1.24l.76 2.12h1.05c.49 0 .89.42.89.93 0 .52-.4.94-.88.94zM11 10h2V8h-2v2zm-8 0h2V8H3v2zm10-5l-.73-1.63C12.21 3.19 12.18 3 12 3H4c-.18 0-.21.19-.27.37L3 5c-.06.18-.18 1 0 1h10c.18 0 .06-.82 0-1z"];
  var temperature$1 = ["M8.5 0A1.5 1.5 0 007 1.5v7.837a3.5 3.5 0 103 0V1.5A1.5 1.5 0 008.5 0zM2 5.5a.5.5 0 01.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5zM2.5 1a.5.5 0 000 1h3a.5.5 0 000-1h-3zM4 3.5a.5.5 0 01.5-.5h1a.5.5 0 010 1h-1a.5.5 0 01-.5-.5zM4.5 7a.5.5 0 000 1h1a.5.5 0 000-1h-1z"];
  var textHighlight$1 = ["M9 10H2V6h7V4H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h8v-2zm4 3h-1V3h1c.55 0 1-.45 1-1s-.45-1-1-1h-1c-.37 0-.7.11-1 .28-.3-.17-.63-.28-1-.28H9c-.55 0-1 .45-1 1s.45 1 1 1h1v10H9c-.55 0-1 .45-1 1s.45 1 1 1h1c.37 0 .7-.11 1-.28.3.17.63.28 1 .28h1c.55 0 1-.45 1-1s-.45-1-1-1zm2-9h-2v2h1v4h-1v2h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"];
  var th$1 = ["M15 1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1zM6 13H2v-2h4v2zm0-3H2V8h4v2zm0-3H2V5h4v2zm8 6H7v-2h7v2zm0-3H7V8h7v2zm0-3H7V5h7v2z"];
  var thDerived$1 = ["M5.6 10l-.3.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l2-2c.2-.2.3-.4.3-.7s-.1-.5-.3-.7l-2-2C6.5 6.1 6.3 6 6 6c-.5 0-1 .4-1 1 0 .3.1.5.3.7l.3.3H1c-.6 0-1 .4-1 1s.4 1 1 1h4.6zM15 1H2c-.5 0-1 .5-1 1v5h2V5h11v2H8.8l.6.6c.1.1.2.3.3.4H14v2H9.7c-.1.1-.2.3-.3.4l-.6.6H14v2H3v-2H1v3c0 .5.5 1 1 1h13c.6 0 1-.5 1-1V2c0-.5-.4-1-1-1z"];
  var thDisconnect$1 = ["M12 1h3c.6 0 1 .5 1 1v12c0 .6-.4 1-1 1h-4.97l.286-2H14v-2h-3.398l.143-1H14V8h-2.97l.143-1H14V5h-2.541l.51-3.576C11.99 1.282 12 1.14 12 1zM5.97 1l-.572 4H2v2h3.112L4.97 8H2v2h2.684l-.143 1H2v2h2.255l-.225 1.576c-.02.142-.03.284-.03.424H1c-.6 0-1-.4-1-1V2c0-.5.4-1 1-1h4.97zM8.01.859a1 1 0 111.98.282l-2 14a1 1 0 11-1.98-.282l2-14z"];
  var thFiltered$1 = ["M10 10h3l1.78-2.226a1 1 0 00.22-.625V4.3l1-.9V14c0 .6-.4 1-1 1H1c-.6 0-1-.4-1-1V2c0-.5.4-1 1-1h4.333L9 4.3V5H7v2h2v1H7v2h3zm-4 3v-2H2v2h4zm0-3V8H2v2h4zm0-3V5H2v2h4zm8 6v-2H7v2h7z", "M15.48 0c.31 0 .52.26.52.57 0 .16-.06.3-.17.41l-2.86 2.73v2.63c0 .16-.06.3-.17.41l-.82 1.1c-.1.1-.25.17-.41.17-.31 0-.57-.26-.57-.57V3.71L8.17.98A.566.566 0 018 .57c0-.31.26-.57.57-.57h6.91z"];
  var thList$1 = ["M15 1H1c-.6 0-1 .5-1 1v12c0 .6.4 1 1 1h14c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1zm-1 12H2v-2h12v2zm0-3H2V8h12v2zm0-3H2V5h12v2z"];
  var thirdParty$1 = ["M4.448 9h.573c.025-.044.051-.088.079-.13A9.43 9.43 0 015.183 8h-.995A10.424 10.424 0 014 6c0-.717.068-1.391.188-2h3.624c.065.33.114.678.146 1.042A3.42 3.42 0 018.46 5c.168 0 .336.013.502.037A11.089 11.089 0 008.829 4h1.755c.148.338.26.696.33 1.068l.176-.028a2.74 2.74 0 01.5 0c.113 0 .225.006.336.018A6.001 6.001 0 000 6a6 6 0 005.672 5.991 4 4 0 01-.202-.441 1.842 1.842 0 01-.24-.26 1.82 1.82 0 01-.26-.55 2 2 0 01-.185-.92l-.012-.025A6.036 6.036 0 014.448 9zM3.171 8H1.416A4.983 4.983 0 011 6c0-.711.148-1.388.416-2h1.755C3.06 4.626 3 5.299 3 6c0 .701.06 1.374.17 2zM2 9H3.4c.18.618.412 1.167.685 1.62A5.015 5.015 0 012 9zm2.448-6h3.104a6.036 6.036 0 00-.325-.795C6.737 1.225 6.246 1 6 1c-.246 0-.737.225-1.227 1.205-.119.238-.228.504-.325.795zm4.15 0H10a5.016 5.016 0 00-2.086-1.62c.273.453.506 1.002.685 1.62zM4.087 1.38A6.834 6.834 0 003.401 3H2a5.015 5.015 0 012.086-1.62zM13.476 16s.118-.385-.172-1.046c-.228-.533-1.172-.915-2.015-1.257a22.113 22.113 0 01-.584-.243c-.808-.356-.816-.588-.825-.872-.002-.041-.003-.084-.007-.128v-.139c.314-.284.573-.669.745-1.115 0 0 .008-.023.008-.03.04-.1.071-.2.095-.3.212-.04.33-.27.377-.485.054-.093.149-.3.125-.547-.024-.307-.15-.453-.29-.515v-.054c0-.392-.04-.961-.11-1.33a2.16 2.16 0 00-.071-.308 2.283 2.283 0 00-.8-1.17C9.558 6.162 9.001 6 8.506 6c-.495 0-1.052.162-1.445.462A2.294 2.294 0 006.19 7.93c-.07.369-.11.946-.11 1.338v.046c-.14.062-.274.208-.306.523a1 1 0 00.126.547c.047.215.173.453.393.492.02.083.05.172.078.253l.016.047c0 .008.008.015.008.015v.008c.172.454.44.846.761 1.115a.804.804 0 01-.004.072c-.002.02-.004.04-.004.06l-.007.105c-.016.287-.028.523-.848.894-.176.078-.37.156-.568.237-.847.345-1.802.735-2.031 1.27C3.41 15.616 3.52 16 3.52 16h9.955zm2.503-1.25h-1.413a4.05 4.05 0 00-.116-.294c-.192-.445-.52-.753-.787-.955-.278-.21-.59-.38-.873-.517a21.373 21.373 0 00-1.122-.483l-.02-.008-.235-.097c.144-.23.266-.476.366-.731.089-.087.162-.177.22-.26.132-.192.217-.391.271-.568.117-.251.24-.64.199-1.105a2.025 2.025 0 00-.299-.925 8.626 8.626 0 00-.116-1.083 3.426 3.426 0 00-.104-.45 3.476 3.476 0 00-.661-1.246A2.18 2.18 0 0111.63 6c.432 0 .92.141 1.264.404.33.256.584.612.7 1.023.028.087.049.182.062.27.062.322.097.82.097 1.163v.048c.123.053.233.181.254.45a.82.82 0 01-.11.478c-.041.189-.144.391-.33.425a1.92 1.92 0 01-.082.262c0 .007-.007.027-.007.027-.151.39-.378.727-.653.976v.121c.004.038.005.075.006.111v.002c.008.247.015.451.722.762.158.07.332.14.51.213.739.299 1.565.634 1.764 1.1.254.579.151.915.151.915z"];
  var thumbsDown$1 = ["M2 2H0v7h2c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm13.99 4.38c.08-.58-.44-1.02-1.15-1.05-.25-.01-.52-.03-.81-.05.02 0 .05-.01.07-.01.7-.1 1.34-.49 1.41-1.07.06-.58-.46-.97-1.17-1.04-.25-.02-.52-.04-.79-.06.47-.15.84-.42.87-.93.04-.58-.79-1.03-1.5-1.09-.27-.02-.51-.04-.73-.05h-.09c-.23-.02-.43-.02-.62-.03C8.35.95 5.66 1.47 4 2.51v6c2.14 1.29 4.76 3.59 4.21 5.51-.18.59.31 1.05.98.98.81-.09 1.37-.91 1.4-1.78.04-1-.15-2.01-.5-2.91-.04-.25.01-.5.37-.53.49-.03 1.11-.06 1.59-.08.26 0 .51-.01.75-.02h.01c.41-.02.8-.05 1.13-.09.7-.09 1.35-.47 1.43-1.05.08-.58-.44-.97-1.15-1.05-.05-.01-.11-.01-.16-.02.17-.01.33-.03.49-.05.72-.08 1.37-.46 1.44-1.04z"];
  var thumbsUp$1 = ["M15.99 9.62c-.08-.58-.73-.96-1.43-1.05-.15-.02-.32-.04-.49-.05.06-.01.11-.01.16-.02.71-.08 1.23-.47 1.15-1.05-.08-.58-.73-.96-1.43-1.05-.34-.04-.72-.07-1.13-.09h-.01c-.24-.01-.49-.02-.75-.02-.48-.02-1.11-.04-1.59-.08-.36-.03-.41-.28-.37-.53.35-.9.54-1.91.5-2.91-.04-.85-.6-1.68-1.41-1.77-.67-.07-1.16.39-.99.98C8.76 3.91 6.13 6.2 4 7.49v6c1.66 1.03 4.35 1.56 7.48 1.5.19 0 .39-.01.62-.02h.09c.22-.01.46-.03.73-.05.71-.06 1.54-.51 1.5-1.09-.03-.51-.4-.79-.87-.93.27-.02.54-.04.79-.06.71-.06 1.24-.45 1.17-1.04-.06-.58-.7-.97-1.41-1.07-.02 0-.05-.01-.07-.01.29-.02.57-.03.81-.05.71-.03 1.23-.47 1.15-1.05zM2 7H0v7h2c.55 0 1-.45 1-1V8c0-.56-.45-1-1-1z"];
  var tick$1 = ["M14 3c-.28 0-.53.11-.71.29L6 10.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l8-8A1.003 1.003 0 0014 3z"];
  var tickCircle$1 = ["M8 16c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm4-11c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z"];
  var time$2 = ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm1-6.41V4c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L9 7.59z"];
  var timelineAreaChart$1 = ["M15 2.59L9.91 7.68 6.6 5.2l-.01.01C6.42 5.09 6.23 5 6 5c-.24 0-.44.09-.62.23v-.01L3 7.12V11h12V2.59zM15 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var timelineBarChart$1 = ["M8 12h1c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1zm5 0h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1zm2 1H2c-.55 0-1 .45-1 1s.45 1 1 1h13c.55 0 1-.45 1-1s-.45-1-1-1zM3 12h1c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1z"];
  var timelineEvents$1 = ["M8 11H7v1h1v-1zm-4 0H3v1h1v-1zm7-8c.6 0 1-.5 1-1V1c0-.5-.4-1-1-1s-1 .5-1 1v1c0 .5.5 1 1 1zM4 3c.5 0 1-.5 1-1V1c0-.5-.5-1-1-1S3 .5 3 1v1c0 .5.5 1 1 1zm10-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H6v1c0 1.1-.9 2-2 2s-2-.9-2-2V1H1c-.5 0-1 .5-1 1v12c0 .5.5 1 1 1h13c.6 0 1-.5 1-1V2c0-.5-.4-1-1-1zM5 13H2v-3h3v3zm0-4H2V6h3v3zm4 4H6v-3h3v3zm0-4H6V6h3v3zm4 4h-3v-3h3v3zm0-4h-3V6h3v3zm-1-2h-1v1h1V7z"];
  var timelineLineChart$1 = ["M15 12H2V9.41l3-3L8.29 9.7c.18.19.43.3.71.3s.53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42L9 7.59l-3.29-3.3C5.53 4.11 5.28 4 5 4s-.53.11-.71.29L2 6.59V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var tint$1 = ["M7.88 1s-4.9 6.28-4.9 8.9c.01 2.82 2.34 5.1 4.99 5.1 2.65-.01 5.03-2.3 5.03-5.13C12.99 7.17 7.88 1 7.88 1z"];
  var torch$1 = ["M5 15c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H5v1zm7-15H4c-.55 0-1 .45-1 1v1h10V1c0-.55-.45-1-1-1zM5 7v6h6V7l2-4H3l2 4zm2 0c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1V7z"];
  var tractor$1 = ["M3.5 9a3.5 3.5 0 110 7 3.5 3.5 0 010-7zm9.5 1a3 3 0 110 6 3 3 0 010-6zm-9.5 1a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm9.5 1a1 1 0 100 2 1 1 0 000-2zM5 0c1.46 0 2.527.668 3 2l.815 3.255a78.9 78.9 0 012.186.195L11 2h2l.001 3.688c.698.095 1.37.198 2.013.312.623.11.986.479.986 1v3.354a4.001 4.001 0 00-6.873 1.645H7.999l-.026-.002A4.5 4.5 0 00.659 9.01l-.654.001v-.829C.003 7.386.002 6.423 0 6.022 0 5.5.376 4.99 1 4.99V1a1 1 0 011-1h3zm1 2H3v2.99c1.29.024 2.554.069 3.781.135L6 2z"];
  var train$1 = ["M13 14h-1l1 2H3l1-2H3c-1.1 0-2-.9-2-2V2C1 .9 4.13 0 8 0s7 .9 7 2v10c0 1.1-.9 2-2 2zm-2-2h2v-2h-2v2zM9 7h4V3H9v4zm-6 5h2v-2H3v2zm0-5h4V3H3v4z"];
  var translate$3 = ["M15.89 14.56l-3.99-8h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56h-.01L9 8.76 7.17 7.38l.23-.18C8.37 6.47 9 5.31 9 4V3h1c.55 0 1-.45 1-1s-.45-1-1-1H7c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H1c-.55 0-1 .45-1 1s.45 1 1 1h6v1c0 .66-.32 1.25-.82 1.61l-.68.51-.68-.5C4.32 5.25 4 4.66 4 4H2c0 1.31.63 2.47 1.6 3.2l.23.17L1.4 9.2l.01.01C1.17 9.4 1 9.67 1 10c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01 2.9-2.17 2.6 1.95-1.99 3.98h.01c-.07.13-.12.28-.12.44 0 .55.45 1 1 1 .39 0 .72-.23.89-.56h.01L8.62 14h4.76l.72 1.45h.01c.17.32.5.55.89.55.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44zM9.62 12L11 9.24 12.38 12H9.62z"];
  var trash$1 = ["M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z"];
  var tree$1 = ["M9 11.857V16H7v-4.143L1 13l3.885-4.44L3 9l3.07-4.297L5 5l3-5 3 5-1.07-.297L13 9l-1.885-.44L15 13l-6-1.143z"];
  var trendingDown$1 = ["M15 7c-.55 0-1 .45-1 1v.59l-4.29-4.3A.997.997 0 009 4c-.16 0-.31.05-.44.11V4.1L5 5.88 1.45 4.11v.01C1.31 4.05 1.16 4 1 4c-.55 0-1 .45-1 1 0 .39.23.72.56.89v.01l4 2v-.01c.13.06.28.11.44.11s.31-.05.44-.11v.01L8.8 6.22 12.59 10H12c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1z"];
  var trendingUp$1 = ["M15 4h-3c-.55 0-1 .45-1 1s.45 1 1 1h.59L8.8 9.78 5.45 8.11v.01C5.31 8.05 5.16 8 5 8s-.31.05-.44.11V8.1l-4 2v.01c-.33.17-.56.5-.56.89 0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L5 10.12l3.55 1.78v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L14 7.41V8c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1z"];
  var truck$1 = ["M12.5 0a.5.5 0 01.5.5V9a1 1 0 011 1v2h.5a.5.5 0 01.5.5v1a.5.5 0 01-.5.5H13v1a1 1 0 01-2 0v-1H5v1a1 1 0 01-2 0v-1H1.5a.5.5 0 01-.5-.5v-1a.5.5 0 01.5-.5H2v-2a1 1 0 011-1V.5a.5.5 0 011 0V3a2 2 0 012-2h4a2 2 0 012 2V.5a.5.5 0 01.5-.5zM9 8H7a1 1 0 00-1 1v2a1 1 0 001 1h2a1 1 0 001-1V9a1 1 0 00-1-1zm3.5 3h-1a.5.5 0 100 1h1a.5.5 0 100-1zm-8 0h-1a.5.5 0 100 1h1a.5.5 0 100-1zM9 9a.5.5 0 01.5.5v1l-.008.09A.5.5 0 019 11H7l-.09-.008a.5.5 0 01-.41-.492v-1l.008-.09A.5.5 0 017 9zm2-5H5v2h6V4z"];
  var twoColumns$1 = ["M3.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1zm11.71 7.3l-2-2a1.003 1.003 0 00-1.71.71v4a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71s-.11-.53-.29-.71zM9.99-.01h-3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-14c0-.55-.45-1-1-1z"];
  var unarchive$1 = ["M13.382 0a1 1 0 01.894.553L16 4v11a1 1 0 01-1 1H1a1 1 0 01-1-1V4L1.724.553A1 1 0 012.618 0h10.764zM8 6c-.28 0-.53.11-.71.29l-2 2-.084.096A1.003 1.003 0 006.71 9.71l.29-.3V12l.007.116c.058.496.482.884.993.884.55 0 1-.45 1-1V9.41l.29.29.081.076A.97.97 0 0010 10a1.003 1.003 0 00.71-1.71l-2-2-.096-.084A1.002 1.002 0 008 6zm5-4H3L2 4h12l-1-2z"];
  var underline$1 = ["M8 14c2.8 0 5-2.2 5-5V3c0-.6-.4-1-1-1s-1 .4-1 1v6c0 1.7-1.3 3-3 3s-3-1.3-3-3V3c0-.6-.4-1-1-1s-1 .4-1 1v6c0 2.8 2.2 5 5 5zM13.5 15h-11c-.3 0-.5.2-.5.5s.2.5.5.5h11c.3 0 .5-.2.5-.5s-.2-.5-.5-.5z"];
  var undo$1 = ["M4 11c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm7-7H3.41L4.7 2.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 4.47 0 4.72 0 5c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 6H11c1.66 0 3 1.34 3 3s-1.34 3-3 3H7v2h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z"];
  var ungroupObjects$1 = ["M3.5 5C1.57 5 0 6.57 0 8.5S1.57 12 3.5 12 7 10.43 7 8.5 5.43 5 3.5 5zm9 0C10.57 5 9 6.57 9 8.5s1.57 3.5 3.5 3.5S16 10.43 16 8.5 14.43 5 12.5 5z"];
  var unknownVehicle$1 = ["M10.507 9.75v-3.5c0-.089.023-.171.051-.25h-7.55c-.176 0-.061-.824 0-1l.729-1.63c.06-.177.095-.37.27-.37h4.5V1.01c-.166-.003-.32-.01-.5-.01-2.72 0-4.036.402-4.036.402-.508.155-1.079.711-1.268 1.237L1.94 4.756H.887c-.483 0-.88.423-.88.939s.397.939.88.939h.376L1.008 7c-.034.685 0 1.436 0 2v5c0 .657.384 1 1 1s1-.343 1-1v-1h10v1c0 .657.383 1 1 1s1-.343 1-1v-3.5h-3.75a.75.75 0 01-.75-.75zm-5.5.25h-2V8h2v2zm11-4.305zM15.34.826a2.807 2.807 0 00-.932-.598c-.386-.16-.868-.241-1.445-.241-.447 0-.851.076-1.213.228-.362.153-.67.364-.926.636s-.456.592-.598.963a3.535 3.535 0 00-.218 1.144V3h1.789c.003-.208.023-.405.069-.588.049-.193.124-.362.225-.506.102-.144.232-.259.39-.345.159-.087.348-.13.567-.13.325 0 .58.09.762.272.183.18.275.46.275.839.008.222-.031.407-.116.555a1.654 1.654 0 01-.335.408 7.4 7.4 0 01-.452.37c-.162.123-.316.27-.463.438a2.556 2.556 0 00-.384.611c-.11.239-.177.535-.2.889V6h1.645v-.1c.032-.248.111-.453.237-.618.126-.164.27-.31.433-.438.163-.128.335-.255.518-.383a2.413 2.413 0 00.878-1.117c.102-.255.152-.58.152-.975A2.241 2.241 0 0015.34.826zM12.007 7v2h2V7h-2z"];
  var unlock$1 = ["M11.99-.01c-2.21 0-4 1.79-4 4v3h-7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-7c0-.55-.45-1-1-1h-3v-3c0-1.1.9-2 2-2s2 .9 2 2v1c0 .55.45 1 1 1s1-.45 1-1v-1c0-2.21-1.79-4-4-4z"];
  var unpin$1 = ["M9.39 1c-.5.5-.4 1.48.15 2.53L4.38 7.54C2.85 6.5 1.52 6.07 1 6.59l3.5 3.5c-.02.02-1.4 2.8-1.4 2.8l2.8-1.4 3.5 3.5c.53-.53.1-1.86-.95-3.38l4.02-5.16c1.04.55 2.01.65 2.51.14L9.39 1z"];
  var unresolve$1 = ["M11 3c-.55 0-1.07.09-1.57.26a6.46 6.46 0 010 9.48c.5.17 1.02.26 1.57.26 2.76 0 5-2.24 5-5s-2.24-5-5-5zM9.78 9.38l.09-.27c.08-.36.13-.73.13-1.11s-.05-.75-.13-1.11l-.09-.27a5.32 5.32 0 00-.29-.79l-.12-.21c-.14-.27-.31-.52-.51-.76a.7.7 0 00-.08-.1c-.24-.27-.49-.52-.78-.74-.43-.32-.92-.58-1.45-.75l.01-.01c-.1-.03-.2-.05-.3-.08-.12-.03-.23-.07-.36-.09A5.28 5.28 0 005 3C2.24 3 0 5.24 0 8s2.24 5 5 5c.31 0 .61-.04.9-.09.12-.02.24-.06.36-.09.1-.03.21-.04.3-.08l-.01-.01c.88-.29 1.64-.8 2.22-1.49.03-.03.06-.07.09-.1.19-.24.36-.49.51-.76.04-.07.08-.14.11-.21.13-.25.23-.52.3-.79z"];
  var updated$1 = ["M8 0a7.95 7.95 0 00-6 2.74V1c0-.55-.45-1-1-1S0 .45 0 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.54C4.64 2.78 6.22 2 8 2c3.31 0 6 2.69 6 6 0 2.61-1.67 4.81-4 5.63-.63.22-1.29.37-2 .37-3.31 0-6-2.69-6-6 0-.55-.45-1-1-1s-1 .45-1 1c0 4.42 3.58 8 8 8 .34 0 .67-.03 1-.07.02 0 .04-.01.06-.01C12.98 15.4 16 12.06 16 8c0-4.42-3.58-8-8-8zm3 5c-.28 0-.53.11-.71.29L7 8.58 5.71 7.29a1.003 1.003 0 00-1.42 1.42l2 2c.18.18.43.29.71.29.28 0 .53-.11.71-.29l4-4A1.003 1.003 0 0011 5z"];
  var upload$1 = ["M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm3 8c-.28 0-.53-.11-.71-.29L9 6.41V12c0 .55-.45 1-1 1s-1-.45-1-1V6.41l-1.29 1.3a1.003 1.003 0 01-1.42-1.42l3-3C7.47 3.11 7.72 3 8 3s.53.11.71.29l3 3A1.003 1.003 0 0111 8z"];
  var user$1 = ["M7.99-.01A7.998 7.998 0 00.03 8.77c.01.09.03.18.04.28.02.15.04.31.07.47.02.11.05.22.08.34.03.13.06.26.1.38.04.12.08.25.12.37.04.11.08.21.12.32a6.583 6.583 0 00.3.65c.07.14.14.27.22.4.04.07.08.13.12.2l.27.42.1.13a7.973 7.973 0 003.83 2.82c.03.01.05.02.07.03.37.12.75.22 1.14.29l.2.03c.39.06.79.1 1.2.1s.81-.04 1.2-.1l.2-.03c.39-.07.77-.16 1.14-.29.03-.01.05-.02.07-.03a8.037 8.037 0 003.83-2.82c.03-.04.06-.08.09-.13.1-.14.19-.28.28-.42.04-.07.08-.13.12-.2.08-.13.15-.27.22-.41.04-.08.08-.17.12-.26.06-.13.11-.26.17-.39.04-.1.08-.21.12-.32.04-.12.08-.24.12-.37.04-.13.07-.25.1-.38.03-.11.06-.22.08-.34.03-.16.05-.31.07-.47.01-.09.03-.18.04-.28.02-.26.04-.51.04-.78-.03-4.41-3.61-7.99-8.03-7.99zm0 14.4c-1.98 0-3.75-.9-4.92-2.31.67-.36 1.49-.66 2.14-.95 1.16-.52 1.04-.84 1.08-1.27.01-.06.01-.11.01-.17-.41-.36-.74-.86-.96-1.44v-.01c0-.01-.01-.02-.01-.02-.05-.13-.09-.26-.12-.39-.28-.05-.44-.35-.5-.63-.06-.11-.18-.38-.15-.69.04-.41.2-.59.38-.67v-.06c0-.51.05-1.24.14-1.72.02-.13.05-.26.09-.39.17-.59.53-1.12 1.01-1.49.49-.38 1.19-.59 1.82-.59.62 0 1.32.2 1.82.59.48.37.84.9 1.01 1.49.04.13.07.26.09.4.09.48.14 1.21.14 1.72v.07c.18.08.33.26.37.66.03.31-.1.58-.16.69-.06.27-.21.57-.48.62-.03.13-.07.26-.12.38 0 .01-.01.04-.01.04-.21.57-.54 1.06-.94 1.42 0 .06.01.13.01.19.04.43-.12.75 1.05 1.27.65.29 1.47.6 2.14.95a6.415 6.415 0 01-4.93 2.31z"];
  var variable$1 = ["M3.94 3.15c.47-.66 1.05-1.24 1.76-1.73l.13-.4c-1.11.45-2.05 1.01-2.84 1.7-1.02.88-1.8 1.9-2.32 3.05C.22 6.76 0 7.75 0 8.75c0 1.75.66 3.5 1.99 5.25l.13-.42c-.39-.94-.59-1.82-.59-2.63 0-1.28.22-2.64.67-4.1.45-1.45 1.03-2.69 1.74-3.7zm7.51 6.41l-.27-.15c-.3.41-.52.66-.66.77-.09.06-.21.1-.33.1-.15 0-.3-.1-.45-.28-.25-.33-.59-1.22-1.01-2.69.38-.65.69-1.08.95-1.28.19-.15.39-.22.59-.22.08 0 .22.03.43.08.2.06.39.08.54.08.22 0 .4-.07.54-.22.15-.15.22-.34.22-.57 0-.25-.07-.45-.22-.59-.15-.15-.35-.22-.63-.22-.24 0-.47.06-.69.17-.21.11-.49.36-.82.74-.25.28-.61.78-1.1 1.48a6.72 6.72 0 00-.97-2.38l-2.59.44-.05.27c.19-.04.36-.06.49-.06.26 0 .47.11.64.33.26.34.63 1.38 1.11 3.12-.37.49-.63.81-.77.96-.23.24-.41.4-.56.47-.11.06-.24.09-.39.09-.11 0-.29-.06-.53-.18-.17-.07-.32-.11-.45-.11-.25 0-.46.08-.62.24-.16.16-.24.37-.24.61 0 .23.08.42.23.57.15.15.35.22.61.22.25 0 .48-.05.7-.15.22-.1.49-.32.82-.65.33-.33.78-.86 1.36-1.59.22.69.42 1.19.58 1.51.16.31.35.54.56.68.21.14.47.21.79.21.31 0 .62-.11.93-.33.4-.29.82-.77 1.26-1.47zm2.56-8.54l-.12.42c.39.95.59 1.82.59 2.64 0 1.09-.17 2.26-.5 3.51-.26.96-.6 1.87-1.02 2.71-.42.85-.82 1.51-1.21 1.98-.39.48-.87.92-1.44 1.32l-.14.4c1.11-.45 2.05-1.02 2.84-1.7 1.03-.89 1.81-1.91 2.33-3.05.44-.99.66-1.99.66-3 0-1.73-.66-3.48-1.99-5.23z"];
  var verticalBarChartAsc$1 = ["M6 7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1zM2 9c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm8-5c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1zm4-4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var verticalBarChartDesc$1 = ["M6 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1zM2 0c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm8 7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1s1-.45 1-1V8c0-.55-.45-1-1-1zm4 2c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1z"];
  var verticalDistribution$1 = ["M1 2h14c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1zm14 11H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM3 5c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1H3z"];
  var verticalInbetween$1 = ["M16 0H0v1a1 1 0 001 1h14a1 1 0 001-1V0zM0 15v1h16v-1a1 1 0 00-1-1H1a1 1 0 00-1 1zM8.707 3.293a1 1 0 00-1.414 0l-2 2a1 1 0 001.414 1.414L8 5.414l1.293 1.293a1 1 0 001.414-1.414l-2-2zm-2 6a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l2-2a1 1 0 00-1.414-1.414L8 10.586 6.707 9.293z"];
  var video$1 = ["M15 2H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM5 11V5l6 3-6 3z"];
  var virus$1 = ["M11.918 11.107l.737.737.052-.051A1 1 0 0114.2 13.12l-.078.087-1.414 1.414a1 1 0 01-1.492-1.327l.029-.033-.863-.863c-.426.231-.89.402-1.38.502L9 14l.117.007A1 1 0 019 16H7l-.117-.007A1 1 0 017 14v-1.1a4.967 4.967 0 01-1.447-.539l-.846.846.078.087a1 1 0 01-1.492 1.327l-1.414-1.414-.078-.087a1 1 0 011.492-1.327l.744-.744A4.986 4.986 0 013.23 9.5H2a1 1 0 01-1.993.117L0 9.5v-2a1 1 0 011.993-.117L2 7.5h1.025a4.973 4.973 0 01.905-2.405l-.512-.513-.125.125A1 1 0 011.8 3.38l.078-.087 1.414-1.414a1 1 0 011.529 1.277l.573.575a4.969 4.969 0 011.604-.63V2l-.116-.007a1 1 0 010-1.986L7 0h2a1 1 0 01.117 1.993L9 2l.001 1.1c.639.13 1.233.381 1.757.73l.535-.537-.078-.087a1 1 0 011.492-1.327l1.414 1.414.078.087a1 1 0 01-1.492 1.327l-.535.536a4.97 4.97 0 01.803 2.257H14l.007-.117A1 1 0 0116 7.5v2l-.007.117A1 1 0 0114 9.5h-1.229a4.987 4.987 0 01-.853 1.607zM10 9a1 1 0 100 2 1 1 0 000-2zM6.5 5a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"];
  var volumeDown$1 = ["M9 2c-.28 0-.53.11-.71.29L5.59 5H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm3.57 1.44l-1.59 1.22C11.62 5.61 12 6.76 12 8s-.38 2.39-1.02 3.34l1.59 1.22C13.47 11.27 14 9.7 14 8c0-1.7-.53-3.27-1.43-4.56z"];
  var volumeOff$1 = ["M11 2c-.28 0-.53.11-.71.29L7.59 5H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"];
  var volumeUp$1 = ["M7 1.86c-.28 0-.53.11-.71.29l-2.7 2.71H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2.59l2.71 2.71a1.003 1.003 0 001.71-.71v-10c-.01-.55-.46-1-1.01-1zm6.74-.99l-1.58 1.22A9.985 9.985 0 0114 7.86c0 2.16-.69 4.15-1.85 5.78l1.58 1.22c1.42-1.97 2.26-4.38 2.26-7 .01-2.61-.84-5.02-2.25-6.99zM8.98 4.52C9.62 5.48 10 6.63 10 7.86s-.38 2.39-1.02 3.34l1.59 1.22c.9-1.29 1.43-2.86 1.43-4.56 0-1.7-.53-3.27-1.43-4.56L8.98 4.52z"];
  var walk$1 = ["M13 8h-2c-.16 0-.31-.05-.44-.11v.01l-1.02-.51-.37 1.86 1.38.92-.01.02c.27.17.46.46.46.81v4c0 .55-.45 1-1 1s-1-.45-1-1v-3.46l-1.27-.85-1.8 4.67h-.01A.98.98 0 015 16c-.55 0-1-.45-1-1 0-.13.03-.25.07-.36h-.01L7.39 6H5.62l-.73 1.45h-.01C4.72 7.77 4.39 8 4 8c-.55 0-1-.45-1-1 0-.16.05-.31.11-.44H3.1l1-2h.01c.17-.33.5-.56.89-.56h3.16l.29-.75C8.17 2.9 8 2.47 8 2c0-1.1.9-2 2-2s2 .9 2 2c0 1-.73 1.82-1.69 1.97l-.5 1.32 1.43.71H13c.55 0 1 .45 1 1s-.45 1-1 1z"];
  var warningSign$1 = ["M15.84 13.5l.01-.01-7-12-.01.01c-.17-.3-.48-.5-.85-.5s-.67.2-.85.5l-.01-.01-7 12 .01.01c-.09.15-.15.31-.15.5 0 .55.45 1 1 1h14c.55 0 1-.45 1-1 0-.19-.06-.35-.15-.5zm-6.85-.51h-2v-2h2v2zm0-3h-2v-5h2v5z"];
  var waterfallChart$1 = ["M8 7c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm-4 4h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1zm7-6c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1s-1 .45-1 1v1c0 .55.45 1 1 1zm4-3h-1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 10H2V3c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var waves$1 = ["M3 1a1 1 0 01.894.553c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.173.344.38.75.637 1.072.277.347.437.375.469.375a1 1 0 110 2c-.968 0-1.642-.64-2.03-1.125a4.755 4.755 0 01-.076-.097 6.093 6.093 0 01-.221.212C12.175 4.442 11.393 5 10.5 5c-.892 0-1.675-.558-2.173-1.01A6.243 6.243 0 018 3.67c-.105.11-.214.217-.327.32C7.175 4.442 6.393 5 5.5 5c-.892 0-1.675-.558-2.173-1.01a6.119 6.119 0 01-.221-.212l-.075.097C2.64 4.36 1.968 5 1 5a1 1 0 010-2c.032 0 .191-.028.47-.375.256-.321.463-.728.636-1.072A1 1 0 013 1zm0 5a1 1 0 01.894.553c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.102.202.393.607.779.957.419.381.72.49.827.49.108 0 .408-.109.827-.49.386-.35.677-.755.779-.957a1 1 0 011.788 0c.173.344.38.75.637 1.072.277.347.437.375.469.375a1 1 0 110 2c-.968 0-1.642-.639-2.03-1.125a4.726 4.726 0 01-.076-.097 6.093 6.093 0 01-.221.212c-.498.452-1.28 1.01-2.173 1.01-.892 0-1.675-.558-2.173-1.01A6.243 6.243 0 018 8.67c-.105.11-.214.217-.327.32C7.175 9.442 6.393 10 5.5 10c-.892 0-1.675-.558-2.173-1.01a6.119 6.119 0 01-.221-.212l-.075.097C2.64 9.36 1.968 10 1 10a1 1 0 010-2c.032 0 .191-.028.47-.375.256-.321.463-.728.636-1.072A1 1 0 013 6zm.894 5.553a1 1 0 00-1.788 0c-.173.344-.38.75-.637 1.072-.278.347-.437.375-.469.375a1 1 0 100 2c.968 0 1.642-.639 2.03-1.125a4.9 4.9 0 00.076-.097c.072.073.146.143.221.212.498.452 1.28 1.01 2.173 1.01.892 0 1.675-.558 2.173-1.01.113-.103.222-.21.327-.32.105.11.214.217.327.32.498.452 1.28 1.01 2.173 1.01.892 0 1.675-.558 2.173-1.01.075-.069.149-.14.221-.212a4.9 4.9 0 00.075.097C13.36 14.36 14.032 15 15 15a1 1 0 100-2c-.032 0-.191-.028-.47-.375-.256-.321-.463-.728-.636-1.072a1 1 0 00-1.788 0c-.102.202-.393.607-.779.957-.419.381-.72.49-.827.49-.108 0-.408-.109-.827-.49-.386-.35-.677-.755-.779-.957a1 1 0 00-1.788 0c-.102.202-.393.607-.779.957-.419.381-.72.49-.827.49-.108 0-.408-.109-.827-.49-.386-.35-.677-.755-.779-.957z"];
  var widget$1 = ["M13 11h2V5h-2v6zM3 5H1v6h2V5zm11-1c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 12c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM5 3h6V1H5v2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3 15h6v-2H5v2z"];
  var widgetButton$1 = ["M1 3h14c.55 0 1 .45 1 1v8c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1zm1 2v6h12V5H2zm3 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm3 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var widgetFooter$1 = ["M14 0H2c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H3v-3h10v3zm0-4H3V2h10v8z"];
  var widgetHeader$1 = ["M14 0H2c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 14H3V6h10v8zm0-9H3V2h10v3z"];
  var wind$1 = ["M10 4a2 2 0 112 2H4a1 1 0 000 2h8a4 4 0 10-4-4 1 1 0 002 0zM1 9a1 1 0 100 2h7.5a1.5 1.5 0 010 3c-.749 0-1.386-.538-1.52-1.199a1 1 0 10-1.96.398C5.35 14.82 6.83 16 8.5 16a3.5 3.5 0 100-7H1z"];
  var wrench$1 = ["M15.83 3.7l-3.06 3.05-2.84-.7-.7-2.83L12.29.17a5.004 5.004 0 00-4.83 1.29 4.967 4.967 0 00-1.12 5.36L.58 12.58c-.36.36-.58.86-.58 1.41 0 1.1.9 2 2 2 .55 0 1.05-.22 1.41-.59l5.77-5.77c1.79.69 3.91.33 5.35-1.12 1.32-1.3 1.74-3.15 1.3-4.81z"];
  var zoomIn$1 = ["M7.99 5.99v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2zm7.56 7.44l-2.67-2.68a6.94 6.94 0 001.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"];
  var zoomOut$1 = ["M3.99 5.99c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1h-6zm11.56 7.44l-2.67-2.68a6.94 6.94 0 001.11-3.76c0-3.87-3.13-7-7-7s-7 3.13-7 7 3.13 7 7 7c1.39 0 2.68-.42 3.76-1.11l2.68 2.67a1.498 1.498 0 102.12-2.12zm-8.56-1.44c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"];
  var zoomToFit$3 = ["M11 10a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42L12.59 8 11.3 9.29c-.19.18-.3.43-.3.71zM1 5c.55 0 1-.45 1-1V2h2c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v3c0 .55.45 1 1 1zm4 1a1.003 1.003 0 00-1.71-.71l-2 2C1.11 7.47 1 7.72 1 8c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L3.41 8 4.7 6.71c.19-.18.3-.43.3-.71zm1-1c.28 0 .53-.11.71-.29L8 3.41 9.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2C8.53 1.11 8.28 1 8 1s-.53.11-.71.29l-2 2A1.003 1.003 0 006 5zm9 6c-.55 0-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1zm0-11h-3c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zM4 14H2v-2c0-.55-.45-1-1-1s-1 .45-1 1v3c0 .55.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm6-3c-.28 0-.53.11-.71.29L8 12.59 6.71 11.3A.965.965 0 006 11a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0010 11z"];
  var IconSvgPaths16 = Object.freeze({
    __proto__: null,
    Add: add$5,
    AddClip: addClip$1,
    AddColumnLeft: addColumnLeft$1,
    AddColumnRight: addColumnRight$1,
    AddLocation: addLocation$1,
    AddRowBottom: addRowBottom$1,
    AddRowTop: addRowTop$1,
    AddToArtifact: addToArtifact$1,
    AddToFolder: addToFolder$1,
    Airplane: airplane$1,
    AlignCenter: alignCenter$1,
    AlignJustify: alignJustify$1,
    AlignLeft: alignLeft$1,
    AlignRight: alignRight$1,
    AlignmentBottom: alignmentBottom$1,
    AlignmentHorizontalCenter: alignmentHorizontalCenter$1,
    AlignmentLeft: alignmentLeft$1,
    AlignmentRight: alignmentRight$1,
    AlignmentTop: alignmentTop$1,
    AlignmentVerticalCenter: alignmentVerticalCenter$1,
    Annotation: annotation$1,
    Antenna: antenna$1,
    AppHeader: appHeader$1,
    Application: application$1,
    Applications: applications$1,
    Archive: archive$1,
    AreaOfInterest: areaOfInterest$1,
    Array: array$1,
    ArrayBoolean: arrayBoolean$1,
    ArrayDate: arrayDate$1,
    ArrayFloatingPoint: arrayFloatingPoint$1,
    ArrayNumeric: arrayNumeric$1,
    ArrayString: arrayString$1,
    ArrayTimestamp: arrayTimestamp$1,
    ArrowBottomLeft: arrowBottomLeft$1,
    ArrowBottomRight: arrowBottomRight$1,
    ArrowDown: arrowDown$1,
    ArrowLeft: arrowLeft$1,
    ArrowRight: arrowRight$1,
    ArrowTopLeft: arrowTopLeft$1,
    ArrowTopRight: arrowTopRight$1,
    ArrowUp: arrowUp$1,
    ArrowsHorizontal: arrowsHorizontal$1,
    ArrowsVertical: arrowsVertical$1,
    Asterisk: asterisk$1,
    AutomaticUpdates: automaticUpdates$1,
    Backlink: backlink$1,
    Badge: badge$1,
    BanCircle: banCircle$1,
    BankAccount: bankAccount$1,
    Barcode: barcode$1,
    Blank: p$1,
    BlockedPerson: blockedPerson$1,
    Bold: bold$1,
    Book: book$1,
    Bookmark: bookmark$1,
    Box: box$1,
    Briefcase: briefcase$1,
    BringData: bringData$1,
    Buggy: buggy$1,
    Build: build$1,
    Calculator: calculator$1,
    Calendar: calendar$1,
    Camera: camera$2,
    CaretDown: caretDown$1,
    CaretLeft: caretLeft$1,
    CaretRight: caretRight$1,
    CaretUp: caretUp$1,
    CargoShip: cargoShip$1,
    CellTower: cellTower$1,
    Changes: changes$1,
    Chart: chart$1,
    Chat: chat$1,
    ChevronBackward: chevronBackward$1,
    ChevronDown: chevronDown$1,
    ChevronForward: chevronForward$1,
    ChevronLeft: chevronLeft$1,
    ChevronRight: chevronRight$1,
    ChevronUp: chevronUp$1,
    Circle: circle$1,
    CircleArrowDown: circleArrowDown$1,
    CircleArrowLeft: circleArrowLeft$1,
    CircleArrowRight: circleArrowRight$1,
    CircleArrowUp: circleArrowUp$1,
    Citation: citation$1,
    Clean: clean$1,
    Clip: clip$1,
    Clipboard: clipboard$1,
    Cloud: cloud$1,
    CloudDownload: cloudDownload$1,
    CloudUpload: cloudUpload$1,
    Code: code$1,
    CodeBlock: codeBlock$1,
    Cog: cog$1,
    CollapseAll: collapseAll$1,
    ColorFill: colorFill$1,
    ColumnLayout: columnLayout$1,
    Comment: comment$1,
    Comparison: comparison$1,
    Compass: compass$1,
    Compressed: compressed$1,
    Confirm: confirm$1,
    Console: console$2,
    Contrast: contrast$1,
    Control: control$1,
    CreditCard: creditCard$1,
    Cross: cross$5,
    Crown: crown$1,
    Cube: cube$1,
    CubeAdd: cubeAdd$1,
    CubeRemove: cubeRemove$1,
    CurvedRangeChart: curvedRangeChart$1,
    Cut: cut$1,
    Cycle: cycle$1,
    Dashboard: dashboard$1,
    DataConnection: dataConnection$1,
    DataLineage: dataLineage$1,
    Database: database$1,
    Delete: _delete$1,
    Delta: delta$1,
    DeriveColumn: deriveColumn$1,
    Desktop: desktop$1,
    Diagnosis: diagnosis$1,
    DiagramTree: diagramTree$1,
    DirectionLeft: directionLeft$1,
    DirectionRight: directionRight$1,
    Disable: disable$1,
    Divide: divide$4,
    Document: document$2,
    DocumentOpen: documentOpen$1,
    DocumentShare: documentShare$1,
    Dollar: dollar$1,
    Dot: dot$7,
    DoubleCaretHorizontal: doubleCaretHorizontal$1,
    DoubleCaretVertical: doubleCaretVertical$1,
    DoubleChevronDown: doubleChevronDown$1,
    DoubleChevronLeft: doubleChevronLeft$1,
    DoubleChevronRight: doubleChevronRight$1,
    DoubleChevronUp: doubleChevronUp$1,
    DoughnutChart: doughnutChart$1,
    Download: download$1,
    DragHandleHorizontal: dragHandleHorizontal$1,
    DragHandleVertical: dragHandleVertical$1,
    Draw: draw$1,
    DrawerLeft: drawerLeft$1,
    DrawerLeftFilled: drawerLeftFilled$1,
    DrawerRight: drawerRight$1,
    DrawerRightFilled: drawerRightFilled$1,
    DriveTime: driveTime$1,
    Duplicate: duplicate$1,
    Edit: edit$1,
    Eject: eject$1,
    Emoji: emoji$1,
    Endorsed: endorsed$1,
    Envelope: envelope$1,
    Equals: equals$8,
    Eraser: eraser$1,
    Error: error$1,
    Euro: euro$1,
    Exchange: exchange$1,
    ExcludeRow: excludeRow$1,
    ExpandAll: expandAll$1,
    Export: _export$1,
    EyeOff: eyeOff$1,
    EyeOn: eyeOn$1,
    EyeOpen: eyeOpen$1,
    FastBackward: fastBackward$1,
    FastForward: fastForward$1,
    Feed: feed$1,
    FeedSubscribed: feedSubscribed$1,
    Film: film$1,
    Filter: filter$1,
    FilterKeep: filterKeep$1,
    FilterList: filterList$1,
    FilterOpen: filterOpen$1,
    FilterRemove: filterRemove$1,
    Flag: flag$1,
    Flame: flame$1,
    Flash: flash$1,
    FloatingPoint: floatingPoint$1,
    FloppyDisk: floppyDisk$1,
    FlowBranch: flowBranch$1,
    FlowEnd: flowEnd$1,
    FlowLinear: flowLinear$1,
    FlowReview: flowReview$1,
    FlowReviewBranch: flowReviewBranch$1,
    Flows: flows$1,
    FolderClose: folderClose$1,
    FolderNew: folderNew$1,
    FolderOpen: folderOpen$1,
    FolderShared: folderShared$1,
    FolderSharedOpen: folderSharedOpen$1,
    Follower: follower$1,
    Following: following$1,
    Font: font$1,
    Fork: fork$1,
    Form: form$1,
    Fuel: fuel$1,
    FullCircle: fullCircle$1,
    FullStackedChart: fullStackedChart$1,
    Fullscreen: fullscreen$1,
    Function: _function$1,
    GanttChart: ganttChart$1,
    Geofence: geofence$1,
    Geolocation: geolocation$1,
    Geosearch: geosearch$1,
    GitBranch: gitBranch$1,
    GitCommit: gitCommit$1,
    GitMerge: gitMerge$1,
    GitNewBranch: gitNewBranch$1,
    GitPull: gitPull$1,
    GitPush: gitPush$1,
    GitRepo: gitRepo$1,
    Glass: glass$1,
    Globe: globe$1,
    GlobeNetwork: globeNetwork$1,
    Graph: graph$1,
    GraphRemove: graphRemove$1,
    GreaterThan: greaterThan$1,
    GreaterThanOrEqualTo: greaterThanOrEqualTo$1,
    Grid: grid$1,
    GridView: gridView$1,
    GroupObjects: groupObjects$1,
    GroupedBarChart: groupedBarChart$1,
    Hand: hand$1,
    HandDown: handDown$1,
    HandLeft: handLeft$1,
    HandRight: handRight$1,
    HandUp: handUp$1,
    Hat: hat$1,
    Header: header$1,
    HeaderOne: headerOne$1,
    HeaderThree: headerThree$1,
    HeaderTwo: headerTwo$1,
    Headset: headset$1,
    Heart: heart$1,
    HeartBroken: heartBroken$1,
    HeatGrid: heatGrid$1,
    Heatmap: heatmap$1,
    Helicopter: helicopter$1,
    Help: help$1,
    HelperManagement: helperManagement$1,
    HighPriority: highPriority$1,
    Highlight: highlight$1,
    History: history$1,
    Home: home$1,
    HorizontalBarChart: horizontalBarChart$1,
    HorizontalBarChartAsc: horizontalBarChartAsc$1,
    HorizontalBarChartDesc: horizontalBarChartDesc$1,
    HorizontalDistribution: horizontalDistribution$1,
    HorizontalInbetween: horizontalInbetween$1,
    Hurricane: hurricane$1,
    IdNumber: idNumber$1,
    ImageRotateLeft: imageRotateLeft$1,
    ImageRotateRight: imageRotateRight$1,
    Import: _import$1,
    Inbox: inbox$1,
    InboxFiltered: inboxFiltered$1,
    InboxGeo: inboxGeo$1,
    InboxSearch: inboxSearch$1,
    InboxUpdate: inboxUpdate$1,
    InfoSign: infoSign$1,
    Inheritance: inheritance$1,
    InheritedGroup: inheritedGroup$1,
    InnerJoin: innerJoin$1,
    Insert: insert$1,
    Intersection: intersection$1,
    IpAddress: ipAddress$1,
    Issue: issue$1,
    IssueClosed: issueClosed$1,
    IssueNew: issueNew$1,
    Italic: italic$1,
    JoinTable: joinTable$1,
    Key: key$2,
    KeyBackspace: keyBackspace$1,
    KeyCommand: keyCommand$1,
    KeyControl: keyControl$1,
    KeyDelete: keyDelete$1,
    KeyEnter: keyEnter$1,
    KeyEscape: keyEscape$1,
    KeyOption: keyOption$1,
    KeyShift: keyShift$1,
    KeyTab: keyTab$1,
    KnownVehicle: knownVehicle$1,
    LabTest: labTest$1,
    Label: label$1,
    Layer: layer$1,
    LayerOutline: layerOutline$1,
    Layers: layers$1,
    Layout: layout$1,
    LayoutAuto: layoutAuto$1,
    LayoutBalloon: layoutBalloon$1,
    LayoutCircle: layoutCircle$1,
    LayoutGrid: layoutGrid$1,
    LayoutGroupBy: layoutGroupBy$1,
    LayoutHierarchy: layoutHierarchy$1,
    LayoutLinear: layoutLinear$1,
    LayoutSkewGrid: layoutSkewGrid$1,
    LayoutSortedClusters: layoutSortedClusters$1,
    Learning: learning$1,
    LeftJoin: leftJoin$1,
    LessThan: lessThan$1,
    LessThanOrEqualTo: lessThanOrEqualTo$1,
    Lifesaver: lifesaver$1,
    Lightbulb: lightbulb$1,
    Lightning: lightning$1,
    Link: link$1,
    List: list$1,
    ListColumns: listColumns$1,
    ListDetailView: listDetailView$1,
    Locate: locate$1,
    Lock: lock$1,
    LogIn: logIn$1,
    LogOut: logOut$1,
    Manual: manual$1,
    ManuallyEnteredData: manuallyEnteredData$1,
    ManyToMany: manyToMany$1,
    ManyToOne: manyToOne$1,
    Map: map$1,
    MapCreate: mapCreate$1,
    MapMarker: mapMarker$1,
    Maximize: maximize$1,
    Media: media$1,
    Menu: menu$1,
    MenuClosed: menuClosed$1,
    MenuOpen: menuOpen$1,
    MergeColumns: mergeColumns$1,
    MergeLinks: mergeLinks$1,
    Minimize: minimize$1,
    Minus: minus$1,
    MobilePhone: mobilePhone$1,
    MobileVideo: mobileVideo$1,
    Modal: modal$1,
    ModalFilled: modalFilled$1,
    Moon: moon$1,
    More: more$1,
    Mountain: mountain$1,
    Move: move$1,
    Mugshot: mugshot$1,
    MultiSelect: multiSelect$1,
    Music: music$1,
    Nest: nest$1,
    NewDrawing: newDrawing$1,
    NewGridItem: newGridItem$1,
    NewLayer: newLayer$1,
    NewLayers: newLayers$1,
    NewLink: newLink$1,
    NewObject: newObject$1,
    NewPerson: newPerson$1,
    NewPrescription: newPrescription$1,
    NewTextBox: newTextBox$1,
    Ninja: ninja$1,
    NotEqualTo: notEqualTo$1,
    Notifications: notifications$1,
    NotificationsSnooze: notificationsSnooze$1,
    NotificationsUpdated: notificationsUpdated$1,
    NumberedList: numberedList$1,
    Numerical: numerical$1,
    Office: office$1,
    Offline: offline$1,
    OilField: oilField$1,
    OneColumn: oneColumn$1,
    OneToMany: oneToMany$1,
    OneToOne: oneToOne$1,
    OpenApplication: openApplication$1,
    Outdated: outdated$1,
    PageLayout: pageLayout$1,
    PanelStats: panelStats$1,
    PanelTable: panelTable$1,
    Paperclip: paperclip$1,
    Paragraph: paragraph$1,
    Path: path$1,
    PathSearch: pathSearch$1,
    Pause: pause$1,
    People: people$1,
    Percentage: percentage$1,
    Person: person$1,
    Phone: phone$1,
    PieChart: pieChart$1,
    Pin: pin$1,
    Pivot: pivot$1,
    PivotTable: pivotTable$1,
    Play: play$1,
    Playbook: playbook$1,
    Plus: plus$1,
    PolygonFilter: polygonFilter$1,
    Power: power$1,
    PredictiveAnalysis: predictiveAnalysis$1,
    Prescription: prescription$1,
    Presentation: presentation$1,
    Print: print$1,
    Projects: projects$1,
    Properties: properties$1,
    Property: property$1,
    PublishFunction: publishFunction$1,
    Pulse: pulse$1,
    Rain: rain$1,
    Random: random$2,
    Record: record$1,
    RectHeight: rectHeight$1,
    RectWidth: rectWidth$1,
    Rectangle: rectangle$1,
    Redo: redo$1,
    Refresh: refresh$1,
    RegressionChart: regressionChart$1,
    Remove: remove$1,
    RemoveColumn: removeColumn$1,
    RemoveColumnLeft: removeColumnLeft$1,
    RemoveColumnRight: removeColumnRight$1,
    RemoveRowBottom: removeRowBottom$1,
    RemoveRowTop: removeRowTop$1,
    Repeat: repeat$1,
    Reset: reset$2,
    Resolve: resolve$1,
    Rig: rig$1,
    RightJoin: rightJoin$1,
    Ring: ring$1,
    Rocket: rocket$1,
    RocketSlant: rocketSlant$1,
    RotateDocument: rotateDocument$1,
    RotatePage: rotatePage$1,
    Route: route$1,
    Satellite: satellite$1,
    Saved: saved$1,
    ScatterPlot: scatterPlot$1,
    Search: search$1,
    SearchAround: searchAround$1,
    SearchTemplate: searchTemplate$1,
    SearchText: searchText$1,
    SegmentedControl: segmentedControl$1,
    Select: select$1,
    Selection: selection$1,
    SendMessage: sendMessage$1,
    SendTo: sendTo$1,
    SendToGraph: sendToGraph$1,
    SendToMap: sendToMap$1,
    SeriesAdd: seriesAdd$1,
    SeriesConfiguration: seriesConfiguration$1,
    SeriesDerived: seriesDerived$1,
    SeriesFiltered: seriesFiltered$1,
    SeriesSearch: seriesSearch$1,
    Settings: settings$1,
    Shapes: shapes$1,
    Share: share$1,
    SharedFilter: sharedFilter$1,
    Shield: shield$1,
    Ship: ship$1,
    Shop: shop$1,
    ShoppingCart: shoppingCart$1,
    SignalSearch: signalSearch$1,
    SimCard: simCard$1,
    Slash: slash$1,
    SmallCross: smallCross$1,
    SmallMinus: smallMinus$1,
    SmallPlus: smallPlus$1,
    SmallSquare: smallSquare$1,
    SmallTick: smallTick$1,
    Snowflake: snowflake$1,
    SocialMedia: socialMedia$1,
    Sort: sort$1,
    SortAlphabetical: sortAlphabetical$1,
    SortAlphabeticalDesc: sortAlphabeticalDesc$1,
    SortAsc: sortAsc$1,
    SortDesc: sortDesc$1,
    SortNumerical: sortNumerical$1,
    SortNumericalDesc: sortNumericalDesc$1,
    SplitColumns: splitColumns$1,
    Square: square$1,
    StackedChart: stackedChart$1,
    StadiumGeometry: stadiumGeometry$1,
    Star: star$1,
    StarEmpty: starEmpty$1,
    StepBackward: stepBackward$1,
    StepChart: stepChart$1,
    StepForward: stepForward$1,
    Stop: stop$1,
    Stopwatch: stopwatch$1,
    Strikethrough: strikethrough$1,
    Style: style$1,
    SwapHorizontal: swapHorizontal$1,
    SwapVertical: swapVertical$1,
    Switch: _switch$1,
    SymbolCircle: symbolCircle$1,
    SymbolCross: symbolCross$1,
    SymbolDiamond: symbolDiamond$1,
    SymbolRectangle: symbolRectangle$1,
    SymbolSquare: symbolSquare$1,
    SymbolTriangleDown: symbolTriangleDown$1,
    SymbolTriangleUp: symbolTriangleUp$1,
    Syringe: syringe$1,
    Tag: tag$1,
    TakeAction: takeAction$1,
    Tank: tank$1,
    Target: target$1,
    Taxi: taxi$1,
    Temperature: temperature$1,
    TextHighlight: textHighlight$1,
    Th: th$1,
    ThDerived: thDerived$1,
    ThDisconnect: thDisconnect$1,
    ThFiltered: thFiltered$1,
    ThList: thList$1,
    ThirdParty: thirdParty$1,
    ThumbsDown: thumbsDown$1,
    ThumbsUp: thumbsUp$1,
    Tick: tick$1,
    TickCircle: tickCircle$1,
    Time: time$2,
    TimelineAreaChart: timelineAreaChart$1,
    TimelineBarChart: timelineBarChart$1,
    TimelineEvents: timelineEvents$1,
    TimelineLineChart: timelineLineChart$1,
    Tint: tint$1,
    Torch: torch$1,
    Tractor: tractor$1,
    Train: train$1,
    Translate: translate$3,
    Trash: trash$1,
    Tree: tree$1,
    TrendingDown: trendingDown$1,
    TrendingUp: trendingUp$1,
    Truck: truck$1,
    TwoColumns: twoColumns$1,
    Unarchive: unarchive$1,
    Underline: underline$1,
    Undo: undo$1,
    UngroupObjects: ungroupObjects$1,
    UnknownVehicle: unknownVehicle$1,
    Unlock: unlock$1,
    Unpin: unpin$1,
    Unresolve: unresolve$1,
    Updated: updated$1,
    Upload: upload$1,
    User: user$1,
    Variable: variable$1,
    VerticalBarChartAsc: verticalBarChartAsc$1,
    VerticalBarChartDesc: verticalBarChartDesc$1,
    VerticalDistribution: verticalDistribution$1,
    VerticalInbetween: verticalInbetween$1,
    Video: video$1,
    Virus: virus$1,
    VolumeDown: volumeDown$1,
    VolumeOff: volumeOff$1,
    VolumeUp: volumeUp$1,
    Walk: walk$1,
    WarningSign: warningSign$1,
    WaterfallChart: waterfallChart$1,
    Waves: waves$1,
    Widget: widget$1,
    WidgetButton: widgetButton$1,
    WidgetFooter: widgetFooter$1,
    WidgetHeader: widgetHeader$1,
    Wind: wind$1,
    Wrench: wrench$1,
    ZoomIn: zoomIn$1,
    ZoomOut: zoomOut$1,
    ZoomToFit: zoomToFit$3
  });
  var add$4 = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm5-9h-4V5c0-.55-.45-1-1-1s-1 .45-1 1v4H5c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1v-4h4c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var addClip = ["M15 0a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0V6h-3a1 1 0 110-2h3V1a1 1 0 011-1zM1 4a1 1 0 00-1 1v4a1 1 0 002 0V6h3a1 1 0 000-2H1zM0 19a1 1 0 001 1h4a1 1 0 100-2H2v-3a1 1 0 10-2 0v4zm15 1h-4a1 1 0 110-2h3v-3a1 1 0 112 0v4a1 1 0 01-1 1zm-7-5a3 3 0 100-6 3 3 0 000 6z"];
  var addColumnLeft = ["M4 11h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1H8V7c0-.55-.45-1-1-1s-1 .45-1 1v2H4c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-7 18H2V2h10v16zm6 0h-5V2h5v16z"];
  var addColumnRight = ["M10 11h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V7c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1zm9-11H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H2V2h5v16zm11 0H8V2h10v16z"];
  var addLocation = ["M10 0a1 1 0 010 2 8 8 0 108 8 1 1 0 012 0c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0zm0 6a4 4 0 110 8 4 4 0 010-8zm6-6c.6 0 1 .4 1 1v2h2c.6 0 1 .4 1 1s-.4 1-1 1h-2v2c0 .6-.4 1-1 1s-1-.4-1-1V5h-2c-.6 0-1-.4-1-1 0-.5.4-1 1-1h2V1c0-.6.4-1 1-1z"];
  var addRowBottom = ["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V8h16v10zm0-11H2V2h16v5zM7 14h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2H7c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var addRowTop = ["M7 8h2v2c0 .55.45 1 1 1s1-.45 1-1V8h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V4c0-.55-.45-1-1-1s-1 .45-1 1v2H7c-.55 0-1 .45-1 1s.45 1 1 1zm12-8H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2v-5h16v5zm0-6H2V2h16v10z"];
  var addToArtifact = ["M13 12H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zM1 6h9c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm12 2H1c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm6-4h-2V2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var addToFolder = ["M.01 10V6H20v10c0 .55-.45 1-1 1H9.995v-3.99C9.965 11.332 8.635 10 6.987 10H.01zM19 3c.55 0 1 .45.99 1v1H0V2c0-.55.45-1 1-1h5.997c.28 0 .53.11.71.29L9.414 3H19zM6.987 12c.55 0 .999.45 1.009 1.01v5c0 .55-.45 1-1 1s-.999-.45-.999-1v-2.59l-4.288 4.29a1.003 1.003 0 01-1.42-1.42L4.579 14H1.989c-.55 0-1-.45-1-1s.45-1 1-1h4.998z"];
  var airplane = ["M20 2c0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-4.84 4.84L2 1 1 3l7.53 5.64L4.17 13H1l-1 1 4 2 2 4 1-1v-3.17l4.36-4.36L17 19l2-1-4.43-9.74 4.84-4.84c.37-.37.59-.87.59-1.42z"];
  var alignCenter = ["M5 5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1H5zM1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm12 12c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1h6zm4 2H3c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm2-8H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var alignJustify = ["M1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 14H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-12H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var alignLeft = ["M1 7h10c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm0-4h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm14 14H1c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zm4-8H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM1 15h6c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var alignRight = ["M19 17H5c-.55 0-1 .45-1 1s.45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1zM1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 10h-6c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H9c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var alignmentBottom = ["M12 16h4c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1zm7 2H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM4 16h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1z"];
  var alignmentHorizontalCenter = ["M19 9h-2V7c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v2H9V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v6H1c-.55 0-1 .45-1 1s.45 1 1 1h2v6c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-6h2v2c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var alignmentLeft = ["M1 0C.45 0 0 .45 0 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm11 11H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm7-8H5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var alignmentRight = ["M19 0c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-4 11H8c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm0-8H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var alignmentTop = ["M8 4H4c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm11-4H1C.45 0 0 .45 0 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-3 4h-4c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"];
  var alignmentVerticalCenter = ["M17 3h-6V1c0-.55-.45-1-1-1S9 .45 9 1v2H3c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h6v2H7c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1h-2V9h6c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var annotation = ["M9.41 13.41l7.65-7.65-2.83-2.83-7.65 7.65 2.83 2.83zm10-10c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.64-1.66zM18 18H2V2h8.93l2-2H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7.07l-2 2V18zM4 16l4.41-1.59-2.81-2.79L4 16z"];
  var antenna = ["M2.01 10.758a8.025 8.025 0 001.01 3.204l.02.035c.034.058.061.117.084.178.163.44.054.951-.33 1.239-.435.328-1.059.242-1.342-.224a9.797 9.797 0 01-.221-.383 10 10 0 1117.48.106c-.269.474-.89.58-1.335.267-.392-.275-.518-.783-.37-1.228a1.19 1.19 0 01.078-.18l.019-.036A8.026 8.026 0 102.01 10.758zm4.272.772a1.464 1.464 0 01.091.32c.07.425-.052.87-.402 1.128-.44.325-1.068.235-1.316-.252a6 6 0 1110.734-.09c-.24.492-.867.593-1.312.275-.354-.253-.483-.695-.42-1.122a1.462 1.462 0 01.085-.321 4.021 4.021 0 00-5.87-4.878 4.02 4.02 0 00-1.59 4.94zm4.712 2.583A.999.999 0 0011 14v-4a1 1 0 10-2 0v4c0 .038.002.076.006.113l-3.753 4.223a1 1 0 001.494 1.328L10 16.005l3.252 3.66a1 1 0 101.495-1.33l-3.753-4.222z"];
  var appHeader = ["M19 0a1 1 0 011 1v18a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h18zM8 6a1 1 0 00-1.993-.117L6 6v8a1 1 0 001.993.117L8 14v-3h4v3a1 1 0 001.993.117L14 14V6a1 1 0 00-1.993-.117L12 6v3H8V6z"];
  var application = ["M3.5 9h9c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-9c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm-1 16H2V6h16v11zM3.5 13h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5z"];
  var applications = ["M15 5H1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 13H2V8h12v10zM3.5 10h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-3c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-5c-.28 0-.5.22-.5.5s.22.5.5.5zM19 0H5c-.55 0-1 .45-1 1v3h2V3h12v10h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var archive = ["M16.434 0a1 1 0 01.857.486L20 5v14a1 1 0 01-1 1H1a1 1 0 01-1-1V5L2.709.486A1 1 0 013.566 0h12.868zM10 8c-.55 0-1 .45-1 1v4.58l-1.29-1.29-.081-.073A.996.996 0 007 11.99a1.003 1.003 0 00-.71 1.71l3 3 .096.084c.168.13.38.206.614.206.28 0 .53-.11.71-.29l3-3 .084-.096a1.003 1.003 0 00-1.504-1.324L11 13.58V9l-.007-.116A1.004 1.004 0 0010 8zm6-6H4L2 5.002h16L16 2z"];
  var areaOfInterest = ["M5 4.664C5 2.09 7.241 0 10 0s4.99 2.091 5 4.664C15 7.245 10 14 10 14S5 7.245 5 4.664zM8 5a2 2 0 104.001-.001A2 2 0 008 5zM.504 12.132l4.302-2.458c.322.576.662 1.145.995 1.681l.025.04-3.294 1.881L6.468 18h7.064l3.936-4.724-3.293-1.882.024-.039c.333-.536.673-1.105.995-1.681l4.302 2.458a1 1 0 01.272 1.508l-5 6A1 1 0 0114 20H6a1 1 0 01-.768-.36l-5-6a1 1 0 01.272-1.508z"];
  var array = ["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm5 9a1 1 0 110 2 1 1 0 010-2zM6 9a1 1 0 110 2 1 1 0 010-2zm8 0a1 1 0 110 2 1 1 0 010-2z"];
  var arrayBoolean = ["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm10 7a1 1 0 01.993.883L16 8v4a1 1 0 01-.883.993L15 13H5a1 1 0 01-.993-.883L4 12V8a1 1 0 01.883-.993L5 7h10zm0 1h-5v4h5V8z"];
  var arrayDate = ["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm2.5 5a.5.5 0 01.5.5V6h4v-.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5V6h1a1 1 0 01.993.883L16 7v7a1 1 0 01-.883.993L15 15H5a1 1 0 01-.993-.883L4 14V7a1 1 0 01.883-.993L5 6h1v-.5a.5.5 0 01.5-.5h1zM15 9H5v5h10V9z"];
  var arrayFloatingPoint = ["M19.992 1.104A1.25 1.25 0 0018.75 0H15c-.47 0-1 .359-1 1s.5 1 1.023 1h3L18 18h-3c-.5 0-1 .359-1 1 0 .69.5 1 1 1h3.75l.146-.008A1.25 1.25 0 0020 18.75V1.25l-.008-.146zM6 1c0-.69-.5-1-1-1H1.25l-.146.008A1.25 1.25 0 000 1.25v17.5l.008.146A1.25 1.25 0 001.25 20H5c.5 0 1-.359 1-1s-.5-1-1-1H2V2h3c.5 0 1-.359 1-1z", "M5.434 7.325c-.222.039-.45.058-.684.058v.88h1.68v4.825h1.221V6.25h-.908c-.04.208-.124.384-.254.528-.124.143-.277.26-.46.351a2.067 2.067 0 01-.595.196z", "M14.327 6.586c-.294-.219-.677-.329-1.147-.329s-.856.11-1.157.33a2.24 2.24 0 00-.695.827 3.822 3.822 0 00-.339 1.1c-.056.401-.085.79-.085 1.166 0 .376.029.765.085 1.166.063.401.176.77.339 1.11.169.332.4.607.695.827.301.213.687.32 1.157.32s.853-.107 1.147-.32c.301-.22.533-.495.696-.828.17-.338.282-.708.338-1.11a7.55 7.55 0 00.094-1.165 7.55 7.55 0 00-.094-1.166 3.47 3.47 0 00-.338-1.1 2.127 2.127 0 00-.696-.828zm-.564 5.426a.876.876 0 01-.583.197.89.89 0 01-.592-.197 1.516 1.516 0 01-.367-.546 3.485 3.485 0 01-.188-.808 8.056 8.056 0 01-.057-.978c0-.345.02-.668.057-.969.037-.307.1-.576.188-.808.094-.232.216-.414.367-.546a.864.864 0 01.592-.206.85.85 0 01.583.206c.157.132.279.314.367.546.094.232.16.501.197.808.038.301.056.624.056.969s-.018.67-.056.978a3.179 3.179 0 01-.197.808c-.088.226-.21.408-.367.546z", "M8.853 11.807h1.358v1.319H8.853v-1.32z"];
  var arrayNumeric = ["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm8.995 6.09c.32 0 .603.047.85.14a1.679 1.679 0 011.015.985c.09.23.135.482.135.755 0 .287-.063.552-.19.795a1.642 1.642 0 01-.57.615v.02l.101.05c.068.039.138.09.209.155.107.097.203.215.29.355a2.09 2.09 0 01.3 1.09c0 .313-.053.597-.16.85a1.898 1.898 0 01-1.12 1.065 2.42 2.42 0 01-.85.145c-.533 0-.99-.127-1.37-.38a1.702 1.702 0 01-.73-1.08c-.013-.067.013-.11.08-.13l.87-.2.041-.003c.038.004.064.028.079.073.073.2.193.37.36.51.167.14.39.21.67.21.32 0 .567-.095.74-.285.173-.19.26-.432.26-.725 0-.347-.1-.618-.3-.815-.2-.197-.47-.295-.81-.295h-.29l-.044-.006c-.037-.013-.056-.044-.056-.094V9.1l.006-.044c.013-.037.044-.056.094-.056h.27l.145-.008a.925.925 0 00.575-.262c.18-.18.27-.42.27-.72 0-.273-.08-.495-.24-.665-.16-.17-.383-.255-.67-.255-.253 0-.453.063-.6.19-.147.127-.25.297-.31.51-.02.06-.06.083-.12.07l-.85-.2-.042-.015c-.035-.02-.048-.055-.038-.105a1.684 1.684 0 01.645-1.035c.17-.13.37-.232.6-.305.23-.073.482-.11.755-.11zm-7.99.11l.044.006c.037.013.056.044.056.094v6.6l-.006.044c-.013.037-.044.056-.094.056h-.92l-.044-.006c-.037-.013-.056-.044-.056-.094V7.54h-.02l-1.04.73-.04.02c-.047.016-.07-.01-.07-.08V7.19l.008-.051a.196.196 0 01.062-.089l1.09-.79.051-.033a.295.295 0 01.129-.027h.85zm3.34-.11c.32 0 .603.05.85.15.247.1.455.235.625.405.17.17.3.37.39.6.09.23.135.478.135.745 0 .307-.057.588-.17.845a3.16 3.16 0 01-.47.745l-1.98 2.4V12h2.52l.044.006c.037.013.056.044.056.094v.8l-.006.044c-.013.037-.044.056-.094.056h-3.82l-.044-.006c-.037-.013-.056-.044-.056-.094v-.75l.006-.05a.165.165 0 01.044-.08l2.4-2.99.124-.167c.077-.11.143-.222.196-.333.08-.167.12-.347.12-.54a.92.92 0 00-.235-.64c-.157-.173-.378-.26-.665-.26-.273 0-.487.077-.64.23-.153.153-.247.36-.28.62-.013.067-.05.093-.11.08l-.88-.18-.043-.015c-.035-.02-.047-.055-.037-.105a1.78 1.78 0 01.56-1.115c.167-.157.372-.282.615-.375a2.35 2.35 0 01.845-.14z"];
  var arrayString = ["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm2.012 6c.643 0 1.203.266 1.68.797.477.53.715 1.246.715 2.145a4.472 4.472 0 01-.965 2.814c-.644.83-1.66 1.5-3.047 2.011v-.581l.26-.104a3.87 3.87 0 001.624-1.285c.457-.632.686-1.29.686-1.971 0-.148-.023-.256-.07-.326-.023-.047-.054-.07-.093-.07-.038 0-.1.031-.186.093-.248.179-.558.268-.93.268-.45 0-.843-.18-1.18-.541A1.817 1.817 0 015 7.965c0-.527.194-.986.581-1.378A1.934 1.934 0 017.011 6zm5.593 0c.643 0 1.203.266 1.68.797.477.53.715 1.246.715 2.145a4.472 4.472 0 01-.965 2.814c-.644.83-1.659 1.5-3.047 2.011v-.581l.26-.104a3.87 3.87 0 001.624-1.285c.457-.632.686-1.29.686-1.971 0-.148-.023-.256-.07-.326-.023-.047-.054-.07-.093-.07-.038 0-.1.031-.186.093-.248.179-.558.268-.93.268-.45 0-.843-.18-1.18-.541a1.817 1.817 0 01-.506-1.285c0-.527.194-.986.581-1.378A1.934 1.934 0 0112.604 6z"];
  var arrayTimestamp = ["M19 0a1 1 0 01.993.883L20 1v18a1 1 0 01-.883.993L19 20h-4a1 1 0 01-.117-1.993L15 18h3V2h-3a1 1 0 01-.993-.883L14 1a1 1 0 01.883-.993L15 0h4zM5 0a1 1 0 01.117 1.993L5 2H2v16h3a1 1 0 01.993.883L6 19a1 1 0 01-.883.993L5 20H1a1 1 0 01-.993-.883L0 19V1A1 1 0 01.883.007L1 0h4zm5 4a6 6 0 110 12 6 6 0 010-12zm0 1a5 5 0 100 10 5 5 0 000-10zm2.854 2.146a.5.5 0 01.057.638l-.057.07-2.5 2.5a.5.5 0 01-.638.057l-.07-.057-1.5-1.5a.5.5 0 01.638-.765l.07.057L10 9.293l2.146-2.147a.5.5 0 01.708 0z"];
  var arrowBottomLeft = ["M18 3a1.003 1.003 0 00-1.71-.71L4 14.59V7c0-.55-.45-1-1-1s-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1H5.41l12.3-12.29c.18-.18.29-.43.29-.71z"];
  var arrowBottomRight = ["M17 6c-.55 0-1 .45-1 1v7.59L3.71 2.29a1.003 1.003 0 00-1.42 1.42L14.59 16H7c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"];
  var arrowDown = ["M16 11c-.3 0-.5.1-.7.3L11 15.6V2c0-.5-.4-1-1-1s-1 .5-1 1v13.6l-4.3-4.3c-.2-.2-.4-.3-.7-.3-.5 0-1 .4-1 1 0 .3.1.5.3.7l6 6c.2.2.4.3.7.3s.5-.1.7-.3l6-6c.2-.2.3-.4.3-.7 0-.6-.5-1-1-1z"];
  var arrowLeft = ["M18 9H4.41L8.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L4.41 11H18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var arrowRight = ["M18.71 9.29l-6-6a1.003 1.003 0 00-1.42 1.42L15.59 9H2c-.55 0-1 .45-1 1s.45 1 1 1h13.59l-4.29 4.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var arrowTopLeft = ["M17.71 16.29L5.41 4H13c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1s1-.45 1-1V5.41L16.29 17.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"];
  var arrowTopRight = ["M17 2H7c-.55 0-1 .45-1 1s.45 1 1 1h7.59L2.29 16.29a1.003 1.003 0 001.42 1.42L16 5.41V13c0 .55.45 1 1 1s1-.45 1-1V3c0-.55-.45-1-1-1z"];
  var arrowUp = ["M16.7 7.3l-6-6c-.2-.2-.4-.3-.7-.3s-.5.1-.7.3l-6 6c-.2.2-.3.4-.3.7 0 .6.5 1 1 1 .3 0 .5-.1.7-.3L9 4.4V18c0 .5.4 1 1 1s1-.5 1-1V4.4l4.3 4.3c.2.2.4.3.7.3.5 0 1-.4 1-1 0-.3-.1-.5-.3-.7z"];
  var arrowsHorizontal = ["M19.7 9.3l-5-5c-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.5.3.7L16.6 9H3.4l3.3-3.3c.2-.2.3-.4.3-.7 0-.6-.4-1-1-1-.3 0-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7s.1.5.3.7l5 5c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7L3.4 11h13.2l-3.3 3.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l5-5c.2-.2.3-.4.3-.7s-.1-.5-.3-.7z"];
  var arrowsVertical = ["M15 13c-.3 0-.5.1-.7.3L11 16.6V3.4l3.3 3.3c.2.2.4.3.7.3.6 0 1-.4 1-1 0-.3-.1-.5-.3-.7l-5-5c-.2-.2-.4-.3-.7-.3s-.5.1-.7.3l-5 5c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3L9 3.4v13.2l-3.3-3.3c-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.5.3.7l5 5c.2.2.4.3.7.3s.5-.1.7-.3l5-5c.2-.2.3-.4.3-.7 0-.5-.4-1-1-1z"];
  var asterisk = ["M18.52 14.17l.01-.02L11.89 10l6.64-4.15-.01-.02A.97.97 0 0019 5c0-.55-.45-1-1-1-.2 0-.37.07-.52.17l-.01-.02L11 8.2V1c0-.55-.45-1-1-1S9 .45 9 1v7.2L2.53 4.15l-.01.02A.922.922 0 002 4c-.55 0-1 .45-1 1 0 .36.2.66.48.83l-.01.02L8.11 10l-6.64 4.15.01.02A.97.97 0 001 15c0 .55.45 1 1 1 .2 0 .37-.07.52-.17l.01.02L9 11.8V19c0 .55.45 1 1 1s1-.45 1-1v-7.2l6.47 4.04.01-.02c.15.11.32.18.52.18.55 0 1-.45 1-1 0-.36-.2-.66-.48-.83z"];
  var automaticUpdates = ["M10 18c-4.42 0-8-3.58-8-8 0-2.52 1.18-4.76 3-6.22V5c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1h2.06C1.61 3.82 0 6.71 0 10c0 5.52 4.48 10 10 10 .55 0 1-.45 1-1s-.45-1-1-1zm0-16c1.64 0 3.15.49 4.42 1.34l1.43-1.43A9.869 9.869 0 0010 0c-.55 0-1 .45-1 1s.45 1 1 1zm10 8c0-1.13-.2-2.21-.54-3.22L17.84 8.4A7.962 7.962 0 0115 16.22V15c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1h-2.06c2.45-1.82 4.06-4.71 4.06-8zm0-7a1.003 1.003 0 00-1.71-.71L12 8.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7c.18-.18.29-.43.29-.71z"];
  var backlink = ["M18.387 19.79l-.094-.083L14 15.415V18a1 1 0 01-2 0l.003-5.075.017-.126.03-.111.044-.111.052-.098.067-.096.08-.09a1.01 1.01 0 01.112-.097l.11-.071.114-.054.105-.035.15-.03L13 12h5a1 1 0 110 2h-2.585l4.292 4.293a1 1 0 01-1.32 1.497zM7.036 9.136l-4.45 4.45-.117.127a2 2 0 002.818 2.818l.127-.117 4.45-4.449a4 4 0 01-.885 3.704l-.15.16-2 2A4 4 0 011.02 12.33l.15-.16 2-2a3.998 3.998 0 013.865-1.035zm6.671-3.843a1 1 0 01.083 1.32l-.083.094-7 7a1 1 0 01-1.497-1.32l.083-.094 7-7a1 1 0 011.414 0zm4.121-4.121a4 4 0 01.151 5.497l-.15.16-2 2a3.998 3.998 0 01-3.864 1.036l4.45-4.45.116-.128a2 2 0 00-2.818-2.818l-.127.117-4.45 4.45a4 4 0 01.885-3.705l.15-.16 2-2a4 4 0 015.657 0z"];
  var badge = ["M16.94 5.73c-.19-1.41.62-2.52 1.38-3.59L17.03.65C14.89 1.76 11.88 1.48 10 0 8.12 1.48 5.11 1.76 2.97.65L1.68 2.14c.76 1.07 1.57 2.18 1.38 3.59C2.68 8.59 0 10.94 1.4 14.08c.56 1.43 1.81 2.37 3.4 2.75 1.95.46 4.4.91 5.2 3.17.8-2.26 3.25-2.71 5.2-3.17 1.6-.38 2.84-1.32 3.4-2.75 1.4-3.14-1.28-5.49-1.66-8.35z"];
  var banCircle = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm5 11H5c-.55 0-1-.45-1-1s.45-1 1-1h10c.55 0 1 .45 1 1s-.45 1-1 1z"];
  var bankAccount = ["M19.2 8.02l-.78-.18C18.03 6.4 17.2 5.08 16.08 4l.5-2.28c.11-.42-.22-.78-.61-.72-1.06.12-2 .54-2.67 1.26-1.06-.42-2.34-.66-3.56-.66-3.12 0-5.79 1.5-7.4 3.72-.23-.05-.45-.11-.67-.11C.72 5.21 0 5.98 0 7c0 .72.39 1.32.95 1.62-.06.42-.12.9-.12 1.38 0 2.16.89 4.08 2.28 5.58l-.33 2.04c-.11.72.45 1.38 1.12 1.38h.72c.56 0 1-.42 1.11-1.02l.06-.48c1.17.54 2.5.9 3.95.9 1.39 0 2.78-.3 3.95-.9l.06.48c.11.6.56 1.02 1.11 1.02h.72c.67 0 1.22-.66 1.11-1.38l-.33-1.98c.78-.78 1.34-1.74 1.73-2.76l1-.24c.5-.12.89-.6.89-1.2V9.22c.11-.6-.28-1.08-.78-1.2zM15 10c-.6 0-1-.7-1-1.5S14.4 7 15 7s1 .7 1 1.5-.4 1.5-1 1.5zM7.55 5.83a.99.99 0 01-1.38-.28.99.99 0 01.28-1.38c2.34-1.56 4.77-1.56 7.11 0 .46.31.58.93.28 1.39-.31.46-.93.58-1.39.28-1.67-1.12-3.23-1.12-4.9-.01z"];
  var barcode = ["M6 16.98h2v-14H6v14zm3 0h1v-14H9v14zm-6 0h2v-14H3v14zm-3 0h2v-14H0v14zm16 0h2v-14h-2v14zm-4 0h1v-14h-1v14zm7-14v14h1v-14h-1zm-5 14h1v-14h-1v14z"];
  var p = [];
  var blockedPerson = ["M11.55 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.06-.11.14-.35.17-.62C10.33 9.42 8.92 7.38 8.92 5c0-.3.05-.58.09-.87-.33-.08-.67-.13-.99-.13-.79 0-1.68.25-2.31.73-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.17 1.51-.17 2.14v.08c-.24.09-.45.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59C3 16.56.77 17.26.32 18.31-.15 19.38.04 20 .04 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.69-1.75-4.17-2.41zM14.97 0c-2.78 0-5.03 2.24-5.03 5s2.25 5 5.03 5S20 7.76 20 5s-2.25-5-5.03-5zm-3.03 5c0-1.66 1.35-3 3.02-3 .47 0 .9.11 1.29.3l-4.01 3.99c-.18-.4-.3-.83-.3-1.29zm3.03 3c-.47 0-.9-.11-1.29-.3l4.01-3.99c.19.39.3.82.3 1.29 0 1.66-1.36 3-3.02 3z"];
  var bold = ["M14.3 9c.4-.8.7-1.6.7-2.5C15 4 13 2 10.5 2H5c-.6 0-1 .4-1 1v13c0 .6.4 1 1 1h6.5c2.5 0 4.5-2 4.5-4.5 0-1.4-.7-2.7-1.7-3.5zM7 5h3.5c.8 0 1.5.7 1.5 1.5S11.3 8 10.5 8H7V5zm4.5 9H7v-3h4.5c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5z"];
  var book = ["M3 1v18c0 .55.45 1 1 1h2V0H4c-.55 0-1 .45-1 1zm14-1h-2v8l-2-2-2 2V0H7v20h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var bookmark = ["M6 0c-.55 0-1 .45-1 1v18c0 .55.32.68.71.29L9.3 15.7a.996.996 0 011.41 0l3.59 3.59c.38.39.7.26.7-.29v-8-4.5V1c0-.55-.45-1-1-1H6z"];
  var box = ["M19.89 6.56l-2.99-6h-.01C16.72.23 16.39 0 16 0H4c-.39 0-.72.23-.89.56H3.1l-3 6h.01C.05 6.69 0 6.84 0 7v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7c0-.16-.05-.31-.11-.44zM11 2h4.38l2 4H11V2zM4.62 2H9v4H2.62l2-4zM18 18H2V8h16v10zM8 12h4c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var briefcase = ["M19 5h-4V2c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v3H1c-.55 0-1 .45-1 1v5h4v-1h2v1h8v-1h2v1h4V6c0-.55-.45-1-1-1zm-6 0H7V3h6v2zm3 8h-2v-1H6v1H4v-1H0v6c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-6h-4v1z"];
  var bringData = ["M18 18a1 1 0 010 2H2a1 1 0 010-2h16zM9.995 3.005c.55 0 1 .45 1 .999v9.584l1.29-1.288a1.002 1.002 0 011.42 1.419l-3 2.996a1.015 1.015 0 01-1.42 0l-3-2.997a1.002 1.002 0 011.42-1.419l1.29 1.29V4.013c0-.55.45-1.009 1-1.009zM16 0a1 1 0 110 2 1 1 0 010-2zm-3 0a1 1 0 110 2 1 1 0 010-2zm-3 0a1 1 0 110 2 1 1 0 010-2zM7 0a1 1 0 110 2 1 1 0 010-2zM4 0a1 1 0 110 2 1 1 0 010-2z"];
  var buggy = ["M15.836 1.014a1 1 0 011.058.539l2.482 4.962.02-.004a.5.5 0 01.604.49v4.5a.5.5 0 01-.5.5h-3.93a1.5 1.5 0 00-1.248.667l-1.406 2.11A.5.5 0 0112.5 15H8a.5.5 0 01-.354-.146l-2.414-2.415A1.5 1.5 0 004.172 12H.5a.5.5 0 01-.5-.5v-3A.5.5 0 01.5 8h.823L3.072 3.63a1 1 0 01.764-.615l12-2zm.289 3.472l1.231 2.462-2.758.591 1.527-3.053zM14.5 3.264l-1.56 3.12-.252-.638-.825-2.043 2.637-.44zm-9.78 1.63l5.122-.854.988 2.445.899 2.27L10.232 11H7.707L4.854 8.147A.5.5 0 004.5 8H3.477l1.242-3.106zM3 19a3 3 0 100-6 3 3 0 000 6zm14 0a3 3 0 100-6 3 3 0 000 6z"];
  var build = ["M19.43 16.67L9.31 7.81l1.47-1.56c.41-.44-.15-.8.15-1.6 1.08-2.76 4.19-2.99 4.19-2.99s.45-.47.87-.92C11.98-1 9.26.7 8.04 1.8L3.83 6.25l-.86.92c-.48.51-.48 1.33 0 1.84l-.87.92c-.48-.51-1.26-.51-1.74 0s-.48 1.33 0 1.84l1.74 1.84c.48.51 1.26.51 1.74 0s.48-1.33 0-1.84l.87-.92c.48.51 1.26.51 1.74 0l1.41-1.49 8.81 10.07c.76.76 2 .76 2.76 0 .76-.76.76-2 0-2.76z"];
  var calculator = ["M16 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H5v-2h2v2zm0-4H5v-2h2v2zm0-4H5V8h2v2zm4 8H9v-2h2v2zm0-4H9v-2h2v2zm0-4H9V8h2v2zm4 8h-2v-6h2v6zm0-8h-2V8h2v2zm0-4H5V2h10v4z"];
  var calendar = ["M15 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zM5 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm13-2h-1v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H7v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H2c-.5 0-1 .5-1 1v14c0 .5.5 1 1 1h16c.5 0 1-.5 1-1V4c0-.5-.5-1-1-1zM7 17H3v-4h4v4zm0-5H3V8h4v4zm5 5H8v-4h4v4zm0-5H8V8h4v4zm5 5h-4v-4h4v4zm0-5h-4V8h4v4z"];
  var camera$1 = ["M10 8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm9-4h-3.59L13.7 2.29A.956.956 0 0013 2H7c-.28 0-.53.11-.71.29L4.59 4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h4.11c1.26 1.24 2.99 2 4.89 2s3.63-.76 4.89-2H19c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zM4 8H2V6h2v2zm6 8c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"];
  var caretDown = ["M16 7c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1 0 .24.1.46.24.63l-.01.01 5 6 .01-.01c.19.22.45.37.76.37s.57-.15.76-.37l.01.01 5-6-.01-.01c.14-.17.24-.39.24-.63z"];
  var caretLeft = ["M13 4c-.24 0-.46.1-.63.24l-.01-.01-6 5 .01.01c-.22.19-.37.45-.37.76s.15.57.37.76l-.01.01 6 5 .01-.01c.17.14.39.24.63.24.55 0 1-.45 1-1V5c0-.55-.45-1-1-1z"];
  var caretRight = ["M14 10c0-.31-.15-.57-.37-.76l.01-.01-6-5-.01.01C7.46 4.1 7.24 4 7 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1 .24 0 .46-.1.63-.24l.01.01 6-5-.01-.01c.22-.19.37-.45.37-.76z"];
  var caretUp = ["M15.76 12.37l.01-.01-5-6-.01.01C10.57 6.15 10.31 6 10 6s-.57.15-.76.37l-.01-.01-5 6 .01.01c-.14.17-.24.39-.24.63 0 .55.45 1 1 1h10c.55 0 1-.45 1-1 0-.24-.1-.46-.24-.63z"];
  var cargoShip = ["M12.5 1.25h4a1 1 0 011 1V5h-5V1.25zM2.75 5a.25.25 0 00-.25.25v6H.883a.5.5 0 00-.429.757l1.672 2.787c.17.284.384.533.63.741-.458.057-.959.09-1.506.09a.625.625 0 100 1.25c2.583 0 4.268-.68 5.202-1.146.687.466 1.88 1.146 3.548 1.146 1.65 0 2.837-.666 3.528-1.132l.005.003c.244.131.6.3 1.07.468.938.335 2.321.661 4.147.661a.625.625 0 100-1.25c-.319 0-.622-.01-.91-.03.398-.318.717-.738.914-1.23l.972-2.43a.5.5 0 00-.464-.685H5v-6A.25.25 0 004.75 5h-2zm3.455 11.95a.625.625 0 01.658.041c.569.407 1.597 1.134 3.137 1.134s2.568-.727 3.137-1.134a.625.625 0 01.724-.001l.007.005.045.029c.044.027.114.069.21.12.194.104.493.247.9.392.812.29 2.053.589 3.727.589a.625.625 0 110 1.25c-1.826 0-3.21-.326-4.148-.661a7.894 7.894 0 01-1.069-.468l-.005-.003c-.691.466-1.878 1.132-3.528 1.132-1.667 0-2.861-.68-3.548-1.146-.934.467-2.619 1.146-5.202 1.146a.625.625 0 110-1.25c2.66 0 4.23-.787 4.955-1.176zM17.5 6.25h-5V10h4a1 1 0 001-1V6.25zm-11.25-4a1 1 0 011-1h4V5h-5V2.25zm5 4h-5V9a1 1 0 001 1h4V6.25z"];
  var cellTower = ["M11.5 8.32c.31-.35.51-.81.51-1.32 0-1.1-.9-2-2-2s-2 .9-2 2c0 .51.2.97.51 1.32L5.06 18.69c-.17.52.11 1.09.63 1.26s1.09-.11 1.26-.63L8.39 15h3.23l1.44 4.32c.17.52.74.81 1.26.63s.81-.74.63-1.26L11.5 8.32zM10.95 13H9.06l.95-2.84.94 2.84zM5.31 10.73a.996.996 0 101.37-1.45c-1.4-1.33-1.28-3.35-.01-4.54.4-.38.43-1.01.05-1.41-.36-.41-1-.43-1.4-.06-2.09 1.95-2.28 5.3-.01 7.46z", "M4.6 12.2C3 11.1 2 9 2 7c0-2.1.9-3.9 2.6-5.2.5-.3.5-1 .2-1.4-.3-.5-1-.5-1.4-.2C1.2 1.9-.1 4.2 0 7c.1 2.7 1.4 5.3 3.4 6.8.2.1.4.2.6.2.3 0 .6-.1.8-.4.4-.5.3-1.1-.2-1.4zM13.27 10.69c.38.4 1.01.42 1.41.04 2.27-2.16 2.08-5.51-.01-7.46a.996.996 0 10-1.36 1.46c1.28 1.19 1.39 3.21-.01 4.54-.39.39-.41 1.02-.03 1.42z", "M16.6.2c-.4-.3-1.1-.3-1.4.2-.3.4-.3 1.1.2 1.4C17.1 3.1 18 4.9 18 7c0 2-1 4.1-2.6 5.2-.5.3-.6.9-.2 1.4.2.3.5.4.8.4.2 0 .4-.1.6-.2C18.7 12.3 20 9.7 20 7c.09-2.8-1.2-5.1-3.4-6.8z"];
  var changes = ["M18 16H2c-1.1 0-2 .9-2 2s.9 2 2 2h16c1.1 0 2-.9 2-2s-.9-2-2-2zM3 5c.28 0 .53-.11.71-.29L5 3.41V13c0 .55.45 1 1 1s1-.45 1-1V3.41L8.29 4.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3C6.53.11 6.28 0 6 0s-.53.11-.71.29l-3 3A1.003 1.003 0 003 5zm7.29 5.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L15 10.59V1c0-.55-.45-1-1-1s-1 .45-1 1v9.59L11.71 9.3A.965.965 0 0011 9a1.003 1.003 0 00-.71 1.71z"];
  var chart = ["M7 11v8c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-8l-2 2-4-2zm-7 8c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-8l-6 3v5zM17 7l-3 3v9c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V8.74c-.26.15-.58.26-1 .26-1.92 0-2-2-2-2zm2-6h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.59L10.8 8.78 7.45 7.11v.01C7.31 7.05 7.16 7 7 7s-.31.05-.44.11V7.1l-6 3v.01c-.33.17-.56.5-.56.89 0 .55.45 1 1 1 .16 0 .31-.05.44-.11v.01L7 9.12l3.55 1.78v-.01c.14.06.29.11.45.11.28 0 .53-.11.71-.29L18 4.41V6c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"];
  var chat = ["M19 0H7c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h5.59l3.71 3.71c.17.18.42.29.7.29.55 0 1-.45 1-1v-3h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 13c-1.1 0-2-.9-2-2V4H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h1v3a1.003 1.003 0 001.71.71L7.41 16H13c.55 0 1-.45 1-1v-.17L12.17 13H7z"];
  var chevronBackward = ["M8.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L7 8.59V4c0-.55-.45-1-1-1s-1 .45-1 1v12c0 .55.45 1 1 1s1-.45 1-1v-4.59l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L8.41 10z"];
  var chevronDown = ["M16 6c-.28 0-.53.11-.71.29L10 11.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0016 6z"];
  var chevronForward = ["M13 3c-.55 0-1 .45-1 1v4.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l5.29-5.3V16c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var chevronLeft = ["M8.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L8.41 10z"];
  var chevronRight = ["M13.71 9.29l-6-6a1.003 1.003 0 00-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var chevronUp = ["M16.71 12.29l-6-6C10.53 6.11 10.28 6 10 6s-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42L10 8.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"];
  var circle = ["M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8z"];
  var circleArrowDown = ["M14 10c-.28 0-.53.11-.71.29L11 12.59V5c0-.55-.45-1-1-1s-1 .45-1 1v7.59L6.71 10.3A.965.965 0 006 10a1.003 1.003 0 00-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0014 10zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"];
  var circleArrowLeft = ["M15 9H7.41L9.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 11H15c.55 0 1-.45 1-1s-.45-1-1-1zm-5-9C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"];
  var circleArrowRight = ["M15.71 9.29l-4-4a1.003 1.003 0 00-1.42 1.42L12.59 9H5c-.55 0-1 .45-1 1s.45 1 1 1h7.59l-2.29 2.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"];
  var circleArrowUp = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.71-13.71C10.53 4.11 10.28 4 10 4s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L9 7.41V15c0 .55.45 1 1 1s1-.45 1-1V7.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-4-4z"];
  var citation = ["M4 1C1.79 1 0 2.79 0 5s1.79 4 4 4c.1 0 .2-.01.3-.02C3.82 11.32 2.53 13 1 13c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7-4.48 7-10 0-2.21-1.79-4-4-4zM16 1c-2.21 0-4 1.79-4 4s1.79 4 4 4c.1 0 .2-.01.3-.02C15.82 11.32 14.53 13 13 13c-.55 0-1 .45-1 1s.45 1 1 1c3.87 0 7-4.48 7-10 0-2.21-1.79-4-4-4z"];
  var clean = ["M7 0L5 5 0 6.998 5 9l2 5 2-5 5-1.995L9 5zM15 10l-1.5 3.496-3.5 1.499 3.5 1.498L15 20l1.5-3.507L20 15l-3.5-1.504z"];
  var clip = ["M0 1a1 1 0 011-1h5a1 1 0 010 2H2v4a1 1 0 01-2 0V1zm1 19a1 1 0 01-1-1v-5a1 1 0 112 0v4h4a1 1 0 110 2H1zm18 0a1 1 0 001-1v-5a1 1 0 10-2 0v4h-4a1 1 0 100 2h5zm0-20a1 1 0 011 1v5a1 1 0 11-2 0V2h-4a1 1 0 110-2h5zm-9 14a4 4 0 100-8 4 4 0 000 8z"];
  var clipboard = ["M13 2c0-.55-.45-1-1-1h-.78a1.98 1.98 0 00-3.44 0H7c-.55 0-1 .45-1 1v2h7V2z", "M16 2h-2v3H5V2H3c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1z"];
  var cloud = ["M15 7c-.12 0-.24.03-.36.04C13.83 4.69 11.62 3 9 3 5.69 3 3 5.69 3 9c0 .05.01.09.01.14A3.98 3.98 0 000 13c0 2.21 1.79 4 4 4h11c2.76 0 5-2.24 5-5s-2.24-5-5-5z"];
  var cloudDownload = ["M15 4c-.12 0-.24.03-.36.04C13.83 1.69 11.62 0 9 0 5.69 0 3 2.69 3 6c0 .05.01.09.01.14A3.98 3.98 0 000 10c0 2.21 1.79 4 4 4h.78c.55-.61 1.34-1 2.22-1v-2c0-1.66 1.34-3 3-3s3 1.34 3 3v2c.88 0 1.66.38 2.2.98C17.87 13.87 20 11.69 20 9c0-2.76-2.24-5-5-5zm-2 11c-.28 0-.53.11-.71.29L11 16.59V11c0-.55-.45-1-1-1s-1 .45-1 1v5.59L7.71 15.3A.965.965 0 007 15a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0013 15z"];
  var cloudUpload = ["M10.71 10.29c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L9 13.41V19c0 .55.45 1 1 1s1-.45 1-1v-5.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM15 4c-.12 0-.24.03-.36.04C13.83 1.69 11.62 0 9 0 5.69 0 3 2.69 3 6c0 .05.01.09.01.14A3.98 3.98 0 000 10c0 2.21 1.79 4 4 4 0-.83.34-1.58.88-2.12l3-3a2.993 2.993 0 014.24 0l3 3-.01.01c.52.52.85 1.23.87 2.02C18.28 13.44 20 11.42 20 9c0-2.76-2.24-5-5-5z"];
  var code = ["M6 6a1.003 1.003 0 00-1.71-.71l-4 4C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L2.41 10 5.7 6.71c.19-.18.3-.43.3-.71zm6-4c-.46 0-.83.31-.95.73l-4 14c-.02.09-.05.17-.05.27 0 .55.45 1 1 1 .46 0 .83-.31.95-.73l4-14c.02-.09.05-.17.05-.27 0-.55-.45-1-1-1zm7.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42l3.3 3.29-3.29 3.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var codeBlock = ["M19 5h-2V3c0-.55-.45-1-1-1h-4c-.55 0-1 .45-1 1v2H9V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zM8.71 15.29a1.003 1.003 0 01-1.42 1.42l-4-4C3.11 12.53 3 12.28 3 12s.11-.53.29-.71l4-4a1.003 1.003 0 011.42 1.42L5.41 12l3.3 3.29zm8-2.58l-4 4a1.003 1.003 0 01-1.42-1.42l3.3-3.29-3.29-3.29A.965.965 0 0111 8a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71s-.11.53-.29.71z"];
  var cog = ["M19 8h-2.31c-.14-.46-.33-.89-.56-1.3l1.7-1.7a.996.996 0 000-1.41l-1.41-1.41a.996.996 0 00-1.41 0l-1.7 1.7c-.41-.22-.84-.41-1.3-.55V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v2.33c-.48.14-.94.34-1.37.58L5 2.28a.972.972 0 00-1.36 0L2.28 3.64c-.37.38-.37.99 0 1.36L3.9 6.62c-.24.44-.44.89-.59 1.38H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2.31c.14.46.33.89.56 1.3L2.17 15a.996.996 0 000 1.41l1.41 1.41c.39.39 1.02.39 1.41 0l1.7-1.7c.41.22.84.41 1.3.55V19c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2.33c.48-.14.94-.35 1.37-.59L15 17.72c.37.37.98.37 1.36 0l1.36-1.36c.37-.37.37-.98 0-1.36l-1.62-1.62c.24-.43.45-.89.6-1.38H19c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-9 6c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"];
  var collapseAll = ["M9.29 8.71c.18.18.43.29.71.29s.53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42L10 6.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6zm1.42 2.58c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42l5.29-5.3 5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6z"];
  var colorFill = ["M2.188 9h11.984L8 2.828 3.414 7.414C2.811 8.017 2.405 8.48 2.188 9zM8 0L6.586 1.414 2 6c-1 1-2 2.11-2 4 0 2 1 3 2 4l1 1c1 1 2 2 4 2 2.009 0 2.918-.913 3.868-1.867L11 15l4.586-4.586L17 9l-1.414-1.414-6.172-6.172L8 0zm10.5 13.5L17 11l-1.5 2.5c-.318.53-.5 1-.5 1.5 0 1 .5 2 2 2s2-1 2-2c0-.5-.182-.97-.5-1.5zM1 18a1 1 0 100 2h18a1 1 0 100-2H1z"];
  var columnLayout = ["M19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM5 17H2V3h3v14zm4 0H6V3h3v14zm9 0h-8V3h8v14z"];
  var comment = ["M19 1H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3v4a1.003 1.003 0 001.71.71l4.7-4.71H19c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM4 10c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm6 0c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"];
  var comparison = ["M6 8H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm13-6h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 3h-5V3h5v2zM6 14H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zM6 2H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm4-2c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm9 14h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3h-5v-2h5v2zm0-9h-5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm0 3h-5V9h5v2z"];
  var compass = ["M15 10c0 .14-.03.28-.09.4l-3.99 8.98-.01.02a.991.991 0 01-1.82 0l-.01-.02-3.99-8.98c-.06-.12-.09-.26-.09-.4s.03-.28.09-.4L9.08.62 9.09.6a.991.991 0 011.82 0l.01.02 3.99 8.98c.06.12.09.26.09.4zm-5-6.54L7.09 10h5.81L10 3.46z"];
  var compressed = ["M19.89 6.56l-2.99-6h-.01C16.72.23 16.39 0 16 0H4c-.39 0-.72.23-.89.56H3.1l-3 6h.01C.05 6.69 0 6.84 0 7v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7c0-.16-.05-.31-.11-.44zM11 2h4.38l2 4H11V2zM4.62 2H9v4H2.62l2-4zM18 18H2V8h7v4.59L6.71 10.3A.965.965 0 006 10a1.003 1.003 0 00-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4a1.003 1.003 0 00-1.42-1.42L11 12.59V8h7v10z"];
  var confirm = ["M9.71 5.29a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7a1.003 1.003 0 00-1.42-1.42L12 7.59l-2.29-2.3zm7.93 2.32c.23.75.36 1.56.36 2.39 0 4.42-3.58 8-8 8s-8-3.58-8-8a7.998 7.998 0 0111.8-7.04l1.46-1.46C13.73.56 11.93 0 10 0 4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-1.4-.29-2.73-.81-3.95l-1.55 1.56z"];
  var console$1 = ["M19 19H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1h18c.55 0 1 .45 1 1v16c0 .55-.45 1-1 1zM18 6H2v11h16V6zM4 8c.28 0 .53.11.71.29l2 2c.18.18.29.43.29.71s-.11.53-.29.71l-2 2a1.003 1.003 0 01-1.42-1.42L4.59 11l-1.3-1.29A1.003 1.003 0 014 8zm5 4h3c.55 0 1 .45 1 1s-.45 1-1 1H9c-.55 0-1-.45-1-1s.45-1 1-1z"];
  var contrast = ["M19 8h-1.26c-.19-.73-.48-1.42-.85-2.06l.94-.94a.996.996 0 000-1.41l-1.41-1.41a.996.996 0 00-1.41 0l-.94.94c-.65-.38-1.34-.67-2.07-.86V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1.26c-.76.2-1.47.5-2.13.89L5 2.28a.972.972 0 00-1.36 0L2.28 3.64c-.37.38-.37.98 0 1.36l.87.87c-.39.66-.69 1.37-.89 2.13H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h1.26c.19.73.48 1.42.85 2.06l-.94.94a.996.996 0 000 1.41l1.41 1.41c.39.39 1.02.39 1.41 0l.94-.94c.64.38 1.33.66 2.06.85V19c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1.26c.76-.2 1.47-.5 2.13-.89l.88.87c.37.37.98.37 1.36 0l1.36-1.36c.37-.38.37-.98 0-1.36l-.87-.87c.4-.65.7-1.37.89-2.13H19c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-9 7c-2.76 0-5-2.24-5-5s2.24-5 5-5v10z"];
  var control = ["M17 10h-7v7h7v-7zm0-7h-7v6h7V3zM9 3H3v14h6V3zm10-3H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V2h16v16z"];
  var creditCard = ["M19 3H1c-.55 0-1 .45-1 1v2h20V4c0-.55-.45-1-1-1zM0 16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V8H0v8zm6.5-2h7c.28 0 .5.22.5.5s-.22.5-.5.5h-7c-.28 0-.5-.22-.5-.5s.22-.5.5-.5zm-4 0h2c.28 0 .5.22.5.5s-.22.5-.5.5h-2c-.28 0-.5-.22-.5-.5s.22-.5.5-.5z"];
  var cross$4 = ["M11.41 10l4.29-4.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-4.29-4.3a1.003 1.003 0 00-1.42 1.42L8.59 10 4.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4.29-4.3 4.29 4.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z"];
  var crown = ["M2 8l4 2 4-5 4 5 4-2-1 7H3L2 8zm8-6a1 1 0 110 2 1 1 0 010-2zM1 5a1 1 0 110 2 1 1 0 010-2zm18 0a1 1 0 110 2 1 1 0 010-2zM3 16h14v2H3v-2z"];
  var cube = ["M1.953 4.481l7.41-4.02c.394-.215.88-.215 1.275 0l7.409 4.02L10 9.22 1.953 4.48zm-.817.68L9.5 10.085v9.281a1.316 1.316 0 01-.138-.064l-7.714-4.186A1.211 1.211 0 011 14.057v-8.35c0-.193.048-.38.136-.547zm17.728 0c.088.166.136.353.136.546v8.35c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281l8.364-4.926z"];
  var cubeAdd = ["M17 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5h-2a1 1 0 010-2h2V1a1 1 0 012 0v2zm-3.969 4.435L10 9.22 1.953 4.48l7.41-4.02c.394-.215.88-.215 1.275 0l1.33.721A3.001 3.001 0 0013 7c0 .148.01.293.031.435zm.319.972A3 3 0 0019 7v7.057c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281l2.85-1.679zM1.136 5.16L9.5 10.086v9.281a1.316 1.316 0 01-.138-.064l-7.714-4.186A1.211 1.211 0 011 14.057v-8.35c0-.193.048-.38.136-.547z"];
  var cubeRemove = ["M11.968 1.182A3.001 3.001 0 0013 7h.77L10 9.22 1.953 4.48l7.41-4.02c.394-.215.88-.215 1.275 0l1.33.721zM19 7v7.057c0 .438-.247.842-.648 1.06l-7.714 4.186c-.045.024-.091.046-.138.064v-9.281L15.74 7H19zM1.136 5.16L9.5 10.086v9.281a1.316 1.316 0 01-.138-.064l-7.714-4.186A1.211 1.211 0 011 14.057v-8.35c0-.193.048-.38.136-.547zM13 3h6a1 1 0 010 2h-6a1 1 0 010-2z"];
  var curvedRangeChart = ["M19 16H3.02l2.14-1.74c2.25 1.7 7.33.46 11.83-2.99l-1.29-1.5c-3.56 2.74-7.31 4.03-8.93 3.19l10.55-8.57-.63-.78-10.59 8.6c-.64-1.64 1.46-4.91 5.09-7.7L9.9 3.01c-4.6 3.54-6.91 8.12-5.41 10.51L2 15.54V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var cut = ["M16 2s.72-1.28 0-2l-5.29 6.25 1.28 1.54L16 2zm.08 10c-.55 0-1.07.12-1.54.32L4.31 0c-.7.72 0 2 0 2l4.45 6.56-3.19 3.77C5.09 12.12 4.56 12 4 12c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.65-.17-1.26-.45-1.8l2.54-3.67 2.49 3.67c-.27.54-.44 1.15-.44 1.8 0 2.21 1.76 4 3.92 4 2.17 0 3.92-1.79 3.92-4 .02-2.21-1.74-4-3.9-4zM4 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm12.08 0c-1.08 0-1.96-.9-1.96-2s.88-2 1.96-2 1.96.9 1.96 2-.88 2-1.96 2z"];
  var cycle = ["M16 10a4 4 0 110 8 4 4 0 010-8zM4 10a4 4 0 110 8 4 4 0 010-8zm7.299-5.543l.087.089 1.93 2.232 2.048.708a1 1 0 01.65 1.16l-.031.112a1 1 0 01-1.16.65l-.112-.031-2.302-.796a1 1 0 01-.337-.197l-.092-.094-1.387-1.603-1.891 1.982 2.046 2.274a1 1 0 01.25.547l.007.122v4.24a1 1 0 01-1.993.117l-.007-.117-.001-3.857-2.408-2.676a1 1 0 01-.063-1.26l.082-.099 3.29-3.45a1 1 0 011.394-.053zM16 12a2 2 0 100 4 2 2 0 000-4zM4 12a2 2 0 100 4 2 2 0 000-4zm9.5-10a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"];
  var dashboard = ["M6 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zM4 9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6-4c.55 0 1-.45 1-1s-.45-1-1-1-1 .45-1 1 .45 1 1 1zm0-5C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm6-9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm-8 5c0 1.1.9 2 2 2s2-.9 2-2c0-.33-2-8-2-8s-2 7.67-2 8zm6-9c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1z"];
  var dataConnection = ["M2 11.9c.935.674 2.339 1.217 4.023 1.536A6.996 6.996 0 009.393 20c-3.988-.019-7.231-1.083-7.387-2.4L2 17.5v-5.6zM13 8c3.315 0 6 2.685 6 6s-2.685 6-6 6-6-2.685-6-6 2.685-6 6-6zm1 1l-4 6h2.5l-.5 4 4-6h-2.5l.5-4zm3-4.6v3.855a7.003 7.003 0 00-10.779 3.992c-2.408-.391-4.097-1.202-4.214-2.142L2 10V4.4c1.525 1.1 4.3 1.85 7.5 1.85S15.475 5.5 17 4.4zM9.5 0C13.637 0 17 1.125 17 2.5S13.637 5 9.5 5C5.35 5 2 3.875 2 2.5S5.35 0 9.5 0z"];
  var dataLineage = ["M1.053 0C.47 0 0 .471 0 1.053V4.21c0 .58.471 1.052 1.053 1.052h3.275a6.332 6.332 0 003.728 4.738 6.33 6.33 0 00-3.728 4.737l-3.275-.001C.47 14.737 0 15.208 0 15.789v3.158C0 19.53.471 20 1.053 20h7.435c.581 0 1.053-.471 1.053-1.053V15.79c0-.58-.472-1.052-1.053-1.052H5.406a5.293 5.293 0 015.195-4.21v2.105c0 .58.471 1.052 1.052 1.052h7.294c.582 0 1.053-.471 1.053-1.052V7.368c0-.58-.471-1.052-1.053-1.052h-7.294c-.581 0-1.052.471-1.052 1.052v2.106a5.293 5.293 0 01-5.194-4.21h3.081c.581 0 1.053-.472 1.053-1.053V1.053C9.54.47 9.069 0 8.488 0H1.053z"];
  var database = ["M2.01 5.1v5.4c0 1.38 3.58 2.5 8 2.5s8-1.12 8-2.5V5.1c-1.49 1.13-4.51 1.9-8 1.9-3.48 0-6.5-.77-8-1.9zm8 .9c4.42 0 8-1.12 8-2.5s-3.58-2.5-8-2.5-8 1.12-8 2.5S5.6 6 10.01 6zm-8 6.1v5.4c0 1.38 3.58 2.5 8 2.5s8-1.12 8-2.5v-5.4c-1.49 1.13-4.51 1.9-8 1.9-3.48 0-6.5-.77-8-1.9z"];
  var _delete = ["M15 6a1.003 1.003 0 00-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10l3.29-3.29c.19-.18.3-.43.3-.71zm-5-6C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"];
  var delta = ["M10 0L0 20h20L10 0zM9 6l6 12H3L9 6z"];
  var deriveColumn = ["M7.1 8.2h-.99c.28-1.11.66-1.92 1.12-2.43.28-.32.56-.48.83-.48.05 0 .1.02.13.05.03.03.05.07.05.12 0 .04-.04.13-.11.25a.64.64 0 00-.12.35c0 .15.06.28.18.39.12.11.27.16.45.16.2 0 .36-.07.49-.2s.2-.31.2-.54c0-.26-.1-.47-.3-.63-.19-.16-.51-.24-.95-.24-.68 0-1.3.19-1.85.58-.56.38-1.09 1.02-1.59 1.91-.17.3-.34.5-.49.59-.15.08-.4.13-.74.12l-.23.77h.95l-1.39 5.24c-.23.86-.39 1.39-.47 1.59-.12.29-.3.54-.54.75-.1.08-.21.12-.35.12-.04 0-.07-.01-.1-.03l-.03-.04c0-.02.03-.07.1-.13.07-.07.1-.17.1-.31 0-.15-.05-.28-.16-.38-.11-.1-.27-.15-.47-.15-.25 0-.44.07-.59.2-.15.12-.23.28-.23.46 0 .19.09.36.27.5.19.14.47.21.86.21.61 0 1.16-.15 1.63-.46.48-.31.89-.78 1.25-1.43.35-.64.72-1.68 1.09-3.11l.8-3.03h.96l.24-.77zM19 0h-9c-.55 0-1 .45-1 1v3h2V2h7v16h-7v-2H9v3c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-8.79 13.49c.15.28.32.49.52.61.19.12.44.19.73.19.28 0 .57-.1.86-.3.38-.25.77-.69 1.17-1.31l-.25-.14c-.27.37-.48.6-.61.69-.09.06-.19.09-.31.09-.14 0-.28-.09-.42-.26-.23-.29-.54-1.09-.93-2.4.35-.59.64-.97.87-1.15.17-.13.35-.2.55-.2.07 0 .2.03.39.08s.36.08.5.08c.2 0 .37-.07.5-.2.15-.14.22-.31.22-.52 0-.22-.07-.4-.2-.53s-.33-.2-.58-.2c-.22 0-.43.05-.63.15-.2.1-.45.32-.75.67-.23.25-.56.7-1.01 1.33a6.52 6.52 0 00-.91-2.15l-2.39.39-.05.25c.18-.03.33-.05.45-.05.24 0 .43.1.59.3.25.31.59 1.24 1.02 2.8-.34.44-.58.73-.7.87-.21.22-.38.36-.52.43-.1.05-.22.08-.35.08-.1 0-.26-.05-.49-.16a1.01 1.01 0 00-.42-.11c-.23 0-.42.07-.57.22-.15.14-.23.33-.23.55 0 .21.07.38.21.51.14.13.33.2.56.2.23 0 .44-.05.64-.14.2-.09.45-.29.75-.59s.72-.78 1.25-1.43c.21.61.39 1.06.54 1.35z"];
  var desktop = ["M19 0H1C.45 0 0 .45 0 1v13c0 .55.45 1 1 1h5.67l-.5 3H5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1h-1.17l-.5-3H19c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 13H2V2h16v11z"];
  var diagnosis = ["M4 2a1 1 0 01.117 1.993L4 4v5a2 2 0 001.85 1.995L6 11a2 2 0 001.995-1.85L8 9V4a1 1 0 01-.117-1.993L8 2h1a1 1 0 01.993.883L10 3v6a4.002 4.002 0 01-3 3.874V13a3 3 0 003 3 4 4 0 003.995-3.8L14 12V8.792a2.5 2.5 0 112 0V12a6 6 0 01-6 6 5 5 0 01-4.995-4.783L5 13v-.126A4.002 4.002 0 012.005 9.2L2 9V3a1 1 0 01.883-.993L3 2h1z"];
  var diagramTree = ["M19 10v5h-2v-4h-6v4H9v-4H3v4H1v-5a1 1 0 011-1h7V5h2v4h7a1 1 0 011 1zM1 16h2a1 1 0 011 1v2a1 1 0 01-1 1H1a1 1 0 01-1-1v-2a1 1 0 011-1zm16 0h2a1 1 0 011 1v2a1 1 0 01-1 1h-2a1 1 0 01-1-1v-2a1 1 0 011-1zm-8 0h2a1 1 0 011 1v2a1 1 0 01-1 1H9a1 1 0 01-1-1v-2a1 1 0 011-1zM9 0h2a1 1 0 011 1v2a1 1 0 01-1 1H9a1 1 0 01-1-1V1a1 1 0 011-1z"];
  var directionLeft = ["M20 3.02l-20 7 20 7-5-7z"];
  var directionRight = ["M20 10.02l-20-7 5 7-5 7z"];
  var disable = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM2 10c0-4.42 3.58-8 8-8 1.85 0 3.55.63 4.9 1.69L3.69 14.9A7.902 7.902 0 012 10zm8 8c-1.85 0-3.55-.63-4.9-1.69L16.31 5.1A7.902 7.902 0 0118 10c0 4.42-3.58 8-8 8z"];
  var divide$3 = ["M11.25 6.25a1.25 1.25 0 11-2.5 0 1.25 1.25 0 012.5 0zM6 9c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1H6zm4 6a1.25 1.25 0 100-2.5 1.25 1.25 0 000 2.5z"];
  var document$1 = ["M11.98 0h-8c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V6l-6-6zm4 18h-11V2h6v5h5v11z"];
  var documentOpen = ["M8 15c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1h2.59L1.3 16.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 12.41V15zm5-15H5c-.55 0-1 .45-1 1v6h2V2h6v5h5v11H6v-.76L4.04 19.2c.1.45.48.8.96.8h13c.55 0 1-.45 1-1V6l-6-6z"];
  var documentShare = ["M14.09 10.09c-.31.31-.67.57-1.09.72V18H2V2h6v5h1.18c.15-.42.39-.8.7-1.11v-.01l2.45-2.45c-.42-.29-.78-.65-1.01-1.11L9 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V9.24l-.88.88-.03-.03zM19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var dollar = ["M15.57 11.19c-.27-.51-.63-.93-1.07-1.26-.44-.33-.95-.6-1.51-.79-.56-.2-1.14-.36-1.72-.5-.6-.14-1.19-.26-1.75-.38-.57-.13-1.07-.27-1.51-.44-.44-.17-.8-.38-1.07-.63s-.41-.59-.41-1c0-.33.09-.6.28-.81.19-.21.42-.36.69-.47.27-.11.57-.18.88-.22.31-.04.58-.06.8-.06.71 0 1.35.14 1.9.41.55.27.91.81 1.06 1.62h3.36c-.09-.84-.32-1.56-.69-2.16-.37-.6-.83-1.08-1.38-1.45-.56-.37-1.18-.64-1.86-.81-.19-.05-.38-.07-.57-.1V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1.1c-.22.03-.43.05-.66.1-.73.13-1.39.37-1.98.71-.6.34-1.09.8-1.47 1.35-.39.56-.58 1.25-.58 2.08 0 .76.13 1.41.4 1.93.26.52.62.95 1.06 1.28.44.33.94.6 1.5.79.55.2 1.13.36 1.74.5.58.14 1.16.26 1.72.38s1.07.26 1.51.43c.44.17.8.39 1.09.66.28.27.43.63.45 1.06.02.43-.08.78-.3 1.04-.22.26-.49.47-.83.6-.34.14-.7.23-1.09.28-.39.05-.73.07-1.03.07-.87 0-1.61-.2-2.23-.59-.62-.39-.98-1.08-1.07-2.06H3c.02.9.19 1.68.52 2.34.33.66.78 1.21 1.35 1.65.57.44 1.25.77 2.03.98.35.1.71.16 1.08.21V19c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-1.13c.25-.04.5-.07.76-.13.77-.18 1.47-.46 2.1-.85.63-.39 1.14-.9 1.54-1.53.4-.63.59-1.39.59-2.29.01-.75-.13-1.37-.4-1.88z"];
  var dot$6 = ["M10 6a4 4 0 100 8 4 4 0 100-8z"];
  var doubleCaretHorizontal = ["M8 4c-.24 0-.46.1-.63.24l-.01-.01-6 5 .01.01c-.22.19-.37.45-.37.76s.15.57.37.76l-.01.01 6 5 .01-.01c.17.14.39.24.63.24.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm11 6c0-.31-.15-.57-.37-.76l.01-.01-6-5-.01.01C12.46 4.1 12.24 4 12 4c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1 .24 0 .46-.1.63-.24l.01.01 6-5-.01-.01c.22-.19.37-.45.37-.76z"];
  var doubleCaretVertical = ["M5 9h10c.55 0 1-.45 1-1 0-.24-.1-.46-.24-.63l.01-.01-5-6-.01.01C10.57 1.15 10.31 1 10 1s-.57.15-.76.37l-.01-.01-5 6 .01.01C4.1 7.54 4 7.76 4 8c0 .55.45 1 1 1zm10 2H5c-.55 0-1 .45-1 1 0 .24.1.46.24.63l-.01.01 5 6 .01-.01c.19.22.45.37.76.37s.57-.15.76-.37l.01.01 5-6-.01-.01c.14-.17.24-.39.24-.63 0-.55-.45-1-1-1z"];
  var doubleChevronDown = ["M9.29 10.71c.18.18.43.29.71.29s.53-.11.71-.29l6-6a1.003 1.003 0 00-1.42-1.42L10 8.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6zM16 9c-.28 0-.53.11-.71.29L10 14.59l-5.29-5.3a1.003 1.003 0 00-1.42 1.42l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0016 9z"];
  var doubleChevronLeft = ["M5.41 10l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L5.41 10zm6 0l5.29-5.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-6 6c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l6 6a1.003 1.003 0 001.42-1.42L11.41 10z"];
  var doubleChevronRight = ["M11 10c0-.28-.11-.53-.29-.71l-6-6a1.003 1.003 0 00-1.42 1.42L8.59 10 3.3 15.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71zm5.71-.71l-6-6a1.003 1.003 0 00-1.42 1.42l5.3 5.29-5.29 5.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var doubleChevronUp = ["M4 11c.28 0 .53-.11.71-.29L10 5.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6A.997.997 0 0010 3c-.28 0-.53.11-.71.29l-6 6A1.003 1.003 0 004 11zm6.71-1.71A.997.997 0 0010 9c-.28 0-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42l5.29-5.3 5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6z"];
  var doughnutChart = ["M16 10c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6V0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10h-4zm-.09-1h4.04C19.48 4.28 15.72.52 11 .05V4.1A5.98 5.98 0 0115.91 9z"];
  var download = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm4.71 11.71l-4 4c-.18.18-.43.29-.71.29s-.53-.11-.71-.29l-4-4a1.003 1.003 0 011.42-1.42L9 12.59V5c0-.55.45-1 1-1s1 .45 1 1v7.59l2.29-2.29c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71z"];
  var dragHandleHorizontal = ["M7.5 11c-.83 0-1.5.67-1.5 1.5S6.67 14 7.5 14 9 13.33 9 12.5 8.33 11 7.5 11zm-5-5C1.67 6 1 6.67 1 7.5S1.67 9 2.5 9 4 8.33 4 7.5 3.33 6 2.5 6zm0 5c-.83 0-1.5.67-1.5 1.5S1.67 14 2.5 14 4 13.33 4 12.5 3.33 11 2.5 11zm15-2c.83 0 1.5-.67 1.5-1.5S18.33 6 17.5 6 16 6.67 16 7.5 16.67 9 17.5 9zm-5 2c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm5 0c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm-10-5C6.67 6 6 6.67 6 7.5S6.67 9 7.5 9 9 8.33 9 7.5 8.33 6 7.5 6zm5 0c-.83 0-1.5.67-1.5 1.5S11.67 9 12.5 9 14 8.33 14 7.5 13.33 6 12.5 6z"];
  var dragHandleVertical = ["M7.5 6C6.67 6 6 6.67 6 7.5S6.67 9 7.5 9 9 8.33 9 7.5 8.33 6 7.5 6zm0 5c-.83 0-1.5.67-1.5 1.5S6.67 14 7.5 14 9 13.33 9 12.5 8.33 11 7.5 11zm0 5c-.83 0-1.5.67-1.5 1.5S6.67 19 7.5 19 9 18.33 9 17.5 8.33 16 7.5 16zm5-12c.83 0 1.5-.67 1.5-1.5S13.33 1 12.5 1 11 1.67 11 2.5 11.67 4 12.5 4zm-5-3C6.67 1 6 1.67 6 2.5S6.67 4 7.5 4 9 3.33 9 2.5 8.33 1 7.5 1zm5 10c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0 5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-10c-.83 0-1.5.67-1.5 1.5S11.67 9 12.5 9 14 8.33 14 7.5 13.33 6 12.5 6z"];
  var draw = ["M17.7 12.7c0-.1 0-.2-.1-.3l-2-7c-.1-.3-.3-.6-.6-.7L1.8 0l-.6.5L7.7 7c.3-.2.6-.3 1-.3 1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2c0-.4.1-.7.3-1L.5 1.2l-.5.6L4.7 15c.1.3.4.5.7.6l7 2c.1 0 .2.1.3.1.3 0 .5-.1.7-.3l4-4c.2-.2.3-.5.3-.7zm1 1c-.3 0-.5.1-.7.3l-4 4c-.2.2-.3.4-.3.7 0 .5.4 1 1 1 .3 0 .5-.1.7-.3l4-4c.2-.2.3-.4.3-.7 0-.6-.5-1-1-1z"];
  var drawerLeft = ["M9 0a1 1 0 011 1v18a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1h8zM8 2H2v16h6V2zm2 7h6.59L14.3 6.71A.965.965 0 0114 6a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H10V9z"];
  var drawerLeftFilled = ["M1 0h8a1 1 0 011 1v18a1 1 0 01-1 1H1a1 1 0 01-1-1V1a1 1 0 011-1zm9 9h6.59L14.3 6.71A.965.965 0 0114 6a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H10V9z"];
  var drawerRight = ["M19 0a1 1 0 011 1v18a1 1 0 01-1 1h-8a1 1 0 01-1-1V1a1 1 0 011-1h8zm-1 2h-6v16h6V2zm-8 7H3.41L5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L3.41 11H10V9z"];
  var drawerRightFilled = ["M11 0h8a1 1 0 011 1v18a1 1 0 01-1 1h-8a1 1 0 01-1-1V1a1 1 0 011-1zm-1 9H3.41L5.7 6.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L3.41 11H10V9z"];
  var driveTime = ["M20.01 7.7c0-.63-.5-1.14-1.1-1.14h-1.32l-.95-2.57c-.24-.64-.95-1.31-1.59-1.5 0 0-1.65-.49-5.05-.49s-5.04.49-5.04.49c-.63.19-1.35.86-1.59 1.5l-.95 2.57H1.1C.5 6.56 0 7.07 0 7.7c0 .63.5 1.14 1.1 1.14h.47l-.34.91c-.24.64-.43 1.72-.43 2.4v5.39c0 .8.63 1.45 1.4 1.45.77 0 1.4-.65 1.4-1.45v-.83h12.8v.83c0 .8.63 1.45 1.4 1.45s1.4-.65 1.4-1.45v-5.39c0-.68-.19-1.77-.43-2.4l-.34-.91h.47c.61 0 1.11-.51 1.11-1.14zm-16.47.34l1.12-3.16c.08-.22.32-.39.54-.39h9.6c.22 0 .46.17.54.39l1.12 3.16c.08.21-.04.39-.26.39H3.8c-.22-.01-.34-.18-.26-.39zm.96 4.94c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.68 1.5 1.5c0 .83-.67 1.5-1.5 1.5zm11 0c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"];
  var duplicate = ["M15 4H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm-1 14H2V6h12v12zm5-18H5c-.55 0-1 .45-1 1v2h2V2h12v12h-1v2h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var edit = ["M4.59 12.59l2.83 2.83 7.65-7.65-2.83-2.83-7.65 7.65zM2 18l4.41-1.59-2.81-2.79L2 18zM16 2c-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.65-1.65A2.006 2.006 0 0016 2z"];
  var eject = ["M4 12h12c.55 0 1-.45 1-1 0-.25-.1-.47-.25-.64l.01-.01-6-7-.01.01C10.57 3.14 10.3 3 10 3s-.57.14-.75.36l-.01-.01-6 7 .01.01c-.15.17-.25.39-.25.64 0 .55.45 1 1 1zm12 1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"];
  var emoji = ["M10 0c5.523 0 10 4.477 10 10s-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0zm0 2a8 8 0 100 16 8 8 0 000-16zm-4 8l.015.215C6.219 12.42 7.925 14 10 14a4 4 0 003.995-3.8L14 10h2l-.013.238C15.754 13.552 13.163 16 10 16a6 6 0 01-5.996-5.775L4 10h2zm1.5-4a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm5 0a1.5 1.5 0 110 3 1.5 1.5 0 010-3z"];
  var endorsed = ["M19.83 9.38L18.81 7.6V5.62c0-.45-.23-.85-.61-1.08l-1.71-1-1.02-1.76a1.25 1.25 0 00-1.08-.61h-2.03l-1.74-1c-.38-.23-.87-.23-1.25 0l-1.74 1H5.65c-.44 0-.85.23-1.08.61L3.58 3.5l-1.8 1.04c-.38.24-.62.64-.62 1.08v2.06L.17 9.4c-.11.19-.17.4-.17.61s.06.42.17.61l.99 1.72v2.06c0 .45.23.85.61 1.08l1.78 1.02.99 1.72c.23.38.63.61 1.08.61h1.99l1.74 1c.19.11.41.17.62.17.21 0 .42-.06.61-.17l1.74-1h2.03c.44 0 .85-.23 1.08-.61l1.02-1.76 1.71-1c.38-.23.61-.64.61-1.08v-1.97l1.02-1.78c.27-.38.27-.85.04-1.25zm-5.08-.71l-5.01 5.01c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.29l-3.01-3.01a1.003 1.003 0 011.42-1.42l2.3 2.3 4.31-4.3a1.003 1.003 0 011.71.71c0 .28-.12.53-.3.71z"];
  var envelope = ["M0 4.01v11.91l6.27-6.27L0 4.01zm18.91-1.03H1.09L10 10.97l8.91-7.99zm-5.18 6.66L20 15.92V4.01l-6.27 5.63zm-3.23 2.9c-.13.12-.31.19-.5.19s-.37-.07-.5-.19l-2.11-1.89-6.33 6.33h17.88l-6.33-6.33-2.11 1.89z"];
  var equals$7 = ["M4 7h12a1 1 0 010 2H4a1 1 0 110-2zm0 4h12a1 1 0 010 2H4a1 1 0 010-2z"];
  var eraser = ["M18.71 8.43c.39-.4.39-1.05 0-1.45l-5.53-5.72a.967.967 0 00-1.4 0L1.29 12.1c-.39.4-.39 1.05 0 1.45l4.25 4.39 2.13 2.05h9.27c.02 0 .03.01.05.01.55 0 1-.45 1-1s-.45-1-1-1H9.46l.05-.05h.01l.81-.84 8.38-8.68zM7.52 17.94l-4.95-5.12 4.46-4.61 4.95 5.12-4.46 4.61z"];
  var error = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm1 16H9v-2h2v2zm0-3H9V4h2v9z"];
  var euro = ["M8.89 4.47c.56-.31 1.23-.47 2.03-.47.44 0 .85.07 1.25.22.4.14.76.35 1.07.6.17.14.33.3.47.47l2.32-2.32c-.16-.15-.3-.32-.47-.46-.62-.49-1.33-.87-2.12-1.13-.8-.25-1.64-.38-2.52-.38-1.24 0-2.35.22-3.33.66-.99.44-1.82 1.05-2.49 1.82-.68.78-1.2 1.68-1.56 2.72-.09.26-.13.54-.2.8H2c-.55 0-1 .45-1 1s.45 1 1 1h1.04c-.01.2-.04.38-.04.58 0 .15.03.28.03.42H2c-.55 0-1 .45-1 1s.45 1 1 1h1.31c.07.3.13.6.23.89.36 1.02.88 1.92 1.56 2.67.68.76 1.51 1.35 2.49 1.79.98.43 2.09.65 3.33.65.99 0 1.9-.15 2.73-.46.83-.3 1.55-.74 2.17-1.32.03-.03.05-.06.08-.09l-2.41-2.15c-.01.01-.02.02-.02.03-.61.67-1.46 1-2.54 1-.8 0-1.47-.16-2.03-.47-.56-.31-1.01-.72-1.35-1.24-.28-.38-.47-.83-.63-1.3H12c.55 0 1-.45 1-1s-.45-1-1-1H6.56c0-.14-.02-.28-.02-.42 0-.2.02-.39.03-.58H13c.55 0 1-.45 1-1s-.45-1-1-1H6.94c.15-.46.34-.9.59-1.28.35-.52.8-.94 1.36-1.25zM18 11.38v0z"];
  var exchange = ["M2.5 8a2.5 2.5 0 000 5 2.5 2.5 0 000-5zm10.35 3.15a.495.495 0 10-.7.7L13.3 13H5.5c-.28 0-.5.22-.5.5s.22.5.5.5h7.79l-1.15 1.15c-.08.09-.14.21-.14.35a.495.495 0 00.85.35l2-2c.09-.09.15-.21.15-.35s-.06-.26-.15-.35l-2-2zM17.5 8a2.5 2.5 0 000 5 2.5 2.5 0 000-5zM7.15 9.85a.495.495 0 10.7-.7L6.71 8h7.79c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H6.71l1.15-1.15c.08-.09.14-.21.14-.35a.495.495 0 00-.85-.35l-2 2c-.09.09-.15.21-.15.35s.06.26.15.35l2 2z"];
  var excludeRow = ["M1 3h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zM0 13a1.003 1.003 0 001.71.71L4 11.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L5.41 10 7.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L4 8.59l-2.29-2.3A1.003 1.003 0 00.29 7.71L2.59 10 .3 12.29c-.19.18-.3.43-.3.71zm18-5h-7c-1.1 0-2 .9-2 2s.9 2 2 2h7c1.1 0 2-.9 2-2s-.9-2-2-2zm1 9H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var expandAll = ["M4 9c.28 0 .53-.11.71-.29L10 3.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-6-6C10.53 1.11 10.28 1 10 1s-.53.11-.71.29l-6 6A1.003 1.003 0 004 9zm12 2c-.28 0-.53.11-.71.29L10 16.59 4.71 11.3A.965.965 0 004 11a1.003 1.003 0 00-.71 1.71l6 6c.18.18.43.29.71.29s.53-.11.71-.29l6-6A1.003 1.003 0 0016 11z"];
  var _export = ["M5 7c.28 0 .53-.11.71-.29L9 3.41V15c0 .55.45 1 1 1s1-.45 1-1V3.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-5-5C10.53.11 10.28 0 10 0s-.53.11-.71.29l-5 5A1.003 1.003 0 005 7zm14 7c-.55 0-1 .45-1 1v3H2v-3c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"];
  var eyeOff = ["M20 9.96v-.03-.01-.02-.02a.794.794 0 00-.21-.43c-.55-.69-1.19-1.3-1.85-1.87l-3.93 2.62a3.966 3.966 0 01-3.96 3.77c-.47 0-.91-.1-1.33-.24l-2.24 1.49c.52.21 1.05.39 1.6.51 1.21.27 2.43.28 3.64.05 1.11-.21 2.17-.64 3.17-1.18 1.56-.84 2.99-2 4.23-3.3.23-.24.46-.49.67-.75a.87.87 0 00.21-.43v-.02-.02-.01-.03V10v-.04zm-.46-5.14c.27-.18.46-.47.46-.82 0-.55-.45-1-1-1-.21 0-.39.08-.54.18l-.01-.02L15 5.46c-.95-.53-1.95-.96-3.01-1.2a9.158 9.158 0 00-3.65-.04c-1.11.21-2.17.64-3.17 1.18-1.56.84-2.99 2-4.23 3.3-.23.24-.46.48-.67.75-.27.34-.27.76 0 1.1.64.79 1.39 1.5 2.16 2.15.26.21.52.41.79.61L.44 15.16l.01.02A1 1 0 000 16c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 18-12-.01-.02zm-8.67 3.4c-.25-.12-.53-.2-.83-.2-1.1 0-1.99.89-1.99 1.99 0 .03.02.06.02.09l-1.78 1.19c-.14-.4-.22-.83-.22-1.28 0-2.19 1.78-3.97 3.98-3.97 1.01 0 1.91.38 2.61 1l-1.79 1.18z"];
  var eyeOn = ["M13.3 8.71c.18.18.43.29.71.29s.53-.11.71-.29l4.99-5a1.003 1.003 0 00-1.42-1.42L14 6.58l-2.29-2.29a.956.956 0 00-.7-.29 1.003 1.003 0 00-.71 1.71l3 3zM20 9.96v-.03-.01-.02-.02a.823.823 0 00-.21-.44c-.44-.55-.94-1.05-1.46-1.52l-2.2 2.2c-.55.54-1.3.88-2.12.88-.05 0-.09-.01-.14-.01a3.978 3.978 0 01-3.86 3.02 4.007 4.007 0 01-1.66-7.65A2.97 2.97 0 018.02 5c0-.28.05-.54.12-.8-1.05.22-2.07.64-3.02 1.15-1.57.85-3 2.02-4.24 3.33-.23.25-.46.5-.67.76-.28.35-.28.77 0 1.12.64.8 1.4 1.52 2.17 2.17 1.66 1.41 3.56 2.58 5.66 3.06 1.21.27 2.43.29 3.65.05 1.11-.21 2.18-.65 3.18-1.19 1.57-.85 3-2.02 4.24-3.33.23-.24.46-.49.67-.76.11-.12.18-.27.21-.44v-.02-.02-.01-.03V10c.01-.01.01-.03.01-.04zm-9.99 2.05c1.03 0 1.87-.79 1.98-1.8l-.09-.09-.01.01-2.1-2.11c-1 .11-1.77.95-1.77 1.98-.01 1.11.89 2.01 1.99 2.01z"];
  var eyeOpen = ["M10.01 7.984A2.008 2.008 0 008.012 9.99c0 1.103.9 2.006 1.998 2.006a2.008 2.008 0 001.998-2.006c0-1.103-.9-2.006-1.998-2.006zM20 9.96v-.03-.01-.02-.02a.827.827 0 00-.21-.442c-.64-.802-1.398-1.514-2.168-2.166-1.658-1.404-3.566-2.587-5.664-3.058a8.982 8.982 0 00-3.656-.05c-1.11.2-2.178.641-3.177 1.183-1.569.852-2.997 2.016-4.246 3.33-.23.25-.46.49-.67.761-.279.351-.279.773 0 1.124.64.802 1.4 1.514 2.169 2.166 1.658 1.404 3.566 2.577 5.664 3.058 1.209.271 2.438.281 3.656.05 1.11-.21 2.178-.651 3.177-1.193 1.569-.852 2.997-2.016 4.246-3.33.23-.24.46-.49.67-.751.11-.12.179-.271.209-.442v-.02-.02-.01-.03V10v-.04zM10.01 14A4.003 4.003 0 016.014 9.99a4.003 4.003 0 013.996-4.011 4.003 4.003 0 013.996 4.011 4.003 4.003 0 01-3.996 4.011z"];
  var fastBackward = ["M18 3c-.23 0-.42.09-.59.21l-.01-.01L11 8V4c0-.55-.45-1-1-1-.23 0-.42.09-.59.21L9.4 3.2l-8 6 .01.01C1.17 9.4 1 9.67 1 10s.17.6.41.79l-.01.01 8 6 .01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1v-4l6.4 4.8.01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var fastForward = ["M19 10c0-.33-.17-.6-.41-.79l.01-.01-8-6-.01.01C10.42 3.09 10.23 3 10 3c-.55 0-1 .45-1 1v4L2.6 3.2l-.01.01C2.42 3.09 2.23 3 2 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01L9 12v4c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01 8-6-.01-.01c.24-.19.41-.46.41-.79z"];
  var feed = ["M2.5 15a2.5 2.5 0 000 5 2.5 2.5 0 000-5zm.5-5c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5 2.24 5 5 0 .55.45 1 1 1s1-.45 1-1c0-3.87-3.13-7-7-7zM3 0c-.55 0-1 .45-1 1s.45 1 1 1c8.28 0 15 6.72 15 15 0 .55.45 1 1 1s1-.45 1-1C20 7.61 12.39 0 3 0zm0 5c-.55 0-1 .45-1 1s.45 1 1 1c5.52 0 10 4.48 10 10 0 .55.45 1 1 1s1-.45 1-1C15 10.37 9.63 5 3 5z"];
  var feedSubscribed = ["M2.5 15a2.5 2.5 0 000 5 2.5 2.5 0 000-5zM3 2c1.76 0 3.44.31 5.01.87.03-.71.31-1.35.75-1.85C6.96.37 5.03 0 3 0c-.55 0-1 .45-1 1s.45 1 1 1zm10.32 4.67a.99.99 0 001.4 0l4.98-4.98c.19-.17.3-.42.3-.7 0-.55-.45-1-1-1a.99.99 0 00-.7.29l-4.27 4.27-2.28-2.28a.99.99 0 00-.7-.29c-.55 0-.99.45-.99 1 0 .28.11.52.29.7l2.97 2.99zM3 10c-.55 0-1 .45-1 1s.45 1 1 1c2.76 0 5 2.24 5 5 0 .55.45 1 1 1s1-.45 1-1c0-3.87-3.13-7-7-7zm13.94-2.69l-.82.82-.02-.02c-.2.2-.42.37-.67.51A14.8 14.8 0 0118 17c0 .55.45 1 1 1s1-.45 1-1c0-3.61-1.14-6.94-3.06-9.69zM3 5c-.55 0-1 .45-1 1s.45 1 1 1c5.52 0 10 4.48 10 10 0 .55.45 1 1 1s1-.45 1-1C15 10.37 9.63 5 3 5z"];
  var film = ["M19 2h-5v3H6V2H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h5v-3h8v3h5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM4 17H2v-2h2v2zm0-3H2v-2h2v2zm0-3H2V9h2v2zm0-3H2V6h2v2zm0-3H2V3h2v2zm10 8H6V7h8v6zm4 4h-2v-2h2v2zm0-3h-2v-2h2v2zm0-3h-2V9h2v2zm0-3h-2V6h2v2zm0-3h-2V3h2v2z"];
  var filter = ["M18 1H2a1.003 1.003 0 00-.71 1.71L7 8.41V18a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71V8.41l5.71-5.71c.18-.17.29-.42.29-.7 0-.55-.45-1-1-1z"];
  var filterKeep = ["M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L5 7.41V16a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm4 11c-.28 0-.53.11-.71.29L15 16.59l-1.29-1.29A.965.965 0 0013 15a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0019 13z"];
  var filterList = ["M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L5 7.41V16a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm-4 8c0 .55.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1h-7c-.55 0-1 .45-1 1zm8 7h-7c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1zm0-4h-7c-.55 0-1 .45-1 1s.45 1 1 1h7c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var filterOpen = ["M15 2c0 .28-.11.53-.29.7L10 7.41V13c0 .28-.11.53-.29.71l-3 3A1.003 1.003 0 015 16V7.41L.29 2.71A1.003 1.003 0 011 1h13c.55 0 1 .45 1 1zm4.707 11.293a1 1 0 010 1.414l-4 4c-.63.63-1.707.184-1.707-.707v-8c0-.89 1.077-1.337 1.707-.707l4 4z"];
  var filterRemove = ["M15 2c0-.55-.45-1-1-1H1a1.003 1.003 0 00-.71 1.71L5 7.41V16a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71V7.41l4.71-4.71c.18-.17.29-.42.29-.7zm2.91 13.5l1.79-1.79c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-1.79 1.79-1.79-1.79a1.003 1.003 0 00-1.42 1.42l1.79 1.79-1.79 1.79a1.003 1.003 0 001.42 1.42l1.79-1.79 1.79 1.79a1.003 1.003 0 001.42-1.42l-1.8-1.79z"];
  var flag = ["M3 3c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1zm0-3c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm2 4.08v8.28c3.01-2.41 8.67 2.64 13 0V4.08C13.61 7.14 8.01 1 5 4.08z"];
  var flame = ["M11.622 0c0 1.71.49 3.077 1.472 4.103C16.364 6.496 18 9.23 18 12.308c0 3.418-1.962 5.983-5.887 7.692 2.887-3 2.453-4.23-.49-8C8.5 13.5 9 14.5 9.5 16.5c-1.048 0-2 0-2.5-.5 0 .684 1.197 2.5 1.952 4-3.924-1.026-8.123-7.18-6.651-7.692.981-.342 2.126-.171 3.434.513C4.1 6.667 6.062 2.393 11.622 0z"];
  var flash = ["M4.96 6.37a1.003 1.003 0 001.42-1.42l-2-2a1.07 1.07 0 00-.71-.28 1.003 1.003 0 00-.71 1.71l2 1.99zm9.37.3c.28 0 .53-.11.71-.29l2-2a1.003 1.003 0 00-1.42-1.42l-2 2a1.003 1.003 0 00.71 1.71zM10 5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S9 .45 9 1v3c0 .55.45 1 1 1zm-5 5c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1zm14-1h-3c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm-9-3c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm0 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm5.04 1.63a1.003 1.003 0 00-1.42 1.42l2 2a1.003 1.003 0 001.42-1.42l-2-2zM10 15c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1s1-.45 1-1v-3c0-.55-.45-1-1-1zm-4.33-1.67c-.28 0-.53.11-.71.29l-2 2a1.003 1.003 0 001.42 1.42l2-2a1.003 1.003 0 00-.71-1.71z"];
  var floatingPoint = ["M1 6.648c.343 0 .676-.028 1-.085.324-.057.614-.152.871-.284.267-.133.49-.303.672-.512.19-.208.314-.464.371-.767h1.329v9.947H3.457v-7.02H1V6.648zm13.965-1.635c.688 0 1.247.16 1.677.478.44.31.78.711 1.018 1.204.247.483.413 1.016.495 1.6.092.583.137 1.149.137 1.696 0 .547-.045 1.112-.137 1.696a5.182 5.182 0 01-.495 1.614 3.234 3.234 0 01-1.018 1.203c-.43.31-.99.465-1.677.465-.688 0-1.251-.155-1.691-.465-.431-.319-.77-.72-1.018-1.203a5.714 5.714 0 01-.495-1.614 12.116 12.116 0 01-.123-1.696c0-.547.04-1.113.123-1.696a5.534 5.534 0 01.495-1.6 3.26 3.26 0 011.018-1.204c.44-.319 1.004-.478 1.691-.478zm0 8.657c.34 0 .623-.096.853-.287.229-.2.407-.465.536-.794a4.61 4.61 0 00.288-1.176c.056-.447.083-.92.083-1.422 0-.502-.027-.971-.083-1.409a4.61 4.61 0 00-.288-1.176c-.129-.337-.307-.602-.536-.793-.23-.2-.514-.301-.853-.301-.348 0-.637.1-.866.3-.22.192-.399.457-.537.794-.128.337-.22.73-.274 1.176-.056.438-.083.907-.083 1.409 0 .501.027.975.082 1.422.055.447.147.84.275 1.176.138.329.317.593.537.794.229.191.518.287.866.287zm-5.104-.588H7.875V15h1.986v-1.918z"];
  var floppyDisk = ["M14 1h-3v5h3V1zm5.71 2.29l-3-3A.997.997 0 0016 0h-1v7H5V0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V4c0-.28-.11-.53-.29-.71zM17 19H3v-8c0-.55.45-1 1-1h12c.55 0 1 .45 1 1v8z"];
  var flowBranch = ["M14.425 7.953a3.98 3.98 0 01.562 2.045 3.98 3.98 0 01-.583 2.08L18 15.671V12.98c0-.248.097-.496.29-.689.379-.379 1.047-.38 1.426 0a.94.94 0 01.283.696l-.001 5.049a.957.957 0 01-.276.69.955.955 0 01-.69.273h-5.059a.971.971 0 01-.689-.289 1.026 1.026 0 010-1.417.972.972 0 01.69-.29h2.702l-3.634-3.573a3.998 3.998 0 01-5.924-2.431H1a1 1 0 010-2h6.12a3.998 3.998 0 015.96-2.409L16.665 3l-2.694-.001a.972.972 0 01-.689-.29 1.035 1.035 0 010-1.425.94.94 0 01.696-.283l5.05.001c.248 0 .497.083.69.276a.954.954 0 01.272.69l.001 5.052a.971.971 0 01-.29.689 1.028 1.028 0 01-1.419 0 .972.972 0 01-.29-.69V4.323l-3.567 3.63z"];
  var flowEnd = ["M12 9.919a3.998 3.998 0 014-3.92c2.21 0 4 1.79 4 3.997a3.998 3.998 0 01-4 3.996 3.998 3.998 0 01-4-3.916.967.967 0 01-.28.612L7.685 14.71a.958.958 0 01-.686.285c-.536 0-.994-.461-.994-.997 0-.273.107-.528.283-.704l2.379-2.302H.98c-.537 0-.976-.46-.976-.996s.44-.992.976-.992h7.676L6.287 6.687a.957.957 0 01-.283-.686c0-.536.458-.996.994-.996.274 0 .51.1.686.285l4.027 4.024c.159.158.27.365.29.605z"];
  var flowLinear = ["M5.125 10.997H.976C.439 10.997 0 10.537 0 10c0-.536.44-.993.976-.993h4.148a4.002 4.002 0 017.752 0h3.776L14.293 6.69a.962.962 0 01-.285-.687c0-.537.46-1.001.996-1.001a.96.96 0 01.698.3l4.005 4.015c.176.176.293.41.293.683a.972.972 0 01-.283.693L15.702 14.7a.997.997 0 01-.698.297c-.537 0-.996-.453-.996-.99 0-.273.107-.517.283-.692l2.371-2.318h-3.787a4.002 4.002 0 01-7.75 0z"];
  var flowReview = ["M6.13 9.004A4.005 4.005 0 0110.012 6c1.87 0 3.44 1.278 3.881 3.005h2.768l-2.354-2.317a.97.97 0 01-.283-.691c0-.536.462-.995 1-.995.273 0 .517.107.693.283l4 4.041a.97.97 0 01.284.692.956.956 0 01-.293.682l-3.991 3.997a.944.944 0 01-.694.292c-.537 0-1-.46-1-.997a.97.97 0 01.284-.692l2.345-2.29h-2.765a4.005 4.005 0 01-3.875 2.981 4.005 4.005 0 01-3.874-2.981H3.349l2.376 2.308a.97.97 0 01.283.691 1 1 0 01-.994.983.989.989 0 01-.713-.291L.293 10.699A.956.956 0 010 10.017a.97.97 0 01.283-.692l4.03-4.037a.996.996 0 01.701-.283c.537 0 .994.464.994 1a.97.97 0 01-.283.691L3.34 9.004h2.79z"];
  var flowReviewBranch = ["M13.04 13.424c-.6.36-1.302.568-2.052.568a4 4 0 01-3.868-2.999H3.342l2.372 2.31c.176.176.283.42.283.694 0 .537-.452.998-.988.998a.935.935 0 01-.691-.289L.292 10.683A.96.96 0 010 9.999c0-.274.107-.518.283-.694l4.035-4.04a.973.973 0 01.691-.288c.536 0 .988.47.988 1.007a.975.975 0 01-.283.694L3.332 8.984h3.786a4 4 0 013.87-3.006c.771 0 1.492.22 2.102.599l3.565-3.57-2.538-.003a.974.974 0 01-.69-.29c-.38-.38-.38-1.052-.002-1.431A.94.94 0 0114.122 1l4.896.005a.96.96 0 01.69.277c.193.193.27.442.27.69l.005 4.9a.971.971 0 01-.289.69 1.023 1.023 0 01-1.416 0 .975.975 0 01-.29-.691l-.003-2.54-3.554 3.62c.351.596.553 1.291.553 2.034 0 .763-.213 1.477-.583 2.084l3.595 3.595.003-2.54c0-.249.097-.497.29-.69.38-.38 1.05-.381 1.429-.002a.94.94 0 01.282.697l-.005 4.9a.927.927 0 01-.277.675.974.974 0 01-.69.291L13.974 19a.97.97 0 01-.69-.29 1.03 1.03 0 01.002-1.42.974.974 0 01.69-.29l2.696-.003-3.632-3.573z"];
  var flows = ["M17.5 7.93a2.5 2.5 0 00-2.45 2h-2.3l-4.01-4-.75.75 3.26 3.25h-6.3a2.5 2.5 0 100 1h6.3l-3.26 3.25.75.75 4.01-4h2.3a2.5 2.5 0 102.45-3z"];
  var folderClose = ["M0 17c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7H0v10zM19 4H9.41l-1.7-1.71A.997.997 0 007 2H1c-.55 0-1 .45-1 1v3h20V5c0-.55-.45-1-1-1z"];
  var folderNew = ["M12.994 7c0 1.655 1.344 3 2.998 3a3.002 3.002 0 002.999-3H20v10c0 .55-.45 1-1 1H1.01c-.55 0-1-.45-1-1V7h12.984zM10.76 6H0V3c0-.55.45-1 1-1h3.998c.28 0 .53.11.71.29L7.415 4h2.579c0 .768.29 1.469.765 2zm8.23-3c.55 0 1 .45 1 1s-.45 1-1 1h-1.998v2c0 .55-.45 1-1 1s-1-.45-1-1V5h-1.998c-.55 0-1-.45-1-1s.45-1 1-1h1.999V1c0-.55.45-1 .999-1 .55 0 1 .45 1 1v2h1.999z"];
  var folderOpen = ["M20 9c0-.55-.45-1-1-1H5c-.43 0-.79.27-.93.65h-.01l-3 8h.01c-.04.11-.07.23-.07.35 0 .55.45 1 1 1h14c.43 0 .79-.27.93-.65h.01l3-8h-.01c.04-.11.07-.23.07-.35zM3.07 7.63C3.22 7.26 3.58 7 4 7h14V5c0-.55-.45-1-1-1H8.41l-1.7-1.71A.997.997 0 006 2H1c-.55 0-1 .45-1 1v12.31l3.07-7.68z"];
  var folderShared = ["M11 4H9.41l-1.7-1.71A.997.997 0 007 2H1c-.55 0-1 .45-1 1v3h11.78C11.3 5.47 11 4.77 11 4zm8-1h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L12.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 6.41V9c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1zm-2.46 7.7l-1.42 1.42a2.996 2.996 0 11-4.24-4.24l.88-.88H0v10c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-5.18c-.31.11-.65.18-1 .18-1.02 0-1.92-.52-2.46-1.3z"];
  var folderSharedOpen = ["M3.07 7.63C3.22 7.26 3.58 7 4 7h7.76l.54-.54A2.97 2.97 0 0111 4H8.41l-1.7-1.71A.997.997 0 006 2H1c-.55 0-1 .45-1 1v12.31l3.07-7.68zm13.47 3.07l-1.42 1.42A2.996 2.996 0 0110 10c0-.77.3-1.47.78-2H5c-.43 0-.79.27-.93.65h-.01l-3 8h.01c-.04.11-.07.23-.07.35 0 .55.45 1 1 1h14c.43 0 .79-.27.93-.65h.01l2.01-5.36c-1-.01-1.88-.52-2.41-1.29zM19 3h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L12.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 6.41V9c0 .55.45 1 1 1s1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var follower = ["M11.54 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.69 3.69 0 00-1.29-1.86C9.69 4.25 8.8 4 8.01 4c-.8 0-1.69.25-2.32.73-.61.47-1.06 1.13-1.28 1.86-.05.17-.09.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.44.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59-1.48.65-3.71 1.35-4.16 2.4C-.16 19.38.02 20 .02 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.68-1.75-4.16-2.41zm8.15-12.63l-3-3a.956.956 0 00-.7-.29 1.003 1.003 0 00-.71 1.71L16.58 3H13c-.55 0-1 .45-1 1s.45 1 1 1h3.58l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.3-.71z"];
  var following = ["M11.55 15.92c-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.69 3.69 0 00-1.29-1.86C9.7 4.25 8.81 4 8.02 4c-.79 0-1.68.25-2.31.73-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.44.32-.48.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59C3 16.56.77 17.26.32 18.31-.15 19.38.04 20 .04 20h15.95s.18-.62-.27-1.67c-.46-1.06-2.69-1.75-4.17-2.41zM19 3h-3.58l1.29-1.29A1.003 1.003 0 0015.29.29l-3 3c-.17.18-.28.43-.28.71 0 .28.11.53.29.71l3 3c.18.18.43.29.7.29a1.003 1.003 0 00.71-1.71L15.42 5H19c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var font = ["M17.93 18.64l-7-18C10.78.27 10.42 0 10 0s-.78.27-.93.64l-7 18c-.04.11-.07.23-.07.36 0 .55.45 1 1 1 .42 0 .78-.27.93-.64L6.41 13h7.19l2.47 6.36c.15.37.51.64.93.64.55 0 1-.45 1-1 0-.13-.03-.25-.07-.36zM7.18 11L10 3.76 12.82 11H7.18z"];
  var fork = ["M16.71 11.29a1.003 1.003 0 00-1.42 1.42l1.3 1.29h-2.17l-8-8h10.17L15.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 4H1c-.55 0-1 .45-1 1s.45 1 1 1h2.59l9.71 9.71c.17.18.42.29.7.29h2.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3z"];
  var form = ["M2 13v4h4v-4H2zm-1-2h6c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1zm11-7h7c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1zM8 1a1.003 1.003 0 01.71 1.71l-5 6C3.53 8.89 3.28 9 3 9s-.53-.11-.71-.29l-2-2a1.003 1.003 0 011.42-1.42L3 6.59l4.29-5.3C7.47 1.11 7.72 1 8 1zm4 13h7c.55 0 1 .45 1 1s-.45 1-1 1h-7c-.55 0-1-.45-1-1s.45-1 1-1z"];
  var fuel = ["M2.196 2H0v2h2c.317 0 .619.139.825.38l3.493 4.075-1.873 1.248a1 1 0 00-.445.832V18c0 .5.5 1 1 1h14c.5 0 1-.5 1-1V7.1c0-.034-.001-.067-.004-.1H20V3s0-1-1-1h-8c-.5 0-1 .5-1 1v3L8.12 7.254 4.463 3.035A3 3 0 002.196 2zM18 4v2h-6V4h6z"];
  var fullCircle = ["M9.96 0a10 10 0 100 20 10 10 0 100-20z"];
  var fullStackedChart = ["M15 16h2c.55 0 1-.45 1-1v-5h-4v5c0 .55.45 1 1 1zM12 2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v4h4V2zm6 4h-4v3h4V6zm0-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h4V2zm-6 5H8v5h4V7zm-9 9h2c.55 0 1-.45 1-1v-3H2v3c0 .55.45 1 1 1zm6 0h2c.55 0 1-.45 1-1v-2H8v2c0 .55.45 1 1 1zm10 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM6 2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v3h4V2zm0 4H2v5h4V6z"];
  var fullscreen = ["M3.41 2H6c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1s1-.45 1-1V3.41L7.29 8.7c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L3.41 2zM8 11c-.28 0-.53.11-.71.29L2 16.59V14c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1H3.41l5.29-5.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1zM19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm0 13c-.55 0-1 .45-1 1v2.59l-5.29-5.29A.965.965 0 0012 11a1.003 1.003 0 00-.71 1.71l5.3 5.29H14c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1z"];
  var _function = ["M10.14 5.82H8.73c.4-1.66.94-2.87 1.6-3.64.4-.48.8-.72 1.18-.72.08 0 .14.02.19.07.05.05.07.1.07.18 0 .07-.05.19-.16.37s-.16.36-.16.52c0 .23.08.43.25.59a.9.9 0 00.64.25c.28 0 .51-.1.7-.3.19-.2.28-.47.28-.81 0-.39-.14-.7-.42-.94-.28-.24-.74-.36-1.36-.36-.97 0-1.86.29-2.65.87-.79.56-1.54 1.52-2.26 2.85-.24.46-.48.75-.7.88-.22.13-.57.19-1.06.19l-.32 1.15H5.9l-1.99 7.85c-.33 1.29-.56 2.09-.67 2.39-.17.44-.43.81-.77 1.12a.74.74 0 01-.5.19c-.05 0-.1-.02-.14-.05l-.04-.07c0-.03.05-.1.15-.2.1-.1.15-.26.15-.47 0-.23-.08-.42-.23-.57-.16-.15-.38-.23-.67-.23-.35 0-.63.1-.85.29-.21.2-.32.43-.32.7 0 .29.13.54.39.75.25.22.65.33 1.2.33.88 0 1.66-.23 2.33-.69.68-.46 1.27-1.17 1.78-2.14.51-.96 1.03-2.52 1.56-4.66l1.14-4.54H9.8l.34-1.15zm6.8 1.95c.25-.2.51-.29.78-.29.1 0 .29.04.56.11.27.08.51.11.72.11.29 0 .52-.1.72-.3.18-.19.28-.45.28-.77 0-.33-.1-.6-.29-.8-.19-.2-.47-.29-.82-.29-.32 0-.62.08-.9.23-.28.15-.64.49-1.08 1-.33.38-.81 1.05-1.44 2a9.712 9.712 0 00-1.31-3.22l-3.4.59-.07.37c.25-.05.47-.08.64-.08.34 0 .62.15.84.44.35.46.84 1.85 1.46 4.19-.49.66-.82 1.09-1 1.3-.3.33-.55.54-.74.64-.15.08-.32.12-.51.12-.14 0-.38-.08-.7-.24-.22-.1-.42-.16-.59-.16-.33 0-.6.11-.82.32-.21.22-.32.49-.32.83 0 .31.1.57.3.77.2.2.47.29.8.29.32 0 .63-.07.92-.21.29-.14.64-.43 1.08-.88.43-.45 1.03-1.16 1.79-2.14.29.93.55 1.61.76 2.03.21.42.46.73.74.91.28.19.62.28 1.04.28.4 0 .81-.15 1.23-.44.55-.38 1.1-1.04 1.68-1.97l-.35-.21c-.39.55-.68.89-.87 1.03-.12.09-.27.13-.44.13-.2 0-.4-.13-.59-.38-.33-.43-.77-1.63-1.33-3.6.47-.86.89-1.44 1.23-1.71z"];
  var ganttChart = ["M4 7h5c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm3 2v1c0 .55.45 1 1 1h6c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1zm12 3h-6c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0 4H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var geofence = ["M8 11l.075.003.126.017.111.03.111.044.098.052.096.067.09.08c.036.035.068.073.097.112l.071.11.054.114.035.105.03.148L9 12V18a1 1 0 01-1.993.117L7 18v-3.586l-5.293 5.293a1 1 0 01-1.497-1.32l.083-.094L5.584 13h-3.58a1 1 0 01-.117-1.993L2.004 11H8zm3.018-11a1.003 1.003 0 01.39.087l.12.063.031.02.1.078 8.027 7.026.062.064.068.086.044.068.064.128.04.117.024.113.011.108v.1l-.007.073-.019.103-.037.121-.039.09-.05.087-4.996 7.994c-.06.097-.137.183-.226.254l-.093.067-.095.053-.087.037-.125.037a1.018 1.018 0 01-.218.026H11v-5a3 3 0 00-2.824-2.995L8 9H3V6a1 1 0 01.321-.734l.098-.08 7-5a1.01 1.01 0 01.45-.178L11.018 0z"];
  var geolocation = ["M0 8.33l9.17 2.5 2.5 9.17L20 0z"];
  var geosearch = ["M8 18.88c-3.79 0-6.88-3.09-6.88-6.88 0-.61.08-1.22.23-1.79.03.01.06-.01.1-.01h.09v.55c0 .23.21.42.44.42.04 0 .09-.01.12-.02l.9.88c.09.09.23.09.32 0s.09-.23 0-.32l-.86-.9c0-.02.05-.04.05-.07v-.13c0-.18.1-.25.29-.41h.53c.1 0 .19-.01.27-.05.01-.01.02 0 .03-.01.02-.01.03-.02.05-.04.01-.01.02-.01.02-.02l.02-.02 1.13-1.13c-.16-.32-.3-.65-.42-.99h-.64v-.53c0-.01.06.06.06-.1h.38c-.04-.16-.08-.32-.1-.48h-.71c.2-.16.42-.31.64-.45C4.02 6.09 4 5.8 4 5.5c0-.14.01-.28.02-.43C1.62 6.46 0 9.04 0 12c0 4.41 3.59 8 8 8 3.87 0 7.09-2.77 7.82-6.44l-.97-1.1c-.26 3.57-3.23 6.42-6.85 6.42zm-2.12-3.67v-.35h.15c.29 0 .49-.23.49-.53v-.68c0-.01.01-.01 0-.02L4.71 11.8h-.77c-.29 0-.47.24-.47.53v2c0 .29.18.53.47.53h.33v2.02c0 .28.28.51.56.51s.56-.23.56-.51v-1.22h-.01c.29 0 .5-.16.5-.45zm13.83-2.92l-3.68-3.68c.14-.21.27-.42.38-.65.02-.04.04-.07.05-.11.11-.22.2-.45.28-.69v-.01c.07-.24.13-.48.17-.73l.03-.17c.04-.24.06-.49.06-.75C17 2.46 14.54 0 11.5 0S6 2.46 6 5.5 8.46 11 11.5 11c.26 0 .51-.02.76-.06l.17-.03c.25-.04.49-.1.73-.17h.01c.24-.08.47-.17.69-.28.04-.02.07-.04.11-.05.23-.11.44-.24.65-.38l3.68 3.68c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71zM11.5 9.5c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm1.93 5.33v-.65c0-.11-.13-.21-.24-.21-.11 0-.24.09-.24.21v.65c0 .11.13.21.24.21.11 0 .24-.1.24-.21zm-2.41.67h.83c.29 0 .46-.21.46-.5v-1.86l.23-.22c-.34.05-.69.08-1.04.08-.36 0-.7-.03-1.05-.08.03.05.06.1.08.16V15c.01.29.2.5.49.5z"];
  var gitBranch = ["M15 2c-1.66 0-3 1.34-3 3 0 1.3.84 2.4 2 2.82V9c0 1.1-.9 2-2 2H8c-.73 0-1.41.21-2 .55V5.82C7.16 5.4 8 4.3 8 3c0-1.66-1.34-3-3-3S2 1.34 2 3c0 1.3.84 2.4 2 2.82v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.25-.77-2.3-1.85-2.75C6.45 13.52 7.16 13 8 13h4c2.21 0 4-1.79 4-4V7.82C17.16 7.4 18 6.3 18 5c0-1.66-1.34-3-3-3zM5 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM15 6c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var gitCommit = ["M19 9h-4.1a5 5 0 00-9.8 0H1c-.55 0-1 .45-1 1s.45 1 1 1h4.1a5 5 0 009.8 0H19c.55 0 1-.45 1-1s-.45-1-1-1zm-9 4c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"];
  var gitMerge = ["M15 8c-1.3 0-2.4.84-2.82 2H11c-2.49 0-4.54-1.83-4.92-4.21A2.995 2.995 0 005 0C3.34 0 2 1.34 2 3c0 1.3.84 2.4 2 2.81v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V9.86C7.27 11.17 9.03 12 11 12h1.18A2.996 2.996 0 0018 11c0-1.66-1.34-3-3-3zM5 18c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM5 4c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm10 8c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var gitNewBranch = ["M17 3h-1V2c0-.55-.45-1-1-1s-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1V5h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3 4.86V9c0 1.1-.9 2-2 2H8c-.73 0-1.41.21-2 .55V5.82C7.16 5.4 8 4.3 8 3c0-1.66-1.34-3-3-3S2 1.34 2 3c0 1.3.84 2.4 2 2.82v8.37C2.84 14.6 2 15.7 2 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.25-.77-2.3-1.85-2.75C6.45 13.52 7.16 13 8 13h4c2.21 0 4-1.79 4-4V7.86c-.32.08-.65.14-1 .14s-.68-.06-1-.14zM5 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 16c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var gitPull = ["M17 14.18V7c0-2.21-1.79-4-4-4h-2.59l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C7.11 3.47 7 3.72 7 4c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L10.41 5H13c1.1 0 2 .9 2 2v7.18A2.996 2.996 0 0016 20c1.66 0 3-1.34 3-3 0-1.3-.84-2.4-2-2.82zM16 18c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 1C2.34 1 1 2.34 1 4c0 1.3.84 2.4 2 2.82v7.37C1.84 14.6 1 15.7 1 17c0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.3-.84-2.4-2-2.82V6.82C6.16 6.4 7 5.3 7 4c0-1.66-1.34-3-3-3zm0 17c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zM4 5c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var gitPush = ["M15 11c0-.28-.11-.53-.29-.71l-3-3C11.53 7.11 11.28 7 11 7s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42l1.29-1.3V19c0 .55.45 1 1 1s1-.45 1-1v-8.59l1.29 1.29c.18.19.43.3.71.3.55 0 1-.45 1-1zm4-11H1C.45 0 0 .45 0 1v16c0 .55.45 1 1 1h7v-2H2v-2h6v-1H4V2h14v11h-4v1h4v2h-4v2h5c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM5 8h2V6H5v2zm2-5H5v2h2V3z"];
  var gitRepo = ["M7 3H5v2h2V3zm0 6H5v2h2V9zm0-3H5v2h2V6zm12-6H1C.45 0 0 .45 0 1v16c0 .55.45 1 1 1h4v2l2-1 2 1v-2h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 16H9v-1H5v1H2v-2h16v2zm0-3H4V2h14v11z"];
  var glass = ["M17 6V0H3v6c0 3.53 2.61 6.43 6 6.92V18H6c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1h-3v-5.08c3.39-.49 6-3.39 6-6.92z"];
  var globe = ["M7.53 4.37c.1-.1.1-.26 0-.35l-.68-.68c-.1-.1-.25-.1-.35 0-.1.1-.1.26 0 .35l.68.68c.1.1.25.1.35 0zm3.17.06h.3c.09 0 .16-.01.16-.1 0-.09-.07-.1-.16-.1h-.3c-.09 0-.16.01-.16.1s.07.1.16.1zm.98 1.15c.09 0 .19-.08.19-.17v-.42c0-.09-.1-.17-.19-.17s-.19.08-.19.17v.42c0 .09.1.17.19.17zm-6.5 4.19c-.35 0-.56.28-.56.63v2.37c0 .35.21.62.56.62h.39v2.4c0 .34.33.61.67.61s.67-.27.67-.61v-1.44h-.02c.35 0 .6-.19.6-.54v-.41h.18c.35 0 .58-.28.58-.62v-.81c0-.01.01-.01 0-.02L6.1 9.77h-.92zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8 0-.74.11-1.46.3-2.14h.03v.65c0 .28.25.5.53.5.05 0 .1-.01.15-.02l1.05 1.05c.1.11.28.11.38 0 .1-.1.11-.27 0-.38L3.42 8.59c0-.03.05-.05.05-.08v-.16c0-.22.12-.3.34-.49h.63c.12 0 .23-.01.32-.07.01-.01.02 0 .03-.01.02-.02.04-.03.06-.04.01-.01.02-.01.03-.02l.02-.02 2.15-2.15c.24-.24.24-.63 0-.86-.23-.24-.62-.19-.86.04l-.41.46H5v-.64c0-.01.07.07.07-.12h.87c.17 0 .3-.12.3-.29 0-.17-.13-.29-.3-.29H4.88C6.27 2.7 8.05 2 10 2s3.73.7 5.12 1.86h-1.58l-.01-.04c-.06 0-.12 0-.17.04l-.71.7c-.09.09-.09.23 0 .31.09.09.23.09.32 0l.56-.6.01-.03h.34c0 .19-.1.13-.1.16v.1c0 .29-.2.5-.49.5h-.51c-.25 0-.52.28-.52.54v.23h-.12c-.16 0-.27.08-.27.24v.33h-.32c-.23 0-.41.15-.41.38 0 .22.18.35.41.35.1 0 .19.04.26-.16l.06.01.66-.59h.23l.53.5c.04.04.11.03.16-.01.04-.04.04-.16 0-.2L13 6.15h.32l.12.16c.25.25.65.23.89-.02l.12-.14H15c.02 0 .11.07.11.07v.33s-.06-.01-.07-.01h-.49c-.16 0-.28.13-.28.29 0 .16.13.29.28.29h.49c.01 0 .07-.01.07-.01v.2c-.19.28-.33.57-.62.57h-1.28s0-.01-.01-.01l-.58-.58a.622.622 0 00-.89 0l-.58.58s0 .01-.01.01h-.34c-.35 0-.67.28-.67.63v1.25c0 .35.32.61.67.61h1.22c.46.19.78.48.97.94v2.28c0 .35.23.6.58.6h.98c.35 0 .54-.25.54-.6v-2.2l1.21-1.17.04-.02.02-.01h.04c.1-.11.2-.26.2-.42V8.49c0-.25-.22-.44-.42-.63h.58c.02.38.29.57.63.57h.43c.13.51.18 1.03.18 1.57 0 4.42-3.58 8-8 8zm6.16-5.65c-.14 0-.29.11-.29.25v.77c0 .14.15.25.29.25.14 0 .29-.11.29-.25v-.77c0-.14-.15-.25-.29-.25zM10.5 3.48c0-.34-.28-.57-.62-.57h-.74c-.34 0-.57.25-.57.59 0 .05-.13.06.06.1v.64c0 .2.09.36.29.36.2 0 .29-.16.29-.36v-.19h.68c.33 0 .61-.23.61-.57z"];
  var globeNetwork = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm7.39 7h-3.63c-.31-1.99-.92-3.66-1.72-4.73 2.45.65 4.41 2.42 5.35 4.73zM13 10c0 .69-.04 1.36-.11 2H7.11a18.419 18.419 0 010-4h5.77c.08.64.12 1.31.12 2zm-3-8c1.07 0 2.25 2.05 2.75 5h-5.5c.5-2.95 1.68-5 2.75-5zm-2.04.27C7.16 3.34 6.55 5.01 6.24 7H2.61c.94-2.31 2.9-4.08 5.35-4.73zM2 10c0-.69.11-1.36.28-2h3.83a18.419 18.419 0 000 4H2.28c-.17-.64-.28-1.31-.28-2zm.61 3h3.63c.31 1.99.92 3.66 1.72 4.73A7.996 7.996 0 012.61 13zM10 18c-1.07 0-2.25-2.05-2.75-5h5.5c-.5 2.95-1.68 5-2.75 5zm2.04-.27c.79-1.07 1.4-2.74 1.72-4.73h3.63a7.996 7.996 0 01-5.35 4.73zM13.89 12a18.419 18.419 0 000-4h3.83c.17.64.28 1.31.28 2s-.11 1.36-.28 2h-3.83z"];
  var graph = ["M17.5 4A2.5 2.5 0 0015 6.5c0 .06.01.12.02.18l-1.9.84C12.38 6.6 11.27 6 10 6c-.83 0-1.59.25-2.23.68L4.91 4.14c.05-.21.09-.42.09-.64a2.5 2.5 0 00-5 0A2.5 2.5 0 002.5 6c.42 0 .81-.11 1.16-.3l2.79 2.48C6.17 8.73 6 9.34 6 10c0 1.41.73 2.64 1.83 3.35l-.56 1.67A2.498 2.498 0 005 17.5a2.5 2.5 0 005 0c0-.74-.32-1.39-.83-1.85l.56-1.68c.09.01.18.03.27.03 2.21 0 4-1.79 4-4 0-.22-.03-.44-.07-.65l2.02-.9c.43.34.96.55 1.55.55a2.5 2.5 0 000-5z"];
  var graphRemove = ["M17.41 4l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L16 2.59 13.71.3A.965.965 0 0013 0a1.003 1.003 0 00-.71 1.71L14.59 4 12.3 6.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L16 5.41l2.29 2.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L17.41 4zM19 10c-.83 0-1.55-.36-2.09-.91l-.03.03-.88-.88-.88.88a2.996 2.996 0 11-4.24-4.24l.88-.88-.88-.88.03-.03C10.36 2.55 10 1.83 10 1c0-.35.07-.68.18-.99-.06 0-.12-.01-.18-.01C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-.06-.01-.12-.01-.18-.31.11-.64.18-.99.18z"];
  var greaterThan = ["M12.838 10l-9.154 3.051a1 1 0 00.632 1.898l12-4c.912-.304.912-1.594 0-1.898l-12-4a1 1 0 00-.632 1.898L12.838 10z"];
  var greaterThanOrEqualTo = ["M3.684 11.051a1 1 0 00.632 1.898l12-4c.912-.304.912-1.594 0-1.898l-12-4a1 1 0 00-.632 1.898L12.838 8l-9.154 3.051zM4 15h12a1 1 0 110 2H4a1 1 0 010-2z"];
  var grid = ["M19 11c.55 0 1-.45 1-1s-.45-1-1-1h-2V5h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-4V1c0-.55-.45-1-1-1S9 .45 9 1v2H5V1c0-.55-.45-1-1-1S3 .45 3 1v2H1c-.55 0-1 .45-1 1s.45 1 1 1h2v4H1c-.55 0-1 .45-1 1s.45 1 1 1h2v4H1c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h4v2c0 .55.45 1 1 1s1-.45 1-1v-2h4v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1h-2v-4h2zM9 15H5v-4h4v4zm0-6H5V5h4v4zm6 6h-4v-4h4v4zm0-6h-4V5h4v4z"];
  var gridView = ["M0 19c0 .55.45 1 1 1h8v-9H0v8zM0 1v8h9V0H1C.45 0 0 .45 0 1zm19-1h-8v9h9V1c0-.55-.45-1-1-1zm-8 20h8c.55 0 1-.45 1-1v-8h-9v9z"];
  var groupObjects = ["M6 7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zm8-3H6c-3.31 0-6 2.69-6 6s2.69 6 6 6h8c3.31 0 6-2.69 6-6s-2.69-6-6-6zm0 11H6c-2.76 0-5-2.24-5-5s2.24-5 5-5h8c2.76 0 5 2.24 5 5s-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"];
  var groupedBarChart = ["M12 16h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1zm7 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-3-1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1h-1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1zm-9 0h1c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1H7c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1zm-4 0h1c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1z"];
  var hand = ["M17 5c-.42 0-.79.27-.93.64L14.38 10h-.77l1.34-6.67c.03-.1.05-.21.05-.33a.998.998 0 00-1.98-.19h-.01L11.57 10H11V1c0-.55-.45-1-1-1S9 .45 9 1v9h-.2L6.97 2.76a.997.997 0 00-1.73-.41l-.03.03c-.01.02-.02.03-.03.04-.01.02-.01.03-.02.04v.01c-.01.01-.02.02-.02.03v.01c-.02.01-.02.02-.03.03 0 0 0 .01-.01.01 0 .01 0 .02-.01.03 0 0 0 .01-.01.01 0 .01-.01.02-.01.03 0 0 0 .01-.01.01 0 .01-.01.02-.01.03 0 .01 0 .01-.01.02 0 .01-.01.02-.01.03 0 .01 0 .01-.01.02 0 .01-.01.02-.01.03v.02c0 .01 0 .02-.01.03V3c0 .05 0 .09.01.14l1.45 10.25L6 12.7v.01L3.84 9.45h-.01A.98.98 0 003 9c-.55 0-1 .45-1 1 0 .2.06.39.17.55L6 18.44C7.06 19.4 8.46 20 10 20c3.31 0 6-2.69 6-6v-1.84l.01-.03v-.06l1.94-5.75A1.003 1.003 0 0017 5z"];
  var handDown = ["M17.68 9.84C15.91 9 14.27 6.49 13.45 4.9 12.41 2.43 12.21 0 7.87 0 5.49 0 3.95.76 3.05 2.65 2.31 4.2 2 5.48 2 9.79v.99c0 .82.69 1.48 1.54 1.48.38 0 .73-.14 1-.36.19.6.78 1.05 1.47 1.05.47 0 .89-.2 1.17-.52.26.47.77.79 1.36.79.65 0 1.2-.39 1.43-.93l.03.77v5.44c0 .48.23.91.59 1.18.21.19.5.32.85.32h.06c.83 0 1.5-.67 1.5-1.5v-8.24l.01-.67c.85.98 1.92 1.76 3.24 1.89 1.79.19 2.09-1.33 1.43-1.64z"];
  var handLeft = ["M15.1 6.54c-1.58-.81-4.09-2.46-4.94-4.23-.31-.65-1.82-.35-1.64 1.43.13 1.33.91 2.4 1.89 3.24L9.74 7H1.5C.67 7 0 7.67 0 8.5v.06c0 .36.13.64.32.85.27.36.7.59 1.18.59h5.44l.78.01c-.54.23-.93.78-.93 1.43 0 .59.32 1.1.79 1.36-.32.28-.52.7-.52 1.17 0 .69.44 1.28 1.05 1.47-.22.27-.36.62-.36 1 0 .85.66 1.54 1.48 1.54h.99c4.31 0 5.59-.31 7.14-1.05 1.89-.9 2.65-2.44 2.65-4.82-.01-4.32-2.44-4.52-4.91-5.57z"];
  var handRight = ["M20 8.5c0-.83-.67-1.5-1.5-1.5h-8.24l-.67-.01c.98-.85 1.76-1.92 1.89-3.24.18-1.79-1.33-2.08-1.65-1.43-.84 1.76-3.35 3.41-4.93 4.23C2.43 7.59 0 7.79 0 12.13c0 2.38.76 3.92 2.65 4.82C4.2 17.69 5.48 18 9.79 18h.99c.82 0 1.48-.69 1.48-1.54 0-.38-.14-.73-.36-1 .6-.19 1.05-.78 1.05-1.47 0-.47-.2-.89-.52-1.17.47-.26.79-.77.79-1.36 0-.65-.39-1.2-.93-1.43l.77-.03h5.44c.48 0 .91-.23 1.18-.59.19-.21.32-.49.32-.85v-.03-.03z"];
  var handUp = ["M16.46 7.74c-.38 0-.73.14-1 .36-.19-.6-.78-1.05-1.47-1.05-.47 0-.89.2-1.17.52-.26-.47-.77-.79-1.36-.79-.65 0-1.2.39-1.43.93L10 6.94V1.5c0-.48-.23-.91-.59-1.18C9.2.13 8.92 0 8.56 0H8.5C7.67 0 7 .67 7 1.5v8.24l-.01.67c-.84-.98-1.92-1.76-3.24-1.89-1.79-.18-2.08 1.33-1.43 1.65 1.77.84 3.41 3.35 4.23 4.94 1.05 2.47 1.25 4.9 5.58 4.9 2.38 0 3.92-.76 4.82-2.65.74-1.56 1.05-2.84 1.05-7.15v-.99c0-.81-.69-1.48-1.54-1.48z"];
  var hat = ["M18.5 13c1.118 0 1.466.534 1.498 1.366L20 14.5v.5c0 1.945-5.69 3-10 3S0 16.945 0 15v-.5c0-.908.323-1.5 1.5-1.5.895 0 3.5 1.2 8.5 1.2l.411-.003C15.143 14.134 17.631 13 18.5 13zm-5-10c1.725 0 2.954 2.729 3.688 8.186-1.455.263-3.805.72-6.392.801l-.434.01L10 12c-2.896 0-5.585-.524-7.189-.814C3.546 5.73 4.775 3 6.5 3 8.6 3 8.329 5.5 10 5.5S11.5 3 13.5 3z"];
  var header = ["M16 1c-.55 0-1 .45-1 1v7H5V2c0-.55-.45-1-1-1s-1 .45-1 1v16c0 .55.45 1 1 1s1-.45 1-1v-7h10v7c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"];
  var headerOne = ["M10 0c.55 0 1 .45 1 1v14c0 .55-.45 1-1 1s-1-.45-1-1V9H2v6c0 .55-.45 1-1 1s-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v6h7V1c0-.55.45-1 1-1zm7.4 10.77c.17-.2.29-.46.34-.77H19v10h-1.5v-7.11H15v-1.24c.32 0 .63-.03.93-.08.31-.06.58-.16.83-.29.26-.12.47-.3.64-.51z"];
  var headerThree = ["M10.989 1c0-.55-.45-1-.999-1-.55 0-.999.45-.999 1v6H1.998V1c0-.55-.45-1-.999-1C.449 0 0 .45 0 1v14c0 .55.45 1 .999 1 .55 0 .999-.45.999-1V9h6.993v6c0 .55.45 1 .999 1 .55 0 .999-.45.999-1V1zm7.461 13.645c.49.11.87.38 1.14.82.27.44.41.97.41 1.61a3 3 0 01-.24 1.23c-.16.36-.38.67-.66.92-.27.25-.59.44-.96.58-.37.14-.75.21-1.16.21-.5 0-.93-.08-1.3-.24a2.55 2.55 0 01-.93-.68c-.25-.29-.44-.65-.57-1.06-.13-.42-.2-.88-.21-1.38h1.39c-.02.58.11 1.07.38 1.46.28.39.68.58 1.23.58.47 0 .86-.15 1.17-.45.31-.3.47-.72.47-1.27 0-.37-.07-.67-.2-.89-.13-.22-.3-.39-.51-.5-.21-.11-.45-.18-.71-.21-.26-.03-.53-.04-.81-.03v-1.17c.22.01.45 0 .68-.05.23-.05.43-.13.61-.24.18-.11.32-.27.43-.47.11-.2.16-.45.16-.74 0-.41-.12-.74-.37-.99s-.57-.37-.96-.37c-.24 0-.45.06-.63.17-.18.11-.33.26-.45.45s-.2.4-.26.63c-.05.23-.08.47-.07.72h-1.39c.01-.47.09-.9.23-1.3s.33-.75.57-1.04c.24-.3.53-.53.87-.69.34-.17.73-.25 1.16-.25.33 0 .66.05.98.16.32.11.61.27.87.48.26.21.47.47.62.8.15.32.23.7.23 1.12 0 .48-.09.91-.29 1.27-.2.36-.5.63-.92.79v.02z"];
  var headerTwo = ["M16.6 17.41c-.22.17-.4.36-.56.55-.16.19-.27.4-.33.61h4.28V20H14c.01-.81.18-1.52.53-2.13.35-.6.81-1.13 1.41-1.58.28-.23.58-.46.89-.68.31-.22.59-.46.85-.71.26-.26.48-.53.63-.83.16-.3.25-.64.26-1.02 0-.18-.02-.37-.06-.57-.04-.2-.11-.39-.22-.56s-.26-.31-.45-.43-.44-.18-.75-.18c-.28 0-.52.06-.71.19s-.34.3-.45.52c-.11.22-.2.48-.25.78-.05.3-.08.62-.09.97h-1.43c0-.54.07-1.04.2-1.5.13-.47.32-.87.58-1.2.26-.34.58-.6.95-.78.37-.19.81-.29 1.3-.29.54 0 .99.09 1.35.29.36.19.65.44.87.74.22.29.38.62.47.97.09.35.14.68.14 1 0 .4-.05.75-.16 1.07-.11.32-.26.61-.44.88-.19.27-.4.52-.63.74-.24.22-.48.43-.73.63s-.5.38-.75.56c-.26.17-.5.35-.71.53zM10 0c.55 0 1 .45 1 1v14c0 .55-.45 1-1 1s-1-.45-1-1V9H2v6c0 .55-.45 1-1 1s-1-.45-1-1V1c0-.55.45-1 1-1s1 .45 1 1v6h7V1c0-.55.45-1 1-1z"];
  var headset = ["M18.97 9H19A9 9 0 001 9h.03C.41 9.73 0 10.8 0 12c0 1.74.84 3.2 2 3.76V16c0 1.66 1.34 3 3 3h3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1H5c-.55 0-1-.45-1-1 .55 0 1-.45 1-1V9c0-.55-.45-1-1-1h-.92C3.57 4.61 6.47 2 10 2s6.43 2.61 6.92 6H16c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h1c1.66 0 3-1.79 3-4 0-1.2-.41-2.27-1.03-3z"];
  var heart = ["M20 6.25C20 3.35 17.65 1 14.75 1c-1.02 0-1.95.31-2.75.82v-.04c-.09.06-.17.12-.26.19-.04.03-.09.06-.14.1-.68.51-1.24 1.18-1.6 1.96-.4-.86-1.04-1.57-1.8-2.1-.04-.02-.07-.05-.1-.08a7 7 0 00-.6-.33c-.13-.04-.23-.1-.35-.15-.05-.02-.1-.05-.15-.07v.02C6.45 1.13 5.87 1 5.25 1A5.25 5.25 0 000 6.25c0 .09.01.17.01.25H0c0 .06.01.12.02.18s.01.12.02.18C.13 7.89.44 9 1.07 10.17 2.23 12.33 4.1 14.11 7 16.53v.01c.9.75 1.89 1.55 3 2.46.71-.58 1.38-1.12 2-1.63 3.48-2.86 5.64-4.78 6.93-7.18.63-1.17.94-2.27 1.03-3.3.01-.07.01-.14.02-.21 0-.06.01-.11.02-.17h-.01c0-.09.01-.17.01-.26z"];
  var heartBroken = ["M8.11 7.45C8.05 7.31 8 7.16 8 7c0-.07.03-.13.04-.19h-.02l.86-4.32A5.159 5.159 0 005.25 1 5.25 5.25 0 000 6.25c0 .09.01.17.01.25H0c0 .06.01.12.02.18s.01.12.02.18C.13 7.89.44 9 1.07 10.17c1.38 2.58 3.76 4.6 7.71 7.83l-.76-3.8h.02c-.01-.07-.04-.13-.04-.2 0-.21.08-.39.18-.54l-.02-.01 1.68-2.52-1.73-3.48zM20 6.25C20 3.35 17.65 1 14.75 1c-1.54 0-2.92.67-3.88 1.73l-.83 4.13 1.85 3.69h-.01c.07.14.12.29.12.45 0 .21-.08.39-.18.54l.02.01-1.77 2.66.81 4.07c4.16-3.39 6.63-5.45 8.05-8.1.63-1.17.94-2.27 1.03-3.3.01-.07.01-.14.02-.21 0-.06.01-.11.02-.17h-.01c0-.08.01-.16.01-.25z"];
  var heatGrid = ["M14 12h6V8h-6v4zM0 12h6V8H0v4zm1-3h4v2H1V9zm-1 7c0 .55.45 1 1 1h5v-4H0v3zM19 3h-5v4h6V4c0-.55-.45-1-1-1zm0 3h-4V4h4v2zM0 4v3h6V3H1c-.55 0-1 .45-1 1zm7 3h6V3H7v4zm7 10h5c.55 0 1-.45 1-1v-3h-6v4zm-7 0h6v-4H7v4zm1-3h4v2H8v-2zm-1-2h6V8H7v4z"];
  var heatmap = ["M6 0a6 6 0 100 12A6 6 0 106 0z", "M10.5 8a4.5 4.5 0 100 9 4.5 4.5 0 100-9z", "M16.5 7a3.5 3.5 0 100 7 3.5 3.5 0 100-7zM18 16a2 2 0 100 4 2 2 0 100-4zM2.5 14a2.5 2.5 0 100 5 2.5 2.5 0 100-5zM16.5 0a2.5 2.5 0 100 5 2.5 2.5 0 100-5z"];
  var helicopter = ["M10 3v2H1V3.5a.5.5 0 00-1 0v5a.5.5 0 001 0V7l5 2c0 1.54.824 3.575 3 4.835V16H5.5a.5.5 0 100 1H16.5a.5.5 0 00.224-.053l2-1a.5.5 0 10-.448-.894L16.382 16H15v-1.1A5.002 5.002 0 0014 5h-1V3h6.5a.5.5 0 000-1h-16a.5.5 0 000 1H10zm4 13v-1c-1.608 0-2.928-.258-4-.683V16h4zm0-6V6a4 4 0 014 4h-4z"];
  var help = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM7.41 4.62c.65-.54 1.51-.82 2.56-.82.54 0 1.03.08 1.48.25.44.17.83.39 1.14.68.32.29.56.63.74 1.02.17.39.26.82.26 1.27s-.08.87-.24 1.23c-.16.37-.4.73-.71 1.11l-1.21 1.58c-.14.17-.28.33-.32.48-.05.15-.11.35-.11.6v.97H9v-2s.06-.58.24-.81l1.21-1.64c.25-.3.41-.56.51-.77s.14-.44.14-.67c0-.35-.11-.63-.32-.85s-.5-.33-.88-.33c-.37 0-.67.11-.89.33-.22.23-.37.54-.46.94-.03.12-.11.17-.23.16l-1.95-.29c-.12-.01-.16-.08-.14-.22.13-.93.52-1.67 1.18-2.22zM9 14h2.02L11 16H9v-2z"];
  var helperManagement = ["M17 10h-3v3h3v-3zm0 4h-3v3h3v-3zm0-8h-3v3h3V6zm2-6H1C.4 0 0 .4 0 1v18c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V1c0-.6-.5-1-1-1zm-1 18H2V2h16v16zm-9-4H6v3h3v-3zm4 0h-3v3h3v-3z"];
  var highPriority = ["M12 16v4H8v-4h4zm1-16l-1 14H8L7 0h6z"];
  var highlight = ["M11.22 14.09l3.03-3.03.71.71L20 6.73l-5.71-5.71-5.04 5.04.71.71-3.02 3.04 4.28 4.28zm6.8 3.91h-16c-.55 0-1 .45-1 1s.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1zm-15-1h4.04c.28 0 .53-.11.71-.3l2.02-2.02-3.44-3.45-4.04 4.04c-.18.18-.3.44-.3.71.01.57.46 1.02 1.01 1.02z"];
  var history = ["M10 0C6.71 0 3.82 1.6 2 4.05V2c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.76C5.23 3.17 7.47 2 10 2c4.42 0 8 3.58 8 8s-3.58 8-8 8-8-3.58-8-8c0-.55-.45-1-1-1s-1 .45-1 1c0 5.52 4.48 10 10 10s10-4.48 10-10S15.52 0 10 0zm0 3c-.55 0-1 .45-1 1v6c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L11 9.59V4c0-.55-.45-1-1-1z"];
  var home = ["M2 12v7c0 .55.45 1 1 1h5v-7h4v7h5c.55 0 1-.45 1-1v-7l-8-8-8 8zm17.71-2.71L17 6.59V3c0-.55-.45-1-1-1s-1 .45-1 1v1.59L10.71.3C10.53.11 10.28 0 10 0s-.53.11-.71.29l-9 9a1.003 1.003 0 001.42 1.42L10 2.41l8.29 8.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"];
  var horizontalBarChart = ["M1 1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1zm3 5h11c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1zm8 8H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h8c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm7-6H4c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h15c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1z"];
  var horizontalBarChartAsc = ["M1 9h11c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0-5h9c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm18 12H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM1 14h14c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1z"];
  var horizontalBarChartDesc = ["M10 16H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm2-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h11c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm3-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm4-5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1z"];
  var horizontalDistribution = ["M12 2H8c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM1 0C.45 0 0 .45 0 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm18 0c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var horizontalInbetween = ["M11.293 13.707a.999.999 0 001.412 0l2.963-2.962a1 1 0 000-1.49l-2.963-2.962a.999.999 0 10-1.412 1.412L13.587 10l-2.294 2.295a.999.999 0 000 1.412zM7.295 13.707a.999.999 0 001.412-1.412L6.413 10l2.294-2.295a.999.999 0 10-1.412-1.412L4.332 9.255A.996.996 0 004 10a.996.996 0 00.332.745l2.963 2.962zM0 20V0h1a1 1 0 011 1v18a1 1 0 01-1 1H0zM20 20V0h-1a1 1 0 00-1 1v18a1 1 0 001 1h1z"];
  var hurricane = ["M0 14c1.648.775 3 1 4 1-1-1-2-3.112-2-5a5.098 5.098 0 000-.045C2 5.17 6.201 1 11.172 1c3.206 0 6.9.667 8.828 5-1.648-.775-3-1-4-1 1 1 2 3.112 2 5v.045C18 14.83 13.799 19 8.828 19c-3.206 0-6.9-.667-8.828-5zm10-7a3 3 0 100 6 3 3 0 000-6z"];
  var idNumber = ["M2 5v10h16V5H2zm0-2h16c1.1 0 2 .9 2 2v10c0 1.1-.9 2-2 2H2c-1.1 0-2-.9-2-2V5c0-1.1.9-2 2-2z", "M8.88 12.38c-.17-.39-1.01-.66-1.56-.9-.56-.24-.48-.39-.5-.6v-.09c.19-.17.35-.4.45-.67 0 0 0-.02.01-.02l.06-.18c.13-.03.2-.17.23-.29.03-.05.09-.18.08-.33-.04-.18-.11-.27-.2-.3v-.03c0-.24-.02-.58-.06-.81-.01-.06-.02-.12-.04-.19-.08-.27-.25-.52-.48-.7C6.63 7.09 6.3 7 6 7s-.63.09-.87.27c-.23.17-.4.42-.48.7-.02.06-.03.13-.04.19-.04.22-.06.57-.06.81V9c-.09.03-.17.12-.19.31-.01.14.05.27.08.32.03.14.1.27.23.3.02.06.03.12.06.18v.01c.11.27.27.51.47.68v.08c-.02.2.04.35-.51.6-.56.24-1.39.51-1.56.9-.19.39-.12.62-.12.62h5.98c-.01 0 .06-.23-.11-.62zM12 7h4c.55 0 1 .45 1 1s-.45 1-1 1h-4c-.55 0-1-.45-1-1s.45-1 1-1zM12 11h4c.55 0 1 .45 1 1s-.45 1-1 1h-4c-.55 0-1-.45-1-1s.45-1 1-1z"];
  var imageRotateLeft = ["M10.5 13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM14 7H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 10l-5-3-1 2-2-4-3 4.5V9h11v8zm3-15h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H16c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4z"];
  var imageRotateRight = ["M5.29 4.29a1.003 1.003 0 001.42 1.42l2-2C8.89 3.53 9 3.28 9 3c0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l.3.29H4C1.79 2 0 3.79 0 6v3c0 .55.45 1 1 1s1-.45 1-1V6c0-1.1.9-2 2-2h1.59l-.3.29zM15.5 13c.83 0 1.5-.67 1.5-1.5s-.67-1.5-1.5-1.5-1.5.67-1.5 1.5.67 1.5 1.5 1.5zM19 7H6c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 10l-5-3-1 2-2-4-3 4.5V9h11v8z"];
  var _import = ["M9.29 15.71c.18.18.43.29.71.29s.53-.11.71-.29l5-5a1.003 1.003 0 00-1.42-1.42L11 12.59V1c0-.55-.45-1-1-1S9 .45 9 1v11.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l5 5zM19 14c-.55 0-1 .45-1 1v3H2v-3c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"];
  var inbox = ["M16.92 3.56l-.01-.02c-.16-.35-.5-.6-.91-.6H4c-.41 0-.76.25-.91.6l-.01.02L0 10.49v6.46c0 .55.45 1 1 1h18c.55 0 1-.45 1-1v-6.46l-3.08-6.93zM15 10.95c-.55 0-1 .45-1 1v1H6v-1c0-.55-.45-1-1-1H1.98l2.67-6h10.7l2.67 6H15z"];
  var inboxFiltered = ["M10.262 3l1.958 1.958v.05H4.65l-2.67 5.997H5c.55 0 1 .45 1 .999v1h8v-1c0-.55.45-1 1-1h3.02l-.635-1.426.625-.63c.354-.353.598-.8.707-1.289L20 10.545v6.456c0 .55-.45.999-1 .999H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h6.262zm9.088-3a.642.642 0 01.46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V4.13L11.19 1.1a.642.642 0 01.45-1.1h7.71z"];
  var inboxGeo = ["M7.427 3a7.467 7.467 0 00-.411 2.009H4.65l-2.67 5.996H5c.55 0 1 .45 1 .999v1h8V13c.165.01.332 0 .5 0a7.48 7.48 0 005.5-2.4V17c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h3.427zm5.715-.596a.133.133 0 01-.193 0l-.374-.374a.133.133 0 010-.193.133.133 0 01.193 0l.373.374a.133.133 0 010 .193zm1.743.033c-.05 0-.088-.006-.088-.055 0-.05.038-.056.088-.056h.165c.05 0 .088.006.088.055 0 .05-.038.056-.088.056h-.165zm.539.632c-.05 0-.104-.044-.104-.094v-.23c0-.05.054-.094.104-.094.05 0 .104.044.104.094v.23c0 .05-.055.094-.104.094zm-3.575 2.304h.506l1.182 1.2c.006.005 0 .005 0 .01v.446c0 .187-.126.341-.319.341h-.098v.226c0 .192-.138.296-.33.296h.01v.792c0 .188-.181.336-.368.336s-.369-.149-.369-.335v-1.32h-.214c-.193 0-.308-.149-.308-.341V5.72c0-.192.115-.346.308-.346zM14.5 0C17.536 0 20 2.464 20 5.5S17.536 11 14.5 11A5.502 5.502 0 019 5.5C9 2.464 11.464 0 14.5 0zm0 9.9c2.431 0 4.4-1.969 4.4-4.4 0-.297-.027-.583-.099-.864h-.236c-.188 0-.336-.104-.347-.313h-.319c.11.104.231.209.231.346v.705c0 .088-.055.17-.11.23h-.022l-.011.006-.022.011-.666.643v1.21c0 .193-.104.33-.296.33h-.54c-.192 0-.319-.137-.319-.33V6.221a.915.915 0 00-.533-.518h-.671c-.192 0-.368-.143-.368-.335V4.68c0-.192.176-.346.368-.346l.193-.005.319-.32a.342.342 0 01.489 0l.319.32c.005 0 .005.005.005.005h.704c.16 0 .237-.16.341-.313v-.11l-.038.005h-.27a.159.159 0 01-.153-.16c0-.087.066-.159.154-.159h.269l.039.006V3.42s-.05-.038-.061-.038h-.302l-.067.076a.342.342 0 01-.489.011l-.066-.088h-.176l.248.259c.021.022.021.088 0 .11-.028.022-.067.028-.088.006l-.292-.276h-.127l-.363.325-.033-.006c-.038.11-.087.089-.143.089-.126 0-.225-.072-.225-.193 0-.127.099-.209.225-.209h.176v-.182c0-.088.061-.131.149-.131h.066v-.127c0-.143.149-.297.286-.297h.28c.16 0 .27-.115.27-.275V2.42c0-.016.055.017.055-.088h-.187l-.005.017-.308.33a.123.123 0 01-.177 0c-.049-.044-.049-.121 0-.171l.391-.385c.027-.022.06-.022.094-.022l.005.022h.869A4.376 4.376 0 0014.5 1.1a4.402 4.402 0 00-2.816 1.018h.583c.094 0 .165.066.165.159s-.072.16-.165.16h-.478c0 .104-.039.06-.039.066v.351h.429l.226-.252c.132-.127.346-.155.473-.022a.332.332 0 010 .473l-1.183 1.182-.011.011c-.005.005-.011.005-.016.011a.115.115 0 00-.034.022c-.005.006-.01 0-.016.006a.309.309 0 01-.176.038h-.347c-.12.104-.187.148-.187.27v.088c0 .016-.027.027-.027.043l.561.589c.06.06.055.154 0 .209a.143.143 0 01-.209 0l-.578-.578a.425.425 0 01-.082.011c-.154 0-.292-.12-.292-.274v-.358h-.016c-.104.374-.165.77-.165 1.177 0 2.431 1.969 4.4 4.4 4.4zm3.388-3.107c.077 0 .16.06.16.137v.424c0 .077-.083.137-.16.137s-.16-.06-.16-.137V6.93c0-.077.083-.137.16-.137zm-3.113-4.879c0 .187-.154.314-.335.314h-.374v.104c0 .11-.05.198-.16.198s-.16-.088-.16-.198V1.98c-.104-.022-.033-.028-.033-.055 0-.187.127-.325.314-.325h.407c.187 0 .341.127.341.314z"];
  var inboxSearch = ["M7.136 3a6.327 6.327 0 00-.098 2.009H4.65l-2.67 5.996H5c.55 0 1 .45 1 .999v1h8v-1c0-.55.45-1 1-1h1.076l1.14 1.14a2.767 2.767 0 001.974.806c.282 0 .554-.042.81-.12V17c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h3.136zm3.244 1.33c0 1.62 1.31 2.93 2.93 2.93s2.93-1.31 2.93-2.93-1.31-2.93-2.93-2.93-2.93 1.31-2.93 2.93zm6.47 2.43l2.89 2.85c.13.15.22.35.23.56 0 .43-.35.78-.78.78-.23 0-.42-.08-.56-.22l-2.87-2.87c-.17.1-.33.2-.51.29-.03.01-.06.03-.09.04-.18.07-.35.15-.55.21-.19.06-.37.11-.57.14-.05.01-.1.02-.14.02-.2.03-.39.05-.6.05A4.3 4.3 0 019 4.31C9 1.93 10.93.01 13.3 0c2.37 0 4.3 1.93 4.3 4.3 0 .21-.02.4-.05.6-.01.05-.01.09-.02.14-.04.2-.08.38-.14.58-.05.19-.13.36-.21.54-.01.03-.03.06-.04.09-.08.18-.18.34-.29.51z"];
  var inboxUpdate = ["M10.083 3a6.04 6.04 0 00.001 2.009H4.65l-2.67 5.996H5c.55 0 1 .45 1 .999v1h8v-1c0-.55.45-1 1-1h3.02l-.53-1.19a5.97 5.97 0 001.824-.811L20 10.545v6.456c0 .55-.45.999-1 .999H1c-.55 0-1-.45-1-1v-6.455L3.08 3.62l.01-.02c.15-.35.5-.6.91-.6h6.083zM16 8a4 4 0 110-8 4 4 0 010 8z"];
  var infoSign = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM9 4h2v2H9V4zm4 12H7v-1h2V8H8V7h3v8h2v1z"];
  var inheritance = ["M6 10c0 2.21 1.79 4 4 4h6.59l-2.29-2.29A.965.965 0 0114 11a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H10c-3.31 0-6-2.69-6-6H1a1 1 0 01-1-1V1a1 1 0 011-1h8a1 1 0 011 1v8a1 1 0 01-1 1H6zM2 2v6h6V2H2z"];
  var inheritedGroup = ["M1 9c.55 0 1 .45 1 1v4c0 1.1.9 2 2 2h2.59l-.3-.29a1.003 1.003 0 011.42-1.42l2 2c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-2 2A1.003 1.003 0 016 19c0-.28.11-.53.3-.71l.29-.29H4c-2.21 0-4-1.79-4-4v-4c0-.55.45-1 1-1zm6.996-9c.79 0 1.68.25 2.309.73a3.63 3.63 0 011.4 2.36c.11.6.17 1.52.17 2.15v.09c.22.09.42.32.47.82.03.39-.12.73-.2.87-.07.34-.27.71-.61.78-.04.16-.09.33-.15.48-.01.01-.02.05-.02.05-.27.71-.68 1.33-1.19 1.78 0 .08 0 .16.01.23.05.55-.15.95 1.33 1.6 1.469.66 3.698 1.35 4.178 2.39.45 1.05.27 1.67.27 1.67h-5.227a1.982 1.982 0 00-.319-.417l-2-2A2.003 2.003 0 005 15H4c-.548 0-1-.452-1-1v-1.462c.511-.213 1.023-.413 1.468-.608 1.479-.65 1.329-1.05 1.379-1.59l.01-.21c-.52-.45-.95-1.08-1.22-1.8l-.01-.01-.01-.03c-.07-.15-.12-.32-.16-.49-.34-.06-.54-.43-.62-.78-.08-.14-.24-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.64.05-1.55.17-2.15a3.648 3.648 0 011.4-2.36C6.317.25 7.207 0 7.996 0zm5.997 3c.59 0 1.26.19 1.73.55.46.35.8.85.97 1.4.04.13.07.25.08.38.08.45.13 1.14.13 1.61v.07c.16.07.31.24.35.62.02.29-.09.55-.15.65-.05.26-.2.53-.46.59-.03.12-.07.25-.11.36-.01.01-.01.04-.01.04-.2.53-.51 1-.89 1.34 0 .06 0 .12.01.17.04.41-.11.71 1 1.19 1.099.5 2.768 1.01 3.128 1.79.34.79.2 1.25.2 1.25h-3.039V15c-.06-.33-.17-.69-.33-1.06-.45-.97-1.37-1.52-3.238-2.3-.17-.07-.76-.31-.77-.32-.1-.04-.2-.08-.28-.12.05-.14.04-.29.06-.45l.01-.16c-.25-.21-.47-.48-.65-.79.22-.34.41-.71.56-1.12l.028-.078-.002.013-.006.035.06-.15c.36-.26.6-.67.72-1.13.18-.37.29-.82.25-1.3-.05-.5-.21-.92-.47-1.22-.02-.53-.06-1.11-.12-1.59.38-.17.83-.26 1.24-.26z"];
  var innerJoin = ["M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zm-3.34 9.25c-.55-1.2-.86-2.54-.86-3.95s.31-2.75.86-3.95a4.001 4.001 0 000 7.9zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm.6 2.05c.55 1.2.86 2.54.86 3.95s-.31 2.75-.86 3.95c1.9-.31 3.36-1.96 3.36-3.95S16.5 6.36 14.6 6.05zM10 5.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"];
  var insert = ["M19 0H1C.4 0 0 .4 0 1v18c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V1c0-.6-.5-1-1-1zm-1 18H2V2h16v16zM5 11h4v4c0 .6.4 1 1 1s1-.4 1-1v-4h4c.6 0 1-.4 1-1s-.4-1-1-1h-4V5c0-.6-.4-1-1-1s-1 .4-1 1v4H5c-.6 0-1 .4-1 1s.4 1 1 1z"];
  var intersection = ["M13 4c-1.31 0-2.51.43-3.5 1.14A5.977 5.977 0 006 4c-3.31 0-6 2.69-6 6s2.69 6 6 6c1.31 0 2.51-.43 3.5-1.14.99.71 2.19 1.14 3.5 1.14 3.31 0 6-2.69 6-6s-2.69-6-6-6zm-4.93 9.41c-.61.37-1.31.59-2.07.59-2.21 0-4-1.79-4-4s1.79-4 4-4c.76 0 1.46.22 2.07.59C7.4 7.56 7 8.73 7 10s.4 2.44 1.07 3.41zM13 14c-.76 0-1.46-.22-2.07-.59C11.6 12.44 12 11.27 12 10s-.4-2.44-1.07-3.41C11.54 6.22 12.24 6 13 6c2.21 0 4 1.79 4 4s-1.79 4-4 4z"];
  var ipAddress = ["M6 3.66C6 5.69 10 11 10 11s4-5.31 4-7.34C13.99 1.64 12.21 0 10 0S6 1.64 6 3.66zM8 4c0-1.1.9-2 2-2s2 .9 2 2-.9 2-2 2-2-.9-2-2zM14 13.5V13h-4v1h3v2h-2v1h3v-3.5zM3 12h14c.55 0 1 .45 1 1v6c0 .55-.45 1-1 1H3c-.55 0-1-.45-1-1v-6c0-.55.45-1 1-1zm4 1v6h1v-6H7zm3 1v5h1v-5h-1z"];
  var issue = ["M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16zm1-2H9v-2h2v2zm0-3H9V4h2v9z"];
  var issueClosed = ["M15.364 5.9a.997.997 0 01-.707-.293l-2.121-2.122a1 1 0 111.414-1.414l1.414 1.414L18.192.657a1 1 0 011.414 1.414l-3.535 3.536a.997.997 0 01-.707.292zM11.78.157a3.002 3.002 0 00-1.437 1.85 8 8 0 107.1 5.055l.042-.042 1.472-1.472A9.959 9.959 0 0120 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0c.608 0 1.202.054 1.78.158zM11 16H9v-2h2v2zm0-3H9V4h2v9z"];
  var issueNew = ["M13.167.512a2.98 2.98 0 00-.131.524c-.74.115-1.39.5-1.848 1.052a8 8 0 106.724 6.724 2.997 2.997 0 001.052-1.848 2.98 2.98 0 00.524-.13A9.99 9.99 0 0120 10c0 5.523-4.477 10-10 10S0 15.523 0 10 4.477 0 10 0a9.99 9.99 0 013.167.512zM11 16H9v-2h2v2zm0-3H9V4h2v9zm6-10h1.5a1 1 0 010 2H17v1.5a1 1 0 01-2 0V5h-1.5a1 1 0 010-2H15V1.5a1 1 0 012 0V3z"];
  var italic = ["M11.7 4H14c.6 0 1-.4 1-1s-.4-1-1-1H7c-.6 0-1 .4-1 1s.4 1 1 1h2.2L7.3 15H5c-.6 0-1 .4-1 1s.4 1 1 1h7c.6 0 1-.4 1-1s-.4-1-1-1H9.8l1.9-11z"];
  var joinTable = ["M19 6h-4V2c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h4v4c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zM6 12H2V9h4v3zm0-4H2V5h4v3zm7 9H7v-3h6v3zm0-4H7V9h6v4zm0-5H7V5h6v3zm5 9h-4v-3h4v3zm0-4h-4v-3h4v3z"];
  var key$1 = ["M14 0c-3.31 0-6 2.69-6 6 0 1.11.32 2.14.85 3.03L.44 17.44a1.498 1.498 0 102.12 2.12l.79-.79.94.94c.18.18.43.29.71.29s.53-.11.71-.29l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-.94-.94 3.2-3.2A5.9 5.9 0 0014 12c3.31 0 6-2.69 6-6s-2.69-6-6-6zm0 9c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"];
  var keyBackspace = ["M19 3H7c-.28 0-.53.11-.71.29l-6 6C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l6 6c.18.18.43.29.71.29h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-2.29 9.29a1.003 1.003 0 01-1.42 1.42L13 11.41l-2.29 2.29c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71l2.3-2.29-2.3-2.29a1.003 1.003 0 011.42-1.42L13 8.59l2.29-2.29c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L14.41 10l2.3 2.29z"];
  var keyCommand = ["M15.5 12H14V8h1.5C17.43 8 19 6.43 19 4.5S17.43 1 15.5 1 12 2.57 12 4.5V6H8V4.5C8 2.57 6.43 1 4.5 1S1 2.57 1 4.5 2.57 8 4.5 8H6v4H4.5C2.57 12 1 13.57 1 15.5S2.57 19 4.5 19 8 17.43 8 15.5V14h4v1.5c0 1.93 1.57 3.5 3.5 3.5s3.5-1.57 3.5-3.5-1.57-3.5-3.5-3.5zm0-9c.83 0 1.5.67 1.5 1.5S16.33 6 15.5 6 14 5.33 14 4.5 14.67 3 15.5 3zm-11 14c-.83 0-1.5-.67-1.5-1.5S3.67 14 4.5 14s1.5.67 1.5 1.5S5.33 17 4.5 17zm0-11C3.67 6 3 5.33 3 4.5S3.67 3 4.5 3 6 3.67 6 4.5 5.33 6 4.5 6zm7.5 6H8V8h4v4zm3.5 5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"];
  var keyControl = ["M16.71 7.29l-6-6C10.53 1.11 10.28 1 10 1s-.53.11-.71.29l-6 6a1.003 1.003 0 001.42 1.42L10 3.41l5.29 5.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z"];
  var keyDelete = ["M19.71 9.29l-6-6A.997.997 0 0013 3H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.28 0 .53-.11.71-.29l6-6c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zm-9 3a1.003 1.003 0 01-1.42 1.42L7 11.41 4.71 13.7c-.18.19-.43.3-.71.3a1.003 1.003 0 01-.71-1.71L5.59 10l-2.3-2.29a1.003 1.003 0 011.42-1.42L7 8.59 9.29 6.3c.18-.19.43-.3.71-.3a1.003 1.003 0 01.71 1.71L8.41 10l2.3 2.29z"];
  var keyEnter = ["M18 2c-.55 0-1 .45-1 1v5c0 2.21-1.79 4-4 4H4.41L6.7 9.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 14H13c3.31 0 6-2.69 6-6V3c0-.55-.45-1-1-1z"];
  var keyEscape = ["M2 8c.55 0 1-.45 1-1V4.41l6.29 6.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 3H7c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1v5c0 .55.45 1 1 1zm9-6.94V3.1c3.39.49 6 3.38 6 6.9 0 3.87-3.13 7-7 7-3.52 0-6.41-2.61-6.9-6H1.06c.5 4.5 4.31 8 8.94 8a9 9 0 009-9c0-4.63-3.5-8.44-8-8.94z"];
  var keyOption = ["M13 4h6c.55 0 1-.45 1-1s-.45-1-1-1h-6c-.55 0-1 .45-1 1s.45 1 1 1zm6 12h-4.42L6.87 2.5l-.02.01A.977.977 0 006 2H1c-.55 0-1 .45-1 1s.45 1 1 1h4.42l7.71 13.5.01-.01c.18.3.49.51.86.51h5c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var keyShift = ["M17.74 10.35l-6.99-8.01-.01.01C10.56 2.14 10.3 2 10 2s-.56.14-.74.35l-.01-.01-7 8 .01.01A.95.95 0 002 11c0 .55.45 1 1 1h3v5c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-5h3c.55 0 1-.45 1-1 0-.25-.1-.48-.26-.65z"];
  var keyTab = ["M19 13H4.41l2.29-2.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L2 12.59V10c0-.55-.45-1-1-1s-1 .45-1 1v8c0 .55.45 1 1 1s1-.45 1-1v-2.59l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L4.41 15H19c.55 0 1-.45 1-1s-.45-1-1-1zm0-12c-.55 0-1 .45-1 1v2.59L14.71 1.3A.965.965 0 0014 1a1.003 1.003 0 00-.71 1.71L15.59 5H1c-.55 0-1 .45-1 1s.45 1 1 1h14.59L13.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 7.41V10c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1z"];
  var knownVehicle = ["M19 4a.997.997 0 00-.707.293L14 8.586l-2.293-2.293a1 1 0 00-1.414 1.414l3 3a.997.997 0 001.414 0l5-5A1 1 0 0019 4zm-2.048 7.291c.011.072.048.134.048.209a1.5 1.5 0 01-1.5 1.5c-.225 0-.433-.057-.624-.145-.279.085-.57.145-.876.145a2.99 2.99 0 01-2.121-.879l-3-3 .007-.007A3.027 3.027 0 018.184 8H4V7l1-3h10l.19.568 1.307-1.308c-.336-.356-.758-.658-1.165-.772 0 0-1.74-.488-5.332-.488s-5.332.488-5.332.488c-.67.188-1.424.864-1.674 1.502L2.99 4H3L2 7H1a1 1 0 000 2h.333l-.28.84L1 10v7.5a1.5 1.5 0 103 0V17h12v.5a1.5 1.5 0 003 0V10l-.19-.568-1.858 1.86zM4.5 13a1.5 1.5 0 110-3 1.5 1.5 0 010 3z"];
  var labTest = ["M13 2a1 1 0 010 2v4l4 8v1a1 1 0 01-1 1H4a1 1 0 01-1-1v-1l4-8V4a1 1 0 110-2h6zm-2 2H9v4l-2 4h6l-2-4V4z"];
  var label = ["M3 12h14v-1H3v1zm11-9H1c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V9l-6-6zm4 12H2V5h11v3H3v1h10v1h5v5zm-4-6V5l4 4h-4z"];
  var layer = ["M19.5 9.1l-9-5c-.2-.1-.3-.1-.5-.1s-.3 0-.5.1l-9 5c-.3.2-.5.5-.5.9s.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9s-.2-.7-.5-.9z"];
  var layerOutline = ["M9.514 4.126l-9 5a1 1 0 000 1.748l9 5a1 1 0 00.972 0l9-5a1 1 0 000-1.748l-9-5a1 1 0 00-.972 0zM10 6.144l6.94 3.855L10 13.855 3.059 9.999 10 6.144z"];
  var layers = ["M.5 6.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9s-.2-.7-.5-.9l-9-5c-.2-.1-.3-.1-.5-.1s-.3 0-.5.1l-9 5c-.3.2-.5.5-.5.9s.2.7.5.9z", "M19 9c-.2 0-.3 0-.5.1L10 13.9 1.5 9.1C1.3 9 1.2 9 1 9c-.6 0-1 .4-1 1 0 .4.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9 0-.6-.4-1-1-1z", "M19 13c-.2 0-.3 0-.5.1L10 17.9l-8.5-4.7c-.2-.2-.3-.2-.5-.2-.6 0-1 .4-1 1 0 .4.2.7.5.9l9 5c.2.1.3.1.5.1s.3 0 .5-.1l9-5c.3-.2.5-.5.5-.9 0-.6-.4-1-1-1z"];
  var layout = ["M18 6c-1.1 0-2 .9-2 2 0 .37.11.71.28 1.01l-2.27 2.27c-.3-.17-.64-.28-1.01-.28-.93 0-1.71.64-1.93 1.5H8.93c-.22-.86-1-1.5-1.93-1.5-.37 0-.71.11-1.01.28L3.72 9.01C3.89 8.71 4 8.37 4 8c0-.34-.09-.66-.24-.94l3.66-3.38c.31.2.68.32 1.08.32 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .34.09.66.24.94L3.08 6.32C2.77 6.12 2.4 6 2 6 .9 6 0 6.9 0 8s.9 2 2 2c.37 0 .71-.11 1.01-.28l2.27 2.27c-.17.3-.28.64-.28 1.01s.11.71.28 1.01l-2.27 2.27C2.71 16.11 2.37 16 2 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28.93 0 1.71-.64 1.93-1.5h2.14c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2 0-.37-.11-.71-.28-1.01l2.27-2.27c.3.17.64.28 1.01.28 1.1 0 2-.9 2-2s-.9-2-2-2z"];
  var layoutAuto = ["M18 13c-.53 0-1.01.21-1.37.55L11.9 10.6c.06-.19.1-.39.1-.6s-.04-.41-.1-.6l4.72-2.95c.37.34.85.55 1.38.55 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .21.04.41.1.6l-4.73 2.96c-.24-.23-.54-.4-.87-.48V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.33.09-.63.26-.87.48L3.9 5.6c.06-.19.1-.39.1-.6 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.53 0 1.01-.21 1.37-.55L8.1 9.4c-.06.19-.1.39-.1.6s.04.41.1.6l-4.72 2.95C3.01 13.21 2.53 13 2 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.21-.04-.41-.1-.6l4.73-2.96c.24.23.54.4.87.48v4.14C8.64 16.29 8 17.07 8 18c0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.33-.09.63-.26.87-.48l4.73 2.96c-.06.18-.1.38-.1.59 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"];
  var layoutBalloon = ["M18 16c-.14 0-.28.02-.42.05l-1.73-3.45c.69-.45 1.14-1.22 1.14-2.1s-.46-1.65-1.14-2.1l1.73-3.45c.14.03.28.05.42.05 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .6.27 1.13.69 1.5l-1.77 3.54c-.14-.02-.28-.04-.42-.04a2.5 2.5 0 00-2.45 2h-4.1A2.5 2.5 0 005.5 8c-.14 0-.28.02-.42.04L3.31 4.5C3.73 4.13 4 3.6 4 3c0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.14 0 .28-.02.42-.05L4.14 8.4C3.46 8.85 3 9.62 3 10.5s.46 1.65 1.14 2.1l-1.73 3.45A1.84 1.84 0 002 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2c0-.6-.27-1.13-.69-1.5l1.77-3.54c.14.02.28.04.42.04a2.5 2.5 0 002.45-2h4.1a2.5 2.5 0 002.45 2c.14 0 .28-.02.42-.04l1.77 3.54c-.42.37-.69.9-.69 1.5 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2z"];
  var layoutCircle = ["M18.3 8c-.2-.9-.6-1.7-1.1-2.5.2-.3.3-.7.3-1 0-1.1-.9-2-2-2-.4 0-.7.1-1 .3-.8-.5-1.6-.8-2.5-1.1-.1-1-1-1.7-2-1.7S8.2.8 8 1.7c-.9.3-1.7.6-2.5 1.1-.3-.2-.7-.3-1-.3-1.1 0-2 .9-2 2 0 .4.1.7.3 1-.5.8-.8 1.6-1.1 2.5C.8 8.2 0 9 0 10s.8 1.8 1.7 2c.2.9.6 1.7 1.1 2.5-.2.3-.3.7-.3 1 0 1.1.9 2 2 2 .4 0 .7-.1 1-.3.8.5 1.6.8 2.5 1.1.1 1 1 1.7 2 1.7s1.8-.8 2-1.7c.9-.2 1.7-.6 2.5-1.1.3.2.7.3 1 .3 1.1 0 2-.9 2-2 0-.4-.1-.7-.3-1 .5-.8.8-1.6 1.1-2.5 1-.1 1.7-1 1.7-2s-.8-1.8-1.7-2zm-1.8 5.8c-.3-.2-.6-.3-1-.3-1.1 0-2 .9-2 2 0 .4.1.7.3 1-.6.3-1.2.6-1.9.8-.3-.7-1-1.3-1.9-1.3-.8 0-1.6.5-1.9 1.3-.7-.2-1.3-.4-1.9-.8.2-.3.3-.6.3-1 0-1.1-.9-2-2-2-.4 0-.7.1-1 .3-.3-.6-.6-1.2-.8-1.9.8-.3 1.3-1.1 1.3-1.9s-.5-1.6-1.2-1.8c.2-.7.4-1.3.8-1.9.3.2.6.3 1 .3 1.1 0 2-.9 2-2 0-.4-.1-.7-.3-1 .6-.3 1.2-.6 1.9-.8.2.7 1 1.2 1.8 1.2s1.6-.5 1.9-1.3c.7.2 1.3.4 1.9.8-.2.3-.3.6-.3 1 0 1.1.9 2 2 2 .4 0 .7-.1 1-.3.3.6.6 1.2.8 1.9-.8.3-1.3 1.1-1.3 1.9s.5 1.6 1.2 1.8c-.1.7-.4 1.4-.7 2z"];
  var layoutGrid = ["M2 0a2 2 0 100 4 2 2 0 100-4zM10 0a2 2 0 100 4 2 2 0 100-4zM18 0a2 2 0 100 4 2 2 0 100-4zM18 8a2 2 0 100 4 2 2 0 100-4zM18 16a2 2 0 100 4 2 2 0 100-4zM10 16a2 2 0 100 4 2 2 0 100-4zM2 16a2 2 0 100 4 2 2 0 100-4zM2 8a2 2 0 100 4 2 2 0 100-4zM10 8a2 2 0 100 4 2 2 0 100-4z"];
  var layoutGroupBy = ["M2 2a2 2 0 100 4 2 2 0 100-4zM18 0a2 2 0 100 4 2 2 0 100-4zM18 8a2 2 0 100 4 2 2 0 100-4zM18 16a2 2 0 100 4 2 2 0 100-4zM2 14a2 2 0 100 4 2 2 0 100-4zM2 8a2 2 0 100 4 2 2 0 100-4zM13 12a2 2 0 100 4 2 2 0 100-4zM13 4a2 2 0 100 4 2 2 0 100-4z"];
  var layoutHierarchy = ["M18.5 16.07v-4.14c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2-.93 0-1.71.64-1.93 1.5h-4.14c-.18-.7-.73-1.25-1.43-1.43V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.7.18-1.25.73-1.43 1.43H3.93C3.71 8.64 2.93 8 2 8c-1.1 0-2 .9-2 2 0 .93.64 1.71 1.5 1.93v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.7-.18 1.25-.73 1.43-1.43h4.14c.18.7.73 1.25 1.43 1.43v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93v-4.14c.7-.18 1.25-.73 1.43-1.43h4.14c.18.7.73 1.25 1.43 1.43v4.14c-.86.22-1.5 1-1.5 1.93 0 1.1.9 2 2 2s2-.9 2-2c0-.93-.64-1.71-1.5-1.93z"];
  var layoutLinear = ["M16.5 7a2.5 2.5 0 00-2.45 2h-2.1a2.5 2.5 0 00-4.9 0h-2.1a2.5 2.5 0 100 1h2.1a2.5 2.5 0 004.9 0h2.1a2.5 2.5 0 102.45-3z"];
  var layoutSkewGrid = ["M2 0a2 2 0 100 4 2 2 0 100-4zM18 0a2 2 0 100 4 2 2 0 100-4zM18 8a2 2 0 100 4 2 2 0 100-4zM18 16a2 2 0 100 4 2 2 0 100-4zM2 16a2 2 0 100 4 2 2 0 100-4zM2 8a2 2 0 100 4 2 2 0 100-4zM10 12a2 2 0 100 4 2 2 0 100-4zM10 4a2 2 0 100 4 2 2 0 100-4z"];
  var layoutSortedClusters = ["M2 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm16 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-8 4c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var learning = ["M10.551 1.127a1.256 1.256 0 00-1.102 0L.456 5.89c-.608.309-.608.913 0 1.222l8.993 4.762c.334.17.767.17 1.102 0l8.992-4.762c.61-.309.61-.913 0-1.222l-8.992-4.762z", "M18 6.5l.016 4.514c.002.548.447.99.994.99a.99.99 0 00.99-.99V6.5h-2zM3.366 10.033l6.401 3.358a.5.5 0 00.465 0l6.406-3.358a.25.25 0 01.366.221v5.109a.25.25 0 01-.139.224l-6.64 3.302a.5.5 0 01-.446 0l-6.64-3.302A.25.25 0 013 15.363v-5.108a.25.25 0 01.366-.222z"];
  var leftJoin = ["M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm.6 2.05c.55 1.2.86 2.54.86 3.95s-.31 2.75-.86 3.95c1.9-.31 3.36-1.96 3.36-3.95S16.5 6.36 14.6 6.05zM10 5.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"];
  var lessThan = ["M7.162 10l9.154 3.052a1 1 0 01-.632 1.897l-12-4c-.912-.304-.912-1.594 0-1.897l12-4a1 1 0 01.632 1.897L7.162 10z"];
  var lessThanOrEqualTo = ["M16.316 11.051L7.162 8l9.154-3.051a1 1 0 10-.632-1.898l-12 4c-.912.304-.912 1.594 0 1.898l12 4a1 1 0 10.632-1.898zM16 15H4a1 1 0 100 2h12a1 1 0 100-2z"];
  var lifesaver = ["M8.143 14.644L7.028 17.43c.919.368 1.922.57 2.972.57s2.053-.202 2.972-.57l-1.115-2.786A4.986 4.986 0 0110 15a4.986 4.986 0 01-1.857-.356zm-2.787-2.787A4.986 4.986 0 015 10c0-.656.126-1.283.356-1.857L2.57 7.028A7.978 7.978 0 002 10c0 1.05.202 2.053.57 2.972l2.786-1.115zm2.787-6.5A4.986 4.986 0 0110 5c.656 0 1.283.126 1.857.356l1.115-2.786A7.978 7.978 0 0010 2c-1.05 0-2.053.202-2.972.57l1.115 2.786zm6.5 2.786c.23.574.357 1.2.357 1.857 0 .656-.126 1.283-.356 1.857l2.786 1.115c.368-.919.57-1.922.57-2.972s-.202-2.053-.57-2.972l-2.786 1.115zM10 13a3 3 0 100-6 3 3 0 000 6zm0 7C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10z"];
  var lightbulb = ["M6.33 13.39c0 .34.27.61.6.61h6.13c.33 0 .6-.27.6-.61C14.03 9.78 16 9.4 16 6.09 16 2.72 13.31 0 10 0S4 2.72 4 6.09c0 3.31 1.97 3.69 2.33 7.3zM13 15H7c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-1 3H8c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var lightning = ["M9 11H6a1 1 0 01-1-1L5.91.9a1 1 0 01.995-.9h6.256a.839.839 0 01.779 1.15L11.2 8h2.978a.822.822 0 01.748 1.162l-4.764 10.481A.608.608 0 019 19.392V11z"];
  var link = ["M10.85 11.98l-4.44 4.44-1 1c-.36.36-.86.58-1.41.58-1.1 0-2-.9-2-2 0-.55.22-1.05.59-1.41l5.44-5.44C7.69 9.06 7.36 9 7 9c-1.11 0-2.09.46-2.82 1.18l-.01-.01-3 3 .01.01C.46 13.91 0 14.89 0 16c0 2.21 1.79 4 4 4 1.11 0 2.09-.46 2.82-1.18l.01.01 3-3-.01-.01C10.54 15.09 11 14.11 11 13c0-.36-.06-.69-.15-1.02zM20 4c0-2.21-1.79-4-4-4-1.11 0-2.09.46-2.82 1.18l-.01-.01-3 3 .01.01C9.46 4.91 9 5.89 9 7c0 .36.06.69.15 1.02l4.44-4.44 1-1c.36-.36.86-.58 1.41-.58 1.1 0 2 .9 2 2 0 .55-.22 1.05-.59 1.41l-5.44 5.44c.34.09.67.15 1.03.15 1.11 0 2.09-.46 2.82-1.18l.01.01 3-3-.01-.01C19.54 6.09 20 5.11 20 4zM5 14a1.003 1.003 0 001.71.71l8-8a1.003 1.003 0 00-1.42-1.42l-2 2-2 2-2 2-2 2c-.18.18-.29.43-.29.71z"];
  var list = ["M1.03 1C.46 1 0 1.46 0 2.03v.95C0 3.54.46 4 1.03 4h17.95C19.54 4 20 3.54 20 2.97v-.94C20 1.46 19.54 1 18.97 1H1.03zM0 17.97C0 18.54.46 19 1.03 19h17.95c.56 0 1.03-.46 1.03-1.03v-.95c0-.56-.46-1.03-1.03-1.03H1.03C.46 16 0 16.46 0 17.03v.94zM0 12.97C0 13.54.46 14 1.03 14h17.95c.56 0 1.03-.46 1.03-1.03v-.95c0-.56-.46-1.03-1.03-1.03H1.03C.46 11 0 11.46 0 12.03v.94zM0 7.97C0 8.54.46 9 1.03 9h17.95C19.54 9 20 8.54 20 7.97v-.94C20 6.46 19.54 6 18.97 6H1.03C.46 6 0 6.46 0 7.03v.94z"];
  var listColumns = ["M0 2.973v-.936C0 1.468.46 1.01 1.029 1H7.97C8.541 1 9 1.468 9 2.027v.946C9 3.542 8.53 4 7.971 4H1.03C.459 4 0 3.542 0 2.973zm0 5v-.936C0 6.468.46 6.01 1.029 6H7.97C8.541 6 9 6.468 9 7.027v.946C9 8.542 8.53 9 7.971 9H1.03C.459 9 0 8.542 0 7.973zm0 5v-.936C0 11.468.46 11.01 1.029 11H7.97C8.541 11 9 11.468 9 12.027v.946C9 13.542 8.53 14 7.971 14H1.03C.459 14 0 13.542 0 12.973zm0 5v-.936C0 16.468.46 16.01 1.029 16H7.97C8.541 16 9 16.468 9 17.027v.946C9 18.542 8.53 19 7.971 19H1.03C.459 19 0 18.542 0 17.973zm11-15v-.936c0-.569.46-1.027 1.029-1.037h6.942C19.541 1 20 1.468 20 2.027v.946C20 3.542 19.53 4 18.971 4H12.03C11.459 4 11 3.542 11 2.973zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942C19.541 6 20 6.468 20 7.027v.946C20 8.542 19.53 9 18.971 9H12.03C11.459 9 11 8.542 11 7.973zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942c.57 0 1.029.468 1.029 1.027v.946c0 .569-.47 1.027-1.029 1.027H12.03c-.57 0-1.029-.458-1.029-1.027zm0 5v-.936c0-.569.46-1.027 1.029-1.037h6.942c.57 0 1.029.468 1.029 1.027v.946c0 .569-.47 1.027-1.029 1.027H12.03c-.57 0-1.029-.458-1.029-1.027z"];
  var listDetailView = ["M8 6H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM8 1H1c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm11 0h-7c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1z"];
  var locate = ["M10 8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm9 1h-1.07c-.45-3.61-3.32-6.45-6.93-6.91V1c0-.55-.45-1-1-1S9 .45 9 1v1.09C5.39 2.55 2.52 5.39 2.07 9H1c-.55 0-1 .45-1 1s.45 1 1 1h1.07c.45 3.61 3.32 6.45 6.93 6.91V19c0 .55.45 1 1 1s1-.45 1-1v-1.09c3.61-.46 6.48-3.29 6.93-6.91H19c.55 0 1-.45 1-1s-.45-1-1-1zm-4 2h.9a5.98 5.98 0 01-4.9 4.91V15c0-.55-.45-1-1-1s-1 .45-1 1v.91A5.98 5.98 0 014.1 11H5c.55 0 1-.45 1-1s-.45-1-1-1h-.9A5.98 5.98 0 019 4.09V5c0 .55.45 1 1 1s1-.45 1-1v-.91A5.98 5.98 0 0115.9 9H15c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var lock = ["M15.93 9H14V4.99c0-2.21-1.79-4-4-4s-4 1.79-4 4V9H3.93c-.55 0-.93.44-.93.99v8c0 .55.38 1.01.93 1.01h12c.55 0 1.07-.46 1.07-1.01v-8c0-.55-.52-.99-1.07-.99zM8 9V4.99c0-1.1.9-2 2-2s2 .9 2 2V9H8z"];
  var logIn = ["M19 0h-8c-.55 0-1 .45-1 1s.45 1 1 1h7v16h-7c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 10c0-.28-.11-.53-.29-.71l-5-5a1.003 1.003 0 00-1.42 1.42L11.59 9H1c-.55 0-1 .45-1 1s.45 1 1 1h10.59L8.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l5-5c.18-.18.29-.43.29-.71z"];
  var logOut = ["M19.71 9.29l-5-5a1.003 1.003 0 00-1.42 1.42L16.59 9H6c-.55 0-1 .45-1 1s.45 1 1 1h10.59l-3.29 3.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l5-5c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM9 18H2V2h7c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var manual = ["M20 1.1a.976.976 0 00-.83-.88C15.15-.43 12.07.34 10 2.5 7.93.34 4.85-.43.84.22.37.3.03.67 0 1.1v15.01c0 .07 0 .14.01.21.09.52.61.88 1.15.79 3.85-.62 6.4.16 8 2.46.02.02.03.04.05.07.02.02.04.04.06.07l.01.01a1.07 1.07 0 00.28.19c.01 0 .01.01.02.01.03.01.07.03.1.04.01 0 .02.01.04.01.03.01.07.02.1.02.01 0 .02 0 .04.01H10c.04 0 .09 0 .13-.01.01 0 .03 0 .04-.01.03-.01.06-.01.1-.02.01 0 .03-.01.04-.01.03-.01.07-.02.1-.04.01 0 .02-.01.03-.01.07-.03.13-.07.19-.11.01 0 .01-.01.02-.01.02-.02.04-.03.06-.05.01-.01.02-.02.03-.02l.05-.05c.01-.01.02-.02.02-.03.01-.02.02-.03.04-.05 1.61-2.3 4.15-3.09 8-2.46.54.09 1.06-.26 1.15-.79-.01-.05 0-.09 0-.13V1.1zM9 16.63c-1.78-1.31-4.12-1.83-7-1.55V2c3.26-.37 5.51.39 7 2.35v12.28zm9-1.56c-2.88-.28-5.22.24-7 1.55V4.34c1.49-1.96 3.74-2.71 7-2.35v13.08z"];
  var manuallyEnteredData = ["M1 12h4.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm16.77-3.94l1.65-1.65c.36-.36.58-.86.58-1.41 0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.82zM1 4h12.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zM0 15c0 .55.45 1 1 1h.34l2-2H1c-.55 0-1 .45-1 1zm1-7h8.34l2-2H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 2h-.34l-2 2H19c.55 0 1-.45 1-1s-.45-1-1-1zm0 4h-4.34l-2 2H19c.55 0 1-.45 1-1s-.45-1-1-1zM4 19l4.41-1.59-2.81-2.79L4 19zM14.23 5.94l-7.65 7.65 2.83 2.83 7.65-7.65-2.83-2.83z"];
  var manyToMany = ["M17 6a1 1 0 100-2 1 1 0 000 2zm0 2a3 3 0 01-2.73-1.754c-.2.068-.408.154-.617.264-.884.465-1.92 1.418-2.605 3.49.685 2.072 1.721 3.025 2.605 3.49.21.11.416.196.617.264a3 3 0 11-.165 2.034 6.262 6.262 0 01-1.383-.528c-.983-.518-1.948-1.364-2.722-2.705-.774 1.34-1.739 2.187-2.722 2.705-.48.252-.95.419-1.383.528A3.001 3.001 0 010 15a3 3 0 015.73-1.246c.2-.068.408-.154.617-.264.884-.465 1.92-1.418 2.605-3.49-.685-2.072-1.721-3.025-2.605-3.49a4.21 4.21 0 00-.617-.264 3 3 0 11.165-2.034c.433.11.904.276 1.383.528.983.518 1.948 1.364 2.722 2.705.774-1.34 1.739-2.187 2.722-2.705.48-.252.95-.419 1.383-.528A3.001 3.001 0 0120 5a3 3 0 01-3 3zM4 5a1 1 0 10-2 0 1 1 0 002 0zm12 10a1 1 0 102 0 1 1 0 00-2 0zM3 14a1 1 0 110 2 1 1 0 010-2z"];
  var manyToOne = ["M3 2a1 1 0 100 2 1 1 0 000-2zm0 4c1.296 0 2.4-.821 2.82-1.972.487.039 1.086.13 1.667.347.947.352 1.773 1 2.032 2.318.323 1.644 1.234 2.675 2.264 3.307-1.03.632-1.941 1.663-2.264 3.307-.259 1.318-1.085 1.966-2.032 2.318a6.244 6.244 0 01-1.668.347 3.001 3.001 0 10.019 2.004c.633-.042 1.491-.158 2.347-.476 1.402-.523 2.867-1.625 3.296-3.807.259-1.318 1.085-1.966 2.032-2.318.24-.09.484-.158.722-.21a3 3 0 100-2.33 5.329 5.329 0 01-.722-.21c-.947-.352-1.773-1-2.032-2.318-.428-2.182-1.894-3.284-3.296-3.807-.856-.318-1.714-.434-2.347-.476A3.001 3.001 0 000 3a3 3 0 003 3zm13 4a1 1 0 102 0 1 1 0 00-2 0zM2 17a1 1 0 112 0 1 1 0 01-2 0z"];
  var map = ["M19.54 4.18l.01-.02-6-4-.01.02C13.39.08 13.21 0 13 0s-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 001 0C.45 0 0 .45 0 1v14c0 .35.19.64.46.82l-.01.02 6 4 .01-.02c.15.1.33.18.54.18s.39-.08.54-.18l.01.02L13 16.2l5.45 3.63.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1V5c0-.35-.19-.64-.46-.82zM6 17.13l-4-2.67V2.87l4 2.67v11.59zm6-2.67l-4 2.67V5.54l4-2.67v11.59zm6 2.67l-4-2.67V2.87l4 2.67v11.59z"];
  var mapCreate = ["M18 9.22v7.91l-4-2.67V9.22c-.61-.55-1-1.33-1-2.22-.35 0-.69-.07-1-.18v7.65l-4 2.67V5.54l2.02-1.35c0-.06-.02-.13-.02-.19 0-1.66 1.34-3 3-3 0-.34.07-.66.17-.97C13.12.02 13.06 0 13 0c-.21 0-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 001 0C.45 0 0 .45 0 1v14c0 .35.19.64.46.82l-.01.02 6 4 .01-.02c.15.1.33.18.54.18s.39-.08.54-.18l.01.02L13 16.2l5.45 3.63.01-.02c.15.11.33.19.54.19.55 0 1-.45 1-1V6.82c-.31.11-.65.18-1 .18 0 .89-.39 1.67-1 2.22zM6 17.13l-4-2.67V2.87l4 2.67v11.59zM12 4c0 .55.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1z"];
  var mapMarker = ["M9.98 0c-3.87 0-7 2.98-7 6.67 0 3.68 7 13.33 7 13.33s7-9.65 7-13.33c0-3.68-3.14-6.67-7-6.67zm0 10c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"];
  var maximize = ["M19 0h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L11.3 7.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L18 3.41V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zM8 11c-.28 0-.53.11-.71.29L2 16.59V14c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1H3.41l5.29-5.29c.19-.18.3-.43.3-.71 0-.55-.45-1-1-1z"];
  var media = ["M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z"];
  var menu = ["M1 6h18c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1s.45 1 1 1zm18 3H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var menuClosed = ["M8 6h11c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zM4 6c-.28 0-.53.11-.71.29l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3A1.003 1.003 0 005 13V7c0-.55-.45-1-1-1zm15 8H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0-5H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var menuOpen = ["M12 9H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0 5H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm0-10H1c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm7.71 5.29l-3-3A1.003 1.003 0 0015 7v6a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var mergeColumns = ["M6.71 6.29a1.003 1.003 0 00-1.42 1.42L6.59 9H2V2h5v2.18c.42.15.8.39 1.11.7l.01-.01.88.89V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-4.76l-.88.88-.01-.01c-.31.31-.69.56-1.11.71V18H2v-7h4.59L5.3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM19 0h-7c-.55 0-1 .45-1 1v4.76l.88-.88.01.01c.31-.31.69-.55 1.11-.7V2h5v7h-4.59l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L13.41 11H18v7h-5v-2.18c-.42-.15-.8-.39-1.11-.7l-.01.01-.88-.89V19c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var mergeLinks = ["M10 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm8-5c-.93 0-1.71.64-1.93 1.5H14V4c0-2.21-1.79-4-4-4S6 1.79 6 4v5.5H3.93C3.71 8.64 2.93 8 2 8c-1.1 0-2 .9-2 2s.9 2 2 2c.93 0 1.71-.64 1.93-1.5H6V16c0 2.21 1.79 4 4 4s4-1.79 4-4v-5.5h2.07c.22.86 1 1.5 1.93 1.5 1.1 0 2-.9 2-2s-.9-2-2-2zm-5 8c0 1.66-1.34 3-3 3s-3-1.34-3-3V4c0-1.66 1.34-3 3-3s3 1.34 3 3v12zM10 3c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var minimize = ["M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zM20 1a1.003 1.003 0 00-1.71-.71L13 5.59V3c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1h-2.59l5.29-5.29c.19-.18.3-.43.3-.71z"];
  var minus = ["M16 9H4c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var mobilePhone = ["M15 0H5c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 19c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4-3H6V3h8v13z"];
  var mobileVideo = ["M19 5c-.28 0-.53.11-.71.29L15 8.59V5c0-.55-.45-1-1-1H1c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h13c.55 0 1-.45 1-1v-3.59l3.29 3.29c.18.19.43.3.71.3.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"];
  var modal = ["M19 1a1 1 0 011 1v16a1 1 0 01-1 1H1a1 1 0 01-1-1V2a1 1 0 011-1h18zm-1 4H2v12h16V5zm-3-3h-2v2h2V2zm3 0h-2v2h2V2z"];
  var modalFilled = ["M20 5v13a1 1 0 01-1 1H1a1 1 0 01-1-1V5h20zm-3-4h2a1 1 0 011 1v1h-3V1zm-2 2H0V2a1 1 0 011-1h14v2z"];
  var moon = ["M19 14.15A9.94 9.94 0 019.94 20C4.45 20 0 15.55 0 10.06 0 6.03 2.4 2.56 5.85 1a9.811 9.811 0 00-.88 4.09c0 5.49 4.45 9.94 9.94 9.94 1.46 0 2.84-.31 4.09-.88z"];
  var more = ["M3.5 8a2.5 2.5 0 100 5 2.5 2.5 0 100-5zM17.5 8a2.5 2.5 0 100 5 2.5 2.5 0 100-5zM10.5 8a2.5 2.5 0 100 5 2.5 2.5 0 100-5z"];
  var mountain = ["M20 16H4l7-11h1l2 2h1l5 9zm-4-5l-1.5-3h-1l-1-1-1-1L8 11.5l3-1.5 1 1 1-1 3 1zM8.055 8L2.79 16H0l7-8h1.055z"];
  var move = ["M19.71 9.29l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 9H11V3.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3C10.53.11 10.28 0 10 0s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L9 3.41V9H3.41L4.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 11H9v5.59L7.71 15.3A.965.965 0 007 15a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3a1.003 1.003 0 00-1.42-1.42L11 16.59V11h5.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z"];
  var mugshot = ["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18h-.07c-.05-.2-.12-.42-.22-.67-.46-1.05-2.68-1.75-4.16-2.4-1.48-.65-1.28-1.05-1.33-1.59-.01-.07-.01-.15-.01-.23.51-.45.92-1.07 1.19-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.34-.07.54-.44.61-.78.08-.14.23-.48.2-.87-.05-.5-.25-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5a3.67 3.67 0 00-1.29-1.86C11.7 3.25 10.81 3 10.02 3s-1.68.25-2.31.73c-.61.47-1.07 1.13-1.29 1.86-.05.16-.09.33-.11.5-.12.6-.17 1.51-.17 2.14v.08c-.24.09-.44.32-.49.83-.04.39.12.73.2.87.08.35.28.72.63.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.7 1.35 1.22 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.38 1.59-1.48.65-3.7 1.35-4.16 2.4-.12.27-.18.49-.23.69H2V2h16v16z"];
  var multiSelect = ["M19 3H7c-.55 0-1 .45-1 1v1h12v6h1c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm-6 6H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm-1 6H2v-4h10v4zm4-9H4c-.55 0-1 .45-1 1v1h12v6h1c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"];
  var music = ["M19 0c-.08 0-.16.03-.24.05V.03l-12 3v.02C6.33 3.16 6 3.53 6 4v11.35c-.59-.22-1.27-.35-2-.35-2.21 0-4 1.12-4 2.5S1.79 20 4 20c1.94 0 3.55-.86 3.92-2H8V7.78l10-2.5v7.07c-.59-.22-1.27-.35-2-.35-2.21 0-4 1.12-4 2.5s1.79 2.5 4 2.5c1.94 0 3.55-.86 3.92-2H20V1c0-.55-.45-1-1-1z"];
  var nest = ["M2 2c.55 0 1 .45 1 1v5c0 2.21 1.79 4 4 4h8.59L13.3 9.71A.965.965 0 0113 9a1.003 1.003 0 011.71-.71l4 4c.18.18.29.43.29.71 0 .28-.11.53-.29.71l-4 4a1.003 1.003 0 01-1.42-1.42l2.3-2.29H7c-3.31 0-6-2.69-6-6V3c0-.55.45-1 1-1z"];
  var newDrawing = ["M18.7 13.7c.5 0 1 .4 1 1 0 .257-.073.44-.22.614l-.08.086-4 4c-.2.2-.4.3-.7.3-.6 0-1-.5-1-1 0-.257.073-.44.22-.614L14 18l4-4c.2-.2.4-.3.7-.3zM1.8 0l8.378 2.982A3.003 3.003 0 0013 7a3.003 3.003 0 003.877 2.87l.723 2.53.049.06a.41.41 0 01.051.24c0 .167-.07.403-.208.593l-.092.107-4 4c-.2.2-.4.3-.7.3-.075 0-.15-.056-.225-.084L12.4 17.6l-7-2-.112-.042c-.223-.094-.431-.244-.542-.45L4.7 15 0 1.8l.5-.6L7 7.7c-.2.3-.3.6-.3 1 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2a1.68 1.68 0 00-.871.22L7.7 7 1.2.5l.6-.5zM16 0c.55 0 1 .45 1 1v2h2c.55 0 1 .45 1 1s-.45 1-1 1h-2v2c0 .432-.278.803-.664.941l-.01.004A.989.989 0 0116 8c-.55 0-1-.45-1-1V5h-2c-.55 0-1-.45-1-1l.007-.116C12.065 3.388 12.489 3 13 3h2V1c0-.55.45-1 1-1z"];
  var newGridItem = ["M8 0H1C.45 0 0 .45 0 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm0 11H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1v-7c0-.55-.45-1-1-1zm6 7h-1v-1c0-.55-.45-1-1-1s-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1s-.45-1-1-1zm5-7h-2c-.55 0-1 .45-1 1s.45 1 1 1h1v1c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1zm0-11h-7c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-5 11h-2c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1s1-.45 1-1v-1h1c.55 0 1-.45 1-1s-.45-1-1-1zm5 5c-.55 0-1 .45-1 1v1h-1c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z"];
  var newLayer = ["M11.513 2.663A2 2 0 0013 6h1v1a2 2 0 104 0v-.733l1.5.833c.3.2.5.5.5.9s-.2.7-.5.9l-9 5c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5C.2 8.7 0 8.4 0 8s.2-.7.5-.9l9-5c.2-.1.3-.1.5-.1s.3 0 .5.1l1.013.563zM17 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5h-2a1 1 0 010-2h2V1a1 1 0 012 0v2z"];
  var newLayers = ["M17 3h2a1 1 0 010 2h-2v2a1 1 0 01-2 0V5h-2a1 1 0 010-2h2V1a1 1 0 012 0v2zm-1.252 5.984L10.5 11.9c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5C.2 6.7 0 6.4 0 6s.2-.7.5-.9l9-5c.2-.1.3-.1.5-.1s.3 0 .5.1L13.92 2H13a2 2 0 100 4h1v1a2 2 0 001.748 1.984zm2.07-1.15C17.935 7.58 18 7.298 18 7V6h1c.353 0 .684-.091.972-.251.018.078.028.162.028.251 0 .4-.2.7-.5.9l-1.682.934zM19 9c.6 0 1 .4 1 1 0 .4-.2.7-.5.9l-9 5c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5c-.3-.2-.5-.5-.5-.9 0-.6.4-1 1-1 .2 0 .3 0 .5.1l8.5 4.8 8.5-4.8c.2-.1.3-.1.5-.1zm0 4c.6 0 1 .4 1 1 0 .4-.2.7-.5.9l-9 5c-.2.1-.3.1-.5.1s-.3 0-.5-.1l-9-5c-.3-.2-.5-.5-.5-.9 0-.6.4-1 1-1 .2 0 .3 0 .5.2l8.5 4.7 8.5-4.8c.2-.1.3-.1.5-.1z"];
  var newLink = ["M14.5 12a2.5 2.5 0 00-2.45 2h-7.1a2.5 2.5 0 100 1h7.1a2.5 2.5 0 102.45-3zM19 5h-2V3c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V7h2c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var newObject = ["M12 4c0 .6.4 1 1 1h2v2c0 .6.4 1 1 1 .5 0 1-.4 1-1V5h2c.5 0 1-.4 1-1s-.5-1-1-1h-2V1c0-.6-.5-1-1-1-.6 0-1 .4-1 1v2h-2c-.6 0-1 .5-1 1zm7 3c0 1.7-1.3 3-3 3s-3-1.3-3-3c-1.7 0-3-1.3-3-3s1.3-3 3-3c0-.2 0-.4.1-.5-1-.3-2-.5-3.1-.5C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10c0-1.1-.2-2.1-.5-3H19z"];
  var newPerson = ["M11.41 15.92c-1.46-.65-1.26-1.05-1.31-1.59-.01-.07-.01-.15-.01-.23.5-.45.91-1.07 1.18-1.78 0 0 .01-.04.02-.05.06-.15.11-.32.15-.48.33-.07.53-.44.6-.78.08-.14.23-.48.2-.87-.05-.5-.24-.73-.47-.82v-.09c0-.63-.06-1.55-.17-2.15-.02-.17-.06-.33-.11-.5-.22-.73-.67-1.4-1.27-1.86C9.58 4.25 8.7 4 7.92 4c-.78 0-1.66.25-2.28.73-.61.47-1.06 1.13-1.27 1.86-.05.16-.08.33-.11.5-.12.6-.18 1.51-.18 2.14v.08c-.23.09-.43.32-.48.83-.04.39.12.73.2.87.08.35.28.72.62.78.04.17.09.33.15.48 0 .01.01.02.01.03l.01.01c.27.72.69 1.35 1.21 1.8 0 .07-.01.14-.01.21-.05.54.1.94-1.36 1.59-1.46.65-3.66 1.35-4.11 2.4C-.14 19.38.04 20 .04 20h15.75s.18-.62-.27-1.67c-.45-1.06-2.65-1.75-4.11-2.41zM18.87 3h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var newPrescription = ["M11.95 10.23c.16-.18.22-.22.46-.22h1.48c.25 0 .47.08.59.33.1.2.09.41-.05.66l-2.71 3.58L14.88 19c.13.21.16.46.03.69-.12.21-.34.31-.57.31H12.7c-.31 0-.56-.17-.7-.44l-1.9-2.67-1.93 2.68c-.15.27-.42.43-.73.43H5.98c-.25 0-.47-.08-.59-.33-.1-.2-.09-.41.05-.66l3.09-4.35L4.26 9H3v4.32c0 .41-.3.69-.7.69H.7c-.41 0-.7-.28-.7-.69V.69C0 .28.3 0 .7 0h4.42c.71 0 1.36.1 1.94.3.59.2 1.11.49 1.54.87.44.38.78.84 1.02 1.39.25.54.37 1.13.37 1.77 0 1.01-.28 1.88-.84 2.6-.43.54-1.35 1.29-2 1.59l3.09 3.94 1.71-2.23zM4.71 6.04c.71 0 1.45-.16 1.81-.46.33-.28.5-.69.5-1.25s-.17-.97-.5-1.25c-.35-.3-1.1-.46-1.81-.46h-1.7v3.42h1.7zM19 3c.55 0 1 .45 1 1s-.45 1-1 1h-2v2c0 .55-.45 1-1 1s-1-.45-1-1V5h-2c-.55 0-1-.45-1-1s.45-1 1-1h2V1c0-.55.45-1 1-1s1 .45 1 1v2h2z"];
  var newTextBox = ["M19 3h-2V1c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V5h2c.55 0 1-.45 1-1s-.45-1-1-1zM5 7.5v1c0 .28.22.5.5.5s.5-.22.5-.5V8h2v7h-.5c-.28 0-.5.22-.5.5s.22.5.5.5h2c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H9V8h2v.5c0 .28.22.5.5.5s.5-.22.5-.5v-1c0-.28-.22-.5-.5-.5h-6c-.28 0-.5.22-.5.5zM16 9c-.55 0-1 .45-1 1v8H2V5h8c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1h15c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1z"];
  var ninja = ["M20 6s-2.98 2.43-6.12 2.19C13.52 5.31 12.05 0 6 0c0 0 2.41 2.99 2.16 6.12C5.27 6.49 0 7.97 0 14c0 0 2.98-2.43 6.11-2.19C6.47 14.69 7.94 20 14 20c0 0-2.42-2.99-2.16-6.13C14.73 13.51 20 12.02 20 6zm-10 6c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"];
  var notEqualTo = ["M9.487 7l.532-3.196a1 1 0 011.962.392L11.513 7H16a1 1 0 010 2h-4.82l-.333 2H16a1 1 0 010 2h-5.487l-.532 3.196a1 1 0 01-1.962-.392L8.487 13H4a1 1 0 010-2h4.82l.333-2H4a1 1 0 110-2h5.487z"];
  var notifications = ["M10 20c1.1 0 2-.9 2-2H8c0 1.1.9 2 2 2zm7-5c-.55 0-1-.45-1-1V8c0-2.61-1.67-4.81-4-5.63V2c0-1.1-.9-2-2-2S8 .9 8 2v.37C5.67 3.19 4 5.39 4 8v6c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1h14c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var notificationsSnooze = ["M10 18c0 1.1-.9 2-2 2s-2-.9-2-2zM8 0c.476 0 .914.168 1.258.448C8.508.878 8.09 1.562 8 2.5c-.133 1.4.4 2.367 1.6 2.9C8.533 6.6 8 7.467 8 8v1.2a2.8 2.8 0 002.8 2.8H14v2c0 .51.388.935.884.993L15 15c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V8c0-2.61 1.67-4.81 4-5.63V2c0-1.1.9-2 2-2z", "M16 9.25v-.395a.75.75 0 00-.75-.75h-2.813L15.834 3.9A.75.75 0 0016 3.43v-.68a.75.75 0 00-.75-.75h-4.5a.75.75 0 00-.75.75v.184c0 .414.336.75.75.75h2.813L10.22 7.831a1 1 0 00-.221.627v.792c0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75z"];
  var notificationsUpdated = ["M10 20c1.1 0 2-.9 2-2H8c0 1.1.9 2 2 2zm2-17.834A2.994 2.994 0 008 4.99c0 .808.319 1.557.876 2.114l2.97 2.99a2.99 2.99 0 004.154.072V14c0 .55.45 1 1 1s1 .45 1 1-.45 1-1 1H3c-.55 0-1-.45-1-1s.45-1 1-1 1-.45 1-1V8c0-2.61 1.67-4.81 4-5.63V2c0-1.1.9-2 2-2s2 .9 2 2v.166zm1.26 6.514l-2.97-2.99a.973.973 0 01-.29-.7c0-.55.44-1 .99-1 .27 0 .52.11.7.29l2.28 2.28 4.27-4.27a.99.99 0 01.7-.29c.55 0 1 .45 1 1 0 .28-.11.53-.3.7l-4.98 4.98a.99.99 0 01-1.4 0z"];
  var numberedList = ["M1.74 9.01h1.27V1h-.95c-.04.24-.12.45-.26.62-.13.17-.29.3-.47.41-.19.11-.4.18-.63.23-.23.04-.46.07-.71.07v1.03h1.75v5.65zm.43 7.93c.18-.14.37-.28.58-.43.21-.14.42-.29.63-.45.21-.16.41-.33.61-.5.2-.18.37-.38.52-.59.15-.21.28-.45.37-.7.09-.25.14-.54.14-.85 0-.25-.04-.52-.12-.8-.08-.28-.21-.54-.39-.78-.19-.24-.43-.44-.73-.59-.3-.17-.68-.25-1.12-.25-.41 0-.77.08-1.08.23-.32.16-.58.37-.8.64-.22.27-.38.59-.49.96-.11.37-.16.77-.16 1.21h1.19c.01-.28.03-.53.08-.77s.12-.45.21-.62c.09-.18.22-.31.38-.42.16-.1.35-.15.59-.15.26 0 .47.05.63.14.16.09.29.21.38.35.09.14.15.29.18.45.03.16.05.31.05.45-.01.31-.08.58-.22.81-.14.24-.32.45-.53.66-.22.2-.45.39-.71.57-.26.18-.51.36-.74.54-.5.36-.89.78-1.17 1.27-.3.47-.45 1.04-.46 1.69H5v-1.14H1.43c.05-.17.14-.33.27-.49.13-.15.29-.3.47-.44zM18 4.02H8c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-1c0-.56-.45-1-1-1zm0 9H8c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-1c0-.56-.45-1-1-1z"];
  var numerical = ["M2.39 5.75c-.17.21-.38.39-.63.52s-.52.23-.83.29c-.3.05-.61.08-.93.08v1.24h2.49V15h1.49V4.98H2.73c-.05.31-.17.57-.34.77zm17.2 4.71c-.27-.44-.65-.71-1.14-.82v-.02c.42-.16.72-.43.92-.79.2-.36.29-.79.29-1.27 0-.42-.08-.8-.23-1.12-.15-.33-.36-.59-.62-.8-.26-.21-.55-.37-.87-.48-.32-.11-.65-.16-.98-.16-.43 0-.82.08-1.16.25-.34.16-.63.39-.87.69-.24.29-.43.64-.57 1.04-.14.4-.22.83-.23 1.3h1.39c-.01-.25.02-.49.07-.72.06-.23.14-.44.26-.63s.27-.34.45-.45c.18-.11.39-.17.63-.17.39 0 .71.12.96.37s.37.58.37.99c0 .29-.05.54-.16.74-.11.2-.25.36-.43.47-.18.11-.38.19-.61.24-.23.05-.46.06-.68.05v1.17c.28-.01.55 0 .81.03s.5.1.71.21c.21.11.38.28.51.5.13.22.2.52.2.89 0 .55-.16.97-.47 1.27-.31.3-.7.45-1.17.45-.55 0-.95-.19-1.23-.58-.27-.39-.4-.88-.38-1.46h-1.39c.01.5.08.96.21 1.38.13.41.32.77.57 1.06.25.29.56.52.93.68.37.16.8.24 1.3.24.41 0 .79-.07 1.16-.21.37-.14.69-.33.96-.58.28-.25.5-.56.66-.92a3 3 0 00.24-1.23c0-.64-.14-1.17-.41-1.61zM8.58 12.41c.21-.18.45-.36.7-.53.25-.18.5-.36.75-.56.25-.2.49-.41.73-.63.23-.22.44-.47.63-.74.18-.27.33-.56.44-.88.11-.32.16-.67.16-1.07 0-.32-.05-.65-.14-1-.09-.35-.25-.68-.47-.97-.22-.3-.51-.55-.87-.74-.36-.2-.81-.29-1.35-.29-.49 0-.93.1-1.3.29-.37.18-.69.44-.95.78-.26.33-.45.73-.58 1.2-.13.46-.2.96-.2 1.5h1.43c.01-.35.04-.67.09-.97.05-.3.14-.56.25-.78.11-.22.26-.39.45-.52s.43-.19.71-.19c.31 0 .56.06.75.18.19.12.34.26.45.43.11.17.18.36.22.56.04.2.06.39.06.57-.01.38-.1.72-.26 1.02-.15.3-.37.57-.63.83-.26.25-.54.49-.85.71-.31.22-.61.45-.89.68-.6.45-1.06.98-1.41 1.58-.35.61-.52 1.32-.53 2.13h6.01v-1.43H7.69c.06-.21.17-.42.33-.61s.34-.38.56-.55z"];
  var office = ["M19 6h-5V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h4v-6h4v6h10c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1zM6 12H2V8h4v4zm0-6H2V2h4v4zm6 6H8V8h4v4zm0-6H8V2h4v4zm6 11h-4v-3h4v3zm0-5h-4V8h4v4z"];
  var offline = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zM7 18l2-7H5l8-9-2 7h4l-8 9z"];
  var oilField = ["M19 17.99h-1.36l-4.35-9.57 2.91-.86 1.66 4.1c.11.27.43.4.72.31.12-.04.22-.11.28-.2.06-.11 1.47-2.08 1.05-5.6C19.79 5.12 19.3 0 16.01 0 14.89.01 13.99.83 14 1.84c0 .19.04.38.1.56l1.34 3.31L.72 10.03v.02c-.41.12-.72.49-.72.94 0 .55.45 1 1 1 .1 0 .19-.03.28-.06v.02l2-.59 1.47 6.63H3c-.55 0-1 .45-1 1s.45 1 1 1h16c.55 0 1-.45 1-1s-.45-1-1-1zM5.2 10.8l3.95-1.16-2.83 6.22L5.2 10.8zm2.35 7.19l3.95-8.68 3.95 8.68h-7.9z"];
  var oneColumn = ["M14.94 0h-4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-8 6c-.28 0-.53.11-.71.29l-3 3c-.18.18-.29.43-.29.71s.11.53.29.71l3 3A1.003 1.003 0 007.94 13V7c0-.55-.45-1-1-1z"];
  var oneToMany = ["M18 3a1 1 0 11-2 0 1 1 0 012 0zm-3.82 1.028a6.243 6.243 0 00-1.667.347c-.947.352-1.773 1-2.032 2.318C10.158 8.337 9.247 9.368 8.217 10c1.03.632 1.941 1.663 2.264 3.307.259 1.318 1.085 1.966 2.032 2.318.581.217 1.18.308 1.668.347a3.001 3.001 0 11-.019 2.004c-.633-.042-1.491-.158-2.347-.476-1.402-.523-2.868-1.625-3.296-3.807-.259-1.318-1.085-1.966-2.032-2.318a5.314 5.314 0 00-.722-.21 3 3 0 110-2.33c.238-.052.481-.12.722-.21.947-.352 1.773-1 2.032-2.318.428-2.182 1.894-3.284 3.296-3.807.856-.318 1.714-.434 2.347-.476A3.001 3.001 0 0120 3a3 3 0 01-5.82 1.028zM4 10a1 1 0 100 .002v-.002zM17 18a1 1 0 100-2 1 1 0 000 2z"];
  var oneToOne = ["M2 10a1 1 0 112 0 1 1 0 01-2 0zm3.83-1a3.001 3.001 0 100 2h8.34a3.001 3.001 0 100-2H5.83zM17 9a1 1 0 100 2 1 1 0 000-2z"];
  var openApplication = ["M4 1h14c.55 0 1 .45 1 1v13c0 .55-.45 1-1 1h-8v-2h7V4H5v6H3V2c0-.55.45-1 1-1zm2.5 5h7c.28 0 .5-.22.5-.5s-.22-.5-.5-.5h-7c-.28 0-.5.22-.5.5s.22.5.5.5zm0 2h3c.28 0 .5-.22.5-.5S9.78 7 9.5 7h-3c-.28 0-.5.22-.5.5s.22.5.5.5zm5 2h-5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5h5c.28 0 .5.22.5.5s-.22.5-.5.5zM7 17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17z"];
  var outdated = ["M10 0c5.52 0 10 4.48 10 10s-4.48 10-10 10S0 15.52 0 10c0-.55.45-1 1-1s1 .45 1 1c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8C7.47 2 5.22 3.17 3.76 5H5c.55 0 1 .45 1 1s-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1s1 .45 1 1v2.05C3.82 1.6 6.71 0 10 0zm1 16H9v-2h2v2zm0-3H9V4h2v9z"];
  var pageLayout = ["M19 1H1c-.55 0-1 .45-1 1v16c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zM7 17H2V8h5v9zm11 0H8V8h10v9zm0-10H2V3h16v4z"];
  var panelStats = ["M1 1h18a1 1 0 011 1v15a1 1 0 01-1 1H1a1 1 0 01-1-1V2a1 1 0 011-1zm1 2v13h16V3H2zm9 0h1v13h-1V3zm2 7h3.952v1H13v-1zm0 2h3.952v1H13v-1zm0 2h3.952v1H13v-1zm0-6h3.952v1H13V8zm0-2h3.952v1H13V6zm0-2h3.952v1H13V4z"];
  var panelTable = ["M19 1H1c-.6 0-1 .4-1 1v15c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V2c0-.6-.4-1-1-1zm-9 11H7V9h3v3zm0-4H7V5h3v3zm-8 8V3h4v13H2zm5 0v-3h3v3H7zm11 0h-7v-3h7v3zm0-4h-7V9h7v3zm0-4h-7V5h7v3z"];
  var paperclip = ["M18.35 2.67A5.664 5.664 0 0014.33 1c-1.44 0-2.89.56-3.99 1.67l-9.16 9.27C.4 12.73 0 13.78 0 14.83s.39 2.1 1.18 2.9c.78.79 1.82 1.18 2.85 1.18 1.04 0 2.07-.39 2.87-1.2l9.14-9.27c.96-.96.96-2.5.02-3.45-.94-.95-2.49-.96-3.44 0l-7.59 7.69c-.31.32-.3.83.01 1.14.31.31.81.31 1.13.02l7.59-7.69c.31-.31.84-.31 1.13-.02.31.31.31.85 0 1.16l-9.14 9.27c-.93.95-2.54.93-3.45.02-.94-.95-.92-2.55.02-3.49l9.16-9.25c1.55-1.56 4.18-1.59 5.72-.03 1.56 1.57 1.55 4.26 0 5.82l-8.89 9.02c-.3.31-.3.81.01 1.11.3.3.79.31 1.1.01v.01l8.91-9.02A5.645 5.645 0 0020 6.73c0-1.48-.55-2.94-1.65-4.06z"];
  var paragraph = ["M16.5 1H7C4.2 1 2 3.2 2 6s2.2 5 5 5v6.5c0 .8.7 1.5 1.5 1.5s1.5-.7 1.5-1.5V4h2v13.5c0 .8.7 1.5 1.5 1.5s1.5-.7 1.5-1.5V4h1.5c.8 0 1.5-.7 1.5-1.5S17.3 1 16.5 1z"];
  var path = ["M18 0H2C.9 0 0 .9 0 2s.9 2 2 2h7v4H4c-1.1 0-2 .9-2 2s.9 2 2 2h5v4H6c-1.1 0-2 .9-2 2s.9 2 2 2h8c1.1 0 2-.9 2-2s-.9-2-2-2h-3v-4h5c1.1 0 2-.9 2-2s-.9-2-2-2h-5V4h7c1.1 0 2-.9 2-2s-.9-2-2-2z"];
  var pathSearch = ["M4 7c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm15 11.69l-5-2.5v-3.63c-.32.11-.66.22-1 .29v3.32l-6 2.57v-7.25c-.36-.27-.69-.57-1-.9v8.1l-5-2.5V10c.55 0 1-.45 1-1s-.45-1-1-1V1.31l3.43 1.71c.11-.31.24-.62.39-.92L.72.05A.545.545 0 00.5 0C.22 0 0 .22 0 .5v16c0 .2.12.36.28.44l6 3c.07.04.14.06.22.06.07 0 .14-.01.2-.04l6.79-2.91 5.79 2.9c.07.03.14.05.22.05.28 0 .5-.22.5-.5v-4.21c-.31.13-.64.21-1 .21v3.19zM10 5c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm3-1c-.55 0-1 .45-1 1s.45 1 1 1 1-.45 1-1-.45-1-1-1zm6.72-.94l-1.43-.72c.2.43.36.89.48 1.36l.23.11V5.5c-.55 0-1 .45-1 1s.45 1 1 1v1.96l1 1V3.5c0-.2-.12-.36-.28-.44zm-3.69 5.56c.14-.21.27-.42.38-.65.02-.04.04-.07.05-.11.11-.22.2-.45.28-.69v-.01c.07-.24.13-.48.17-.73l.03-.17c.04-.25.06-.5.06-.76C17 2.46 14.54 0 11.5 0S6 2.46 6 5.5 8.46 11 11.5 11c.26 0 .51-.02.76-.06l.17-.03c.25-.04.49-.1.73-.17h.01c.24-.08.47-.17.69-.28.04-.02.07-.03.11-.05.23-.11.44-.24.65-.38l.18.18 3.5 3.5c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71l-3.68-3.67zm-4.53.88c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4z"];
  var pause = ["M7 3H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1zm9 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var people = ["M16.94 17a4.92 4.92 0 00-.33-1.06c-.45-.97-1.37-1.52-3.24-2.3-.17-.07-.76-.31-.77-.32-.1-.04-.2-.08-.28-.12.05-.14.04-.29.06-.45 0-.05.01-.11.01-.16-.25-.21-.47-.48-.65-.79.22-.34.41-.71.56-1.12l.04-.11c-.01.02-.01.02-.02.08l.06-.15c.36-.26.6-.67.72-1.13.18-.37.29-.82.25-1.3-.05-.5-.21-.92-.47-1.22-.02-.53-.06-1.11-.12-1.59.38-.17.83-.26 1.24-.26.59 0 1.26.19 1.73.55.46.35.8.85.97 1.4.04.13.07.25.08.38.08.45.13 1.14.13 1.61v.07c.16.07.31.24.35.62.02.29-.09.55-.15.65-.05.26-.2.53-.46.59-.03.12-.07.25-.11.36-.01.01-.01.04-.01.04-.2.53-.51 1-.89 1.34 0 .06 0 .12.01.17.04.41-.11.71 1 1.19 1.1.5 2.77 1.01 3.13 1.79.34.79.2 1.25.2 1.25h-3.04zm-5.42-3.06c1.47.66 3.7 1.35 4.18 2.39.45 1.05.27 1.67.27 1.67H.04s-.19-.62.27-1.67c.46-1.05 2.68-1.75 4.16-2.4 1.48-.65 1.33-1.05 1.38-1.59 0-.07.01-.14.01-.21-.52-.45-.95-1.08-1.22-1.8l-.01-.01c0-.01-.01-.02-.01-.03-.07-.15-.12-.32-.16-.49-.34-.06-.54-.43-.62-.78-.08-.14-.24-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.64.05-1.55.17-2.15a3.648 3.648 0 011.4-2.36C6.32 2.25 7.21 2 8 2s1.68.25 2.31.73a3.63 3.63 0 011.4 2.36c.11.6.17 1.52.17 2.15v.09c.22.09.42.32.47.82.03.39-.12.73-.2.87-.07.34-.27.71-.61.78-.04.16-.09.33-.15.48-.01.01-.02.05-.02.05-.27.71-.68 1.33-1.19 1.78 0 .08 0 .16.01.23.05.55-.15.95 1.33 1.6z"];
  var percentage = ["M15 10c-1.66 0-3 1.34-3 3v2c0 1.66 1.34 3 3 3s3-1.34 3-3v-2c0-1.66-1.34-3-3-3zm1 5c0 .55-.45 1-1 1s-1-.45-1-1v-2c0-.55.45-1 1-1s1 .45 1 1v2zM8 7V5c0-1.66-1.34-3-3-3S2 3.34 2 5v2c0 1.66 1.34 3 3 3s3-1.34 3-3zM4 7V5c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1zm11-4a1.003 1.003 0 00-1.88-.48L5.14 16.49a1.003 1.003 0 101.74.99l7.99-13.97c.08-.15.13-.32.13-.51z"];
  var person = ["M19.61 17.91c-.57-1.32-3.35-2.19-5.19-3.01-1.85-.82-1.59-1.31-1.66-1.99-.01-.09-.01-.19-.02-.29.63-.56 1.15-1.33 1.49-2.22 0 0 .02-.05.02-.06.07-.19.13-.39.19-.6.42-.09.67-.55.76-.98.1-.17.29-.6.25-1.08-.06-.62-.31-.91-.59-1.03v-.11c0-.79-.07-1.93-.22-2.68A4.55 4.55 0 0012.9.92C12.11.32 11 0 10.01 0s-2.1.32-2.89.92a4.55 4.55 0 00-1.74 2.94c-.14.75-.22 1.89-.22 2.68v.1c-.29.11-.55.4-.61 1.04-.04.48.15.91.25 1.08.1.44.35.91.79.98.05.21.12.41.19.6 0 .01.01.03.01.04l.01.02c.34.91.87 1.69 1.52 2.25 0 .09-.01.18-.02.26-.07.68.13 1.17-1.72 1.99S.96 16.59.39 17.91C-.18 19.23.05 20 .05 20h19.9s.23-.77-.34-2.09z"];
  var phone = ["M19.91 15.51c-.08-.08-4.21-2.5-4.35-2.57a.876.876 0 00-.4-.1c-.19 0-.42.13-.71.4-.28.27-1.17 1.49-1.43 1.76s-.48.4-.65.4c-.08 0-.19-.02-.32-.07s-1.45-.73-4.2-3.15-3.11-4-3.13-4.44c0-.17.13-.39.4-.65.28-.25.57-.51.89-.74.32-.24.61-.5.88-.78s.4-.52.4-.71c0-.13-.03-.27-.1-.4C7.12 4.32 4.62.19 4.53.1c-.19-.18-.92-.1-1.29.1C.25 1.82 0 4 .05 4.86c.05.89.61 5.58 5.2 9.93 5.7 5.41 9.66 5.2 9.92 5.2.87 0 3.52-.48 4.65-3.19.16-.38.31-1.07.09-1.29z"];
  var pieChart = ["M9 .98c-4.5.5-8 4.31-8 8.94 0 4.97 4.03 9.04 9 9.04 4.63 0 8.44-3.96 8.94-7.96H9V.98z", "M10-.08V10h10C20 4 15.52-.08 10-.08z"];
  var pin = ["M11.77 1.16c-.81.81-.74 2.28.02 3.76L6.1 8.71c-2.17-1.46-4.12-2-4.94-1.18l4.95 4.95-4.95 6.36 6.36-4.95 4.95 4.95c.82-.82.27-2.77-1.19-4.94l3.8-5.69c1.47.76 2.94.84 3.76.02l-7.07-7.07z"];
  var pivot = ["M5.83 9.75L.29 15.29a1.003 1.003 0 001.42 1.42l5.54-5.54c-.57-.37-1.05-.85-1.42-1.42zM19 11c-.55 0-1 .45-1 1v1.59l-3.83-3.83c-.37.56-.85 1.04-1.41 1.41L16.59 15H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1zm-5-4c0-2.21-1.79-4-4-4S6 4.79 6 7s1.79 4 4 4 4-1.79 4-4zm-4 2c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z"];
  var pivotTable = ["M3 5H1c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm0-5H1C.45 0 0 .45 0 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm13.71 5.29C16.53 5.11 16.28 5 16 5s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L15 8.41V11c0 2.21-1.79 4-4 4H8.41l1.29-1.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L8.41 17H11c3.31 0 6-2.69 6-6V8.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zM19 0H6c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var play = ["M16 10c0-.36-.2-.67-.49-.84l.01-.01-10-6-.01.01A.991.991 0 005 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .19 0 .36-.07.51-.16l.01.01 10-6-.01-.01c.29-.17.49-.48.49-.84z"];
  var playbook = ["M1.707.293A1 1 0 00.293 1.707L2.086 3.5.293 5.293a1 1 0 001.414 1.414L3.5 4.914l1.793 1.793a1 1 0 001.414-1.414L4.914 3.5l1.793-1.793A1 1 0 005.293.293L3.5 2.086 1.707.293z", "M16 20a4 4 0 100-8 4 4 0 000 8zm0-2a2 2 0 100-4 2 2 0 000 4z", "M18.29 5.7L16 3.41V8a3 3 0 01-3 3H4a1 1 0 00-1 1v7a1 1 0 11-2 0v-7a3 3 0 013-3h9a1 1 0 001-1V3.41l-2.29 2.3a1.003 1.003 0 01-1.42-1.42l4-4c.18-.18.43-.29.71-.29.28 0 .53.11.71.29l4 4A1.003 1.003 0 0119 6c-.28 0-.53-.11-.71-.3z"];
  var plus = ["M16 9h-5V4c0-.55-.45-1-1-1s-1 .45-1 1v5H4c-.55 0-1 .45-1 1s.45 1 1 1h5v5c0 .55.45 1 1 1s1-.45 1-1v-5h5c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var polygonFilter = ["M18 7c-.27 0-.52.05-.75.15l-6.28-4.88c.01-.09.03-.18.03-.27 0-1.1-.9-2-2-2S7 .9 7 2c0 .06.01.12.02.19l-4.19 3C2.57 5.07 2.29 5 2 5 .9 5 0 5.9 0 7c0 .74.4 1.38 1 1.72v7.55c-.6.35-1 .99-1 1.73 0 1.1.9 2 2 2 .74 0 1.38-.4 1.72-1h7.55c.35.6.98 1 1.72 1 1.1 0 2-.9 2-2 0-.37-.11-.72-.29-1.02L18.03 11A2 2 0 0018 7zm-5.03 9c-.72.01-1.35.41-1.69 1H3.72c-.17-.3-.42-.55-.72-.72V8.72c.6-.34 1-.98 1-1.72 0-.06-.01-.12-.02-.19l4.19-3c.26.12.54.19.83.19.27 0 .52-.05.75-.15l6.28 4.88c-.01.09-.03.18-.03.27 0 .37.11.72.29 1.02L12.97 16z"];
  var power = ["M10 10c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1S9 .45 9 1v8c0 .55.45 1 1 1zm3-7.45v2.16c2.36 1.12 4 3.5 4 6.29 0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.79 1.64-5.17 4-6.29V2.55C3.51 3.79 1 7.09 1 11a9 9 0 0018 0c0-3.91-2.51-7.21-6-8.45z"];
  var predictiveAnalysis = ["M20 8.01c0-1.26-.61-2.43-1.61-3.12C17.86 2.5 15.8.79 13.4.79c-.58 0-1.14.1-1.69.29A3.533 3.533 0 009.17 0C8.05 0 7 .55 6.32 1.45c-.15-.02-.3-.03-.45-.03-1.63 0-3.03 1.12-3.46 2.71C.97 4.65 0 6.05 0 7.66c0 .48.09.95.26 1.4-.17.44-.26.91-.26 1.39 0 1.38.72 2.64 1.89 3.29.67.7 1.59 1.09 2.54 1.09.61 0 1.19-.15 1.71-.45.68.82 1.68 1.3 2.73 1.3.66 0 1.28-.18 1.83-.52.61.49 1.34.81 2.11.91 1.3 1.43 2.3 3.28 2.31 3.3 0 0 .35.61.33.61.96-.01 1.77-.2 1.64-1.3.01.02-.92-2.89-.92-2.89.52-.26.94-.69 1.21-1.23 1.12-.66 1.84-1.91 1.84-3.26 0-.3-.03-.6-.1-.89.57-.64.88-1.51.88-2.4zm-1.54 1.28l-.18-.2-.77-.84c-.33-.37-.67-1.17-.73-1.73 0 0-.13-1.25-.13-1.26-.06-.74-1.17-.73-1.13.14 0 .02.13 1.26.13 1.26.04.36.15.77.3 1.17-.08-.01-.15-.02-.22-.02 0 0-2.57-.12-2.57-.13-.73-.03-.89 1.22-.05 1.25l2.57.13c.53.03 1.29.37 1.61.72l.61.67.02.06c.1.27.14.55.14.83 0 .93-.51 1.77-1.34 2.18l-.2.1-.09.23c-.19.48-.6.82-1.1.93l-.67.14.87 2.75c-.48-.76-1.19-1.79-2.02-2.67l-.15-.16-.21-.02c-.51-.04-.99-.21-1.42-.48l1.7-1.48c.44-.39 1.04-.55 1.24-.49 0 0 .78.22.78.23.78.2 1.03-.92.29-1.21l-.78-.23c-.69-.2-1.67.22-2.24.72l-1.91 1.66-.39.32c-.44.36-.93.55-1.5.55-.8 0-1.54-.41-1.97-1.07v-1.88c0-.5.21-.98.34-1.07 0 0 .65-.43.64-.43.87-.69.21-1.57-.64-1.14 0-.01-.65.43-.65.43-.31.2-.54.56-.7.97-.13-.13-.28-.25-.43-.35 0 0-1.91-1.26-1.91-1.28-.81-.56-1.5.63-.61 1.11 0-.02 1.89 1.28 1.89 1.28.46.31.77.97.77 1.36v.84c-.43.24-.78.36-1.24.36-.67 0-1.31-.29-1.77-.79l-.07-.08-.09-.05a2.425 2.425 0 01-1.31-2.16c0-.38.09-.74.25-1.08l.15-.31-.14-.33c-.17-.34-.25-.7-.25-1.08 0-1.13.76-2.1 1.85-2.37l.39-.09.07-.43a2.41 2.41 0 012.39-2.05c.19 0 .39.02.58.07l.4.1.22-.38A2.41 2.41 0 019.17 1.3c.55 0 1.08.19 1.5.53l-.44.45-.01-.01-.31.31c-.41.35-.92.53-1.11.5 0 0-.84-.13-.84-.14-.83-.15-1.09 1.08-.18 1.29.01 0 .84.14.84.14.03 0 .06 0 .09.01-.14.46-.18.96-.12 1.4 0 0 .21 1.24.19 1.23.13.65 1.32.44 1.16-.22 0-.01-.19-1.23-.19-1.23-.07-.48.15-1.19.45-1.5l.48-.5c.07-.06.13-.12.19-.18l.93-.95c.5-.23 1.04-.34 1.59-.34 1.93 0 3.57 1.4 3.89 3.34l.05.31.26.15a2.445 2.445 0 01.87 3.4z"];
  var prescription = ["M13.95 10.23c.16-.18.22-.22.46-.22h1.48c.25 0 .47.08.59.33.1.2.09.41-.05.66l-2.71 3.58L16.88 19c.13.21.16.46.03.69-.12.21-.34.31-.57.31H14.7c-.31 0-.56-.17-.7-.44l-1.9-2.67-1.93 2.68c-.15.27-.42.43-.73.43H7.98c-.25 0-.47-.08-.59-.33-.1-.2-.09-.41.05-.66l3.09-4.35L6.26 9H5v4.32c0 .41-.3.69-.7.69H2.7c-.41 0-.7-.28-.7-.69V.69c0-.41.3-.69.7-.69h4.42c.71 0 1.36.1 1.94.3.59.2 1.11.49 1.54.87.44.38.78.84 1.02 1.39.24.54.36 1.14.36 1.78 0 1.01-.28 1.88-.84 2.6-.43.54-1.35 1.29-2 1.59l3.09 3.94 1.72-2.24zM6.71 6.04c.71 0 1.45-.16 1.81-.46.33-.28.5-.69.5-1.25s-.17-.97-.5-1.25c-.35-.3-1.1-.46-1.81-.46h-1.7v3.42h1.7z"];
  var presentation = ["M19 1h-8c0-.55-.45-1-1-1S9 .45 9 1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v11c0 .55.45 1 1 1h4.59L4.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L9 16.41V19c0 .55.45 1 1 1s1-.45 1-1v-2.59l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L12.41 15H17c.55 0 1-.45 1-1V3h1c.55 0 1-.45 1-1s-.45-1-1-1zm-3 12H4V3h12v10z"];
  var print = ["M14 16H6v-4H4v5c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-5h-2v4zm2-13c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h12V3zm3 2H1c-.55 0-1 .45-1 1v7c0 .55.45 1 1 1h2v-3h14v3h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 4h-2V7h2v2z"];
  var projects = ["M18 4c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h16V4zm-2-3c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v1h12V1zm3 6H1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-5 7c0 .55-.45 1-1 1H7c-.55 0-1-.45-1-1v-2h1v2h6v-2h1v2z"];
  var properties = ["M2 15c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-7c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm5-4h12c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zM2 1C.9 1 0 1.9 0 3s.9 2 2 2 2-.9 2-2-.9-2-2-2zm17 8H7c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1zm0 7H7c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var property = ["M3 5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm5-1h11c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zM3 15c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm16 1H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm-1-8H9c-1.1 0-2 .9-2 2s.9 2 2 2h9c1.1 0 2-.9 2-2s-.9-2-2-2zM3 7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"];
  var publishFunction = ["M7.01 10.11c.35-.64.72-1.68 1.09-3.11l.8-3.03h.96l.24-.77h-.99c.28-1.11.66-1.92 1.12-2.43.28-.32.56-.48.83-.48.05 0 .1.02.13.05.03.03.05.07.05.12 0 .04-.04.13-.11.25-.08.12-.11.24-.11.35 0 .15.06.28.18.39.12.11.27.16.45.16.2 0 .36-.07.49-.2s.2-.31.2-.54c0-.26-.1-.47-.3-.63-.2-.16-.52-.24-.96-.24-.68 0-1.3.19-1.86.58-.55.38-1.08 1.02-1.58 1.91-.17.3-.34.5-.49.59-.15.08-.4.13-.74.12l-.23.77h.95L5.74 9.21c-.23.86-.39 1.39-.47 1.59-.12.29-.3.54-.54.75-.1.08-.21.12-.35.12-.04 0-.07-.01-.1-.03l-.03-.04c0-.02.03-.07.1-.13.07-.07.1-.17.1-.31 0-.15-.05-.28-.16-.38-.11-.1-.27-.15-.47-.15-.25 0-.44.07-.59.2-.15.12-.23.28-.23.46 0 .19.09.36.27.5.19.14.47.21.86.21.61 0 1.16-.15 1.63-.46.48-.31.89-.79 1.25-1.43zm3.7 1.18c-.18-.18-.43-.29-.71-.29s-.53.11-.71.29l-3 3a1.003 1.003 0 001.42 1.42L9 14.41V19c0 .55.45 1 1 1s1-.45 1-1v-4.59l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-3-3zm4.15-6.78c.17-.13.36-.2.55-.2.07 0 .2.03.39.08s.36.08.5.08c.2 0 .37-.07.5-.2.13-.14.2-.31.2-.52 0-.22-.07-.4-.2-.53s-.33-.2-.58-.2c-.22 0-.43.05-.63.15-.2.1-.45.32-.75.67-.23.25-.56.7-1.01 1.33a6.52 6.52 0 00-.91-2.15l-2.38.39-.05.25c.18-.03.33-.05.45-.05.24 0 .43.1.59.3.25.31.59 1.24 1.02 2.79-.34.44-.58.73-.7.87-.21.22-.38.36-.52.43-.1.05-.22.08-.35.08-.1 0-.26-.05-.49-.16a1.01 1.01 0 00-.42-.11c-.23 0-.42.07-.57.22-.17.14-.24.32-.24.55 0 .21.07.38.21.51.14.13.33.2.56.2.23 0 .44-.05.64-.14.2-.09.45-.29.75-.59s.72-.78 1.25-1.43c.2.62.38 1.07.53 1.35.15.28.32.49.52.61.19.12.44.19.73.19.28 0 .57-.1.86-.3.38-.25.77-.69 1.17-1.31l-.25-.14c-.27.37-.48.6-.61.69-.09.06-.19.09-.31.09-.14 0-.28-.09-.42-.26-.23-.29-.54-1.09-.93-2.4.37-.58.66-.96.9-1.14z"];
  var pulse = ["M19 10h-2.38L14.9 6.55h-.01c-.17-.32-.5-.55-.89-.55-.43 0-.79.28-.93.66h-.01l-2.75 7.57L7.98 1.82h-.02A.978.978 0 007 1c-.44 0-.8.29-.94.69h-.01L3.28 10H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.44 0 .8-.29.94-.69h.01l1.78-5.34 2.29 12.21h.02c.08.46.47.82.96.82.43 0 .79-.28.93-.66h.01l3.21-8.82.96 1.92h.01c.16.33.49.56.88.56h3c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var rain = ["M4 10a3 3 0 111.065-5.806A5.001 5.001 0 0114.63 3.11 3.5 3.5 0 1115.5 10H4zm0 2a1 1 0 011 1v5a1 1 0 11-2 0v-5a1 1 0 011-1zm9 1a1 1 0 10-2 0v6a1 1 0 102 0v-6zm3-1a1 1 0 011 1v3a1 1 0 11-2 0v-3a1 1 0 011-1zm-7 1a1 1 0 10-2 0v3a1 1 0 102 0v-3z"];
  var random$1 = ["M14.47 5h2.12L15.3 6.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 3H14c-.31 0-.57.15-.76.37l-.01-.01-2.93 3.52 1.3 1.56L14.47 5zm2.24 7.29a1.003 1.003 0 00-1.42 1.42l1.3 1.29h-2.12L4.77 3.36l-.01.01A.998.998 0 004 3H1c-.55 0-1 .45-1 1s.45 1 1 1h2.53l9.7 11.64.01-.01c.19.22.45.37.76.37h2.59l-1.29 1.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3zM3.53 15H1c-.55 0-1 .45-1 1s.45 1 1 1h3c.31 0 .57-.15.76-.37l.01.01 2.93-3.52-1.3-1.56L3.53 15z"];
  var record = ["M10 3a7 7 0 100 14 7 7 0 100-14z"];
  var rectHeight = ["M4 18V2h12v16H4zM2 1a1 1 0 011-1h14a1 1 0 011 1v18a1 1 0 01-1 1H3a1 1 0 01-1-1V1zm4.293 11.705a.999.999 0 111.412-1.412L10 13.587l2.295-2.294a.999.999 0 011.412 1.412l-2.962 2.963a1 1 0 01-1.49 0l-2.962-2.963zm0-3.998a.999.999 0 010-1.412l2.962-2.963A1.008 1.008 0 0110 4a.996.996 0 01.745.332l2.962 2.963a.999.999 0 01-1.412 1.412L10 6.413 7.705 8.707a.999.999 0 01-1.412 0z"];
  var rectWidth = ["M18 16H2V4h16v12zM1 18a1 1 0 01-1-1V3a1 1 0 011-1h18a1 1 0 011 1v14a1 1 0 01-1 1H1zM7.295 6.293a.999.999 0 111.412 1.412L6.413 10l2.294 2.295a.999.999 0 11-1.412 1.412l-2.963-2.962A.992.992 0 014 10a.996.996 0 01.332-.745l2.963-2.962zm3.998 0a.999.999 0 011.412 0l2.963 2.962.04.038A.996.996 0 0116 10a.996.996 0 01-.332.745l-2.963 2.962a.999.999 0 01-1.412-1.412L13.587 10l-2.294-2.295a.999.999 0 010-1.412z"];
  var rectangle = ["M1 4h18c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1zm1 2v8h16V6H2z"];
  var redo = ["M19.71 5.29l-4-4a1.003 1.003 0 00-1.42 1.42L16.59 5H6c-3.31 0-6 2.69-6 6s2.69 6 6 6h5v-2H6c-2.21 0-4-1.79-4-4s1.79-4 4-4h10.59L14.3 9.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM15 14c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"];
  var refresh = ["M19 1c-.55 0-1 .45-1 1v2.06C16.18 1.61 13.29 0 10 0 4.48 0 0 4.48 0 10c0 .55.45 1 1 1s1-.45 1-1c0-4.42 3.58-8 8-8 2.52 0 4.76 1.18 6.22 3H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 8c-.55 0-1 .45-1 1 0 4.42-3.58 8-8 8-2.52 0-4.76-1.18-6.22-3H5c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1v-2.06C3.82 18.39 6.71 20 10 20c5.52 0 10-4.48 10-10 0-.55-.45-1-1-1z"];
  var regressionChart = ["M19 16H3.1L19.31 3.39l-.61-.79L2 15.59V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm-9-9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-5 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm10-2c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2-2 .9-2 2zm-5 4c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2-2 .9-2 2z"];
  var remove = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm5-9H5c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var removeColumn = ["M19 0H5c-.55 0-1 .45-1 1v4h2V2h5v16H6v-3H4v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18h-5V2h5v16zM6.29 13.71a1.003 1.003 0 001.42-1.42L5.41 10 7.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L4 8.59l-2.29-2.3A1.003 1.003 0 00.29 7.71L2.59 10 .3 12.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L4 11.41l2.29 2.3z"];
  var removeColumnLeft = ["M4 11h6c.55 0 1-.45 1-1s-.45-1-1-1H4c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-7 18H2V2h10v16zm6 0h-5V2h5v16z"];
  var removeColumnRight = ["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zM7 18H2V2h5v16zm11 0H8V2h10v16zm-8-7h6c.55 0 1-.45 1-1s-.45-1-1-1h-6c-.55 0-1 .45-1 1s.45 1 1 1z"];
  var removeRowBottom = ["M7 14h6c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zM19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V8h16v10zm0-11H2V2h16v5z"];
  var removeRowTop = ["M7 8h6c.55 0 1-.45 1-1s-.45-1-1-1H7c-.55 0-1 .45-1 1s.45 1 1 1zm12-8H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2v-5h16v5zm0-6H2V2h16v10z"];
  var repeat = ["M14 6c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1v2.05C16.18 1.6 13.29 0 10 0 4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10c0-.55-.45-1-1-1s-1 .45-1 1c0 4.42-3.58 8-8 8s-8-3.58-8-8 3.58-8 8-8c2.53 0 4.77 1.17 6.24 3H15c-.55 0-1 .45-1 1z"];
  var reset$1 = ["M6 6c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V2c0-.55.45-1 1-1s1 .45 1 1v2.05C3.82 1.6 6.71 0 10 0c5.52 0 10 4.48 10 10s-4.48 10-10 10S0 15.52 0 10c0-.55.45-1 1-1s1 .45 1 1c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8C7.47 2 5.23 3.17 3.76 5H5c.55 0 1 .45 1 1z"];
  var resolve = ["M8.7 4.7C7.9 4.2 7 4 6 4c-3.3 0-6 2.7-6 6s2.7 6 6 6c1 0 1.9-.2 2.7-.7C7.3 14 6.5 12.1 6.5 10s.9-4 2.2-5.3zM14 4c-1 0-1.9.2-2.7.7 1.4 1.4 2.2 3.2 2.2 5.3s-.9 4-2.2 5.3c.8.5 1.7.7 2.7.7 3.3 0 6-2.7 6-6s-2.7-6-6-6zm-4 1.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"];
  var rig = ["M7 4.2C7 5.75 8.34 7 10 7s3-1.46 3-2.8C13 1.45 10.94 0 10 0H6c0 2.74 3.76 1.96 1 4.2zm11.71 14.09L13 12.59V9.01c0-.55-.45-1-1-1H8c-.55 0-1 .45-1 1v3.58l-5.71 5.7a1.003 1.003 0 001.42 1.42L7 15.42V19c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3.58l4.29 4.29a1.003 1.003 0 001.42-1.42zM10.21 8c.01 0 .01.01 0 0 .01.01.01 0 0 0z"];
  var rightJoin = ["M8.7 4.7C7.4 6 6.5 7.9 6.5 10s.8 4 2.2 5.3c-.8.5-1.7.7-2.7.7-3.3 0-6-2.7-6-6s2.7-6 6-6c1 0 1.9.2 2.7.7zm-3.34 9.25c-.55-1.2-.86-2.54-.86-3.95s.31-2.75.86-3.95a4.001 4.001 0 000 7.9zM14 4c3.3 0 6 2.7 6 6s-2.7 6-6 6c-1 0-1.9-.2-2.7-.7 1.3-1.3 2.2-3.2 2.2-5.3s-.8-3.9-2.2-5.3C12.1 4.2 13 4 14 4zm-4 1.5C8.8 6.7 8 8.2 8 10s.8 3.3 2 4.4c1.2-1.1 2-2.7 2-4.5s-.8-3.3-2-4.4z"];
  var ring = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 15c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5z"];
  var rocket = ["M7 7.5c0-3 1.857-6.25 3-7.5 1.143 1.25 3 4.5 3 7.5s-.714 6.25-1 7.5H8c-.286-1.25-1-4.5-1-7.5zm6.84 2.5c-.139 1.62-.47 3.405-.84 5.01l4 .99-1-4-2.16-2zm-4.832 6C9 16.139 9 16.284 9 16.429 9 17.143 9 17.5 10 20c1-2.5 1-2.857 1-3.571 0-.145 0-.29-.008-.429H9.008zM7 15.011c-.37-1.605-.701-3.39-.84-5.011L4 12l-1 4 4-.989zM10 5a1 1 0 100 2 1 1 0 000-2z"];
  var rocketSlant = ["M10 5c2.121-2.121 6.308-2.924 8-3-.076 1.692-.879 5.879-3 8-1.192 1.192-2.543 1.823-3.748 2.384-.442.207-.865.404-1.252.616-.203.111-.597.302-.986.49-.444.215-.88.426-1.014.51l-2-2c.158-.252 1-2 1-2s1.37-3.37 3-5zm5 1a1 1 0 11-2 0 1 1 0 012 0zM3 17s0-2 2-4l2 2c-2 2-4 2-4 2zm11-2l-4 4-1.298-4.233c1.033-.56 1.881-.962 2.643-1.322 1.275-.604 2.307-1.092 3.554-2.015L14 15zM1 10l4-4 3.557-.899c-.923 1.247-1.412 2.28-2.015 3.554-.36.762-.762 1.61-1.322 2.643L1 10z"];
  var rotateDocument = ["M8.71 6.29A.997.997 0 008 6H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-8c0-.28-.11-.53-.29-.71l-4-4zM11 18H4V8h3v3c0 .55.45 1 1 1h3v6zm3-16h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C9.11 2.47 9 2.72 9 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H14c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4z"];
  var rotatePage = ["M14 2h-1.59l.29-.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-2 2C9.11 2.47 9 2.72 9 3c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42l-.3-.29H14c1.1 0 2 .9 2 2v3c0 .55.45 1 1 1s1-.45 1-1V6c0-2.21-1.79-4-4-4zm-2 5H3c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm-1 11H4V9h7v9z"];
  var route = ["M14.028 6.016c.146.275.31.57.485.872.304.524.628 1.047.952 1.545l.118.178-.208-.006-.577-.005c-2.093.004-2.841.303-2.841.895 0 .069.271.248 1.245.567l1.008.313c2.671.831 3.99 1.827 3.99 4.167 0 2.76-1.928 4.059-4.832 4.376-.782.085-1.52.098-2.452.066l-1.15-.046H6.221l.535-.811a67.46 67.46 0 001.122-1.787h2.04l.686.03c1.028.046 1.77.043 2.523-.039 1.832-.2 2.673-.767 2.673-1.789 0-.69-.483-1.09-1.992-1.585l-.83-.257c-1.192-.364-2.037-.7-2.59-1.165.399-1 .612-1.844.612-2.538a6.018 6.018 0 00-.382-2.098c.745-.573 1.884-.822 3.41-.883zM5 4.2c2.648 0 4.791 2.151 4.8 4.797C9.8 11.652 5 18.6 5 18.6l-.5-.744C3.273 15.993.2 11.121.2 8.997A4.802 4.802 0 015 4.2zm0 2.4a2.4 2.4 0 10.002 4.802A2.4 2.4 0 005 6.6zM17 .333a2.671 2.671 0 012.667 2.665C19.667 4.473 17 8.333 17 8.333l-.391-.587c-.741-1.137-2.276-3.629-2.276-4.748A2.668 2.668 0 0117 .333z"];
  var satellite = ["M9 18c.6 0 1 .4 1 1s-.4 1-1 1c-5 0-9-4-9-9 0-.6.4-1 1-1s1 .4 1 1c0 3.9 3.1 7 7 7zm0-4c.6 0 1 .4 1 1s-.4 1-1 1c-2.8 0-5-2.2-5-5 0-.6.4-1 1-1s1 .4 1 1c0 1.7 1.3 3 3 3zm5.7-3.7c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4l-1.4 1.4c-.4.4-1 .4-1.4 0l-3.6-3.6c-.4-.4-.4-1 0-1.4l1.4-1.4zM4.7.3c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4L8.3 6.7c-.4.4-1 .4-1.4 0L3.3 3.1c-.4-.4-.4-1 0-1.4L4.7.3zm11.1 1c.4-.4 1-.4 1.4 0l1.6 1.6c.4.4.4 1 0 1.4l-6.5 6.5c-.4.4-1 .4-1.4 0L9.3 9.2c-.4-.4-.4-1 0-1.4l6.5-6.5zM9 12c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1z"];
  var saved = ["M12 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V6l-6-6zm4 18H5V2h6v5h5v11zm-8.29-6.71a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29.32 0 .59-.16.77-.38l.01.01 4-5-.01-.01c.14-.18.23-.38.23-.62 0-.55-.45-1-1-1-.32 0-.59.16-.77.38l-.01-.01-3.3 4.13-2.21-2.21z"];
  var scatterPlot = ["M9 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm5 2c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-5c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm1 10H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM5 15c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2z"];
  var search = ["M19.56 17.44l-4.94-4.94A8.004 8.004 0 0016 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 102.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"];
  var searchAround = ["M9.9 6.9a3 3 0 100 6 3 3 0 100-6zM3 14c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM3 0C1.3 0 0 1.3 0 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM17 14c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM17 0c-1.7 0-3 1.3-3 3s1.3 3 3 3 3-1.3 3-3-1.3-3-3-3zm0 5c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zM10 10L5 5", "M5.379 4.671l5.02 5.02-.707.708-5.02-5.02zM10 10l5-5", "M14.621 4.671l.707.708-5.02 5.02-.707-.707z", "M10 10l5 5M10.379 9.671l5.02 5.02-.707.708-5.02-5.02z", "M10 10l-5 5M9.621 9.671l.707.708-5.02 5.02-.707-.707z"];
  var searchTemplate = ["M13 8H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0 3H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm0-6H5c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1zm6.56 12.44l-3.23-3.23A8.939 8.939 0 0018 9a9 9 0 10-9 9c1.94 0 3.74-.62 5.21-1.67l3.23 3.23a1.498 1.498 0 102.12-2.12zM9 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"];
  var searchText = ["M19.56 17.44l-3.23-3.23A8.939 8.939 0 0018 9a9 9 0 10-9 9c1.94 0 3.74-.62 5.21-1.67l3.23 3.23a1.498 1.498 0 102.12-2.12zM9 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7zm3.5-11h-7c-.28 0-.5.22-.5.5v2c0 .28.22.5.5.5s.5-.22.5-.5V7h2v6h-.5c-.28 0-.5.22-.5.5s.22.5.5.5h3c.28 0 .5-.22.5-.5s-.22-.5-.5-.5H10V7h2v.5c0 .28.22.5.5.5s.5-.22.5-.5v-2c0-.28-.22-.5-.5-.5z"];
  var segmentedControl = ["M19 5H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-1 8h-8V7h8v6z"];
  var select = ["M19.71 18.29l-4.25-4.25L20 12.91 9.93 9.33c.04-.1.07-.21.07-.33V3c0-.55-.45-1-1-1H4V1c0-.55-.45-1-1-1S2 .45 2 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h1v5c0 .55.45 1 1 1h6c.12 0 .23-.03.34-.07L12.91 20l1.14-4.54 4.25 4.25c.17.18.42.29.7.29a1.003 1.003 0 00.71-1.71zM8 8H4V4h4v4z"];
  var selection = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z", "M10 6a4 4 0 100 8 4 4 0 100-8z"];
  var sendMessage = ["M1.754.135L19.393 9.06c.57.288.775.943.458 1.462-.107.176-.266.32-.458.418l-17.64 8.925c-.57.288-1.288.1-1.604-.418C.05 19.287 0 19.183 0 19v-7l11-2L0 8V1.075C0 .481.529 0 1.18 0c.201 0 .399.047.574.135z"];
  var sendTo = ["M19 0h-5c-.6 0-1 .4-1 1s.4 1 1 1h2.6l-4.3 4.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3L18 3.4V6c0 .5.5 1 1 1s1-.5 1-1V1c0-.6-.5-1-1-1zm0 9c-1 0-1.9-.5-2.5-1.3l-1.4 1.4c-.5.6-1.3.9-2.1.9-1.7 0-3-1.3-3-3 0-.8.3-1.6.9-2.1l1.4-1.4C11.5 2.9 11 2 11 1c0-.3.1-.6.2-.9-.4-.1-.8-.1-1.2-.1C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10c0-.4 0-.8-.1-1.2-.3.1-.6.2-.9.2z"];
  var sendToGraph = ["M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm10 2c-.53 0-1.01.21-1.37.55L11.9 10.6c.06-.19.1-.39.1-.6 0-.21-.04-.41-.1-.6l4.72-2.95c.37.34.85.55 1.38.55 1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2c0 .21.04.41.1.6l-4.73 2.96c-.24-.23-.54-.4-.87-.48V3.93c.86-.22 1.5-1 1.5-1.93 0-1.1-.9-2-2-2S8 .9 8 2c0 .93.64 1.71 1.5 1.93v4.14c-.33.09-.63.26-.87.48L7.6 7.91 5.42 6.55 3.9 5.6c.06-.19.1-.39.1-.6 0-1.1-.9-2-2-2s-2 .9-2 2 .9 2 2 2c.53 0 1.01-.21 1.37-.55L9 9.96V10h.06L12 11.84l.4.25 1.51.94 2.19 1.37c-.06.19-.1.39-.1.6 0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zm-7-2.96l-.06-.04H11v.04z"];
  var sendToMap = ["M8 11H3c-.55 0-1 .45-1 1s.45 1 1 1h2.59L.3 18.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L7 14.41V17c0 .55.45 1 1 1s1-.45 1-1v-5c0-.55-.45-1-1-1zm11.54-6.82l.01-.02-6-4-.01.02C13.39.08 13.21 0 13 0s-.39.08-.54.18l-.01-.02L7 3.8 1.55.17l-.01.01A.969.969 0 001 0C.45 0 0 .45 0 1v9c0-.55.45-1 1-1h1V2.87l4 2.67V9h2V5.54l4-2.67v11.6l-1 .67v2.4l2-1.33 5.45 3.63.01-.02c.15.1.33.18.54.18.55 0 1-.45 1-1V5c0-.35-.19-.64-.46-.82zM18 17.13l-4-2.67V2.87l4 2.67v11.59z"];
  var seriesAdd = ["M13.29 9.29c.3.62.8 1.12 1.42 1.42l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 2.29-2.3zM12 5c0-.5.4-1 1-1h2V2c0-.6.4-1 1-1 .5 0 1 .4 1 1v2h2c.5 0 1 .4 1 1s-.5 1-1 1h-2v2c0 .6-.5 1-1 1-.6 0-1-.4-1-1V6h-2c-.6 0-1-.4-1-1z"];
  var seriesConfiguration = ["M11.91 10.67c.52.45 1.13.8 1.8 1.03l-2.01 2.01c-.18.18-.43.29-.71.29-.28 0-.53-.11-.71-.3L7 10.41l-5 5V17h16.99c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8c.28 0 .53.11.71.29l3.29 3.3.91-.92zM18.5 4.6h1.04c.25 0 .45.2.46.44v.9c0 .25-.2.45-.45.45h-1.04c-.07.22-.16.42-.27.62l.73.73c.17.17.17.44 0 .61l-.61.61c-.17.17-.44.17-.61 0l-.73-.73c-.2.11-.4.2-.62.26v1.05c0 .25-.2.45-.45.45h-.9c-.25 0-.45-.2-.45-.45V8.51c-.21-.06-.4-.15-.58-.25l-.76.77c-.17.17-.46.17-.64 0l-.64-.64a.465.465 0 010-.64l.76-.77c-.1-.19-.19-.38-.25-.59h-1.04c-.25 0-.45-.2-.45-.45v-.9c0-.25.2-.45.45-.45h1.04c.07-.22.16-.42.27-.61l-.73-.73a.429.429 0 010-.61l.61-.61c.17-.17.44-.17.61 0l.73.73c.2-.11.4-.2.62-.26V1.45a.44.44 0 01.44-.45h.9c.25 0 .45.2.45.45V2.5c.21.06.4.15.58.25l.76-.77c.17-.17.46-.17.64 0l.64.64c.17.17.17.46 0 .64l-.76.77c.1.17.19.36.25.57zm-4.69.9c0 .93.75 1.69 1.69 1.69.93 0 1.69-.75 1.69-1.69s-.75-1.69-1.69-1.69-1.69.76-1.69 1.69z"];
  var seriesDerived = ["M18.82 6.58c-.03.05-.07.09-.11.13 0 0 0-.01-.01-.01l-2 2c-.2.2-.4.3-.7.3-.6 0-1-.4-1-1 0-.3.1-.5.3-.7L16.6 6H11c-.6 0-1-.4-1-1s.4-1 1-1h5.6l-1.3-1.3c-.2-.2-.3-.4-.3-.7 0-.6.4-1 1-1 .3 0 .5.1.7.3l3 3c.2.2.3.4.3.7s-.1.5-.3.7l-.88.88zm-5.53 2.71c.3.62.8 1.12 1.42 1.42l-3 3c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 2.29-2.3z"];
  var seriesFiltered = ["M12.14 10.45c.21.67.65 1.23 1.22 1.61l-1.65 1.65c-.18.18-.43.29-.71.29s-.53-.11-.71-.3L7 10.41l-5 5V17h17c.55 0 1 .45 1 1s-.45 1-1 1H1a.998.998 0 01-1-1V4c0-.55.45-1 1-1s1 .45 1 1v8.59l4.29-4.3C6.47 8.11 6.72 8 7 8s.53.11.71.29l3.29 3.3 1.14-1.14zM19.35 1a.642.642 0 01.46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V5.13L11.19 2.1a.642.642 0 01.45-1.1h7.71z"];
  var seriesSearch = ["M11.28 11.31l-.28.28-3.29-3.3C7.53 8.11 7.28 8 7 8s-.53.11-.71.29L2 12.59V4c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1H2v-1.59l5-5 3.29 3.29c.18.19.43.3.71.3s.53-.11.71-.29l2.09-2.09c-.17.02-.34.02-.51.02-.7 0-1.38-.12-2.01-.33zm-.93-6c0-1.62 1.31-2.93 2.93-2.93s2.93 1.31 2.93 2.93-1.31 2.93-2.93 2.93-2.93-1.31-2.93-2.93zm6.47 2.43c.11-.17.21-.33.29-.51.01-.03.03-.06.04-.09.08-.18.16-.35.21-.54.06-.2.1-.38.14-.58.01-.05.01-.09.02-.14.03-.2.05-.39.05-.6 0-2.37-1.93-4.3-4.3-4.3-2.37.01-4.3 1.93-4.3 4.31s1.93 4.3 4.3 4.3c.21 0 .4-.02.6-.05.04 0 .09-.01.14-.02.2-.03.38-.08.57-.14.2-.06.37-.14.55-.21.03-.01.06-.03.09-.04.18-.09.34-.19.51-.29l2.87 2.87c.14.14.33.22.56.22.43 0 .78-.35.78-.78a.938.938 0 00-.23-.56l-2.89-2.85z"];
  var settings = ["M4 1c0-.55-.45-1-1-1S2 .45 2 1v5h2V1zM2 19c0 .55.45 1 1 1s1-.45 1-1v-6H2v6zm9-18c0-.55-.45-1-1-1S9 .45 9 1v8h2V1zm7 0c0-.55-.45-1-1-1s-1 .45-1 1v3h2V1zM9 19c0 .55.45 1 1 1s1-.45 1-1v-3H9v3zm9-14h-2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-2 14c0 .55.45 1 1 1s1-.45 1-1v-8h-2v8zM4 7H2c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm7 3H9c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1z"];
  var shapes = ["M7.88 11.12a.958.958 0 011.277.33l3.719 6.207c.081.136.124.29.124.447 0 .495-.419.896-.936.896H4.936a.969.969 0 01-.436-.103.878.878 0 01-.392-1.21l3.409-6.208a.915.915 0 01.362-.36zM15 5a4 4 0 110 8 4 4 0 010-8zM8 1a1 1 0 011 1v6a1 1 0 01-1 1H2a1 1 0 01-1-1V2a1 1 0 011-1h6z"];
  var share = ["M15 18H2V5h8.76l2-2H1c-.55 0-1 .45-1 1v15c0 .55.45 1 1 1h15c.55 0 1-.45 1-1V7.24l-2 2V18zm4-18h-7c-.55 0-1 .45-1 1s.45 1 1 1h4.59l-7.3 7.29a1.003 1.003 0 001.42 1.42L18 3.41V8c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var sharedFilter = ["M13.917 17.209c1.01.454 2.543.928 2.873 1.643.31.722.186 1.148.186 1.148H6.026s-.13-.426.186-1.148 1.842-1.203 2.86-1.65c1.017-.447.914-.722.948-1.093 0-.048.007-.097.007-.145a3.067 3.067 0 01-.839-1.237l-.007-.007c0-.007-.006-.014-.006-.02a1.757 1.757 0 01-.11-.337c-.234-.042-.372-.296-.426-.537a1.045 1.045 0 01-.138-.598c.034-.35.179-.509.337-.57v-.056c0-.44.034-1.065.117-1.478a2.508 2.508 0 01.962-1.623c.426-.33 1.038-.501 1.58-.501.544 0 1.155.172 1.588.502a2.496 2.496 0 01.963 1.622c.075.413.117 1.045.117 1.478v.062c.15.062.288.22.323.564.02.268-.083.502-.138.598-.048.234-.185.488-.42.537a2.635 2.635 0 01-.116.364 3.094 3.094 0 01-.818 1.224c0 .055 0 .11.007.158.034.378-.103.653.914 1.1z", "M14.976 16.57c-.24-.099-.455-.186-.65-.273l-.007-.004a3.801 3.801 0 01-.194-.091c.224-.288.41-.609.554-.946l.001-.002.013-.033c.018-.043.036-.087.052-.13l.011-.027.016-.04c.105-.092.19-.19.256-.284.129-.184.213-.38.265-.563.105-.226.225-.592.192-1.026l-.001-.011-.002-.011a1.854 1.854 0 00-.325-.91 9.924 9.924 0 00-.12-1.246 3.09 3.09 0 00-.106-.475l-.001-.006a3.543 3.543 0 00-.763-1.353c.27-.092.56-.139.83-.139.495 0 1.05.156 1.444.456a2.269 2.269 0 01.875 1.475c.069.375.106.95.106 1.344v.056c.138.056.263.2.294.513.019.244-.075.456-.125.543-.044.213-.169.444-.381.488-.025.1-.056.206-.094.3a2.815 2.815 0 01-.756 1.144c0 .05 0 .1.006.144.004.043.006.086.007.127.01.283.018.518.824.872.192.087.404.173.623.263.83.34 1.752.717 1.99 1.231.28.657.168 1.044.168 1.044h-2.081a3.864 3.864 0 00-.188-.542l-.005-.013-.006-.012c-.183-.397-.491-.681-.76-.88a5.614 5.614 0 00-.896-.522 17.36 17.36 0 00-.916-.4l-.15-.061zM14 1c.55 0 1 .45 1 1 0 .28-.11.53-.29.7L10 7.41v.897a3.182 3.182 0 00-.69.4 3.508 3.508 0 00-1.343 2.259c-.07.37-.107.836-.122 1.237a1.836 1.836 0 00-.339.926c-.046.458.09.84.195 1.06.053.178.138.376.27.56.055.08.125.162.21.242v.143l.053.052L6.71 16.71A1.003 1.003 0 015 16V7.41L.29 2.71A1.003 1.003 0 011 1h13z", "M9.059 14.361c-.23-.044-.366-.296-.42-.535a1.045 1.045 0 01-.138-.598c.034-.35.179-.509.337-.57v-.056c0-.44.034-1.065.117-1.478A2.508 2.508 0 0110 9.441V13c0 .28-.11.53-.29.71l-.651.651z"];
  var shield = ["M10 20c6-3.81 9-9.048 9-15.714-2 0-5-1.429-9-4.286-4 2.857-7 4.286-9 4.286C1 10.952 4 16.19 10 20zm0-17.348c2.577 1.734 4.776 2.88 6.667 3.419-.44 4.627-2.636 8.353-6.667 11.297V2.652z"];
  var ship = ["M6.84.804L6.5 2.5h-3a1 1 0 00-1 1v4.893l-1.58.451a.99.99 0 00-.691 1.192c.46 1.82 1.163 4.356 1.701 5.571-.218.012-.445.018-.68.018a.625.625 0 100 1.25c2.583 0 4.268-.68 5.202-1.146.687.466 1.88 1.146 3.548 1.146 1.65 0 2.837-.666 3.528-1.132l.005.003c.244.131.6.3 1.07.468.938.335 2.321.661 4.147.661a.625.625 0 100-1.25c-.323 0-.63-.011-.922-.031a.996.996 0 00.184-.334l1.67-5.168a1 1 0 00-.677-1.27l-1.505-.43V3.5a1 1 0 00-1-1h-3L13.16.804A1 1 0 0012.18 0H7.82a1 1 0 00-.98.804zM5 7.679l3.75-1.072V5H5v2.679zm6.25-1.072L15 7.68V5h-3.75v1.607zM6.205 16.95a.625.625 0 01.658.042c.569.407 1.597 1.134 3.137 1.134s2.568-.727 3.137-1.134a.625.625 0 01.724-.001l.007.005.045.029c.044.027.114.069.21.12.194.104.493.247.9.392.811.29 2.053.589 3.727.589a.625.625 0 110 1.25c-1.826 0-3.21-.326-4.148-.661a7.894 7.894 0 01-1.069-.468l-.005-.003c-.691.466-1.878 1.132-3.528 1.132-1.667 0-2.861-.68-3.548-1.146-.934.467-2.619 1.146-5.202 1.146a.625.625 0 110-1.25c2.66 0 4.23-.787 4.955-1.176z"];
  var shop = ["M17.94 3.63c-.01-.02-.01-.03-.02-.04l-.03-.09h-.01c-.18-.3-.49-.5-.86-.5h-14c-.42 0-.77.25-.92.61L0 8.5h.02a2.5 2.5 0 005 0 2.5 2.5 0 005 0 2.5 2.5 0 005 0 2.5 2.5 0 005 0l-2.08-4.87zM3.02 2h14c.55 0 1-.45 1-1s-.45-1-1-1h-14c-.55 0-1 .45-1 1s.44 1 1 1zm13 14h-12v-4h-2v7c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-7h-2v4z"];
  var shoppingCart = ["M18 14H8.72l-.67-2H17c.44 0 .8-.29.94-.69h.01l2-6h-.01c.03-.1.06-.2.06-.31 0-.55-.45-1-1-1H5.39l-.44-1.32h-.01C4.8 2.29 4.44 2 4 2H1c-.55 0-1 .45-1 1s.45 1 1 1h2.28l3.33 10H5c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2h9c0 1.1.9 2 2 2s2-.9 2-2-.9-2-2-2zM6.05 6h11.56l-1.33 4H7.39L6.05 6z"];
  var signalSearch = ["M7.15 10.33c.888.8 1.999 1.36 3.228 1.574l2.326 6.98a.846.846 0 01-.535 1.07.844.844 0 01-1.072-.535l-1.225-3.671H7.125L5.9 19.419a.85.85 0 01-1.072.536.85.85 0 01-.536-1.071l2.857-8.555zm1.353 1.305l-.808 2.413h1.607l-.8-2.413zM5 5.5c0 .76.13 1.49.37 2.17-.496 1.056-.313 2.356.704 3.29.385.353.404.94.038 1.311a.982.982 0 01-1.356.038c-2.183-2.01-2-5.125.01-6.94a.95.95 0 01.24-.156A6.421 6.421 0 005 5.5z", "M3.874 13.185c-1.346-.918-2.187-2.67-2.187-4.34 0-1.752.757-3.254 2.187-4.339.42-.25.42-.834.168-1.168-.252-.418-.84-.418-1.177-.167C1.014 4.59-.08 6.509.005 8.846c.084 2.253 1.177 4.423 2.86 5.675.168.083.336.166.504.166.253 0 .505-.083.673-.333.337-.418.253-.918-.168-1.169zM12.246 12.309a.98.98 0 01-1.354-.037.917.917 0 01-.206-.324 6.54 6.54 0 001.959-.049 5.125 5.125 0 01-.399.41zM14.631 11.476l1.228 1.229a6.6 6.6 0 01-1.723 1.816c-.169.083-.337.166-.505.166-.253 0-.505-.083-.673-.333-.337-.418-.253-.918.168-1.169.62-.422 1.133-1.022 1.505-1.709z", "M11.5 0C14.54 0 17 2.46 17 5.5c0 .26-.02.51-.06.75l-.03.17c-.04.25-.1.49-.17.73v.01c-.08.24-.17.47-.28.69-.01.04-.03.07-.05.11-.11.23-.24.44-.38.65l3.68 3.68A1.003 1.003 0 0119 14c-.28 0-.53-.11-.7-.29l-3.68-3.68c-.21.14-.42.27-.65.38-.04.01-.07.03-.11.05-.22.11-.45.2-.69.28h-.01c-.24.07-.48.13-.73.17l-.17.03c-.25.04-.5.06-.76.06C8.46 11 6 8.54 6 5.5S8.46 0 11.5 0zm0 1.5c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"];
  var simCard = ["M16.71 5.29l-5-5A.997.997 0 0011 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V6c0-.28-.11-.53-.29-.71zM9 7h2v3H9V7zM6 7h2v3H6V7zm2 11H6v-3h2v3zm3 0H9v-3h2v3zm3 0h-2v-3h2v3zm0-4H6v-3h8v3zm0-4h-2V7h2v3z"];
  var slash = ["M12 2c-.46 0-.85.32-.97.74L7.04 16.7c-.02.1-.04.2-.04.3 0 .55.45 1 1 1 .46 0 .85-.32.97-.74L12.96 3.3c.02-.1.04-.2.04-.3 0-.55-.45-1-1-1z"];
  var smallCross = ["M11.41 10l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z"];
  var smallMinus = ["M14 9H6c-.55 0-1 .45-1 1s.45 1 1 1h8c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var smallPlus = ["M14 9h-3V6c0-.55-.45-1-1-1s-1 .45-1 1v3H6c-.55 0-1 .45-1 1s.45 1 1 1h3v3c0 .55.45 1 1 1s1-.45 1-1v-3h3c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var smallSquare = ["M5 5v10h10V5H5zM4 3a1 1 0 00-1 1v12a1 1 0 001 1h12a1 1 0 001-1V4a1 1 0 00-1-1H4z"];
  var smallTick = ["M15 5c-.28 0-.53.11-.71.29L8 11.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l7-7A1.003 1.003 0 0015 5z"];
  var snowflake = ["M11 11.776v2.81l2.31 2.242a.987.987 0 010 1.415c-.399.39-1.044.39-1.442 0L11 17.414V19a.99.99 0 01-.996 1A.996.996 0 019 19v-1.636l-.912.879c-.398.39-1.043.39-1.441 0a.987.987 0 010-1.415L9 14.536v-2.79l-2.548 1.435-.837 3.063c-.146.534-.705.85-1.248.707a.998.998 0 01-.721-1.224l.309-1.132-1.4.793a1.03 1.03 0 01-1.393-.366.99.99 0 01.373-1.366l1.445-.818-1.224-.322a.998.998 0 01-.72-1.225c.145-.533.704-.85 1.248-.707l3.193.84 2.462-1.395-2.532-1.434-3.123.82a1.022 1.022 0 01-1.249-.706.998.998 0 01.721-1.225L2.91 7.18l-1.4-.793a.99.99 0 01-.373-1.366 1.03 1.03 0 011.392-.366l1.445.818-.328-1.2a.998.998 0 01.72-1.225 1.022 1.022 0 011.25.707l.855 3.132L9 8.311V5.414L6.647 3.121a.987.987 0 010-1.414 1.033 1.033 0 011.441 0L9 2.586V1c0-.552.44-1 1.004-1A.99.99 0 0111 1l-.007 1.536.875-.829a1.033 1.033 0 011.441 0 .987.987 0 010 1.414L11 5.364v2.918l2.53-1.42.855-3.131c.146-.534.705-.85 1.249-.707a.998.998 0 01.72 1.224l-.327 1.2 1.4-.792a1.03 1.03 0 011.392.366.99.99 0 01-.373 1.366l-1.355.768 1.153.303a.998.998 0 01.721 1.225c-.146.533-.705.85-1.249.707l-3.123-.821-2.576 1.459 2.506 1.42 3.193-.84a1.022 1.022 0 011.249.707.998.998 0 01-.72 1.225l-1.224.322 1.4.793a.99.99 0 01.373 1.366 1.03 1.03 0 01-1.393.366l-1.356-.768.31 1.132a.998.998 0 01-.721 1.224 1.022 1.022 0 01-1.249-.707l-.837-3.063L11 11.776z"];
  var socialMedia = ["M11.5 5c.8 0 1.6-.4 2-1 2 1.2 3.3 3.3 3.5 5.7 0 .5.5.9 1 .9.6 0 1-.5 1-1v-.1c-.2-3.3-2.2-6.2-5.1-7.6C13.7.8 12.7 0 11.5 0 10.1 0 9 1.1 9 2.5S10.1 5 11.5 5zm5 7c-1.4 0-2.5 1.1-2.5 2.5 0 .4.1.7.2 1.1-1.1.9-2.6 1.4-4.2 1.4-1.9 0-3.6-.8-4.9-2-.2-.2-.5-.4-.8-.4-.5 0-1 .5-1 1 0 .3.1.5.3.7C5.3 18 7.5 19 10 19c2.2 0 4.2-.8 5.8-2.1.2.1.5.1.7.1 1.4 0 2.5-1.1 2.5-2.5S17.9 12 16.5 12zM5 10.5c0-1.1-.7-2.1-1.7-2.4.5-1.9 1.9-3.5 3.6-4.4.3-.2.6-.5.6-.9 0-.5-.4-1-1-1-.2 0-.4.1-.6.2-2.4 1.2-4.2 3.6-4.7 6.4C.5 8.9 0 9.6 0 10.5 0 11.9 1.1 13 2.5 13S5 11.9 5 10.5z"];
  var sort = ["M19 16h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm0-5h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM7 15c-.28 0-.53.11-.71.29L5 16.59V11c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 15.3A.965.965 0 001 15a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 007 15zM19 1h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 5h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V7c0-.55-.45-1-1-1z"];
  var sortAlphabetical = ["M8 15c-.28 0-.53.11-.71.29L6 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L2.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 008 15zm8.89-.79v-1.22H11.3v1.3h3.51L11 18.78V20h5.99v-1.3h-3.91l3.81-4.49zM14.97 0h-1.95L9.01 11.01h1.89l.98-2.92h4.17l.98 2.92h1.96L14.97 0zm-2.59 6.63l1.58-4.74H14l1.57 4.74h-3.19z"];
  var sortAlphabeticalDesc = ["M8.01 15c-.28 0-.53.11-.71.29L6 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L2.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l3 3a1.014 1.014 0 001.42 0l3-3c.18-.18.29-.43.29-.71.01-.55-.44-1-.99-1zm4.44-5.65l6.4-7.88V0H10.5v1.67h5.91L10 9.44v1.57h9V9.35h-6.55zm1.27 3.64L11 20h1.59l.56-1.56h2.68l.55 1.56h1.64l-2.68-7.01h-1.62zm-.16 4.3l.93-2.57h.02l.9 2.57h-1.85z"];
  var sortAsc = ["M10 8h5c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1h-5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0 5h7c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm0-10h3c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1h-3c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm9 12h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zM7 14c-.28 0-.53.11-.71.29L5 15.59V10c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 14.3A.965.965 0 001 14a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 007 14z"];
  var sortDesc = ["M13 15h-3c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm-6-1c-.28 0-.53.11-.71.29L5 15.59V10c0-.55-.45-1-1-1s-1 .45-1 1v5.59L1.71 14.3A.965.965 0 001 14a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 007 14zM19 0h-9c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h9c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-4 10h-5c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h5c.55 0 1-.45 1-1v-1c0-.55-.45-1-1-1zm2-5h-7c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"];
  var sortNumerical = ["M9 14.99c-.28 0-.53.11-.71.29L7 16.58v-5.59c0-.55-.45-1-1-1s-1 .45-1 1v5.59l-1.29-1.29a.965.965 0 00-.71-.3 1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-3c.18-.18.29-.43.29-.71a.99.99 0 00-1-1zm8.88.23c-.08-.42-.22-.79-.42-1.12-.2-.33-.47-.6-.8-.8-.33-.2-.76-.3-1.28-.3a2.333 2.333 0 00-1.72.71c-.21.22-.37.48-.49.78-.11.3-.17.62-.17.97 0 .27.04.54.13.8.08.26.22.5.4.7.19.21.43.38.71.5a2.142 2.142 0 001.72.02c.25-.12.47-.31.66-.58l.02.02c-.01.19-.04.4-.08.63-.04.24-.11.46-.21.67-.1.21-.23.38-.39.53a.92.92 0 01-.62.22c-.24 0-.44-.08-.6-.25-.16-.17-.27-.36-.31-.59h-1.31c.04.29.12.56.24.79.12.23.28.43.48.59.19.16.42.28.67.36.25.08.52.12.82.12.49 0 .9-.1 1.23-.31.34-.21.61-.48.82-.82.21-.34.37-.71.47-1.13.1-.42.15-.83.15-1.25 0-.43-.04-.85-.12-1.26zm-1.42.63c-.05.15-.11.28-.2.4-.09.12-.2.21-.34.27s-.3.1-.49.1c-.17 0-.33-.04-.46-.11s-.24-.17-.33-.29c-.08-.12-.15-.25-.19-.4-.04-.15-.06-.31-.06-.47 0-.15.02-.3.07-.45.05-.15.11-.28.2-.39.09-.12.2-.21.33-.28.13-.07.27-.11.44-.11.17 0 .33.04.47.11.14.07.25.17.34.28a1.387 1.387 0 01.28.86c.01.17-.02.33-.06.48zM15.32 11H17V0h-1.25c-.05.34-.17.62-.34.85-.17.23-.39.42-.63.57-.25.15-.52.25-.83.31-.3.06-.62.09-.94.09v1.41h2.31V11z"];
  var sortNumericalDesc = ["M9 15c-.28 0-.53.11-.71.29L7 16.59v-5.58c0-.55-.45-1-1-1s-1 .45-1 1v5.58L3.71 15.3c-.18-.18-.43-.3-.71-.3a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l3-3A1.003 1.003 0 009 15zm6.7-1.33a1.5 1.5 0 01-.44.43c-.17.11-.37.19-.58.23-.22.04-.44.06-.67.05v1.07h1.66V20H17v-6.99h-1.06c-.04.26-.12.48-.24.66zm3.15-10.3c-.11-.68-.29-1.26-.55-1.76-.26-.5-.62-.89-1.08-1.18C16.75.14 16.17 0 15.46 0c-.54 0-1.03.09-1.46.27-.43.18-.79.44-1.09.76-.3.33-.52.71-.67 1.15-.16.44-.24.92-.24 1.43 0 .54.08 1.04.23 1.47.15.44.37.81.65 1.12.28.31.61.55 1 .72.39.17.82.26 1.3.26.46 0 .88-.11 1.26-.33.38-.22.68-.53.9-.94l.03.03c-.03.35-.07.74-.12 1.16-.05.42-.15.81-.29 1.18-.14.37-.35.68-.61.92-.26.25-.62.37-1.06.37-.43 0-.77-.13-1.03-.4-.25-.27-.4-.62-.44-1.05h-1.64c.02.43.11.83.29 1.18.17.35.39.66.67.91a3.027 3.027 0 002.07.8c.71 0 1.3-.17 1.79-.5.48-.33.87-.76 1.17-1.29.3-.53.51-1.12.64-1.76.13-.64.19-1.28.19-1.92.01-.77-.05-1.49-.15-2.17zM17.1 4.44c-.08.27-.19.5-.34.71-.15.21-.34.37-.57.49-.23.12-.5.18-.8.18-.3 0-.56-.06-.78-.19-.22-.13-.4-.29-.55-.49-.14-.2-.25-.44-.32-.7-.07-.27-.11-.55-.11-.84 0-.28.04-.55.11-.82.07-.26.18-.49.32-.7.14-.2.33-.36.55-.48.22-.12.48-.17.78-.17.31 0 .57.06.8.18.23.12.42.28.57.48.15.2.26.43.34.69.08.26.11.53.11.82 0 .29-.04.57-.11.84z"];
  var splitColumns = ["M15 13a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-3-3a1.003 1.003 0 00-1.42 1.42L16.59 9H11V2h5v2c.77 0 1.47.3 2 .78V1c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v3.78C2.53 4.3 3.23 4 4 4V2h5v7H3.41L4.7 7.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-3 3C.11 9.47 0 9.72 0 10c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L3.41 11H9v7H4v-2c-.77 0-1.47-.3-2-.78V19c0 .55.45 1 1 1h14c.55 0 1-.45 1-1v-3.78c-.53.48-1.23.78-2 .78v2h-5v-7h5.59l-1.29 1.29c-.19.18-.3.43-.3.71z"];
  var square = ["M19 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H2V2h16v16z"];
  var stackedChart = ["M12 2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v4h4V2zm3 14h2c.55 0 1-.45 1-1v-5h-4v5c0 .55.45 1 1 1zm3-10c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v3h4V6zm-6 1H8v5h4V7zm-9 9h2c.55 0 1-.45 1-1v-3H2v3c0 .55.45 1 1 1zm16 1H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM6 9c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v2h4V9zm3 7h2c.55 0 1-.45 1-1v-2H8v2c0 .55.45 1 1 1z"];
  var stadiumGeometry = ["M15 7H5a3 3 0 000 6h10a3 3 0 100-6zM5 5a5 5 0 000 10h10a5 5 0 000-10H5z"];
  var star = ["M10 0l3.1 6.6 6.9 1-5 5.1 1.2 7.3-6.2-3.4L3.8 20 5 12.7 0 7.6l6.9-1z"];
  var starEmpty = ["M20 7.6l-6.9-1.1L10 0 6.9 6.6 0 7.6l5 5.1L3.8 20l6.2-3.4 6.2 3.4-1.2-7.2 5-5.2zM10 15l-4.5 2.4.9-5.2-3.6-3.6 5-.8L10 3.1l2.2 4.7 5 .8-3.6 3.7.9 5.2L10 15z"];
  var stepBackward = ["M15 3c-.23 0-.42.09-.59.21l-.01-.01L8 8V4c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-4l6.4 4.8.01-.01c.17.12.36.21.59.21.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var stepChart = ["M19 16H2v-3h4c.55 0 1-.45 1-1V8h3v2c0 .55.45 1 1 1h5c.55 0 1-.45 1-1V6h2c.55 0 1-.45 1-1s-.45-1-1-1h-3c-.55 0-1 .45-1 1v4h-3V7c0-.55-.45-1-1-1H6c-.55 0-1 .45-1 1v4H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var stepForward = ["M15 3h-2c-.55 0-1 .45-1 1v4L5.6 3.2l-.01.01C5.42 3.09 5.23 3 5 3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1 .23 0 .42-.09.59-.21l.01.01L12 12v4c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var stop = ["M16 3H4c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var stopwatch = ["M10 6a6 6 0 106 6h-6V6zm-.998-1.938A1.015 1.015 0 019 4V2H7a1 1 0 110-2h6a1 1 0 010 2h-2v2c0 .02 0 .041-.002.062A8.001 8.001 0 0110 20a8 8 0 01-.998-15.938z"];
  var strikethrough = ["M18 9h-4.46a4.7 4.7 0 00-.4-.14c-.19-.05-.51-.14-.96-.25-.45-.11-.9-.23-1.37-.35-.47-.12-.89-.23-1.27-.33s-.6-.16-.65-.17c-.53-.15-.95-.37-1.27-.66-.32-.28-.49-.68-.49-1.19 0-.36.09-.66.26-.9s.39-.43.65-.57c.26-.14.55-.24.87-.3s.63-.09.93-.09c.89 0 1.63.19 2.21.57.45.3.75.76.89 1.38h2.63c-.06-.52-.2-.98-.42-1.4-.3-.57-.71-1.05-1.23-1.43a5.33 5.33 0 00-1.79-.87c-.7-.2-1.42-.3-2.19-.3-.66 0-1.31.08-1.96.25s-1.22.43-1.73.77-.92.79-1.23 1.32c-.31.52-.46 1.15-.46 1.87 0 .37.05.74.15 1.1.1.36.28.7.53 1.02.18.24.41.47.69.67H2c-.55 0-1 .45-1 1s.45 1 1 1h10.14c.02.01.05.02.07.02.3.11.58.29.84.55.25.26.38.67.38 1.21 0 .27-.06.53-.17.79-.11.26-.29.49-.54.69-.25.2-.57.36-.97.49s-.88.19-1.44.19c-.52 0-1.01-.06-1.45-.17-.45-.11-.84-.29-1.19-.54s-.61-.56-.8-.95c-.05-.08-.09-.18-.12-.28H4.11c.09.43.22.82.4 1.18.33.65.77 1.18 1.32 1.59.55.41 1.2.72 1.94.92.74.2 1.53.3 2.37.3.73 0 1.44-.08 2.14-.25.7-.17 1.33-.43 1.88-.79.55-.36.99-.83 1.33-1.39.34-.56.51-1.25.51-2.05 0-.37-.06-.75-.18-1.12a3.12 3.12 0 00-.15-.39H18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var style = ["M18 18H2V2h12.3l2-2H1C.4 0 0 .4 0 1v18c0 .6.4 1 1 1h18c.6 0 1-.4 1-1V7.7l-2 2V18zm1.2-18l-7.6 7.6 2.8 2.8L20 4.8V0h-.8zM4 15.9c3.1.2 5.9.2 8.2-2 1.1-1.1 1.1-3 0-4.1-.6-.5-1.3-.8-2-.8s-1.4.3-1.9.8C7.2 11 6.6 14.3 4 15.9z"];
  var swapHorizontal = ["M16.02 10c-.01 0-.01 0 0 0H16h.02zM2 6h13.58l-2.29 2.29a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L15.58 4H2c-.55 0-1 .45-1 1s.45 1 1 1zm2 4h-.02H4zm14 4H4.42l2.29-2.29a1 1 0 00.3-.71 1.003 1.003 0 00-1.71-.71l-4 4c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.42 16H18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var swapVertical = ["M9.71 5.3l-4-4A.997.997 0 005 1.01c-.28 0-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L4 4.42V18c0 .55.45 1 1 1s1-.45 1-1V4.42l2.29 2.29a1 1 0 00.71.3 1.003 1.003 0 00.71-1.71zM10 3.98c0 .01 0 .01 0 0V4v-.02zm0 12.04c0-.01 0-.01 0 0V16v.02zm9-3.03c-.28 0-.53.11-.71.29L16 15.58V2c0-.55-.45-1-1-1s-1 .45-1 1v13.58l-2.29-2.29a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29.28 0 .53-.11.71-.29l4-4c.18-.18.29-.43.29-.71 0-.56-.45-1.01-1-1.01z"];
  var _switch = ["M12.293 2.293l1.414 1.414-7.127 7.129a3.5 3.5 0 11-1.415-1.415l7.128-7.128zM16.5 9a3.5 3.5 0 110 7 3.5 3.5 0 010-7zm-13 2a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm13 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"];
  var symbolCircle = ["M10 4.01a6 6 0 100 12 6 6 0 100-12z"];
  var symbolCross = ["M15 8.01h-3v-3c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v3H5c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h3v3c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-3h3c.55 0 1-.45 1-1v-2c0-.56-.45-1-1-1z"];
  var symbolDiamond = ["M15 10.01c0-.21-.08-.39-.18-.54l.02-.01-4-6-.02.01c-.18-.28-.47-.46-.82-.46s-.64.18-.82.45l-.01-.01-4 6 .02.01c-.11.16-.19.34-.19.55s.08.39.18.54l-.02.01 4 6 .02-.01c.18.27.47.46.82.46s.64-.19.82-.46l.02.01 4-6-.02-.01c.1-.16.18-.34.18-.54z"];
  var symbolRectangle = ["M16 5H4c-.5 0-1 .5-1 1v8c0 .5.5 1 1 1h12c.5 0 1-.5 1-1V6c0-.5-.5-1-1-1z"];
  var symbolSquare = ["M15 4.01H5c-.55 0-1 .45-1 1v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10c0-.56-.45-1-1-1z"];
  var symbolTriangleDown = ["M16 5c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1 0 .16.05.31.11.44H4.1l5 10h.01c.17.33.5.56.89.56s.72-.23.89-.56h.01l5-10h-.01c.06-.13.11-.28.11-.44z"];
  var symbolTriangleUp = ["M15.89 14.56l-4.99-10h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56H9.1l-5 10h.01c-.06.13-.11.28-.11.44 0 .55.45 1 1 1h10c.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44z"];
  var syringe = ["M15.146.854a.5.5 0 01.708-.708l4 4a.5.5 0 01-.708.708l-.646-.647L17.207 5.5l1.647 1.646a.5.5 0 01-.708.708l-.646-.647-1.146 1.146-7.5 7.5a.5.5 0 01-.708 0l-.646-.646-2.646 2.647a.5.5 0 01-.708 0l-.646-.647-2.646 2.647a.5.5 0 01-.708-.708L2.793 16.5l-.647-.646a.5.5 0 010-.708L4.793 12.5l-.647-.646a.5.5 0 010-.708l7.5-7.5L12.794 2.5l-.647-.646a.5.5 0 01.708-.708L14.5 2.793 15.793 1.5l-.647-.646zM12.707 4l.793-.793L16.793 6.5 16 7.293 12.707 4zm2.586 4l-.793.793-1.646-1.647a.5.5 0 00-.708.708L13.793 9.5 12.5 10.793l-1.646-1.647a.5.5 0 00-.708.708l1.647 1.646-1.293 1.293-1.646-1.647a.5.5 0 00-.708.708L9.793 13.5 8.5 14.793 5.207 11.5 12 4.707 15.293 8zM3.207 15.5L5.5 13.207 6.793 14.5 4.5 16.793 3.207 15.5zM16.5 2.207L17.793 3.5 16.5 4.793 15.207 3.5 16.5 2.207z"];
  var tag = ["M2 4a2 2 0 012-2h4.588a2 2 0 011.414.586l7.41 7.41a2 2 0 010 2.828l-4.588 4.588a2 2 0 01-2.829 0l-7.41-7.41A2 2 0 012 8.588V4zm3.489-.006a1.495 1.495 0 100 2.99 1.495 1.495 0 000-2.99z"];
  var takeAction = ["M5 7c.28 0 .53-.11.71-.29l5-5A1.003 1.003 0 009.29.29l-5 5A1.003 1.003 0 005 7zm6 6a1.003 1.003 0 001.71.71l5-5a1.003 1.003 0 00-1.42-1.42l-5 5c-.18.18-.29.43-.29.71zm8 5h-1c0-.55-.45-1-1-1h-7c-.55 0-1 .45-1 1H8c-.55 0-1 .45-1 1s.45 1 1 1h11c.55 0 1-.45 1-1s-.45-1-1-1zm-9-6l6-6-1.29-1.29a1.003 1.003 0 00-1.42-1.42L12 2 6 8l1.29 1.29-7 7a1.003 1.003 0 001.42 1.42l7-7L10 12z"];
  var tank = ["M3.956 4.47A1 1 0 014.804 4h6.392a1 1 0 01.848.47L13 6h5a1 1 0 010 2h-5v1h4a3 3 0 110 6H3a3 3 0 010-6V6.287a1 1 0 01.152-.53l.804-1.287zM3 11h14a1 1 0 110 2H3a1 1 0 110-2z"];
  var target = ["M9 5a1 1 0 012 0v3a1 1 0 01-2 0V5zM12 9a1 1 0 000 2h3a1 1 0 000-2h-3zM4 10a1 1 0 011-1h3a1 1 0 010 2H5a1 1 0 01-1-1zM10 11a1 1 0 00-1 1v3a1 1 0 002 0v-3a1 1 0 00-1-1z", "M10 20c5.523 0 10-4.477 10-10S15.523 0 10 0 0 4.477 0 10s4.477 10 10 10zm0-2a8 8 0 100-16 8 8 0 000 16z"];
  var taxi = ["M19 9h-.33l.33 1v.5c0 .15-.03.3-.07.44h.01L17 17.23v.27c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5V17H6v.5c0 .83-.67 1.5-1.5 1.5S3 18.33 3 17.5v-.27l-1.93-6.28h.01c-.05-.15-.08-.3-.08-.45V10s.02-.06.05-.16c.06-.17.16-.47.28-.84H1c-.55 0-1-.45-1-1s.45-1 1-1h1l1-3h-.01v-.01c.25-.64 1-1.31 1.67-1.5 0 0 .78-.21 2.33-.36V1c0-.55.45-1 1-1h4c.55 0 1 .45 1 1v1.13c1.55.14 2.33.36 2.33.36.67.19 1.42.86 1.67 1.5V4H17l1 3h1c.55 0 1 .45 1 1s-.45 1-1 1zM3 11.5c0 .83.67 1.5 1.5 1.5S6 12.33 6 11.5 5.33 10 4.5 10 3 10.67 3 11.5zM16 7l-1-3H5L4 7v1h12V7zm-.5 3c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"];
  var temperature = ["M11 0a2 2 0 00-2 2v10.535a4 4 0 104 0V2a2 2 0 00-2-2zM3 2.5a.5.5 0 01.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zM3.5 8a.5.5 0 000 1h4a.5.5 0 000-1h-4zM5 5.5a.5.5 0 01.5-.5h2a.5.5 0 010 1h-2a.5.5 0 01-.5-.5zm.5 5.5a.5.5 0 000 1h2a.5.5 0 000-1h-2z"];
  var textHighlight = ["M16 17c-.55 0-1-.45-1-1V4c0-.55.45-1 1-1s1-.45 1-1-.45-1-1-1c-.77 0-1.47.3-2 .78-.53-.48-1.23-.78-2-.78-.55 0-1 .45-1 1s.45 1 1 1 1 .45 1 1v12c0 .55-.45 1-1 1s-1 .45-1 1 .45 1 1 1c.77 0 1.47-.3 2-.78.53.48 1.23.78 2 .78.55 0 1-.45 1-1s-.45-1-1-1zm-4-4H2V7h10V5H1c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h11v-2zm7-8h-3v2h2v6h-2v2h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z"];
  var th = ["M19 1H1c-.6 0-1 .5-1 1v16c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V2c0-.5-.5-1-1-1zM7 17H2v-3h5v3zm0-4H2v-3h5v3zm0-4H2V6h5v3zm11 8H8v-3h10v3zm0-4H8v-3h10v3zm0-4H8V6h10v3z"];
  var thDerived = ["M5.3 13.3c-.2.2-.3.4-.3.7 0 .6.4 1 1 1 .3 0 .5-.1.7-.3l3-3c.2-.2.3-.4.3-.7s-.1-.5-.3-.7l-3-3C6.5 7.1 6.3 7 6 7c-.6 0-1 .4-1 1 0 .3.1.5.3.7L6.6 10H1c-.6 0-1 .4-1 1s.4 1 1 1h5.6l-1.3 1.3zM19 1H3c-.5 0-1 .5-1 1v6h1c0-1.7 1.3-3 3-3 .8 0 1.6.3 2.1.9l.1.1H9v.8l1 1V6h8v3h-6.8c.3.3.5.6.6 1H18v3h-6.8l-.1.1-.9.9H18v3h-8v-2.8l-1 1V17H4v-.8c-.6-.5-1-1.3-1-2.2H2v4c0 .5.5 1 1 1h16c.6 0 1-.5 1-1V2c0-.5-.5-1-1-1z"];
  var thDisconnect = ["M14.25 1H19c.5 0 1 .5 1 1v16c0 .5-.5 1-1 1h-7.221l.278-2H18v-3h-5.527l.14-1H18v-3h-4.971l.139-1H18V6h-4.416l.637-4.587c.02-.139.03-.277.03-.413zM8.221 1l-.694 5H2v3h5.11l-.139 1H2v3h4.555l-.14 1H2v3h3.999l-.22 1.587c-.02.139-.03.277-.03.413H1c-.6 0-1-.5-1-1V2c0-.5.4-1 1-1h7.221zM10.26.862a1 1 0 011.98.276l-2.5 18a1 1 0 01-1.98-.276l2.5-18z"];
  var thFiltered = ["M17.333 10l1.435-1.722a1 1 0 00.232-.64V4.85l1-.9V18c0 .5-.5 1-1 1H1c-.6 0-1-.5-1-1V2c0-.5.4-1 1-1h6.722L12 4.85V6H8v3h4v1H8v3h10v-3h-.667zM7 17v-3H2v3h5zm0-4v-3H2v3h5zm0-4V6H2v3h5zm11 8v-3H8v3h10z", "M19.35 0a.642.642 0 01.46 1.1l-3.03 3.03v2.95c0 .18-.07.34-.19.46l-1.28 1.29c-.11.1-.27.17-.45.17-.35 0-.64-.29-.64-.64V4.13L11.19 1.1a.642.642 0 01.45-1.1h7.71z"];
  var thList = ["M19 1H1c-.6 0-1 .5-1 1v16c0 .5.4 1 1 1h18c.5 0 1-.5 1-1V2c0-.5-.5-1-1-1zm-1 16H2v-3h16v3zm0-4H2v-3h16v3zm0-4H2V6h16v3z"];
  var thirdParty = ["M8 0C3.58 0 0 3.58 0 8a8 8 0 005.856 7.71c.064-.057.129-.109.19-.156.278-.209.595-.383.896-.53.358-.174.81-.358 1.193-.515.206-.084.393-.16.534-.223a3.93 3.93 0 00.203-.095 4.1 4.1 0 01-.305-.45C8.382 13.911 8.19 14 8 14c-.67 0-1.36-1.1-1.73-3h1.252c.047-.296.153-.571.323-.797l.01-.203H6.12C6.05 9.39 6 8.73 6 8s.05-1.39.12-2h3.76l.037.344c.315-.145.65-.242.979-.295L10.89 6h2.76c.027.077.052.155.076.233l.118-.04A3.62 3.62 0 0114.998 6c.247 0 .51.028.772.086A8 8 0 008 0zm5.17 5h-2.44c-.21-1.11-.51-2.03-.91-2.69 1.43.46 2.61 1.43 3.35 2.69zM8 2c.67 0 1.36 1.1 1.73 3H6.27C6.64 3.1 7.33 2 8 2zm-1.82.31c-.4.66-.71 1.58-.91 2.69H2.83a6.025 6.025 0 013.35-2.69zM2 8c0-.7.13-1.37.35-2h2.76C5.04 6.62 5 7.28 5 8s.04 1.38.11 2H2.35C2.13 9.37 2 8.7 2 8zm.83 3h2.44c.21 1.11.51 2.03.91 2.69A6.025 6.025 0 012.83 11z", "M13.917 15.209c.21.094.444.19.685.288.912.374 1.927.789 2.188 1.355.31.722.186 1.148.186 1.148H6.026s-.13-.426.186-1.148c.256-.584 1.305-1.011 2.234-1.39.22-.088.432-.175.626-.26.909-.4.923-.662.94-.978.002-.037.004-.076.008-.115l.003-.072c.002-.025.004-.049.004-.073a3.067 3.067 0 01-.839-1.237l-.007-.007a.024.024 0 00-.003-.01 1.757 1.757 0 01-.113-.347c-.234-.042-.372-.296-.427-.537a1.045 1.045 0 01-.137-.598c.034-.35.179-.509.337-.57v-.056c0-.44.034-1.065.117-1.478a2.508 2.508 0 01.962-1.623c.426-.33 1.038-.501 1.58-.501.544 0 1.155.172 1.588.502a2.496 2.496 0 01.963 1.622c.075.413.117 1.045.117 1.478v.062c.15.062.288.22.323.564.02.268-.083.502-.138.598-.048.234-.185.488-.42.537a2.635 2.635 0 01-.116.364 3.094 3.094 0 01-.818 1.224c0 .055 0 .11.007.158.004.048.006.095.007.14.011.311.02.57.907.96z", "M14.976 14.57c-.24-.098-.455-.186-.65-.274l-.007-.003a3.801 3.801 0 01-.194-.091c.224-.288.41-.609.554-.946l.001-.002.013-.033c.018-.043.036-.087.052-.13l.011-.027.016-.04c.105-.092.19-.19.256-.284.129-.184.213-.38.265-.563.105-.226.225-.592.192-1.026l-.001-.011-.002-.011a1.855 1.855 0 00-.325-.91 9.924 9.924 0 00-.12-1.246 3.088 3.088 0 00-.106-.474l-.001-.007a3.543 3.543 0 00-.763-1.353c.27-.092.56-.139.83-.139.495 0 1.05.156 1.444.456a2.269 2.269 0 01.875 1.475c.069.375.106.95.106 1.344v.056c.138.056.263.2.294.513.019.244-.075.456-.125.543-.044.213-.169.444-.381.488-.025.1-.056.206-.094.3a2.815 2.815 0 01-.756 1.144c0 .05 0 .1.006.144.004.043.006.086.007.127.01.283.018.518.824.873.192.086.404.172.623.262.83.34 1.752.717 1.99 1.231.28.657.168 1.044.168 1.044h-2.081a3.864 3.864 0 00-.188-.542l-.005-.013-.006-.012c-.183-.397-.491-.681-.76-.88a5.614 5.614 0 00-.896-.522 17.36 17.36 0 00-.916-.4l-.15-.061z"];
  var thumbsDown = ["M18.55 6.56c-.31-.01-.65-.03-1.02-.06.03 0 .06-.01.09-.01.88-.12 1.68-.63 1.76-1.37.08-.75-.58-1.25-1.46-1.33-.32-.03-.65-.05-.99-.08.59-.19 1.05-.54 1.09-1.2.05-.75-.99-1.32-1.87-1.41-.34-.03-.64-.05-.91-.07h-.11c-.28-.02-.54-.02-.77-.02-3.92-.08-7.29.6-9.36 1.93v7.72c2.67 1.66 5.95 4.61 5.26 7.08-.21.76.39 1.35 1.23 1.26 1.01-.11 1.71-1.18 1.75-2.28.05-1.29-.19-2.59-.62-3.74-.05-.32.01-.65.47-.68.61-.04 1.39-.08 1.99-.1.32 0 .64-.01.94-.03h.01c.52-.03 1-.07 1.42-.12.88-.11 1.69-.6 1.79-1.35.1-.75-.55-1.25-1.44-1.35-.07-.01-.13-.02-.2-.02.21-.02.42-.04.61-.06.88-.11 1.69-.6 1.79-1.35.09-.75-.56-1.31-1.45-1.36zM3 3H0v8h3c.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var thumbsUp = ["M3 9H0v8h3c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1zm16.99 3.09c-.1-.75-.91-1.24-1.79-1.35-.19-.02-.4-.05-.61-.06.07-.01.14-.01.2-.02.88-.1 1.53-.61 1.44-1.35-.1-.74-.91-1.24-1.79-1.35-.42-.05-.9-.09-1.42-.12h-.01l-.94-.03c-.6-.02-1.39-.05-1.99-.1-.45-.03-.51-.36-.47-.68.43-1.15.67-2.45.62-3.74-.04-1.11-.74-2.17-1.75-2.28-.84-.09-1.45.5-1.23 1.26.7 2.47-2.58 5.43-5.25 7.08v7.72c2.08 1.33 5.44 2.01 9.35 1.93.24 0 .49-.01.77-.02h.11c.27-.02.57-.04.91-.07.88-.08 1.92-.66 1.87-1.41-.04-.65-.5-1.01-1.09-1.2.34-.03.67-.05.99-.08.89-.08 1.55-.58 1.46-1.33-.08-.75-.88-1.25-1.76-1.37-.03 0-.06-.01-.09-.01.37-.02.71-.04 1.02-.06.91-.05 1.55-.61 1.45-1.36z"];
  var tick = ["M17 4c-.28 0-.53.11-.71.29L7 13.59 3.71 10.3A.965.965 0 003 10a1.003 1.003 0 00-.71 1.71l4 4c.18.18.43.29.71.29s.53-.11.71-.29l10-10A1.003 1.003 0 0017 4z"];
  var tickCircle = ["M10 20C4.48 20 0 15.52 0 10S4.48 0 10 0s10 4.48 10 10-4.48 10-10 10zm5-14c-.28 0-.53.11-.71.29L8 12.59l-2.29-2.3a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l7-7A1.003 1.003 0 0015 6z"];
  var time$1 = ["M11 9.59V4c0-.55-.45-1-1-1s-1 .45-1 1v6c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L11 9.59zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"];
  var timelineAreaChart = ["M19 16H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zm0-13.41l-7.07 7.07-4.3-3.44-.01.01A.987.987 0 007 6c-.24 0-.46.1-.63.24l-.01-.01L3 9.03V15h16V2.59z"];
  var timelineBarChart = ["M19 17H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1zM9 16h2c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v13c0 .55.45 1 1 1zm6 0h2c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1zM3 16h2c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1z"];
  var timelineEvents = ["M5 5c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm10 0c.6 0 1-.4 1-1V2c0-.5-.4-1-1-1s-1 .5-1 1v2c0 .6.4 1 1 1zm-9 9H4v2h2v-2zM17 3v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H7v1c0 1.1-.9 2-2 2s-2-.9-2-2V3H2c-.5 0-1 .5-1 1v14c0 .5.5 1 1 1h16c.5 0 1-.5 1-1V4c0-.5-.5-1-1-1h-1zM7 17H3v-4h4v4zm0-5H3V8h4v4zm5 5H8v-4h4v4zm0-5H8V8h4v4zm5 5h-4v-4h4v4zm0-5h-4V8h4v4zm-6 2H9v2h2v-2zm5-5h-2v2h2V9z"];
  var timelineLineChart = ["M19 16H2v-1.59l5-5 3.29 3.29c.18.19.43.3.71.3s.53-.11.71-.29l7-7a1.003 1.003 0 00-1.42-1.42L11 10.59l-3.29-3.3C7.53 7.11 7.28 7 7 7s-.53.11-.71.29L2 11.59V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var tint = ["M9.86 2S3.98 9.18 3.98 12.17C3.99 15.4 6.78 18 9.96 18c3.18-.01 6.04-2.63 6.03-5.86C15.99 9.05 9.86 2 9.86 2z"];
  var torch = ["M6.97 19c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-2h-6v2zm-3-15l3 4v8h6V8l3-4h-12zm5 5c0-.55.45-1 1-1s1 .45 1 1v2c0 .55-.45 1-1 1s-1-.45-1-1V9zm6-9h-10c-.55 0-1 .45-1 1v2h12V1c0-.55-.45-1-1-1z"];
  var tractor = ["M4.5 11a4.5 4.5 0 110 9 4.5 4.5 0 010-9zm11.499 1a4 4 0 110 8 4 4 0 010-8zm-11.5 1.571a1.928 1.928 0 100 3.857 1.928 1.928 0 000-3.857zM16 14.667a1.333 1.333 0 100 2.666 1.333 1.333 0 000-2.666zM5.999 0C7.46 0 8.527.668 9 2l.851 4.256c1.433.096 2.82.217 4.147.362V2h2L16 6.862c.962.13 1.886.275 2.767.435.779.141 1.232.614 1.232 1.284L20 13a4.995 4.995 0 00-4-1.997A5.001 5.001 0 0011.099 15h-1.12a5.499 5.499 0 00-5.478-4.994 5.482 5.482 0 00-3.377 1.157H.004v-1.18L0 7.327c-.002-.597.37-1.18.999-1.302V1a1 1 0 011-1h4zm1 2H3v4h.75c1.386.027 2.749.073 4.079.139L6.999 2z"];
  var train = ["M16 18h-2l2 2H4l.12-.12L6 18H4c-1.1 0-2-.9-2-2V2c0-1.1 3.58-2 8-2s8 .9 8 2v14c0 1.1-.9 2-2 2zM5.5 15c.83 0 1.5-.67 1.5-1.5S6.33 12 5.5 12 4 12.67 4 13.5 4.67 15 5.5 15zM9 3H4v6h5V3zm7 0h-5v6h5V3zm-1.5 9c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"];
  var translate$2 = ["M19.89 18.56l-4.99-10h-.01c-.17-.33-.5-.56-.89-.56s-.72.23-.89.56h-.01l-1.73 3.46-2.8-2.3 1.99-1.64C11.44 7.34 12 6.23 12 5V4h1c.55 0 1-.45 1-1s-.45-1-1-1H8V1c0-.55-.45-1-1-1S6 .45 6 1v1H1c-.55 0-1 .45-1 1s.45 1 1 1h9v1c0 .62-.28 1.18-.73 1.54L7 8.42 4.73 6.54C4.28 6.18 4 5.62 4 5H2c0 1.23.56 2.34 1.44 3.07l1.99 1.64-3.06 2.52.01.01c-.23.18-.38.45-.38.76 0 .55.45 1 1 1 .24 0 .45-.1.63-.24l.01.01L7 11l3.36 2.77.01-.01c.02.02.05.03.08.05.01 0 .01.01.02.02l-2.36 4.73h.01c-.07.13-.12.28-.12.44 0 .55.45 1 1 1 .39 0 .72-.23.89-.56h.01L11.12 17h5.76l1.22 2.45h.01c.17.32.5.55.89.55.55 0 1-.45 1-1 0-.16-.05-.31-.11-.44zM12.12 15L14 11.24 15.88 15h-3.76z"];
  var trash = ["M17 1h-5c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1H3c-.55 0-1 .45-1 1v1h16V2c0-.55-.45-1-1-1zm.5 3h-15c-.28 0-.5.22-.5.5s.22.5.5.5H3v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V5h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zM7 16c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8z"];
  var tree = ["M11 15.542V20H9v-4.458L2 17l4.5-5.625L4 12l3.655-5.483L6 7l4-7 4 7-1.655-.483L16 12l-2.5-.625L18 17l-7-1.458z"];
  var trendingDown = ["M19 10c-.55 0-1 .45-1 1v1.37l-6.25-7.03-.01.01A.971.971 0 0011 5c-.23 0-.42.09-.59.21l-.01-.01-3.43 2.58-5.42-3.61-.01.01A.969.969 0 001 4c-.55 0-1 .45-1 1 0 .35.19.64.46.82l-.01.01 6 4 .01-.02c.15.11.33.19.54.19.23 0 .42-.09.59-.21l.01.01 3.26-2.45L16.77 14H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z"];
  var trendingUp = ["M19 4h-4c-.55 0-1 .45-1 1s.45 1 1 1h1.77l-5.91 6.65L7.6 10.2l-.01.01C7.42 10.09 7.23 10 7 10c-.21 0-.39.08-.54.18l-.01-.02-6 4 .01.02c-.27.18-.46.47-.46.82 0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 5.41-3.61 3.43 2.58.01-.01c.18.11.37.2.6.2.3 0 .56-.14.74-.34l.01.01L18 7.63V9c0 .55.45 1 1 1s1-.45 1-1V5c0-.55-.45-1-1-1z"];
  var truck = ["M16 0a1 1 0 011 1v11a1 1 0 011 1v3h.5a.5.5 0 01.5.5v1a.5.5 0 01-.5.5H17v1a1 1 0 01-1 1h-1a1 1 0 01-1-1v-1H6v1a1 1 0 01-1 1H4a1 1 0 01-1-1v-1H1.5a.5.5 0 01-.5-.5v-1a.5.5 0 01.5-.5H2v-3a1 1 0 011-1V1a1 1 0 112 0v3a2 2 0 012-2h6a2 2 0 012 2V1a1 1 0 011-1zm-4 10H8a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1v-4a1 1 0 00-1-1zm-7 4H4a1 1 0 000 2h1a1 1 0 000-2zm11 0h-1a1 1 0 000 2h1a1 1 0 000-2zm-4.5 0a.5.5 0 110 1h-3l-.09-.008A.5.5 0 018.5 14zm0-1.5a.5.5 0 110 1h-3l-.09-.008a.5.5 0 01.09-.992zm0-1.5a.5.5 0 110 1h-3l-.09-.008A.5.5 0 018.5 11zM14 5H6v3h8V5z"];
  var twoColumns = ["M5 0H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm14.71 9.29l-3-3A1.003 1.003 0 0015 7v6a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM12 0H8c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h4c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var unarchive = ["M16.434 0a1 1 0 01.857.486L20 5v14a1 1 0 01-1 1H1a1 1 0 01-1-1V5L2.709.486A1 1 0 013.566 0h12.868zM10 8c-.28 0-.53.11-.71.29l-3 3-.084.096A1.003 1.003 0 007.71 12.71L9 11.41v4.58l.007.116c.058.496.482.884.993.884.55 0 1-.45 1-1v-4.58l1.29 1.29.081.073c.171.139.389.227.629.227a1.003 1.003 0 00.71-1.71l-3-3-.096-.084A1.002 1.002 0 0010 8zm6-6H4L2 5.002h16L16 2z"];
  var underline = ["M10 17c3.3 0 6-2.7 6-6V3.5c0-.8-.7-1.5-1.5-1.5S13 2.7 13 3.5V11c0 1.7-1.3 3-3 3s-3-1.3-3-3V3.5C7 2.7 6.3 2 5.5 2S4 2.7 4 3.5V11c0 3.3 2.7 6 6 6zM16.5 19h-13c-.3 0-.5.2-.5.5s.2.5.5.5h13c.3 0 .5-.2.5-.5s-.2-.5-.5-.5z"];
  var undo = ["M5 14c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm9-9H3.41L5.7 2.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C.11 5.47 0 5.72 0 6c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L3.41 7H14c2.21 0 4 1.79 4 4s-1.79 4-4 4H9v2h5c3.31 0 6-2.69 6-6s-2.69-6-6-6z"];
  var ungroupObjects = ["M4.5 6C2.01 6 0 8.01 0 10.5S2.01 15 4.5 15 9 12.99 9 10.5 6.99 6 4.5 6zm11 0C13.01 6 11 8.01 11 10.5s2.01 4.5 4.5 4.5 4.5-2.01 4.5-4.5S17.99 6 15.5 6z"];
  var unknownVehicle = ["M13 11.988v-4H4v-1l1-3h6V2.003a35.867 35.867 0 00-1-.015c-3.593 0-5.332.488-5.332.488-.67.188-1.424.864-1.674 1.503l-.004.009H3l-1 3H1a1 1 0 100 2h.333l-.28.84-.053.16v7.5a1.5 1.5 0 103 0v-.5h12v.5a1.5 1.5 0 103 0v-4.5h-5a1 1 0 01-1-1zm-8.5 1a1.5 1.5 0 110-3 1.5 1.5 0 010 3zM19.83 2.782a2.392 2.392 0 00-.592-.853c-.276-.264-.64-.485-1.09-.663C17.695 1.09 17.132 1 16.457 1c-.523 0-.996.084-1.418.253a3.157 3.157 0 00-1.084.703c-.299.3-.532.656-.698 1.065-.166.41-.254.861-.264 1.353h2.096c0-.246.028-.476.085-.69.057-.214.145-.4.264-.56.119-.16.27-.287.456-.383.185-.095.406-.143.663-.143.38 0 .677.1.89.3.215.2.321.51.321.93.01.245-.035.45-.135.614-.1.164-.23.314-.392.45a8.598 8.598 0 01-.527.41 3.53 3.53 0 00-.542.485c-.171.187-.32.412-.45.676-.127.265-.206.592-.234.984v.614h1.924v-.519c.038-.273.13-.5.278-.683.147-.182.316-.343.506-.484a13.5 13.5 0 01.606-.424c.214-.14.408-.312.584-.512s.323-.442.442-.724.178-.642.178-1.079c0-.264-.059-.548-.178-.854zm-4.54 6.099v2.103h2.237V8.881H15.29z"];
  var unlock = ["M14 1c-2.21 0-4 1.79-4 4v4H2c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1h12c.55 0 1-.45 1-1v-8c0-.55-.45-1-1-1h-2V5c0-1.1.9-2 2-2s2 .9 2 2v2c0 .55.45 1 1 1s1-.45 1-1V5c0-2.21-1.79-4-4-4z"];
  var unpin = ["M11.77 1.16c-.81.81-.74 2.28.02 3.76L6.1 8.71c-2.17-1.46-4.12-2-4.94-1.18l4.95 4.95-2.12 3.54 3.54-2.12 4.95 4.95c.82-.82.27-2.77-1.19-4.94l3.8-5.69c1.47.76 2.94.84 3.76.02l-7.08-7.08z"];
  var unresolve = ["M11.47 12.46c.16-.36.29-.74.38-1.14 0-.02.01-.04.01-.06.09-.4.14-.82.14-1.26 0-.44-.05-.86-.14-1.27 0-.02-.01-.04-.01-.06-.09-.4-.22-.78-.38-1.14-.01-.02-.02-.03-.02-.05a5.94 5.94 0 00-.61-1.03c0-.01-.01-.01-.01-.02a6.308 6.308 0 00-2.1-1.77c-.19-.1-.39-.18-.59-.26-.03-.01-.06-.02-.1-.03-.17-.07-.34-.12-.52-.17-.05-.01-.1-.03-.15-.04a4.34 4.34 0 00-.52-.09c-.05-.01-.11-.02-.17-.03C6.46 4.02 6.23 4 6 4c-3.31 0-6 2.69-6 6s2.69 6 6 6c.23 0 .46-.02.68-.04l.17-.03c.17-.02.34-.06.51-.09.05-.01.1-.03.15-.04.18-.05.36-.1.53-.17l.09-.03a5.973 5.973 0 002.68-2.04c0-.01.01-.01.01-.02.24-.32.44-.66.61-1.03.02-.01.03-.03.04-.05zM14 4c-.99 0-1.91.24-2.73.66a7.51 7.51 0 010 10.68c.82.42 1.74.66 2.73.66 3.31 0 6-2.69 6-6s-2.69-6-6-6z"];
  var updated = ["M10 0C6.71 0 3.82 1.6 2 4.05V2c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .55.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1H3.76C5.22 3.17 7.47 2 10 2c4.42 0 8 3.58 8 8s-3.58 8-8 8-8-3.58-8-8c0-.55-.45-1-1-1s-1 .45-1 1c0 5.52 4.48 10 10 10s10-4.48 10-10S15.52 0 10 0zm4 7c-.28 0-.53.11-.71.29L9 11.58 6.71 9.29a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29.28 0 .53-.11.71-.29l5-5A1.003 1.003 0 0014 7z"];
  var upload = ["M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm4 10c-.28 0-.53-.11-.71-.29L11 7.41V15c0 .55-.45 1-1 1s-1-.45-1-1V7.41l-2.29 2.3a1.003 1.003 0 01-1.42-1.42l4-4c.18-.18.43-.29.71-.29s.53.11.71.29l4 4A1.003 1.003 0 0114 10z"];
  var user = ["M10 0C4.48 0 0 4.48 0 10c0 .33.02.65.05.97.01.12.03.23.05.35.03.2.05.4.09.59.03.14.06.28.1.42l.12.48c.05.16.1.31.15.46.05.13.09.27.15.4.06.16.13.32.21.48.05.11.1.22.16.33.09.17.17.34.27.5.05.09.1.17.15.25.11.18.22.35.34.52.04.06.08.11.12.17 1.19 1.62 2.85 2.86 4.78 3.53l.09.03c.46.15.93.27 1.42.36.08.01.17.03.25.04.49.07.99.12 1.5.12s1.01-.05 1.5-.12c.08-.01.17-.02.25-.04.49-.09.96-.21 1.42-.36l.09-.03c1.93-.67 3.59-1.91 4.78-3.53.04-.05.08-.1.12-.16.12-.17.23-.35.34-.53.05-.08.1-.16.15-.25.1-.17.19-.34.27-.51.05-.11.1-.21.15-.32.07-.16.14-.32.21-.49.05-.13.1-.26.14-.39.05-.15.11-.31.15-.46.05-.16.08-.32.12-.48.03-.14.07-.28.1-.42.04-.19.06-.39.09-.59.02-.12.04-.23.05-.35.05-.32.07-.64.07-.97 0-5.52-4.48-10-10-10zm0 18a7.94 7.94 0 01-6.15-2.89c.84-.44 1.86-.82 2.67-1.19 1.45-.65 1.3-1.05 1.35-1.59.01-.07.01-.14.01-.21-.51-.45-.93-1.08-1.2-1.8l-.01-.01c0-.01-.01-.02-.01-.03a4.42 4.42 0 01-.15-.48c-.33-.07-.53-.44-.61-.79-.08-.14-.23-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.63.06-1.55.17-2.15.02-.17.06-.33.11-.5.21-.73.66-1.4 1.26-1.86.62-.47 1.5-.72 2.28-.72.78 0 1.65.25 2.27.73.6.46 1.05 1.12 1.26 1.86.05.16.08.33.11.5.11.6.17 1.51.17 2.15v.09c.22.1.42.33.46.82.04.39-.12.73-.2.87-.07.34-.27.71-.6.78-.04.16-.09.33-.15.48 0 .01-.02.05-.02.05-.26.71-.67 1.33-1.17 1.78 0 .08.01.16.01.23.05.54-.15.94 1.31 1.59.81.36 1.84.74 2.68 1.19A7.958 7.958 0 0110 18z"];
  var variable = ["M4.93 3.79a9.1 9.1 0 012.2-2.27L7.29 1c-1.38.59-2.57 1.33-3.55 2.22C2.46 4.39 1.49 5.72.83 7.23.28 8.51 0 9.81 0 11.12c0 2.28.83 4.57 2.49 6.86l.16-.55c-.49-1.23-.73-2.38-.73-3.44 0-1.67.28-3.46.84-5.36.55-1.9 1.28-3.51 2.17-4.84zm9.38 8.39l-.33-.2c-.37.54-.65.87-.82 1a.74.74 0 01-.42.12c-.19 0-.38-.12-.57-.37-.31-.42-.73-1.59-1.26-3.5.47-.85.86-1.41 1.19-1.67.23-.19.48-.29.74-.29.1 0 .28.04.53.11.26.07.48.11.68.11.27 0 .5-.1.68-.29.18-.19.27-.44.27-.75 0-.33-.09-.58-.27-.77-.18-.19-.44-.29-.78-.29-.3 0-.59.07-.86.22s-.61.47-1.02.97c-.31.37-.77 1.02-1.37 1.94a9.683 9.683 0 00-1.24-3.14l-3.24.59-.06.36c.24-.05.44-.07.61-.07.32 0 .59.14.8.43.33.45.8 1.8 1.39 4.07-.47.64-.78 1.06-.96 1.26-.28.32-.52.53-.7.62-.14.08-.3.11-.48.11-.14 0-.36-.08-.67-.23-.21-.1-.4-.15-.57-.15-.31 0-.57.11-.78.32s-.31.48-.31.8c0 .31.09.55.28.75.19.19.44.29.76.29.31 0 .6-.07.87-.2s.61-.42 1.02-.86c.41-.44.98-1.13 1.7-2.08.28.9.52 1.56.72 1.97.2.41.44.71.7.89.26.18.59.27.99.27.38 0 .77-.14 1.17-.43.54-.36 1.07-1 1.61-1.91zM17.51 1l-.15.54c.49 1.24.73 2.39.73 3.45 0 1.43-.21 2.96-.63 4.6-.33 1.26-.75 2.45-1.27 3.55-.52 1.11-1.02 1.97-1.51 2.6-.49.62-1.09 1.2-1.8 1.72l-.17.53c1.38-.59 2.57-1.34 3.55-2.23 1.29-1.17 2.26-2.5 2.91-4 .55-1.28.83-2.59.83-3.91 0-2.27-.83-4.56-2.49-6.85z"];
  var verticalBarChartAsc = ["M8 7H7c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zM3 9H2c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1zm10-5h-1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm5-4h-1c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1z"];
  var verticalBarChartDesc = ["M3 0H2c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm5 4H7c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm5 3h-1c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1zm5 2h-1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1z"];
  var verticalDistribution = ["M1 2h18c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1s.45 1 1 1zm2 5c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V8c0-.55-.45-1-1-1H3zm16 11H1c-.55 0-1 .45-1 1s.45 1 1 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var verticalInbetween = ["M0 0h20v1a1 1 0 01-1 1H1a1 1 0 01-1-1V0zm6.293 11.293a.999.999 0 000 1.412l2.962 2.963.038.04A.996.996 0 0010 16a.996.996 0 00.745-.332l2.962-2.963a.999.999 0 00-1.412-1.412L10 13.587l-2.295-2.294a.999.999 0 00-1.412 0zm0-3.998a.999.999 0 101.412 1.412L10 6.413l2.295 2.294a.999.999 0 101.412-1.412l-2.962-2.963A.996.996 0 0010 4a.996.996 0 00-.745.332L6.293 7.295zM20 19v1H0v-1a1 1 0 011-1h18a1 1 0 011 1z"];
  var video = ["M19 2H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM7 14V6l6 4-6 4z"];
  var virus = ["M15.249 13.835l1.251 1.251.354-.354.087-.077a1 1 0 011.327 1.491l-2.122 2.122-.087.077a1 1 0 01-1.327-1.491l.354-.354-1.251-1.251A6.466 6.466 0 0111 16.424L10.999 18h.501a1 1 0 01.117 1.993L11.5 20h-3a1 1 0 01-.117-1.993L8.5 18h.499v-1.577a6.46 6.46 0 01-2.538-.97L5.414 16.5l.354.354a1 1 0 01-1.327 1.491l-.087-.077-2.122-2.122a1 1 0 011.327-1.491l.087.077.354.354.97-.97a6.472 6.472 0 01-1.384-3.057l-.025.002L2 11.06v.44a1 1 0 01-1.993.117L0 11.5v-3a1 1 0 011.993-.117L2 8.5v.56h1.567A6.471 6.471 0 014.97 5.883l-.971-.969-.353.354-.087.077a1 1 0 01-1.327-1.491l2.122-2.122.087-.077a1 1 0 011.327 1.491l-.354.353 1.047 1.048A6.46 6.46 0 019 3.577L9 2h-.5A1 1 0 018.383.007L8.5 0h3a1 1 0 01.117 1.993L11.5 2H11v1.577a6.466 6.466 0 012.838 1.176l.04-.046L15.086 3.5l-.353-.353a1 1 0 011.327-1.491l.087.077 2.122 2.122a1 1 0 01-1.327 1.491l-.087-.077-.354-.354-1.207 1.207-.046.041a6.467 6.467 0 011.16 2.733H18V8.5a1 1 0 011.993-.117L20 8.5v3a1 1 0 01-1.993.117L18 11.5v-.605h-1.561a6.466 6.466 0 01-1.19 2.94zM12.5 11a1.5 1.5 0 100 3 1.5 1.5 0 000-3zM8 6a2 2 0 100 4 2 2 0 000-4z"];
  var volumeDown = ["M15.92 3.93l-1.6 1.18A7.948 7.948 0 0116 10c0 1.84-.63 3.54-1.68 4.89l1.6 1.18A9.878 9.878 0 0018 10c0-2.29-.78-4.39-2.08-6.07zM11 3c-.28 0-.53.11-.71.29L7.59 6H3c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var volumeOff = ["M14 3c-.28 0-.53.11-.71.29L10.59 6H6c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71c.17.18.42.29.7.29.55 0 1-.45 1-1V4c0-.55-.45-1-1-1z"];
  var volumeUp = ["M9 3.43c-.28 0-.53.11-.71.29l-2.7 2.71H1c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1h4.59l2.71 2.71a1.003 1.003 0 001.71-.71v-12c-.01-.55-.46-1-1.01-1zm8.31-1.56l-1.62 1.2C17.14 5.16 18 7.69 18 10.43s-.86 5.27-2.31 7.37l1.62 1.2C19 16.57 20 13.62 20 10.43c0-3.18-1-6.13-2.69-8.56zm-3.39 2.49l-1.6 1.18A7.948 7.948 0 0114 10.43c0 1.84-.63 3.54-1.68 4.89l1.6 1.18A9.94 9.94 0 0016 10.43c0-2.28-.78-4.38-2.08-6.07z"];
  var walk = ["M16 10h-2c-.23 0-.42-.09-.59-.21l-.01.01-1.69-1.27-.63 3.14 2.62 2.62c.19.18.3.43.3.71v4c0 .55-.45 1-1 1s-1-.45-1-1v-3.59L9.39 12.8l-2.45 6.55h-.01c-.14.38-.5.65-.93.65-.55 0-1-.45-1-1 0-.12.03-.24.07-.35h-.01L9.43 7h-2.9l-1.7 2.55-.01-.01c-.18.27-.47.46-.82.46-.55 0-1-.45-1-1 0-.21.08-.39.18-.54l-.01-.01 2-3 .02.01C5.36 5.19 5.65 5 6 5h4.18l.36-.96c-.33-.43-.54-.96-.54-1.54a2.5 2.5 0 015 0A2.5 2.5 0 0112.5 5c-.06 0-.12-.01-.18-.02l-.44 1.18L14.33 8H16c.55 0 1 .45 1 1s-.45 1-1 1z"];
  var warningSign = ["M19.86 17.52l.01-.01-9-16-.01.01C10.69 1.21 10.37 1 10 1s-.69.21-.86.52l-.01-.01-9 16 .01.01c-.08.14-.14.3-.14.48 0 .55.45 1 1 1h18c.55 0 1-.45 1-1 0-.18-.06-.34-.14-.48zM11 17H9v-2h2v2zm0-3H9V6h2v8z"];
  var waterfallChart = ["M13 7h2c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1zm-9 8h1c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1zm4-6h2c.55 0 1-.45 1-1s-.45-1-1-1H8c-.55 0-1 .45-1 1s.45 1 1 1zm11-5h-1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h1c.55 0 1-.45 1-1V5c0-.55-.45-1-1-1zm0 12H2V3c0-.55-.45-1-1-1s-1 .45-1 1v14a.998.998 0 001 1h18c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var waves = ["M4.948 2.682a1 1 0 00-1.897.001l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172C1.958 4.635 1.468 5 .999 5a1 1 0 000 2c1.457 0 2.442-1.027 3-1.825C4.558 5.973 5.543 7 7 7s2.442-1.027 3-1.825C10.558 5.973 11.543 7 13 7s2.442-1.027 3-1.825C16.558 5.973 17.544 7 19 7a1 1 0 100-2c-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.896 0l-.006.016a5.868 5.868 0 01-.147.364c-.11.246-.272.568-.481.882C13.958 4.635 13.469 5 13 5c-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.897 0l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172C7.958 4.635 7.468 5 6.999 5c-.47 0-.958-.365-1.418-1.055A6.05 6.05 0 014.954 2.7l-.006-.016v-.001zm0 6a1 1 0 00-1.897.001l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172c-.46.69-.95 1.055-1.419 1.055a1 1 0 100 2c1.457 0 2.442-1.027 3-1.825C4.558 11.973 5.543 13 7 13s2.442-1.027 3-1.825c.558.798 1.543 1.825 3 1.825s2.442-1.027 3-1.825c.558.798 1.544 1.825 3 1.825a1 1 0 100-2c-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.896 0l-.006.016a5.868 5.868 0 01-.147.364c-.11.246-.272.568-.481.882-.46.69-.949 1.055-1.418 1.055-.47 0-.958-.365-1.418-1.055a6.048 6.048 0 01-.628-1.246l-.006-.016a1 1 0 00-1.897 0l-.005.016-.027.074a6.05 6.05 0 01-.6 1.172c-.46.69-.95 1.055-1.419 1.055-.47 0-.958-.365-1.418-1.055A6.05 6.05 0 014.954 8.7l-.006-.016zm-1.896-6zm1.896 12l.006.017.027.074a6.053 6.053 0 00.6 1.172c.46.69.95 1.055 1.419 1.055.47 0 .958-.365 1.418-1.055a6.053 6.053 0 00.628-1.246l.005-.016a1 1 0 011.897 0l.006.016.027.074a6.051 6.051 0 00.6 1.172c.46.69.95 1.055 1.419 1.055.47 0 .958-.365 1.418-1.055a6.051 6.051 0 00.628-1.246l.006-.016a1 1 0 011.896 0l.006.016.027.074a6.051 6.051 0 00.6 1.172c.46.69.95 1.055 1.419 1.055a1 1 0 110 2c-1.456 0-2.442-1.027-3-1.825-.558.798-1.543 1.825-3 1.825s-2.442-1.027-3-1.825C9.442 17.973 8.457 19 7 19s-2.442-1.027-3-1.825C3.442 17.973 2.457 19 1 19a1 1 0 110-2c.47 0 .958-.365 1.418-1.055a6.053 6.053 0 00.628-1.246l.005-.016a1 1 0 011.897-.001z"];
  var widget = ["M18 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zM2 16c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm15-1h2V5h-2v10zM3 5H1v10h2V5zM2 0C.9 0 0 .9 0 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm3 3h10V1H5v2zm13 13c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zM5 19h10v-2H5v2z"];
  var widgetButton = ["M1 4h18c.55 0 1 .45 1 1v10c0 .55-.45 1-1 1H1c-.55 0-1-.45-1-1V5c0-.55.45-1 1-1zm1 2v8h16V6H2zm4 5c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm4 0c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z"];
  var widgetFooter = ["M17 0H3c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H4v-4h12v4zm0-5H4V2h12v11z"];
  var widgetHeader = ["M17 0H3c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V1c0-.55-.45-1-1-1zm-1 18H4V7h12v11zm0-12H4V2h12v4z"];
  var wind = ["M12 6a3 3 0 113 3H4a1 1 0 000 2h11a5 5 0 10-5-5 1 1 0 102 0zM1 12a1 1 0 100 2h10a2 2 0 110 4c-.934 0-1.803-.614-2.057-1.333a1 1 0 10-1.886.666C7.627 18.944 9.321 20 11 20a4 4 0 000-8H1z"];
  var wrench = ["M19.8 4.44L16.13 8.1l-3.55-.71-.71-3.53L15.54.21c-2.01-.53-4.23-.03-5.8 1.53-1.86 1.85-2.23 4.6-1.14 6.83L.59 16.59C.22 16.95 0 17.45 0 18a2 2 0 002 2c.55 0 1.05-.22 1.41-.59l8.03-8.04c2.23 1.05 4.97.67 6.82-1.16 1.57-1.56 2.07-3.77 1.54-5.77z"];
  var zoomIn = ["M19.56 17.44l-4.94-4.94A8.004 8.004 0 0016 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 102.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm3-7H9V5c0-.55-.45-1-1-1s-1 .45-1 1v2H5c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1V9h2c.55 0 1-.45 1-1s-.45-1-1-1z"];
  var zoomOut = ["M11 7H5c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm8.56 10.44l-4.94-4.94A8.004 8.004 0 0016 8c0-4.42-3.58-8-8-8S0 3.58 0 8s3.58 8 8 8c1.67 0 3.21-.51 4.5-1.38l4.94 4.94a1.498 1.498 0 102.12-2.12zM8 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6z"];
  var zoomToFit$2 = ["M1 7c.55 0 1-.45 1-1V2h4c.55 0 1-.45 1-1s-.45-1-1-1H1C.45 0 0 .45 0 1v5c0 .55.45 1 1 1zm5 1a1.003 1.003 0 00-1.71-.71l-2 2c-.18.18-.29.43-.29.71 0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L4.41 10 5.7 8.71c.19-.18.3-.43.3-.71zm2-2c.28 0 .53-.11.71-.29L10 4.41l1.29 1.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71l-2-2C10.53 2.11 10.28 2 10 2s-.53.11-.71.29l-2 2A1.003 1.003 0 008 6zM6 18H2v-4c0-.55-.45-1-1-1s-1 .45-1 1v5c0 .55.45 1 1 1h5c.55 0 1-.45 1-1s-.45-1-1-1zm8-6a1.003 1.003 0 001.71.71l2-2c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71l-2-2a1.003 1.003 0 00-1.42 1.42l1.3 1.29-1.29 1.29c-.19.18-.3.43-.3.71zm5-12h-5c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1V1c0-.55-.45-1-1-1zm-7 14c-.28 0-.53.11-.71.29L10 15.59 8.71 14.3A.965.965 0 008 14a1.003 1.003 0 00-.71 1.71l2 2c.18.18.43.29.71.29s.53-.11.71-.29l2-2A1.003 1.003 0 0012 14zm7-1c-.55 0-1 .45-1 1v4h-4c-.55 0-1 .45-1 1s.45 1 1 1h5c.55 0 1-.45 1-1v-5c0-.55-.45-1-1-1z"];
  var IconSvgPaths20 = Object.freeze({
    __proto__: null,
    Add: add$4,
    AddClip: addClip,
    AddColumnLeft: addColumnLeft,
    AddColumnRight: addColumnRight,
    AddLocation: addLocation,
    AddRowBottom: addRowBottom,
    AddRowTop: addRowTop,
    AddToArtifact: addToArtifact,
    AddToFolder: addToFolder,
    Airplane: airplane,
    AlignCenter: alignCenter,
    AlignJustify: alignJustify,
    AlignLeft: alignLeft,
    AlignRight: alignRight,
    AlignmentBottom: alignmentBottom,
    AlignmentHorizontalCenter: alignmentHorizontalCenter,
    AlignmentLeft: alignmentLeft,
    AlignmentRight: alignmentRight,
    AlignmentTop: alignmentTop,
    AlignmentVerticalCenter: alignmentVerticalCenter,
    Annotation: annotation,
    Antenna: antenna,
    AppHeader: appHeader,
    Application: application,
    Applications: applications,
    Archive: archive,
    AreaOfInterest: areaOfInterest,
    Array: array,
    ArrayBoolean: arrayBoolean,
    ArrayDate: arrayDate,
    ArrayFloatingPoint: arrayFloatingPoint,
    ArrayNumeric: arrayNumeric,
    ArrayString: arrayString,
    ArrayTimestamp: arrayTimestamp,
    ArrowBottomLeft: arrowBottomLeft,
    ArrowBottomRight: arrowBottomRight,
    ArrowDown: arrowDown,
    ArrowLeft: arrowLeft,
    ArrowRight: arrowRight,
    ArrowTopLeft: arrowTopLeft,
    ArrowTopRight: arrowTopRight,
    ArrowUp: arrowUp,
    ArrowsHorizontal: arrowsHorizontal,
    ArrowsVertical: arrowsVertical,
    Asterisk: asterisk,
    AutomaticUpdates: automaticUpdates,
    Backlink: backlink,
    Badge: badge,
    BanCircle: banCircle,
    BankAccount: bankAccount,
    Barcode: barcode,
    Blank: p,
    BlockedPerson: blockedPerson,
    Bold: bold,
    Book: book,
    Bookmark: bookmark,
    Box: box,
    Briefcase: briefcase,
    BringData: bringData,
    Buggy: buggy,
    Build: build,
    Calculator: calculator,
    Calendar: calendar,
    Camera: camera$1,
    CaretDown: caretDown,
    CaretLeft: caretLeft,
    CaretRight: caretRight,
    CaretUp: caretUp,
    CargoShip: cargoShip,
    CellTower: cellTower,
    Changes: changes,
    Chart: chart,
    Chat: chat,
    ChevronBackward: chevronBackward,
    ChevronDown: chevronDown,
    ChevronForward: chevronForward,
    ChevronLeft: chevronLeft,
    ChevronRight: chevronRight,
    ChevronUp: chevronUp,
    Circle: circle,
    CircleArrowDown: circleArrowDown,
    CircleArrowLeft: circleArrowLeft,
    CircleArrowRight: circleArrowRight,
    CircleArrowUp: circleArrowUp,
    Citation: citation,
    Clean: clean,
    Clip: clip,
    Clipboard: clipboard,
    Cloud: cloud,
    CloudDownload: cloudDownload,
    CloudUpload: cloudUpload,
    Code: code,
    CodeBlock: codeBlock,
    Cog: cog,
    CollapseAll: collapseAll,
    ColorFill: colorFill,
    ColumnLayout: columnLayout,
    Comment: comment,
    Comparison: comparison,
    Compass: compass,
    Compressed: compressed,
    Confirm: confirm,
    Console: console$1,
    Contrast: contrast,
    Control: control,
    CreditCard: creditCard,
    Cross: cross$4,
    Crown: crown,
    Cube: cube,
    CubeAdd: cubeAdd,
    CubeRemove: cubeRemove,
    CurvedRangeChart: curvedRangeChart,
    Cut: cut,
    Cycle: cycle,
    Dashboard: dashboard,
    DataConnection: dataConnection,
    DataLineage: dataLineage,
    Database: database,
    Delete: _delete,
    Delta: delta,
    DeriveColumn: deriveColumn,
    Desktop: desktop,
    Diagnosis: diagnosis,
    DiagramTree: diagramTree,
    DirectionLeft: directionLeft,
    DirectionRight: directionRight,
    Disable: disable,
    Divide: divide$3,
    Document: document$1,
    DocumentOpen: documentOpen,
    DocumentShare: documentShare,
    Dollar: dollar,
    Dot: dot$6,
    DoubleCaretHorizontal: doubleCaretHorizontal,
    DoubleCaretVertical: doubleCaretVertical,
    DoubleChevronDown: doubleChevronDown,
    DoubleChevronLeft: doubleChevronLeft,
    DoubleChevronRight: doubleChevronRight,
    DoubleChevronUp: doubleChevronUp,
    DoughnutChart: doughnutChart,
    Download: download,
    DragHandleHorizontal: dragHandleHorizontal,
    DragHandleVertical: dragHandleVertical,
    Draw: draw,
    DrawerLeft: drawerLeft,
    DrawerLeftFilled: drawerLeftFilled,
    DrawerRight: drawerRight,
    DrawerRightFilled: drawerRightFilled,
    DriveTime: driveTime,
    Duplicate: duplicate,
    Edit: edit,
    Eject: eject,
    Emoji: emoji,
    Endorsed: endorsed,
    Envelope: envelope,
    Equals: equals$7,
    Eraser: eraser,
    Error: error,
    Euro: euro,
    Exchange: exchange,
    ExcludeRow: excludeRow,
    ExpandAll: expandAll,
    Export: _export,
    EyeOff: eyeOff,
    EyeOn: eyeOn,
    EyeOpen: eyeOpen,
    FastBackward: fastBackward,
    FastForward: fastForward,
    Feed: feed,
    FeedSubscribed: feedSubscribed,
    Film: film,
    Filter: filter,
    FilterKeep: filterKeep,
    FilterList: filterList,
    FilterOpen: filterOpen,
    FilterRemove: filterRemove,
    Flag: flag,
    Flame: flame,
    Flash: flash,
    FloatingPoint: floatingPoint,
    FloppyDisk: floppyDisk,
    FlowBranch: flowBranch,
    FlowEnd: flowEnd,
    FlowLinear: flowLinear,
    FlowReview: flowReview,
    FlowReviewBranch: flowReviewBranch,
    Flows: flows,
    FolderClose: folderClose,
    FolderNew: folderNew,
    FolderOpen: folderOpen,
    FolderShared: folderShared,
    FolderSharedOpen: folderSharedOpen,
    Follower: follower,
    Following: following,
    Font: font,
    Fork: fork,
    Form: form,
    Fuel: fuel,
    FullCircle: fullCircle,
    FullStackedChart: fullStackedChart,
    Fullscreen: fullscreen,
    Function: _function,
    GanttChart: ganttChart,
    Geofence: geofence,
    Geolocation: geolocation,
    Geosearch: geosearch,
    GitBranch: gitBranch,
    GitCommit: gitCommit,
    GitMerge: gitMerge,
    GitNewBranch: gitNewBranch,
    GitPull: gitPull,
    GitPush: gitPush,
    GitRepo: gitRepo,
    Glass: glass,
    Globe: globe,
    GlobeNetwork: globeNetwork,
    Graph: graph,
    GraphRemove: graphRemove,
    GreaterThan: greaterThan,
    GreaterThanOrEqualTo: greaterThanOrEqualTo,
    Grid: grid,
    GridView: gridView,
    GroupObjects: groupObjects,
    GroupedBarChart: groupedBarChart,
    Hand: hand,
    HandDown: handDown,
    HandLeft: handLeft,
    HandRight: handRight,
    HandUp: handUp,
    Hat: hat,
    Header: header,
    HeaderOne: headerOne,
    HeaderThree: headerThree,
    HeaderTwo: headerTwo,
    Headset: headset,
    Heart: heart,
    HeartBroken: heartBroken,
    HeatGrid: heatGrid,
    Heatmap: heatmap,
    Helicopter: helicopter,
    Help: help,
    HelperManagement: helperManagement,
    HighPriority: highPriority,
    Highlight: highlight,
    History: history,
    Home: home,
    HorizontalBarChart: horizontalBarChart,
    HorizontalBarChartAsc: horizontalBarChartAsc,
    HorizontalBarChartDesc: horizontalBarChartDesc,
    HorizontalDistribution: horizontalDistribution,
    HorizontalInbetween: horizontalInbetween,
    Hurricane: hurricane,
    IdNumber: idNumber,
    ImageRotateLeft: imageRotateLeft,
    ImageRotateRight: imageRotateRight,
    Import: _import,
    Inbox: inbox,
    InboxFiltered: inboxFiltered,
    InboxGeo: inboxGeo,
    InboxSearch: inboxSearch,
    InboxUpdate: inboxUpdate,
    InfoSign: infoSign,
    Inheritance: inheritance,
    InheritedGroup: inheritedGroup,
    InnerJoin: innerJoin,
    Insert: insert,
    Intersection: intersection,
    IpAddress: ipAddress,
    Issue: issue,
    IssueClosed: issueClosed,
    IssueNew: issueNew,
    Italic: italic,
    JoinTable: joinTable,
    Key: key$1,
    KeyBackspace: keyBackspace,
    KeyCommand: keyCommand,
    KeyControl: keyControl,
    KeyDelete: keyDelete,
    KeyEnter: keyEnter,
    KeyEscape: keyEscape,
    KeyOption: keyOption,
    KeyShift: keyShift,
    KeyTab: keyTab,
    KnownVehicle: knownVehicle,
    LabTest: labTest,
    Label: label,
    Layer: layer,
    LayerOutline: layerOutline,
    Layers: layers,
    Layout: layout,
    LayoutAuto: layoutAuto,
    LayoutBalloon: layoutBalloon,
    LayoutCircle: layoutCircle,
    LayoutGrid: layoutGrid,
    LayoutGroupBy: layoutGroupBy,
    LayoutHierarchy: layoutHierarchy,
    LayoutLinear: layoutLinear,
    LayoutSkewGrid: layoutSkewGrid,
    LayoutSortedClusters: layoutSortedClusters,
    Learning: learning,
    LeftJoin: leftJoin,
    LessThan: lessThan,
    LessThanOrEqualTo: lessThanOrEqualTo,
    Lifesaver: lifesaver,
    Lightbulb: lightbulb,
    Lightning: lightning,
    Link: link,
    List: list,
    ListColumns: listColumns,
    ListDetailView: listDetailView,
    Locate: locate,
    Lock: lock,
    LogIn: logIn,
    LogOut: logOut,
    Manual: manual,
    ManuallyEnteredData: manuallyEnteredData,
    ManyToMany: manyToMany,
    ManyToOne: manyToOne,
    Map: map,
    MapCreate: mapCreate,
    MapMarker: mapMarker,
    Maximize: maximize,
    Media: media,
    Menu: menu,
    MenuClosed: menuClosed,
    MenuOpen: menuOpen,
    MergeColumns: mergeColumns,
    MergeLinks: mergeLinks,
    Minimize: minimize,
    Minus: minus,
    MobilePhone: mobilePhone,
    MobileVideo: mobileVideo,
    Modal: modal,
    ModalFilled: modalFilled,
    Moon: moon,
    More: more,
    Mountain: mountain,
    Move: move,
    Mugshot: mugshot,
    MultiSelect: multiSelect,
    Music: music,
    Nest: nest,
    NewDrawing: newDrawing,
    NewGridItem: newGridItem,
    NewLayer: newLayer,
    NewLayers: newLayers,
    NewLink: newLink,
    NewObject: newObject,
    NewPerson: newPerson,
    NewPrescription: newPrescription,
    NewTextBox: newTextBox,
    Ninja: ninja,
    NotEqualTo: notEqualTo,
    Notifications: notifications,
    NotificationsSnooze: notificationsSnooze,
    NotificationsUpdated: notificationsUpdated,
    NumberedList: numberedList,
    Numerical: numerical,
    Office: office,
    Offline: offline,
    OilField: oilField,
    OneColumn: oneColumn,
    OneToMany: oneToMany,
    OneToOne: oneToOne,
    OpenApplication: openApplication,
    Outdated: outdated,
    PageLayout: pageLayout,
    PanelStats: panelStats,
    PanelTable: panelTable,
    Paperclip: paperclip,
    Paragraph: paragraph,
    Path: path,
    PathSearch: pathSearch,
    Pause: pause,
    People: people,
    Percentage: percentage,
    Person: person,
    Phone: phone,
    PieChart: pieChart,
    Pin: pin,
    Pivot: pivot,
    PivotTable: pivotTable,
    Play: play,
    Playbook: playbook,
    Plus: plus,
    PolygonFilter: polygonFilter,
    Power: power,
    PredictiveAnalysis: predictiveAnalysis,
    Prescription: prescription,
    Presentation: presentation,
    Print: print,
    Projects: projects,
    Properties: properties,
    Property: property,
    PublishFunction: publishFunction,
    Pulse: pulse,
    Rain: rain,
    Random: random$1,
    Record: record,
    RectHeight: rectHeight,
    RectWidth: rectWidth,
    Rectangle: rectangle,
    Redo: redo,
    Refresh: refresh,
    RegressionChart: regressionChart,
    Remove: remove,
    RemoveColumn: removeColumn,
    RemoveColumnLeft: removeColumnLeft,
    RemoveColumnRight: removeColumnRight,
    RemoveRowBottom: removeRowBottom,
    RemoveRowTop: removeRowTop,
    Repeat: repeat,
    Reset: reset$1,
    Resolve: resolve,
    Rig: rig,
    RightJoin: rightJoin,
    Ring: ring,
    Rocket: rocket,
    RocketSlant: rocketSlant,
    RotateDocument: rotateDocument,
    RotatePage: rotatePage,
    Route: route,
    Satellite: satellite,
    Saved: saved,
    ScatterPlot: scatterPlot,
    Search: search,
    SearchAround: searchAround,
    SearchTemplate: searchTemplate,
    SearchText: searchText,
    SegmentedControl: segmentedControl,
    Select: select,
    Selection: selection,
    SendMessage: sendMessage,
    SendTo: sendTo,
    SendToGraph: sendToGraph,
    SendToMap: sendToMap,
    SeriesAdd: seriesAdd,
    SeriesConfiguration: seriesConfiguration,
    SeriesDerived: seriesDerived,
    SeriesFiltered: seriesFiltered,
    SeriesSearch: seriesSearch,
    Settings: settings,
    Shapes: shapes,
    Share: share,
    SharedFilter: sharedFilter,
    Shield: shield,
    Ship: ship,
    Shop: shop,
    ShoppingCart: shoppingCart,
    SignalSearch: signalSearch,
    SimCard: simCard,
    Slash: slash,
    SmallCross: smallCross,
    SmallMinus: smallMinus,
    SmallPlus: smallPlus,
    SmallSquare: smallSquare,
    SmallTick: smallTick,
    Snowflake: snowflake,
    SocialMedia: socialMedia,
    Sort: sort,
    SortAlphabetical: sortAlphabetical,
    SortAlphabeticalDesc: sortAlphabeticalDesc,
    SortAsc: sortAsc,
    SortDesc: sortDesc,
    SortNumerical: sortNumerical,
    SortNumericalDesc: sortNumericalDesc,
    SplitColumns: splitColumns,
    Square: square,
    StackedChart: stackedChart,
    StadiumGeometry: stadiumGeometry,
    Star: star,
    StarEmpty: starEmpty,
    StepBackward: stepBackward,
    StepChart: stepChart,
    StepForward: stepForward,
    Stop: stop,
    Stopwatch: stopwatch,
    Strikethrough: strikethrough,
    Style: style,
    SwapHorizontal: swapHorizontal,
    SwapVertical: swapVertical,
    Switch: _switch,
    SymbolCircle: symbolCircle,
    SymbolCross: symbolCross,
    SymbolDiamond: symbolDiamond,
    SymbolRectangle: symbolRectangle,
    SymbolSquare: symbolSquare,
    SymbolTriangleDown: symbolTriangleDown,
    SymbolTriangleUp: symbolTriangleUp,
    Syringe: syringe,
    Tag: tag,
    TakeAction: takeAction,
    Tank: tank,
    Target: target,
    Taxi: taxi,
    Temperature: temperature,
    TextHighlight: textHighlight,
    Th: th,
    ThDerived: thDerived,
    ThDisconnect: thDisconnect,
    ThFiltered: thFiltered,
    ThList: thList,
    ThirdParty: thirdParty,
    ThumbsDown: thumbsDown,
    ThumbsUp: thumbsUp,
    Tick: tick,
    TickCircle: tickCircle,
    Time: time$1,
    TimelineAreaChart: timelineAreaChart,
    TimelineBarChart: timelineBarChart,
    TimelineEvents: timelineEvents,
    TimelineLineChart: timelineLineChart,
    Tint: tint,
    Torch: torch,
    Tractor: tractor,
    Train: train,
    Translate: translate$2,
    Trash: trash,
    Tree: tree,
    TrendingDown: trendingDown,
    TrendingUp: trendingUp,
    Truck: truck,
    TwoColumns: twoColumns,
    Unarchive: unarchive,
    Underline: underline,
    Undo: undo,
    UngroupObjects: ungroupObjects,
    UnknownVehicle: unknownVehicle,
    Unlock: unlock,
    Unpin: unpin,
    Unresolve: unresolve,
    Updated: updated,
    Upload: upload,
    User: user,
    Variable: variable,
    VerticalBarChartAsc: verticalBarChartAsc,
    VerticalBarChartDesc: verticalBarChartDesc,
    VerticalDistribution: verticalDistribution,
    VerticalInbetween: verticalInbetween,
    Video: video,
    Virus: virus,
    VolumeDown: volumeDown,
    VolumeOff: volumeOff,
    VolumeUp: volumeUp,
    Walk: walk,
    WarningSign: warningSign,
    WaterfallChart: waterfallChart,
    Waves: waves,
    Widget: widget,
    WidgetButton: widgetButton,
    WidgetFooter: widgetFooter,
    WidgetHeader: widgetHeader,
    Wind: wind,
    Wrench: wrench,
    ZoomIn: zoomIn,
    ZoomOut: zoomOut,
    ZoomToFit: zoomToFit$2
  });
  function iconNameToPathsRecordKey(name) {
    return pascalCase(name);
  }
  var _a$2;
  var BlueprintIcons_16;
  (function (BlueprintIcons_16) {
    BlueprintIcons_16["AddClip"] = "add-clip";
    BlueprintIcons_16["AddColumnLeft"] = "add-column-left";
    BlueprintIcons_16["AddColumnRight"] = "add-column-right";
    BlueprintIcons_16["AddLocation"] = "add-location";
    BlueprintIcons_16["AddRowBottom"] = "add-row-bottom";
    BlueprintIcons_16["AddRowTop"] = "add-row-top";
    BlueprintIcons_16["AddToArtifact"] = "add-to-artifact";
    BlueprintIcons_16["AddToFolder"] = "add-to-folder";
    BlueprintIcons_16["Add"] = "add";
    BlueprintIcons_16["Airplane"] = "airplane";
    BlueprintIcons_16["AlignCenter"] = "align-center";
    BlueprintIcons_16["AlignJustify"] = "align-justify";
    BlueprintIcons_16["AlignLeft"] = "align-left";
    BlueprintIcons_16["AlignRight"] = "align-right";
    BlueprintIcons_16["AlignmentBottom"] = "alignment-bottom";
    BlueprintIcons_16["AlignmentHorizontalCenter"] = "alignment-horizontal-center";
    BlueprintIcons_16["AlignmentLeft"] = "alignment-left";
    BlueprintIcons_16["AlignmentRight"] = "alignment-right";
    BlueprintIcons_16["AlignmentTop"] = "alignment-top";
    BlueprintIcons_16["AlignmentVerticalCenter"] = "alignment-vertical-center";
    BlueprintIcons_16["Annotation"] = "annotation";
    BlueprintIcons_16["Antenna"] = "antenna";
    BlueprintIcons_16["AppHeader"] = "app-header";
    BlueprintIcons_16["Application"] = "application";
    BlueprintIcons_16["Applications"] = "applications";
    BlueprintIcons_16["Archive"] = "archive";
    BlueprintIcons_16["AreaOfInterest"] = "area-of-interest";
    BlueprintIcons_16["ArrayBoolean"] = "array-boolean";
    BlueprintIcons_16["ArrayDate"] = "array-date";
    BlueprintIcons_16["ArrayFloatingPoint"] = "array-floating-point";
    BlueprintIcons_16["ArrayNumeric"] = "array-numeric";
    BlueprintIcons_16["ArrayString"] = "array-string";
    BlueprintIcons_16["ArrayTimestamp"] = "array-timestamp";
    BlueprintIcons_16["Array"] = "array";
    BlueprintIcons_16["ArrowBottomLeft"] = "arrow-bottom-left";
    BlueprintIcons_16["ArrowBottomRight"] = "arrow-bottom-right";
    BlueprintIcons_16["ArrowDown"] = "arrow-down";
    BlueprintIcons_16["ArrowLeft"] = "arrow-left";
    BlueprintIcons_16["ArrowRight"] = "arrow-right";
    BlueprintIcons_16["ArrowTopLeft"] = "arrow-top-left";
    BlueprintIcons_16["ArrowTopRight"] = "arrow-top-right";
    BlueprintIcons_16["ArrowUp"] = "arrow-up";
    BlueprintIcons_16["ArrowsHorizontal"] = "arrows-horizontal";
    BlueprintIcons_16["ArrowsVertical"] = "arrows-vertical";
    BlueprintIcons_16["Asterisk"] = "asterisk";
    BlueprintIcons_16["AutomaticUpdates"] = "automatic-updates";
    BlueprintIcons_16["Backlink"] = "backlink";
    BlueprintIcons_16["Badge"] = "badge";
    BlueprintIcons_16["BanCircle"] = "ban-circle";
    BlueprintIcons_16["BankAccount"] = "bank-account";
    BlueprintIcons_16["Barcode"] = "barcode";
    BlueprintIcons_16["Blank"] = "blank";
    BlueprintIcons_16["BlockedPerson"] = "blocked-person";
    BlueprintIcons_16["Bold"] = "bold";
    BlueprintIcons_16["Book"] = "book";
    BlueprintIcons_16["Bookmark"] = "bookmark";
    BlueprintIcons_16["Box"] = "box";
    BlueprintIcons_16["Briefcase"] = "briefcase";
    BlueprintIcons_16["BringData"] = "bring-data";
    BlueprintIcons_16["Buggy"] = "buggy";
    BlueprintIcons_16["Build"] = "build";
    BlueprintIcons_16["Calculator"] = "calculator";
    BlueprintIcons_16["Calendar"] = "calendar";
    BlueprintIcons_16["Camera"] = "camera";
    BlueprintIcons_16["CaretDown"] = "caret-down";
    BlueprintIcons_16["CaretLeft"] = "caret-left";
    BlueprintIcons_16["CaretRight"] = "caret-right";
    BlueprintIcons_16["CaretUp"] = "caret-up";
    BlueprintIcons_16["CargoShip"] = "cargo-ship";
    BlueprintIcons_16["CellTower"] = "cell-tower";
    BlueprintIcons_16["Changes"] = "changes";
    BlueprintIcons_16["Chart"] = "chart";
    BlueprintIcons_16["Chat"] = "chat";
    BlueprintIcons_16["ChevronBackward"] = "chevron-backward";
    BlueprintIcons_16["ChevronDown"] = "chevron-down";
    BlueprintIcons_16["ChevronForward"] = "chevron-forward";
    BlueprintIcons_16["ChevronLeft"] = "chevron-left";
    BlueprintIcons_16["ChevronRight"] = "chevron-right";
    BlueprintIcons_16["ChevronUp"] = "chevron-up";
    BlueprintIcons_16["CircleArrowDown"] = "circle-arrow-down";
    BlueprintIcons_16["CircleArrowLeft"] = "circle-arrow-left";
    BlueprintIcons_16["CircleArrowRight"] = "circle-arrow-right";
    BlueprintIcons_16["CircleArrowUp"] = "circle-arrow-up";
    BlueprintIcons_16["Circle"] = "circle";
    BlueprintIcons_16["Citation"] = "citation";
    BlueprintIcons_16["Clean"] = "clean";
    BlueprintIcons_16["Clip"] = "clip";
    BlueprintIcons_16["Clipboard"] = "clipboard";
    BlueprintIcons_16["CloudDownload"] = "cloud-download";
    BlueprintIcons_16["CloudUpload"] = "cloud-upload";
    BlueprintIcons_16["Cloud"] = "cloud";
    BlueprintIcons_16["CodeBlock"] = "code-block";
    BlueprintIcons_16["Code"] = "code";
    BlueprintIcons_16["Cog"] = "cog";
    BlueprintIcons_16["CollapseAll"] = "collapse-all";
    BlueprintIcons_16["ColorFill"] = "color-fill";
    BlueprintIcons_16["ColumnLayout"] = "column-layout";
    BlueprintIcons_16["Comment"] = "comment";
    BlueprintIcons_16["Comparison"] = "comparison";
    BlueprintIcons_16["Compass"] = "compass";
    BlueprintIcons_16["Compressed"] = "compressed";
    BlueprintIcons_16["Confirm"] = "confirm";
    BlueprintIcons_16["Console"] = "console";
    BlueprintIcons_16["Contrast"] = "contrast";
    BlueprintIcons_16["Control"] = "control";
    BlueprintIcons_16["CreditCard"] = "credit-card";
    BlueprintIcons_16["Cross"] = "cross";
    BlueprintIcons_16["Crown"] = "crown";
    BlueprintIcons_16["CubeAdd"] = "cube-add";
    BlueprintIcons_16["CubeRemove"] = "cube-remove";
    BlueprintIcons_16["Cube"] = "cube";
    BlueprintIcons_16["CurvedRangeChart"] = "curved-range-chart";
    BlueprintIcons_16["Cut"] = "cut";
    BlueprintIcons_16["Cycle"] = "cycle";
    BlueprintIcons_16["Dashboard"] = "dashboard";
    BlueprintIcons_16["DataConnection"] = "data-connection";
    BlueprintIcons_16["DataLineage"] = "data-lineage";
    BlueprintIcons_16["Database"] = "database";
    BlueprintIcons_16["Delete"] = "delete";
    BlueprintIcons_16["Delta"] = "delta";
    BlueprintIcons_16["DeriveColumn"] = "derive-column";
    BlueprintIcons_16["Desktop"] = "desktop";
    BlueprintIcons_16["Diagnosis"] = "diagnosis";
    BlueprintIcons_16["DiagramTree"] = "diagram-tree";
    BlueprintIcons_16["DirectionLeft"] = "direction-left";
    BlueprintIcons_16["DirectionRight"] = "direction-right";
    BlueprintIcons_16["Disable"] = "disable";
    BlueprintIcons_16["Divide"] = "divide";
    BlueprintIcons_16["DocumentOpen"] = "document-open";
    BlueprintIcons_16["DocumentShare"] = "document-share";
    BlueprintIcons_16["Document"] = "document";
    BlueprintIcons_16["Dollar"] = "dollar";
    BlueprintIcons_16["Dot"] = "dot";
    BlueprintIcons_16["DoubleCaretHorizontal"] = "double-caret-horizontal";
    BlueprintIcons_16["DoubleCaretVertical"] = "double-caret-vertical";
    BlueprintIcons_16["DoubleChevronDown"] = "double-chevron-down";
    BlueprintIcons_16["DoubleChevronLeft"] = "double-chevron-left";
    BlueprintIcons_16["DoubleChevronRight"] = "double-chevron-right";
    BlueprintIcons_16["DoubleChevronUp"] = "double-chevron-up";
    BlueprintIcons_16["DoughnutChart"] = "doughnut-chart";
    BlueprintIcons_16["Download"] = "download";
    BlueprintIcons_16["DragHandleHorizontal"] = "drag-handle-horizontal";
    BlueprintIcons_16["DragHandleVertical"] = "drag-handle-vertical";
    BlueprintIcons_16["Draw"] = "draw";
    BlueprintIcons_16["DrawerLeftFilled"] = "drawer-left-filled";
    BlueprintIcons_16["DrawerLeft"] = "drawer-left";
    BlueprintIcons_16["DrawerRightFilled"] = "drawer-right-filled";
    BlueprintIcons_16["DrawerRight"] = "drawer-right";
    BlueprintIcons_16["DriveTime"] = "drive-time";
    BlueprintIcons_16["Duplicate"] = "duplicate";
    BlueprintIcons_16["Edit"] = "edit";
    BlueprintIcons_16["Eject"] = "eject";
    BlueprintIcons_16["Emoji"] = "emoji";
    BlueprintIcons_16["Endorsed"] = "endorsed";
    BlueprintIcons_16["Envelope"] = "envelope";
    BlueprintIcons_16["Equals"] = "equals";
    BlueprintIcons_16["Eraser"] = "eraser";
    BlueprintIcons_16["Error"] = "error";
    BlueprintIcons_16["Euro"] = "euro";
    BlueprintIcons_16["Exchange"] = "exchange";
    BlueprintIcons_16["ExcludeRow"] = "exclude-row";
    BlueprintIcons_16["ExpandAll"] = "expand-all";
    BlueprintIcons_16["Export"] = "export";
    BlueprintIcons_16["EyeOff"] = "eye-off";
    BlueprintIcons_16["EyeOn"] = "eye-on";
    BlueprintIcons_16["EyeOpen"] = "eye-open";
    BlueprintIcons_16["FastBackward"] = "fast-backward";
    BlueprintIcons_16["FastForward"] = "fast-forward";
    BlueprintIcons_16["FeedSubscribed"] = "feed-subscribed";
    BlueprintIcons_16["Feed"] = "feed";
    BlueprintIcons_16["Film"] = "film";
    BlueprintIcons_16["FilterKeep"] = "filter-keep";
    BlueprintIcons_16["FilterList"] = "filter-list";
    BlueprintIcons_16["FilterOpen"] = "filter-open";
    BlueprintIcons_16["FilterRemove"] = "filter-remove";
    BlueprintIcons_16["Filter"] = "filter";
    BlueprintIcons_16["Flag"] = "flag";
    BlueprintIcons_16["Flame"] = "flame";
    BlueprintIcons_16["Flash"] = "flash";
    BlueprintIcons_16["FloatingPoint"] = "floating-point";
    BlueprintIcons_16["FloppyDisk"] = "floppy-disk";
    BlueprintIcons_16["FlowBranch"] = "flow-branch";
    BlueprintIcons_16["FlowEnd"] = "flow-end";
    BlueprintIcons_16["FlowLinear"] = "flow-linear";
    BlueprintIcons_16["FlowReviewBranch"] = "flow-review-branch";
    BlueprintIcons_16["FlowReview"] = "flow-review";
    BlueprintIcons_16["Flows"] = "flows";
    BlueprintIcons_16["FolderClose"] = "folder-close";
    BlueprintIcons_16["FolderNew"] = "folder-new";
    BlueprintIcons_16["FolderOpen"] = "folder-open";
    BlueprintIcons_16["FolderSharedOpen"] = "folder-shared-open";
    BlueprintIcons_16["FolderShared"] = "folder-shared";
    BlueprintIcons_16["Follower"] = "follower";
    BlueprintIcons_16["Following"] = "following";
    BlueprintIcons_16["Font"] = "font";
    BlueprintIcons_16["Fork"] = "fork";
    BlueprintIcons_16["Form"] = "form";
    BlueprintIcons_16["Fuel"] = "fuel";
    BlueprintIcons_16["FullCircle"] = "full-circle";
    BlueprintIcons_16["FullStackedChart"] = "full-stacked-chart";
    BlueprintIcons_16["Fullscreen"] = "fullscreen";
    BlueprintIcons_16["Function"] = "function";
    BlueprintIcons_16["GanttChart"] = "gantt-chart";
    BlueprintIcons_16["Geofence"] = "geofence";
    BlueprintIcons_16["Geolocation"] = "geolocation";
    BlueprintIcons_16["Geosearch"] = "geosearch";
    BlueprintIcons_16["GitBranch"] = "git-branch";
    BlueprintIcons_16["GitCommit"] = "git-commit";
    BlueprintIcons_16["GitMerge"] = "git-merge";
    BlueprintIcons_16["GitNewBranch"] = "git-new-branch";
    BlueprintIcons_16["GitPull"] = "git-pull";
    BlueprintIcons_16["GitPush"] = "git-push";
    BlueprintIcons_16["GitRepo"] = "git-repo";
    BlueprintIcons_16["Glass"] = "glass";
    BlueprintIcons_16["GlobeNetwork"] = "globe-network";
    BlueprintIcons_16["Globe"] = "globe";
    BlueprintIcons_16["GraphRemove"] = "graph-remove";
    BlueprintIcons_16["Graph"] = "graph";
    BlueprintIcons_16["GreaterThanOrEqualTo"] = "greater-than-or-equal-to";
    BlueprintIcons_16["GreaterThan"] = "greater-than";
    BlueprintIcons_16["GridView"] = "grid-view";
    BlueprintIcons_16["Grid"] = "grid";
    BlueprintIcons_16["GroupObjects"] = "group-objects";
    BlueprintIcons_16["GroupedBarChart"] = "grouped-bar-chart";
    BlueprintIcons_16["HandDown"] = "hand-down";
    BlueprintIcons_16["HandLeft"] = "hand-left";
    BlueprintIcons_16["HandRight"] = "hand-right";
    BlueprintIcons_16["HandUp"] = "hand-up";
    BlueprintIcons_16["Hand"] = "hand";
    BlueprintIcons_16["Hat"] = "hat";
    BlueprintIcons_16["HeaderOne"] = "header-one";
    BlueprintIcons_16["HeaderThree"] = "header-three";
    BlueprintIcons_16["HeaderTwo"] = "header-two";
    BlueprintIcons_16["Header"] = "header";
    BlueprintIcons_16["Headset"] = "headset";
    BlueprintIcons_16["HeartBroken"] = "heart-broken";
    BlueprintIcons_16["Heart"] = "heart";
    BlueprintIcons_16["HeatGrid"] = "heat-grid";
    BlueprintIcons_16["Heatmap"] = "heatmap";
    BlueprintIcons_16["Helicopter"] = "helicopter";
    BlueprintIcons_16["Help"] = "help";
    BlueprintIcons_16["HelperManagement"] = "helper-management";
    BlueprintIcons_16["HighPriority"] = "high-priority";
    BlueprintIcons_16["Highlight"] = "highlight";
    BlueprintIcons_16["History"] = "history";
    BlueprintIcons_16["Home"] = "home";
    BlueprintIcons_16["HorizontalBarChartAsc"] = "horizontal-bar-chart-asc";
    BlueprintIcons_16["HorizontalBarChartDesc"] = "horizontal-bar-chart-desc";
    BlueprintIcons_16["HorizontalBarChart"] = "horizontal-bar-chart";
    BlueprintIcons_16["HorizontalDistribution"] = "horizontal-distribution";
    BlueprintIcons_16["HorizontalInbetween"] = "horizontal-inbetween";
    BlueprintIcons_16["Hurricane"] = "hurricane";
    BlueprintIcons_16["IdNumber"] = "id-number";
    BlueprintIcons_16["ImageRotateLeft"] = "image-rotate-left";
    BlueprintIcons_16["ImageRotateRight"] = "image-rotate-right";
    BlueprintIcons_16["Import"] = "import";
    BlueprintIcons_16["InboxFiltered"] = "inbox-filtered";
    BlueprintIcons_16["InboxGeo"] = "inbox-geo";
    BlueprintIcons_16["InboxSearch"] = "inbox-search";
    BlueprintIcons_16["InboxUpdate"] = "inbox-update";
    BlueprintIcons_16["Inbox"] = "inbox";
    BlueprintIcons_16["InfoSign"] = "info-sign";
    BlueprintIcons_16["Inheritance"] = "inheritance";
    BlueprintIcons_16["InheritedGroup"] = "inherited-group";
    BlueprintIcons_16["InnerJoin"] = "inner-join";
    BlueprintIcons_16["Insert"] = "insert";
    BlueprintIcons_16["Intersection"] = "intersection";
    BlueprintIcons_16["IpAddress"] = "ip-address";
    BlueprintIcons_16["IssueClosed"] = "issue-closed";
    BlueprintIcons_16["IssueNew"] = "issue-new";
    BlueprintIcons_16["Issue"] = "issue";
    BlueprintIcons_16["Italic"] = "italic";
    BlueprintIcons_16["JoinTable"] = "join-table";
    BlueprintIcons_16["KeyBackspace"] = "key-backspace";
    BlueprintIcons_16["KeyCommand"] = "key-command";
    BlueprintIcons_16["KeyControl"] = "key-control";
    BlueprintIcons_16["KeyDelete"] = "key-delete";
    BlueprintIcons_16["KeyEnter"] = "key-enter";
    BlueprintIcons_16["KeyEscape"] = "key-escape";
    BlueprintIcons_16["KeyOption"] = "key-option";
    BlueprintIcons_16["KeyShift"] = "key-shift";
    BlueprintIcons_16["KeyTab"] = "key-tab";
    BlueprintIcons_16["Key"] = "key";
    BlueprintIcons_16["KnownVehicle"] = "known-vehicle";
    BlueprintIcons_16["LabTest"] = "lab-test";
    BlueprintIcons_16["Label"] = "label";
    BlueprintIcons_16["LayerOutline"] = "layer-outline";
    BlueprintIcons_16["Layer"] = "layer";
    BlueprintIcons_16["Layers"] = "layers";
    BlueprintIcons_16["LayoutAuto"] = "layout-auto";
    BlueprintIcons_16["LayoutBalloon"] = "layout-balloon";
    BlueprintIcons_16["LayoutCircle"] = "layout-circle";
    BlueprintIcons_16["LayoutGrid"] = "layout-grid";
    BlueprintIcons_16["LayoutGroupBy"] = "layout-group-by";
    BlueprintIcons_16["LayoutHierarchy"] = "layout-hierarchy";
    BlueprintIcons_16["LayoutLinear"] = "layout-linear";
    BlueprintIcons_16["LayoutSkewGrid"] = "layout-skew-grid";
    BlueprintIcons_16["LayoutSortedClusters"] = "layout-sorted-clusters";
    BlueprintIcons_16["Layout"] = "layout";
    BlueprintIcons_16["Learning"] = "learning";
    BlueprintIcons_16["LeftJoin"] = "left-join";
    BlueprintIcons_16["LessThanOrEqualTo"] = "less-than-or-equal-to";
    BlueprintIcons_16["LessThan"] = "less-than";
    BlueprintIcons_16["Lifesaver"] = "lifesaver";
    BlueprintIcons_16["Lightbulb"] = "lightbulb";
    BlueprintIcons_16["Lightning"] = "lightning";
    BlueprintIcons_16["Link"] = "link";
    BlueprintIcons_16["ListColumns"] = "list-columns";
    BlueprintIcons_16["ListDetailView"] = "list-detail-view";
    BlueprintIcons_16["List"] = "list";
    BlueprintIcons_16["Locate"] = "locate";
    BlueprintIcons_16["Lock"] = "lock";
    BlueprintIcons_16["LogIn"] = "log-in";
    BlueprintIcons_16["LogOut"] = "log-out";
    BlueprintIcons_16["Manual"] = "manual";
    BlueprintIcons_16["ManuallyEnteredData"] = "manually-entered-data";
    BlueprintIcons_16["ManyToMany"] = "many-to-many";
    BlueprintIcons_16["ManyToOne"] = "many-to-one";
    BlueprintIcons_16["MapCreate"] = "map-create";
    BlueprintIcons_16["MapMarker"] = "map-marker";
    BlueprintIcons_16["Map"] = "map";
    BlueprintIcons_16["Maximize"] = "maximize";
    BlueprintIcons_16["Media"] = "media";
    BlueprintIcons_16["MenuClosed"] = "menu-closed";
    BlueprintIcons_16["MenuOpen"] = "menu-open";
    BlueprintIcons_16["Menu"] = "menu";
    BlueprintIcons_16["MergeColumns"] = "merge-columns";
    BlueprintIcons_16["MergeLinks"] = "merge-links";
    BlueprintIcons_16["Minimize"] = "minimize";
    BlueprintIcons_16["Minus"] = "minus";
    BlueprintIcons_16["MobilePhone"] = "mobile-phone";
    BlueprintIcons_16["MobileVideo"] = "mobile-video";
    BlueprintIcons_16["ModalFilled"] = "modal-filled";
    BlueprintIcons_16["Modal"] = "modal";
    BlueprintIcons_16["Moon"] = "moon";
    BlueprintIcons_16["More"] = "more";
    BlueprintIcons_16["Mountain"] = "mountain";
    BlueprintIcons_16["Move"] = "move";
    BlueprintIcons_16["Mugshot"] = "mugshot";
    BlueprintIcons_16["MultiSelect"] = "multi-select";
    BlueprintIcons_16["Music"] = "music";
    BlueprintIcons_16["Nest"] = "nest";
    BlueprintIcons_16["NewDrawing"] = "new-drawing";
    BlueprintIcons_16["NewGridItem"] = "new-grid-item";
    BlueprintIcons_16["NewLayer"] = "new-layer";
    BlueprintIcons_16["NewLayers"] = "new-layers";
    BlueprintIcons_16["NewLink"] = "new-link";
    BlueprintIcons_16["NewObject"] = "new-object";
    BlueprintIcons_16["NewPerson"] = "new-person";
    BlueprintIcons_16["NewPrescription"] = "new-prescription";
    BlueprintIcons_16["NewTextBox"] = "new-text-box";
    BlueprintIcons_16["Ninja"] = "ninja";
    BlueprintIcons_16["NotEqualTo"] = "not-equal-to";
    BlueprintIcons_16["NotificationsSnooze"] = "notifications-snooze";
    BlueprintIcons_16["NotificationsUpdated"] = "notifications-updated";
    BlueprintIcons_16["Notifications"] = "notifications";
    BlueprintIcons_16["NumberedList"] = "numbered-list";
    BlueprintIcons_16["Numerical"] = "numerical";
    BlueprintIcons_16["Office"] = "office";
    BlueprintIcons_16["Offline"] = "offline";
    BlueprintIcons_16["OilField"] = "oil-field";
    BlueprintIcons_16["OneColumn"] = "one-column";
    BlueprintIcons_16["OneToMany"] = "one-to-many";
    BlueprintIcons_16["OneToOne"] = "one-to-one";
    BlueprintIcons_16["OpenApplication"] = "open-application";
    BlueprintIcons_16["Outdated"] = "outdated";
    BlueprintIcons_16["PageLayout"] = "page-layout";
    BlueprintIcons_16["PanelStats"] = "panel-stats";
    BlueprintIcons_16["PanelTable"] = "panel-table";
    BlueprintIcons_16["Paperclip"] = "paperclip";
    BlueprintIcons_16["Paragraph"] = "paragraph";
    BlueprintIcons_16["PathSearch"] = "path-search";
    BlueprintIcons_16["Path"] = "path";
    BlueprintIcons_16["Pause"] = "pause";
    BlueprintIcons_16["People"] = "people";
    BlueprintIcons_16["Percentage"] = "percentage";
    BlueprintIcons_16["Person"] = "person";
    BlueprintIcons_16["Phone"] = "phone";
    BlueprintIcons_16["PieChart"] = "pie-chart";
    BlueprintIcons_16["Pin"] = "pin";
    BlueprintIcons_16["PivotTable"] = "pivot-table";
    BlueprintIcons_16["Pivot"] = "pivot";
    BlueprintIcons_16["Play"] = "play";
    BlueprintIcons_16["Playbook"] = "playbook";
    BlueprintIcons_16["Plus"] = "plus";
    BlueprintIcons_16["PolygonFilter"] = "polygon-filter";
    BlueprintIcons_16["Power"] = "power";
    BlueprintIcons_16["PredictiveAnalysis"] = "predictive-analysis";
    BlueprintIcons_16["Prescription"] = "prescription";
    BlueprintIcons_16["Presentation"] = "presentation";
    BlueprintIcons_16["Print"] = "print";
    BlueprintIcons_16["Projects"] = "projects";
    BlueprintIcons_16["Properties"] = "properties";
    BlueprintIcons_16["Property"] = "property";
    BlueprintIcons_16["PublishFunction"] = "publish-function";
    BlueprintIcons_16["Pulse"] = "pulse";
    BlueprintIcons_16["Rain"] = "rain";
    BlueprintIcons_16["Random"] = "random";
    BlueprintIcons_16["Record"] = "record";
    BlueprintIcons_16["RectHeight"] = "rect-height";
    BlueprintIcons_16["RectWidth"] = "rect-width";
    BlueprintIcons_16["Rectangle"] = "rectangle";
    BlueprintIcons_16["Redo"] = "redo";
    BlueprintIcons_16["Refresh"] = "refresh";
    BlueprintIcons_16["RegressionChart"] = "regression-chart";
    BlueprintIcons_16["RemoveColumnLeft"] = "remove-column-left";
    BlueprintIcons_16["RemoveColumnRight"] = "remove-column-right";
    BlueprintIcons_16["RemoveColumn"] = "remove-column";
    BlueprintIcons_16["RemoveRowBottom"] = "remove-row-bottom";
    BlueprintIcons_16["RemoveRowTop"] = "remove-row-top";
    BlueprintIcons_16["Remove"] = "remove";
    BlueprintIcons_16["Repeat"] = "repeat";
    BlueprintIcons_16["Reset"] = "reset";
    BlueprintIcons_16["Resolve"] = "resolve";
    BlueprintIcons_16["Rig"] = "rig";
    BlueprintIcons_16["RightJoin"] = "right-join";
    BlueprintIcons_16["Ring"] = "ring";
    BlueprintIcons_16["RocketSlant"] = "rocket-slant";
    BlueprintIcons_16["Rocket"] = "rocket";
    BlueprintIcons_16["RotateDocument"] = "rotate-document";
    BlueprintIcons_16["RotatePage"] = "rotate-page";
    BlueprintIcons_16["Route"] = "route";
    BlueprintIcons_16["Satellite"] = "satellite";
    BlueprintIcons_16["Saved"] = "saved";
    BlueprintIcons_16["ScatterPlot"] = "scatter-plot";
    BlueprintIcons_16["SearchAround"] = "search-around";
    BlueprintIcons_16["SearchTemplate"] = "search-template";
    BlueprintIcons_16["SearchText"] = "search-text";
    BlueprintIcons_16["Search"] = "search";
    BlueprintIcons_16["SegmentedControl"] = "segmented-control";
    BlueprintIcons_16["Select"] = "select";
    BlueprintIcons_16["Selection"] = "selection";
    BlueprintIcons_16["SendMessage"] = "send-message";
    BlueprintIcons_16["SendToGraph"] = "send-to-graph";
    BlueprintIcons_16["SendToMap"] = "send-to-map";
    BlueprintIcons_16["SendTo"] = "send-to";
    BlueprintIcons_16["SeriesAdd"] = "series-add";
    BlueprintIcons_16["SeriesConfiguration"] = "series-configuration";
    BlueprintIcons_16["SeriesDerived"] = "series-derived";
    BlueprintIcons_16["SeriesFiltered"] = "series-filtered";
    BlueprintIcons_16["SeriesSearch"] = "series-search";
    BlueprintIcons_16["Settings"] = "settings";
    BlueprintIcons_16["Shapes"] = "shapes";
    BlueprintIcons_16["Share"] = "share";
    BlueprintIcons_16["SharedFilter"] = "shared-filter";
    BlueprintIcons_16["Shield"] = "shield";
    BlueprintIcons_16["Ship"] = "ship";
    BlueprintIcons_16["Shop"] = "shop";
    BlueprintIcons_16["ShoppingCart"] = "shopping-cart";
    BlueprintIcons_16["SignalSearch"] = "signal-search";
    BlueprintIcons_16["SimCard"] = "sim-card";
    BlueprintIcons_16["Slash"] = "slash";
    BlueprintIcons_16["SmallCross"] = "small-cross";
    BlueprintIcons_16["SmallMinus"] = "small-minus";
    BlueprintIcons_16["SmallPlus"] = "small-plus";
    BlueprintIcons_16["SmallSquare"] = "small-square";
    BlueprintIcons_16["SmallTick"] = "small-tick";
    BlueprintIcons_16["Snowflake"] = "snowflake";
    BlueprintIcons_16["SocialMedia"] = "social-media";
    BlueprintIcons_16["SortAlphabeticalDesc"] = "sort-alphabetical-desc";
    BlueprintIcons_16["SortAlphabetical"] = "sort-alphabetical";
    BlueprintIcons_16["SortAsc"] = "sort-asc";
    BlueprintIcons_16["SortDesc"] = "sort-desc";
    BlueprintIcons_16["SortNumericalDesc"] = "sort-numerical-desc";
    BlueprintIcons_16["SortNumerical"] = "sort-numerical";
    BlueprintIcons_16["Sort"] = "sort";
    BlueprintIcons_16["SplitColumns"] = "split-columns";
    BlueprintIcons_16["Square"] = "square";
    BlueprintIcons_16["StackedChart"] = "stacked-chart";
    BlueprintIcons_16["StadiumGeometry"] = "stadium-geometry";
    BlueprintIcons_16["StarEmpty"] = "star-empty";
    BlueprintIcons_16["Star"] = "star";
    BlueprintIcons_16["StepBackward"] = "step-backward";
    BlueprintIcons_16["StepChart"] = "step-chart";
    BlueprintIcons_16["StepForward"] = "step-forward";
    BlueprintIcons_16["Stop"] = "stop";
    BlueprintIcons_16["Stopwatch"] = "stopwatch";
    BlueprintIcons_16["Strikethrough"] = "strikethrough";
    BlueprintIcons_16["Style"] = "style";
    BlueprintIcons_16["SwapHorizontal"] = "swap-horizontal";
    BlueprintIcons_16["SwapVertical"] = "swap-vertical";
    BlueprintIcons_16["Switch"] = "switch";
    BlueprintIcons_16["SymbolCircle"] = "symbol-circle";
    BlueprintIcons_16["SymbolCross"] = "symbol-cross";
    BlueprintIcons_16["SymbolDiamond"] = "symbol-diamond";
    BlueprintIcons_16["SymbolRectangle"] = "symbol-rectangle";
    BlueprintIcons_16["SymbolSquare"] = "symbol-square";
    BlueprintIcons_16["SymbolTriangleDown"] = "symbol-triangle-down";
    BlueprintIcons_16["SymbolTriangleUp"] = "symbol-triangle-up";
    BlueprintIcons_16["Syringe"] = "syringe";
    BlueprintIcons_16["Tag"] = "tag";
    BlueprintIcons_16["TakeAction"] = "take-action";
    BlueprintIcons_16["Tank"] = "tank";
    BlueprintIcons_16["Target"] = "target";
    BlueprintIcons_16["Taxi"] = "taxi";
    BlueprintIcons_16["Temperature"] = "temperature";
    BlueprintIcons_16["TextHighlight"] = "text-highlight";
    BlueprintIcons_16["ThDerived"] = "th-derived";
    BlueprintIcons_16["ThDisconnect"] = "th-disconnect";
    BlueprintIcons_16["ThFiltered"] = "th-filtered";
    BlueprintIcons_16["ThList"] = "th-list";
    BlueprintIcons_16["Th"] = "th";
    BlueprintIcons_16["ThirdParty"] = "third-party";
    BlueprintIcons_16["ThumbsDown"] = "thumbs-down";
    BlueprintIcons_16["ThumbsUp"] = "thumbs-up";
    BlueprintIcons_16["TickCircle"] = "tick-circle";
    BlueprintIcons_16["Tick"] = "tick";
    BlueprintIcons_16["Time"] = "time";
    BlueprintIcons_16["TimelineAreaChart"] = "timeline-area-chart";
    BlueprintIcons_16["TimelineBarChart"] = "timeline-bar-chart";
    BlueprintIcons_16["TimelineEvents"] = "timeline-events";
    BlueprintIcons_16["TimelineLineChart"] = "timeline-line-chart";
    BlueprintIcons_16["Tint"] = "tint";
    BlueprintIcons_16["Torch"] = "torch";
    BlueprintIcons_16["Tractor"] = "tractor";
    BlueprintIcons_16["Train"] = "train";
    BlueprintIcons_16["Translate"] = "translate";
    BlueprintIcons_16["Trash"] = "trash";
    BlueprintIcons_16["Tree"] = "tree";
    BlueprintIcons_16["TrendingDown"] = "trending-down";
    BlueprintIcons_16["TrendingUp"] = "trending-up";
    BlueprintIcons_16["Truck"] = "truck";
    BlueprintIcons_16["TwoColumns"] = "two-columns";
    BlueprintIcons_16["Unarchive"] = "unarchive";
    BlueprintIcons_16["Underline"] = "underline";
    BlueprintIcons_16["Undo"] = "undo";
    BlueprintIcons_16["UngroupObjects"] = "ungroup-objects";
    BlueprintIcons_16["UnknownVehicle"] = "unknown-vehicle";
    BlueprintIcons_16["Unlock"] = "unlock";
    BlueprintIcons_16["Unpin"] = "unpin";
    BlueprintIcons_16["Unresolve"] = "unresolve";
    BlueprintIcons_16["Updated"] = "updated";
    BlueprintIcons_16["Upload"] = "upload";
    BlueprintIcons_16["User"] = "user";
    BlueprintIcons_16["Variable"] = "variable";
    BlueprintIcons_16["VerticalBarChartAsc"] = "vertical-bar-chart-asc";
    BlueprintIcons_16["VerticalBarChartDesc"] = "vertical-bar-chart-desc";
    BlueprintIcons_16["VerticalDistribution"] = "vertical-distribution";
    BlueprintIcons_16["VerticalInbetween"] = "vertical-inbetween";
    BlueprintIcons_16["Video"] = "video";
    BlueprintIcons_16["Virus"] = "virus";
    BlueprintIcons_16["VolumeDown"] = "volume-down";
    BlueprintIcons_16["VolumeOff"] = "volume-off";
    BlueprintIcons_16["VolumeUp"] = "volume-up";
    BlueprintIcons_16["Walk"] = "walk";
    BlueprintIcons_16["WarningSign"] = "warning-sign";
    BlueprintIcons_16["WaterfallChart"] = "waterfall-chart";
    BlueprintIcons_16["Waves"] = "waves";
    BlueprintIcons_16["WidgetButton"] = "widget-button";
    BlueprintIcons_16["WidgetFooter"] = "widget-footer";
    BlueprintIcons_16["WidgetHeader"] = "widget-header";
    BlueprintIcons_16["Widget"] = "widget";
    BlueprintIcons_16["Wind"] = "wind";
    BlueprintIcons_16["Wrench"] = "wrench";
    BlueprintIcons_16["ZoomIn"] = "zoom-in";
    BlueprintIcons_16["ZoomOut"] = "zoom-out";
    BlueprintIcons_16["ZoomToFit"] = "zoom-to-fit";
  })(BlueprintIcons_16 || (BlueprintIcons_16 = {}));
  (_a$2 = {}, _a$2[BlueprintIcons_16.AddClip] = "61697", _a$2[BlueprintIcons_16.AddColumnLeft] = "61698", _a$2[BlueprintIcons_16.AddColumnRight] = "61699", _a$2[BlueprintIcons_16.AddLocation] = "61700", _a$2[BlueprintIcons_16.AddRowBottom] = "61701", _a$2[BlueprintIcons_16.AddRowTop] = "61702", _a$2[BlueprintIcons_16.AddToArtifact] = "61703", _a$2[BlueprintIcons_16.AddToFolder] = "61704", _a$2[BlueprintIcons_16.Add] = "61705", _a$2[BlueprintIcons_16.Airplane] = "61706", _a$2[BlueprintIcons_16.AlignCenter] = "61707", _a$2[BlueprintIcons_16.AlignJustify] = "61708", _a$2[BlueprintIcons_16.AlignLeft] = "61709", _a$2[BlueprintIcons_16.AlignRight] = "61710", _a$2[BlueprintIcons_16.AlignmentBottom] = "61711", _a$2[BlueprintIcons_16.AlignmentHorizontalCenter] = "61712", _a$2[BlueprintIcons_16.AlignmentLeft] = "61713", _a$2[BlueprintIcons_16.AlignmentRight] = "61714", _a$2[BlueprintIcons_16.AlignmentTop] = "61715", _a$2[BlueprintIcons_16.AlignmentVerticalCenter] = "61716", _a$2[BlueprintIcons_16.Annotation] = "61717", _a$2[BlueprintIcons_16.Antenna] = "61718", _a$2[BlueprintIcons_16.AppHeader] = "61719", _a$2[BlueprintIcons_16.Application] = "61720", _a$2[BlueprintIcons_16.Applications] = "61721", _a$2[BlueprintIcons_16.Archive] = "61722", _a$2[BlueprintIcons_16.AreaOfInterest] = "61723", _a$2[BlueprintIcons_16.ArrayBoolean] = "61724", _a$2[BlueprintIcons_16.ArrayDate] = "61725", _a$2[BlueprintIcons_16.ArrayFloatingPoint] = "62253", _a$2[BlueprintIcons_16.ArrayNumeric] = "61726", _a$2[BlueprintIcons_16.ArrayString] = "61727", _a$2[BlueprintIcons_16.ArrayTimestamp] = "61728", _a$2[BlueprintIcons_16.Array] = "61729", _a$2[BlueprintIcons_16.ArrowBottomLeft] = "61730", _a$2[BlueprintIcons_16.ArrowBottomRight] = "61731", _a$2[BlueprintIcons_16.ArrowDown] = "61732", _a$2[BlueprintIcons_16.ArrowLeft] = "61733", _a$2[BlueprintIcons_16.ArrowRight] = "61734", _a$2[BlueprintIcons_16.ArrowTopLeft] = "61735", _a$2[BlueprintIcons_16.ArrowTopRight] = "61736", _a$2[BlueprintIcons_16.ArrowUp] = "61737", _a$2[BlueprintIcons_16.ArrowsHorizontal] = "61738", _a$2[BlueprintIcons_16.ArrowsVertical] = "61739", _a$2[BlueprintIcons_16.Asterisk] = "61740", _a$2[BlueprintIcons_16.AutomaticUpdates] = "61741", _a$2[BlueprintIcons_16.Backlink] = "61742", _a$2[BlueprintIcons_16.Badge] = "61743", _a$2[BlueprintIcons_16.BanCircle] = "61744", _a$2[BlueprintIcons_16.BankAccount] = "61745", _a$2[BlueprintIcons_16.Barcode] = "61746", _a$2[BlueprintIcons_16.Blank] = "61747", _a$2[BlueprintIcons_16.BlockedPerson] = "61748", _a$2[BlueprintIcons_16.Bold] = "61749", _a$2[BlueprintIcons_16.Book] = "61750", _a$2[BlueprintIcons_16.Bookmark] = "61751", _a$2[BlueprintIcons_16.Box] = "61752", _a$2[BlueprintIcons_16.Briefcase] = "61753", _a$2[BlueprintIcons_16.BringData] = "61754", _a$2[BlueprintIcons_16.Buggy] = "61755", _a$2[BlueprintIcons_16.Build] = "61756", _a$2[BlueprintIcons_16.Calculator] = "61757", _a$2[BlueprintIcons_16.Calendar] = "61758", _a$2[BlueprintIcons_16.Camera] = "61759", _a$2[BlueprintIcons_16.CaretDown] = "61760", _a$2[BlueprintIcons_16.CaretLeft] = "61761", _a$2[BlueprintIcons_16.CaretRight] = "61762", _a$2[BlueprintIcons_16.CaretUp] = "61763", _a$2[BlueprintIcons_16.CargoShip] = "61764", _a$2[BlueprintIcons_16.CellTower] = "61765", _a$2[BlueprintIcons_16.Changes] = "61766", _a$2[BlueprintIcons_16.Chart] = "61767", _a$2[BlueprintIcons_16.Chat] = "61768", _a$2[BlueprintIcons_16.ChevronBackward] = "61769", _a$2[BlueprintIcons_16.ChevronDown] = "61770", _a$2[BlueprintIcons_16.ChevronForward] = "61771", _a$2[BlueprintIcons_16.ChevronLeft] = "61772", _a$2[BlueprintIcons_16.ChevronRight] = "61773", _a$2[BlueprintIcons_16.ChevronUp] = "61774", _a$2[BlueprintIcons_16.CircleArrowDown] = "61775", _a$2[BlueprintIcons_16.CircleArrowLeft] = "61776", _a$2[BlueprintIcons_16.CircleArrowRight] = "61777", _a$2[BlueprintIcons_16.CircleArrowUp] = "61778", _a$2[BlueprintIcons_16.Circle] = "61779", _a$2[BlueprintIcons_16.Citation] = "61780", _a$2[BlueprintIcons_16.Clean] = "61781", _a$2[BlueprintIcons_16.Clip] = "61782", _a$2[BlueprintIcons_16.Clipboard] = "61783", _a$2[BlueprintIcons_16.CloudDownload] = "61784", _a$2[BlueprintIcons_16.CloudUpload] = "61785", _a$2[BlueprintIcons_16.Cloud] = "61786", _a$2[BlueprintIcons_16.CodeBlock] = "61787", _a$2[BlueprintIcons_16.Code] = "61788", _a$2[BlueprintIcons_16.Cog] = "61789", _a$2[BlueprintIcons_16.CollapseAll] = "61790", _a$2[BlueprintIcons_16.ColorFill] = "62248", _a$2[BlueprintIcons_16.ColumnLayout] = "61791", _a$2[BlueprintIcons_16.Comment] = "61792", _a$2[BlueprintIcons_16.Comparison] = "61793", _a$2[BlueprintIcons_16.Compass] = "61794", _a$2[BlueprintIcons_16.Compressed] = "61795", _a$2[BlueprintIcons_16.Confirm] = "61796", _a$2[BlueprintIcons_16.Console] = "61797", _a$2[BlueprintIcons_16.Contrast] = "61798", _a$2[BlueprintIcons_16.Control] = "61799", _a$2[BlueprintIcons_16.CreditCard] = "61800", _a$2[BlueprintIcons_16.Cross] = "61801", _a$2[BlueprintIcons_16.Crown] = "61802", _a$2[BlueprintIcons_16.CubeAdd] = "61803", _a$2[BlueprintIcons_16.CubeRemove] = "61804", _a$2[BlueprintIcons_16.Cube] = "61805", _a$2[BlueprintIcons_16.CurvedRangeChart] = "61806", _a$2[BlueprintIcons_16.Cut] = "61807", _a$2[BlueprintIcons_16.Cycle] = "61808", _a$2[BlueprintIcons_16.Dashboard] = "61809", _a$2[BlueprintIcons_16.DataConnection] = "61810", _a$2[BlueprintIcons_16.DataLineage] = "61811", _a$2[BlueprintIcons_16.Database] = "61812", _a$2[BlueprintIcons_16.Delete] = "61813", _a$2[BlueprintIcons_16.Delta] = "61814", _a$2[BlueprintIcons_16.DeriveColumn] = "61815", _a$2[BlueprintIcons_16.Desktop] = "61816", _a$2[BlueprintIcons_16.Diagnosis] = "61817", _a$2[BlueprintIcons_16.DiagramTree] = "61818", _a$2[BlueprintIcons_16.DirectionLeft] = "61819", _a$2[BlueprintIcons_16.DirectionRight] = "61820", _a$2[BlueprintIcons_16.Disable] = "61821", _a$2[BlueprintIcons_16.Divide] = "62247", _a$2[BlueprintIcons_16.DocumentOpen] = "61822", _a$2[BlueprintIcons_16.DocumentShare] = "61823", _a$2[BlueprintIcons_16.Document] = "61824", _a$2[BlueprintIcons_16.Dollar] = "61825", _a$2[BlueprintIcons_16.Dot] = "61826", _a$2[BlueprintIcons_16.DoubleCaretHorizontal] = "61827", _a$2[BlueprintIcons_16.DoubleCaretVertical] = "61828", _a$2[BlueprintIcons_16.DoubleChevronDown] = "61829", _a$2[BlueprintIcons_16.DoubleChevronLeft] = "61830", _a$2[BlueprintIcons_16.DoubleChevronRight] = "61831", _a$2[BlueprintIcons_16.DoubleChevronUp] = "61832", _a$2[BlueprintIcons_16.DoughnutChart] = "61833", _a$2[BlueprintIcons_16.Download] = "61834", _a$2[BlueprintIcons_16.DragHandleHorizontal] = "61835", _a$2[BlueprintIcons_16.DragHandleVertical] = "61836", _a$2[BlueprintIcons_16.Draw] = "61837", _a$2[BlueprintIcons_16.DrawerLeftFilled] = "61838", _a$2[BlueprintIcons_16.DrawerLeft] = "61839", _a$2[BlueprintIcons_16.DrawerRightFilled] = "61840", _a$2[BlueprintIcons_16.DrawerRight] = "61841", _a$2[BlueprintIcons_16.DriveTime] = "61842", _a$2[BlueprintIcons_16.Duplicate] = "61843", _a$2[BlueprintIcons_16.Edit] = "61844", _a$2[BlueprintIcons_16.Eject] = "61845", _a$2[BlueprintIcons_16.Emoji] = "61846", _a$2[BlueprintIcons_16.Endorsed] = "61847", _a$2[BlueprintIcons_16.Envelope] = "61848", _a$2[BlueprintIcons_16.Equals] = "61849", _a$2[BlueprintIcons_16.Eraser] = "61850", _a$2[BlueprintIcons_16.Error] = "61851", _a$2[BlueprintIcons_16.Euro] = "61852", _a$2[BlueprintIcons_16.Exchange] = "61853", _a$2[BlueprintIcons_16.ExcludeRow] = "61854", _a$2[BlueprintIcons_16.ExpandAll] = "61855", _a$2[BlueprintIcons_16.Export] = "61856", _a$2[BlueprintIcons_16.EyeOff] = "61857", _a$2[BlueprintIcons_16.EyeOn] = "61858", _a$2[BlueprintIcons_16.EyeOpen] = "61859", _a$2[BlueprintIcons_16.FastBackward] = "61860", _a$2[BlueprintIcons_16.FastForward] = "61861", _a$2[BlueprintIcons_16.FeedSubscribed] = "61862", _a$2[BlueprintIcons_16.Feed] = "61863", _a$2[BlueprintIcons_16.Film] = "61864", _a$2[BlueprintIcons_16.FilterKeep] = "61865", _a$2[BlueprintIcons_16.FilterList] = "61866", _a$2[BlueprintIcons_16.FilterOpen] = "61867", _a$2[BlueprintIcons_16.FilterRemove] = "61868", _a$2[BlueprintIcons_16.Filter] = "61869", _a$2[BlueprintIcons_16.Flag] = "61870", _a$2[BlueprintIcons_16.Flame] = "61871", _a$2[BlueprintIcons_16.Flash] = "61872", _a$2[BlueprintIcons_16.FloatingPoint] = "62252", _a$2[BlueprintIcons_16.FloppyDisk] = "61873", _a$2[BlueprintIcons_16.FlowBranch] = "61874", _a$2[BlueprintIcons_16.FlowEnd] = "61875", _a$2[BlueprintIcons_16.FlowLinear] = "61876", _a$2[BlueprintIcons_16.FlowReviewBranch] = "61877", _a$2[BlueprintIcons_16.FlowReview] = "61878", _a$2[BlueprintIcons_16.Flows] = "61879", _a$2[BlueprintIcons_16.FolderClose] = "61880", _a$2[BlueprintIcons_16.FolderNew] = "61881", _a$2[BlueprintIcons_16.FolderOpen] = "61882", _a$2[BlueprintIcons_16.FolderSharedOpen] = "61883", _a$2[BlueprintIcons_16.FolderShared] = "61884", _a$2[BlueprintIcons_16.Follower] = "61885", _a$2[BlueprintIcons_16.Following] = "61886", _a$2[BlueprintIcons_16.Font] = "61887", _a$2[BlueprintIcons_16.Fork] = "61888", _a$2[BlueprintIcons_16.Form] = "61889", _a$2[BlueprintIcons_16.Fuel] = "62243", _a$2[BlueprintIcons_16.FullCircle] = "61890", _a$2[BlueprintIcons_16.FullStackedChart] = "61891", _a$2[BlueprintIcons_16.Fullscreen] = "61892", _a$2[BlueprintIcons_16.Function] = "61893", _a$2[BlueprintIcons_16.GanttChart] = "61894", _a$2[BlueprintIcons_16.Geofence] = "61895", _a$2[BlueprintIcons_16.Geolocation] = "61896", _a$2[BlueprintIcons_16.Geosearch] = "61897", _a$2[BlueprintIcons_16.GitBranch] = "61898", _a$2[BlueprintIcons_16.GitCommit] = "61899", _a$2[BlueprintIcons_16.GitMerge] = "61900", _a$2[BlueprintIcons_16.GitNewBranch] = "61901", _a$2[BlueprintIcons_16.GitPull] = "61902", _a$2[BlueprintIcons_16.GitPush] = "61903", _a$2[BlueprintIcons_16.GitRepo] = "61904", _a$2[BlueprintIcons_16.Glass] = "61905", _a$2[BlueprintIcons_16.GlobeNetwork] = "61906", _a$2[BlueprintIcons_16.Globe] = "61907", _a$2[BlueprintIcons_16.GraphRemove] = "61908", _a$2[BlueprintIcons_16.Graph] = "61909", _a$2[BlueprintIcons_16.GreaterThanOrEqualTo] = "61910", _a$2[BlueprintIcons_16.GreaterThan] = "61911", _a$2[BlueprintIcons_16.GridView] = "61912", _a$2[BlueprintIcons_16.Grid] = "61913", _a$2[BlueprintIcons_16.GroupObjects] = "61914", _a$2[BlueprintIcons_16.GroupedBarChart] = "61915", _a$2[BlueprintIcons_16.HandDown] = "61916", _a$2[BlueprintIcons_16.HandLeft] = "61917", _a$2[BlueprintIcons_16.HandRight] = "61918", _a$2[BlueprintIcons_16.HandUp] = "61919", _a$2[BlueprintIcons_16.Hand] = "61920", _a$2[BlueprintIcons_16.Hat] = "61921", _a$2[BlueprintIcons_16.HeaderOne] = "61922", _a$2[BlueprintIcons_16.HeaderThree] = "61923", _a$2[BlueprintIcons_16.HeaderTwo] = "61924", _a$2[BlueprintIcons_16.Header] = "61925", _a$2[BlueprintIcons_16.Headset] = "61926", _a$2[BlueprintIcons_16.HeartBroken] = "61927", _a$2[BlueprintIcons_16.Heart] = "61928", _a$2[BlueprintIcons_16.HeatGrid] = "61929", _a$2[BlueprintIcons_16.Heatmap] = "61930", _a$2[BlueprintIcons_16.Helicopter] = "61931", _a$2[BlueprintIcons_16.Help] = "61932", _a$2[BlueprintIcons_16.HelperManagement] = "61933", _a$2[BlueprintIcons_16.HighPriority] = "61934", _a$2[BlueprintIcons_16.Highlight] = "61935", _a$2[BlueprintIcons_16.History] = "61936", _a$2[BlueprintIcons_16.Home] = "61937", _a$2[BlueprintIcons_16.HorizontalBarChartAsc] = "61938", _a$2[BlueprintIcons_16.HorizontalBarChartDesc] = "61939", _a$2[BlueprintIcons_16.HorizontalBarChart] = "61940", _a$2[BlueprintIcons_16.HorizontalDistribution] = "61941", _a$2[BlueprintIcons_16.HorizontalInbetween] = "62249", _a$2[BlueprintIcons_16.Hurricane] = "61942", _a$2[BlueprintIcons_16.IdNumber] = "61943", _a$2[BlueprintIcons_16.ImageRotateLeft] = "61944", _a$2[BlueprintIcons_16.ImageRotateRight] = "61945", _a$2[BlueprintIcons_16.Import] = "61946", _a$2[BlueprintIcons_16.InboxFiltered] = "61947", _a$2[BlueprintIcons_16.InboxGeo] = "61948", _a$2[BlueprintIcons_16.InboxSearch] = "61949", _a$2[BlueprintIcons_16.InboxUpdate] = "61950", _a$2[BlueprintIcons_16.Inbox] = "61951", _a$2[BlueprintIcons_16.InfoSign] = "61952", _a$2[BlueprintIcons_16.Inheritance] = "61953", _a$2[BlueprintIcons_16.InheritedGroup] = "61954", _a$2[BlueprintIcons_16.InnerJoin] = "61955", _a$2[BlueprintIcons_16.Insert] = "61956", _a$2[BlueprintIcons_16.Intersection] = "61957", _a$2[BlueprintIcons_16.IpAddress] = "61958", _a$2[BlueprintIcons_16.IssueClosed] = "61959", _a$2[BlueprintIcons_16.IssueNew] = "61960", _a$2[BlueprintIcons_16.Issue] = "61961", _a$2[BlueprintIcons_16.Italic] = "61962", _a$2[BlueprintIcons_16.JoinTable] = "61963", _a$2[BlueprintIcons_16.KeyBackspace] = "61964", _a$2[BlueprintIcons_16.KeyCommand] = "61965", _a$2[BlueprintIcons_16.KeyControl] = "61966", _a$2[BlueprintIcons_16.KeyDelete] = "61967", _a$2[BlueprintIcons_16.KeyEnter] = "61968", _a$2[BlueprintIcons_16.KeyEscape] = "61969", _a$2[BlueprintIcons_16.KeyOption] = "61970", _a$2[BlueprintIcons_16.KeyShift] = "61971", _a$2[BlueprintIcons_16.KeyTab] = "61972", _a$2[BlueprintIcons_16.Key] = "61973", _a$2[BlueprintIcons_16.KnownVehicle] = "61974", _a$2[BlueprintIcons_16.LabTest] = "61975", _a$2[BlueprintIcons_16.Label] = "61976", _a$2[BlueprintIcons_16.LayerOutline] = "61977", _a$2[BlueprintIcons_16.Layer] = "61978", _a$2[BlueprintIcons_16.Layers] = "61979", _a$2[BlueprintIcons_16.LayoutAuto] = "61980", _a$2[BlueprintIcons_16.LayoutBalloon] = "61981", _a$2[BlueprintIcons_16.LayoutCircle] = "61982", _a$2[BlueprintIcons_16.LayoutGrid] = "61983", _a$2[BlueprintIcons_16.LayoutGroupBy] = "61984", _a$2[BlueprintIcons_16.LayoutHierarchy] = "61985", _a$2[BlueprintIcons_16.LayoutLinear] = "61986", _a$2[BlueprintIcons_16.LayoutSkewGrid] = "61987", _a$2[BlueprintIcons_16.LayoutSortedClusters] = "61988", _a$2[BlueprintIcons_16.Layout] = "61989", _a$2[BlueprintIcons_16.Learning] = "61990", _a$2[BlueprintIcons_16.LeftJoin] = "61991", _a$2[BlueprintIcons_16.LessThanOrEqualTo] = "61992", _a$2[BlueprintIcons_16.LessThan] = "61993", _a$2[BlueprintIcons_16.Lifesaver] = "61994", _a$2[BlueprintIcons_16.Lightbulb] = "61995", _a$2[BlueprintIcons_16.Lightning] = "61996", _a$2[BlueprintIcons_16.Link] = "61997", _a$2[BlueprintIcons_16.ListColumns] = "61998", _a$2[BlueprintIcons_16.ListDetailView] = "61999", _a$2[BlueprintIcons_16.List] = "62000", _a$2[BlueprintIcons_16.Locate] = "62001", _a$2[BlueprintIcons_16.Lock] = "62002", _a$2[BlueprintIcons_16.LogIn] = "62003", _a$2[BlueprintIcons_16.LogOut] = "62004", _a$2[BlueprintIcons_16.Manual] = "62005", _a$2[BlueprintIcons_16.ManuallyEnteredData] = "62006", _a$2[BlueprintIcons_16.ManyToMany] = "62007", _a$2[BlueprintIcons_16.ManyToOne] = "62008", _a$2[BlueprintIcons_16.MapCreate] = "62009", _a$2[BlueprintIcons_16.MapMarker] = "62010", _a$2[BlueprintIcons_16.Map] = "62011", _a$2[BlueprintIcons_16.Maximize] = "62012", _a$2[BlueprintIcons_16.Media] = "62013", _a$2[BlueprintIcons_16.MenuClosed] = "62014", _a$2[BlueprintIcons_16.MenuOpen] = "62015", _a$2[BlueprintIcons_16.Menu] = "62016", _a$2[BlueprintIcons_16.MergeColumns] = "62017", _a$2[BlueprintIcons_16.MergeLinks] = "62018", _a$2[BlueprintIcons_16.Minimize] = "62019", _a$2[BlueprintIcons_16.Minus] = "62020", _a$2[BlueprintIcons_16.MobilePhone] = "62021", _a$2[BlueprintIcons_16.MobileVideo] = "62022", _a$2[BlueprintIcons_16.ModalFilled] = "62023", _a$2[BlueprintIcons_16.Modal] = "62024", _a$2[BlueprintIcons_16.Moon] = "62025", _a$2[BlueprintIcons_16.More] = "62026", _a$2[BlueprintIcons_16.Mountain] = "62027", _a$2[BlueprintIcons_16.Move] = "62028", _a$2[BlueprintIcons_16.Mugshot] = "62029", _a$2[BlueprintIcons_16.MultiSelect] = "62030", _a$2[BlueprintIcons_16.Music] = "62031", _a$2[BlueprintIcons_16.Nest] = "62032", _a$2[BlueprintIcons_16.NewDrawing] = "62033", _a$2[BlueprintIcons_16.NewGridItem] = "62034", _a$2[BlueprintIcons_16.NewLayer] = "62035", _a$2[BlueprintIcons_16.NewLayers] = "62036", _a$2[BlueprintIcons_16.NewLink] = "62037", _a$2[BlueprintIcons_16.NewObject] = "62038", _a$2[BlueprintIcons_16.NewPerson] = "62039", _a$2[BlueprintIcons_16.NewPrescription] = "62040", _a$2[BlueprintIcons_16.NewTextBox] = "62041", _a$2[BlueprintIcons_16.Ninja] = "62042", _a$2[BlueprintIcons_16.NotEqualTo] = "62043", _a$2[BlueprintIcons_16.NotificationsSnooze] = "62044", _a$2[BlueprintIcons_16.NotificationsUpdated] = "62045", _a$2[BlueprintIcons_16.Notifications] = "62046", _a$2[BlueprintIcons_16.NumberedList] = "62047", _a$2[BlueprintIcons_16.Numerical] = "62048", _a$2[BlueprintIcons_16.Office] = "62049", _a$2[BlueprintIcons_16.Offline] = "62050", _a$2[BlueprintIcons_16.OilField] = "62051", _a$2[BlueprintIcons_16.OneColumn] = "62052", _a$2[BlueprintIcons_16.OneToMany] = "62053", _a$2[BlueprintIcons_16.OneToOne] = "62054", _a$2[BlueprintIcons_16.OpenApplication] = "62251", _a$2[BlueprintIcons_16.Outdated] = "62055", _a$2[BlueprintIcons_16.PageLayout] = "62056", _a$2[BlueprintIcons_16.PanelStats] = "62057", _a$2[BlueprintIcons_16.PanelTable] = "62058", _a$2[BlueprintIcons_16.Paperclip] = "62059", _a$2[BlueprintIcons_16.Paragraph] = "62060", _a$2[BlueprintIcons_16.PathSearch] = "62061", _a$2[BlueprintIcons_16.Path] = "62062", _a$2[BlueprintIcons_16.Pause] = "62063", _a$2[BlueprintIcons_16.People] = "62064", _a$2[BlueprintIcons_16.Percentage] = "62065", _a$2[BlueprintIcons_16.Person] = "62066", _a$2[BlueprintIcons_16.Phone] = "62067", _a$2[BlueprintIcons_16.PieChart] = "62068", _a$2[BlueprintIcons_16.Pin] = "62069", _a$2[BlueprintIcons_16.PivotTable] = "62070", _a$2[BlueprintIcons_16.Pivot] = "62071", _a$2[BlueprintIcons_16.Play] = "62072", _a$2[BlueprintIcons_16.Playbook] = "62244", _a$2[BlueprintIcons_16.Plus] = "62073", _a$2[BlueprintIcons_16.PolygonFilter] = "62074", _a$2[BlueprintIcons_16.Power] = "62075", _a$2[BlueprintIcons_16.PredictiveAnalysis] = "62076", _a$2[BlueprintIcons_16.Prescription] = "62077", _a$2[BlueprintIcons_16.Presentation] = "62078", _a$2[BlueprintIcons_16.Print] = "62079", _a$2[BlueprintIcons_16.Projects] = "62080", _a$2[BlueprintIcons_16.Properties] = "62081", _a$2[BlueprintIcons_16.Property] = "62082", _a$2[BlueprintIcons_16.PublishFunction] = "62083", _a$2[BlueprintIcons_16.Pulse] = "62084", _a$2[BlueprintIcons_16.Rain] = "62085", _a$2[BlueprintIcons_16.Random] = "62086", _a$2[BlueprintIcons_16.Record] = "62087", _a$2[BlueprintIcons_16.RectHeight] = "62245", _a$2[BlueprintIcons_16.RectWidth] = "62246", _a$2[BlueprintIcons_16.Rectangle] = "62241", _a$2[BlueprintIcons_16.Redo] = "62088", _a$2[BlueprintIcons_16.Refresh] = "62089", _a$2[BlueprintIcons_16.RegressionChart] = "62090", _a$2[BlueprintIcons_16.RemoveColumnLeft] = "62091", _a$2[BlueprintIcons_16.RemoveColumnRight] = "62092", _a$2[BlueprintIcons_16.RemoveColumn] = "62093", _a$2[BlueprintIcons_16.RemoveRowBottom] = "62094", _a$2[BlueprintIcons_16.RemoveRowTop] = "62095", _a$2[BlueprintIcons_16.Remove] = "62096", _a$2[BlueprintIcons_16.Repeat] = "62097", _a$2[BlueprintIcons_16.Reset] = "62098", _a$2[BlueprintIcons_16.Resolve] = "62099", _a$2[BlueprintIcons_16.Rig] = "62100", _a$2[BlueprintIcons_16.RightJoin] = "62101", _a$2[BlueprintIcons_16.Ring] = "62102", _a$2[BlueprintIcons_16.RocketSlant] = "62103", _a$2[BlueprintIcons_16.Rocket] = "62104", _a$2[BlueprintIcons_16.RotateDocument] = "62105", _a$2[BlueprintIcons_16.RotatePage] = "62106", _a$2[BlueprintIcons_16.Route] = "62107", _a$2[BlueprintIcons_16.Satellite] = "62108", _a$2[BlueprintIcons_16.Saved] = "62109", _a$2[BlueprintIcons_16.ScatterPlot] = "62110", _a$2[BlueprintIcons_16.SearchAround] = "62111", _a$2[BlueprintIcons_16.SearchTemplate] = "62112", _a$2[BlueprintIcons_16.SearchText] = "62113", _a$2[BlueprintIcons_16.Search] = "62114", _a$2[BlueprintIcons_16.SegmentedControl] = "62115", _a$2[BlueprintIcons_16.Select] = "62116", _a$2[BlueprintIcons_16.Selection] = "62117", _a$2[BlueprintIcons_16.SendMessage] = "62118", _a$2[BlueprintIcons_16.SendToGraph] = "62119", _a$2[BlueprintIcons_16.SendToMap] = "62120", _a$2[BlueprintIcons_16.SendTo] = "62121", _a$2[BlueprintIcons_16.SeriesAdd] = "62122", _a$2[BlueprintIcons_16.SeriesConfiguration] = "62123", _a$2[BlueprintIcons_16.SeriesDerived] = "62124", _a$2[BlueprintIcons_16.SeriesFiltered] = "62125", _a$2[BlueprintIcons_16.SeriesSearch] = "62126", _a$2[BlueprintIcons_16.Settings] = "62127", _a$2[BlueprintIcons_16.Shapes] = "62128", _a$2[BlueprintIcons_16.Share] = "62129", _a$2[BlueprintIcons_16.SharedFilter] = "62130", _a$2[BlueprintIcons_16.Shield] = "62131", _a$2[BlueprintIcons_16.Ship] = "62132", _a$2[BlueprintIcons_16.Shop] = "62133", _a$2[BlueprintIcons_16.ShoppingCart] = "62134", _a$2[BlueprintIcons_16.SignalSearch] = "62135", _a$2[BlueprintIcons_16.SimCard] = "62136", _a$2[BlueprintIcons_16.Slash] = "62137", _a$2[BlueprintIcons_16.SmallCross] = "62138", _a$2[BlueprintIcons_16.SmallMinus] = "62139", _a$2[BlueprintIcons_16.SmallPlus] = "62140", _a$2[BlueprintIcons_16.SmallSquare] = "62141", _a$2[BlueprintIcons_16.SmallTick] = "62142", _a$2[BlueprintIcons_16.Snowflake] = "62143", _a$2[BlueprintIcons_16.SocialMedia] = "62144", _a$2[BlueprintIcons_16.SortAlphabeticalDesc] = "62145", _a$2[BlueprintIcons_16.SortAlphabetical] = "62146", _a$2[BlueprintIcons_16.SortAsc] = "62147", _a$2[BlueprintIcons_16.SortDesc] = "62148", _a$2[BlueprintIcons_16.SortNumericalDesc] = "62149", _a$2[BlueprintIcons_16.SortNumerical] = "62150", _a$2[BlueprintIcons_16.Sort] = "62151", _a$2[BlueprintIcons_16.SplitColumns] = "62152", _a$2[BlueprintIcons_16.Square] = "62153", _a$2[BlueprintIcons_16.StackedChart] = "62154", _a$2[BlueprintIcons_16.StadiumGeometry] = "62155", _a$2[BlueprintIcons_16.StarEmpty] = "62156", _a$2[BlueprintIcons_16.Star] = "62157", _a$2[BlueprintIcons_16.StepBackward] = "62158", _a$2[BlueprintIcons_16.StepChart] = "62159", _a$2[BlueprintIcons_16.StepForward] = "62160", _a$2[BlueprintIcons_16.Stop] = "62161", _a$2[BlueprintIcons_16.Stopwatch] = "62162", _a$2[BlueprintIcons_16.Strikethrough] = "62163", _a$2[BlueprintIcons_16.Style] = "62164", _a$2[BlueprintIcons_16.SwapHorizontal] = "62165", _a$2[BlueprintIcons_16.SwapVertical] = "62166", _a$2[BlueprintIcons_16.Switch] = "62167", _a$2[BlueprintIcons_16.SymbolCircle] = "62168", _a$2[BlueprintIcons_16.SymbolCross] = "62169", _a$2[BlueprintIcons_16.SymbolDiamond] = "62170", _a$2[BlueprintIcons_16.SymbolRectangle] = "62242", _a$2[BlueprintIcons_16.SymbolSquare] = "62171", _a$2[BlueprintIcons_16.SymbolTriangleDown] = "62172", _a$2[BlueprintIcons_16.SymbolTriangleUp] = "62173", _a$2[BlueprintIcons_16.Syringe] = "62174", _a$2[BlueprintIcons_16.Tag] = "62175", _a$2[BlueprintIcons_16.TakeAction] = "62176", _a$2[BlueprintIcons_16.Tank] = "62177", _a$2[BlueprintIcons_16.Target] = "62178", _a$2[BlueprintIcons_16.Taxi] = "62179", _a$2[BlueprintIcons_16.Temperature] = "62180", _a$2[BlueprintIcons_16.TextHighlight] = "62181", _a$2[BlueprintIcons_16.ThDerived] = "62182", _a$2[BlueprintIcons_16.ThDisconnect] = "62183", _a$2[BlueprintIcons_16.ThFiltered] = "62184", _a$2[BlueprintIcons_16.ThList] = "62185", _a$2[BlueprintIcons_16.Th] = "62186", _a$2[BlueprintIcons_16.ThirdParty] = "62187", _a$2[BlueprintIcons_16.ThumbsDown] = "62188", _a$2[BlueprintIcons_16.ThumbsUp] = "62189", _a$2[BlueprintIcons_16.TickCircle] = "62190", _a$2[BlueprintIcons_16.Tick] = "62191", _a$2[BlueprintIcons_16.Time] = "62192", _a$2[BlueprintIcons_16.TimelineAreaChart] = "62193", _a$2[BlueprintIcons_16.TimelineBarChart] = "62194", _a$2[BlueprintIcons_16.TimelineEvents] = "62195", _a$2[BlueprintIcons_16.TimelineLineChart] = "62196", _a$2[BlueprintIcons_16.Tint] = "62197", _a$2[BlueprintIcons_16.Torch] = "62198", _a$2[BlueprintIcons_16.Tractor] = "62199", _a$2[BlueprintIcons_16.Train] = "62200", _a$2[BlueprintIcons_16.Translate] = "62201", _a$2[BlueprintIcons_16.Trash] = "62202", _a$2[BlueprintIcons_16.Tree] = "62203", _a$2[BlueprintIcons_16.TrendingDown] = "62204", _a$2[BlueprintIcons_16.TrendingUp] = "62205", _a$2[BlueprintIcons_16.Truck] = "62206", _a$2[BlueprintIcons_16.TwoColumns] = "62207", _a$2[BlueprintIcons_16.Unarchive] = "62208", _a$2[BlueprintIcons_16.Underline] = "62209", _a$2[BlueprintIcons_16.Undo] = "62210", _a$2[BlueprintIcons_16.UngroupObjects] = "62211", _a$2[BlueprintIcons_16.UnknownVehicle] = "62212", _a$2[BlueprintIcons_16.Unlock] = "62213", _a$2[BlueprintIcons_16.Unpin] = "62214", _a$2[BlueprintIcons_16.Unresolve] = "62215", _a$2[BlueprintIcons_16.Updated] = "62216", _a$2[BlueprintIcons_16.Upload] = "62217", _a$2[BlueprintIcons_16.User] = "62218", _a$2[BlueprintIcons_16.Variable] = "62219", _a$2[BlueprintIcons_16.VerticalBarChartAsc] = "62220", _a$2[BlueprintIcons_16.VerticalBarChartDesc] = "62221", _a$2[BlueprintIcons_16.VerticalDistribution] = "62222", _a$2[BlueprintIcons_16.VerticalInbetween] = "62250", _a$2[BlueprintIcons_16.Video] = "62223", _a$2[BlueprintIcons_16.Virus] = "62224", _a$2[BlueprintIcons_16.VolumeDown] = "62225", _a$2[BlueprintIcons_16.VolumeOff] = "62226", _a$2[BlueprintIcons_16.VolumeUp] = "62227", _a$2[BlueprintIcons_16.Walk] = "62228", _a$2[BlueprintIcons_16.WarningSign] = "62229", _a$2[BlueprintIcons_16.WaterfallChart] = "62230", _a$2[BlueprintIcons_16.Waves] = "62231", _a$2[BlueprintIcons_16.WidgetButton] = "62232", _a$2[BlueprintIcons_16.WidgetFooter] = "62233", _a$2[BlueprintIcons_16.WidgetHeader] = "62234", _a$2[BlueprintIcons_16.Widget] = "62235", _a$2[BlueprintIcons_16.Wind] = "62236", _a$2[BlueprintIcons_16.Wrench] = "62237", _a$2[BlueprintIcons_16.ZoomIn] = "62238", _a$2[BlueprintIcons_16.ZoomOut] = "62239", _a$2[BlueprintIcons_16.ZoomToFit] = "62240", _a$2);
  var IconNamesNew = {};
  var IconNamesLegacy = {};
  for (var _i = 0, _a$1 = Object.values(BlueprintIcons_16); _i < _a$1.length; _i++) {
    var name_1 = _a$1[_i];
    IconNamesNew[pascalCase(name_1)] = name_1;
    IconNamesLegacy[snakeCase(name_1).toUpperCase()] = name_1;
  }
  var IconNames = __assign(__assign({}, IconNamesNew), IconNamesLegacy);
  var Core = (function () {
    function Core() {}
    Core.initialize = function (csgModuleState) {
      Core.moduleState = csgModuleState;
    };
    Core.getRenderGroupManager = function () {
      var moduleState = Core.moduleState;
      return moduleState.renderGroupManager;
    };
    Core.moduleState = null;
    return Core;
  })();
  function _wrapRegExp() {
    _wrapRegExp = function (re, groups) {
      return new BabelRegExp(re, void 0, groups);
    };
    var _super = RegExp.prototype, _groups = new WeakMap();
    function BabelRegExp(re, flags, groups) {
      var _this = new RegExp(re, flags);
      return (_groups.set(_this, groups || _groups.get(re)), _setPrototypeOf(_this, BabelRegExp.prototype));
    }
    function buildGroups(result, re) {
      var g = _groups.get(re);
      return Object.keys(g).reduce(function (groups, name) {
        return (groups[name] = result[g[name]], groups);
      }, Object.create(null));
    }
    return (_inherits(BabelRegExp, RegExp), BabelRegExp.prototype.exec = function (str) {
      var result = _super.exec.call(this, str);
      return (result && (result.groups = buildGroups(result, this)), result);
    }, BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {
      if ("string" == typeof substitution) {
        var groups = _groups.get(this);
        return _super[Symbol.replace].call(this, str, substitution.replace(/\$<([^>]+)>/g, function (_, name) {
          return "$" + groups[name];
        }));
      }
      if ("function" == typeof substitution) {
        var _this = this;
        return _super[Symbol.replace].call(this, str, function () {
          var args = arguments;
          return ("object" != typeof args[args.length - 1] && (args = [].slice.call(args)).push(buildGroups(args, _this)), substitution.apply(this, args));
        });
      }
      return _super[Symbol.replace].call(this, str, substitution);
    }, _wrapRegExp.apply(this, arguments));
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    Object.defineProperty(subClass, "prototype", {
      writable: false
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };
    return _setPrototypeOf(o, p);
  }
  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
  function getDefaultExportFromCjs(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }
  function getAugmentedNamespace(n) {
    var f = n.default;
    if (typeof f == "function") {
      var a = function () {
        return f.apply(this, arguments);
      };
      a.prototype = f.prototype;
    } else a = {};
    Object.defineProperty(a, '__esModule', {
      value: true
    });
    Object.keys(n).forEach(function (k) {
      var d = Object.getOwnPropertyDescriptor(n, k);
      Object.defineProperty(a, k, d.get ? d : {
        enumerable: true,
        get: function () {
          return n[k];
        }
      });
    });
    return a;
  }
  const clone$b = geometry => Object.assign({}, geometry);
  var clone_1$9 = clone$b;
  const add$3 = (out, a, b) => {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    out[3] = a[3] + b[3];
    out[4] = a[4] + b[4];
    out[5] = a[5] + b[5];
    out[6] = a[6] + b[6];
    out[7] = a[7] + b[7];
    out[8] = a[8] + b[8];
    out[9] = a[9] + b[9];
    out[10] = a[10] + b[10];
    out[11] = a[11] + b[11];
    out[12] = a[12] + b[12];
    out[13] = a[13] + b[13];
    out[14] = a[14] + b[14];
    out[15] = a[15] + b[15];
    return out;
  };
  var add_1$3 = add$3;
  const create$x = () => [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
  var create_1$9 = create$x;
  const create$w = create_1$9;
  const clone$a = matrix => {
    const out = create$w();
    out[0] = matrix[0];
    out[1] = matrix[1];
    out[2] = matrix[2];
    out[3] = matrix[3];
    out[4] = matrix[4];
    out[5] = matrix[5];
    out[6] = matrix[6];
    out[7] = matrix[7];
    out[8] = matrix[8];
    out[9] = matrix[9];
    out[10] = matrix[10];
    out[11] = matrix[11];
    out[12] = matrix[12];
    out[13] = matrix[13];
    out[14] = matrix[14];
    out[15] = matrix[15];
    return out;
  };
  var clone_1$8 = clone$a;
  const copy$6 = (out, matrix) => {
    out[0] = matrix[0];
    out[1] = matrix[1];
    out[2] = matrix[2];
    out[3] = matrix[3];
    out[4] = matrix[4];
    out[5] = matrix[5];
    out[6] = matrix[6];
    out[7] = matrix[7];
    out[8] = matrix[8];
    out[9] = matrix[9];
    out[10] = matrix[10];
    out[11] = matrix[11];
    out[12] = matrix[12];
    out[13] = matrix[13];
    out[14] = matrix[14];
    out[15] = matrix[15];
    return out;
  };
  var copy_1$5 = copy$6;
  const invert$3 = (out, matrix) => {
    const a00 = matrix[0];
    const a01 = matrix[1];
    const a02 = matrix[2];
    const a03 = matrix[3];
    const a10 = matrix[4];
    const a11 = matrix[5];
    const a12 = matrix[6];
    const a13 = matrix[7];
    const a20 = matrix[8];
    const a21 = matrix[9];
    const a22 = matrix[10];
    const a23 = matrix[11];
    const a30 = matrix[12];
    const a31 = matrix[13];
    const a32 = matrix[14];
    const a33 = matrix[15];
    const b00 = a00 * a11 - a01 * a10;
    const b01 = a00 * a12 - a02 * a10;
    const b02 = a00 * a13 - a03 * a10;
    const b03 = a01 * a12 - a02 * a11;
    const b04 = a01 * a13 - a03 * a11;
    const b05 = a02 * a13 - a03 * a12;
    const b06 = a20 * a31 - a21 * a30;
    const b07 = a20 * a32 - a22 * a30;
    const b08 = a20 * a33 - a23 * a30;
    const b09 = a21 * a32 - a22 * a31;
    const b10 = a21 * a33 - a23 * a31;
    const b11 = a22 * a33 - a23 * a32;
    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
    if (!det) {
      return null;
    }
    det = 1.0 / det;
    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;
    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;
    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;
    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;
    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;
    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;
    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;
    return out;
  };
  var invert_1$3 = invert$3;
  const equals$6 = (a, b) => a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];
  var equals_1$5 = equals$6;
  const spatialResolution = 1e5;
  const EPS$5 = 1e-5;
  const NEPS$2 = 1e-13;
  var constants = {
    EPS: EPS$5,
    NEPS: NEPS$2,
    spatialResolution
  };
  const {NEPS: NEPS$1} = constants;
  const rezero = n => Math.abs(n) < NEPS$1 ? 0 : n;
  const sin$b = radians => rezero(Math.sin(radians));
  const cos$b = radians => rezero(Math.cos(radians));
  var trigonometry = {
    sin: sin$b,
    cos: cos$b
  };
  const identity$3 = out => {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  };
  var identity_1$1 = identity$3;
  const {EPS: EPS$4} = constants;
  const {sin: sin$a, cos: cos$a} = trigonometry;
  const identity$2 = identity_1$1;
  const fromRotation$2 = (out, rad, axis) => {
    let [x, y, z] = axis;
    const lengthSquared = x * x + y * y + z * z;
    if (Math.abs(lengthSquared) < EPS$4) {
      return identity$2(out);
    }
    const len = 1 / Math.sqrt(lengthSquared);
    x *= len;
    y *= len;
    z *= len;
    const s = sin$a(rad);
    const c = cos$a(rad);
    const t = 1 - c;
    out[0] = x * x * t + c;
    out[1] = y * x * t + z * s;
    out[2] = z * x * t - y * s;
    out[3] = 0;
    out[4] = x * y * t - z * s;
    out[5] = y * y * t + c;
    out[6] = z * y * t + x * s;
    out[7] = 0;
    out[8] = x * z * t + y * s;
    out[9] = y * z * t - x * s;
    out[10] = z * z * t + c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  };
  var fromRotation_1$1 = fromRotation$2;
  const fromScaling$1 = (out, vector) => {
    out[0] = vector[0];
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = vector[1];
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = vector[2];
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  };
  var fromScaling_1$1 = fromScaling$1;
  const {sin: sin$9, cos: cos$9} = trigonometry;
  const fromTaitBryanRotation = (out, yaw, pitch, roll) => {
    const sy = sin$9(yaw);
    const cy = cos$9(yaw);
    const sp = sin$9(pitch);
    const cp = cos$9(pitch);
    const sr = sin$9(roll);
    const cr = cos$9(roll);
    out[0] = cp * cy;
    out[1] = cp * sy;
    out[2] = -sp;
    out[3] = 0;
    out[4] = sr * sp * cy - cr * sy;
    out[5] = cr * cy + sr * sp * sy;
    out[6] = sr * cp;
    out[7] = 0;
    out[8] = sr * sy + cr * sp * cy;
    out[9] = cr * sp * sy - sr * cy;
    out[10] = cr * cp;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  };
  var fromTaitBryanRotation_1 = fromTaitBryanRotation;
  const fromTranslation$1 = (out, vector) => {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = vector[0];
    out[13] = vector[1];
    out[14] = vector[2];
    out[15] = 1;
    return out;
  };
  var fromTranslation_1$1 = fromTranslation$1;
  const create$v = create_1$9;
  const fromValues$5 = (m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) => {
    const out = create$v();
    out[0] = m00;
    out[1] = m01;
    out[2] = m02;
    out[3] = m03;
    out[4] = m10;
    out[5] = m11;
    out[6] = m12;
    out[7] = m13;
    out[8] = m20;
    out[9] = m21;
    out[10] = m22;
    out[11] = m23;
    out[12] = m30;
    out[13] = m31;
    out[14] = m32;
    out[15] = m33;
    return out;
  };
  var fromValues_1$4 = fromValues$5;
  const abs$2 = (out, vector) => {
    out[0] = Math.abs(vector[0]);
    out[1] = Math.abs(vector[1]);
    out[2] = Math.abs(vector[2]);
    return out;
  };
  var abs_1$1 = abs$2;
  const add$2 = (out, a, b) => {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    return out;
  };
  var add_1$2 = add$2;
  const dot$5 = (a, b) => a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  var dot_1$3 = dot$5;
  const dot$4 = dot_1$3;
  const angle$2 = (a, b) => {
    const ax = a[0];
    const ay = a[1];
    const az = a[2];
    const bx = b[0];
    const by = b[1];
    const bz = b[2];
    const mag1 = Math.sqrt(ax * ax + ay * ay + az * az);
    const mag2 = Math.sqrt(bx * bx + by * by + bz * bz);
    const mag = mag1 * mag2;
    const cosine = mag && dot$4(a, b) / mag;
    return Math.acos(Math.min(Math.max(cosine, -1), 1));
  };
  var angle_1$1 = angle$2;
  const create$u = () => [0, 0, 0];
  var create_1$8 = create$u;
  const create$t = create_1$8;
  const clone$9 = vector => {
    const out = create$t();
    out[0] = vector[0];
    out[1] = vector[1];
    out[2] = vector[2];
    return out;
  };
  var clone_1$7 = clone$9;
  const copy$5 = (out, vector) => {
    out[0] = vector[0];
    out[1] = vector[1];
    out[2] = vector[2];
    return out;
  };
  var copy_1$4 = copy$5;
  const cross$3 = (out, a, b) => {
    const ax = a[0];
    const ay = a[1];
    const az = a[2];
    const bx = b[0];
    const by = b[1];
    const bz = b[2];
    out[0] = ay * bz - az * by;
    out[1] = az * bx - ax * bz;
    out[2] = ax * by - ay * bx;
    return out;
  };
  var cross_1$2 = cross$3;
  const distance$2 = (a, b) => {
    const x = b[0] - a[0];
    const y = b[1] - a[1];
    const z = b[2] - a[2];
    return Math.sqrt(x * x + y * y + z * z);
  };
  var distance_1$2 = distance$2;
  const divide$2 = (out, a, b) => {
    out[0] = a[0] / b[0];
    out[1] = a[1] / b[1];
    out[2] = a[2] / b[2];
    return out;
  };
  var divide_1$2 = divide$2;
  const equals$5 = (a, b) => a[0] === b[0] && a[1] === b[1] && a[2] === b[2];
  var equals_1$4 = equals$5;
  const fromScalar$2 = (out, scalar) => {
    out[0] = scalar;
    out[1] = scalar;
    out[2] = scalar;
    return out;
  };
  var fromScalar_1$2 = fromScalar$2;
  const create$s = create_1$8;
  const fromValues$4 = (x, y, z) => {
    const out = create$s();
    out[0] = x;
    out[1] = y;
    out[2] = z;
    return out;
  };
  var fromValues_1$3 = fromValues$4;
  const fromVector2 = (out, vector, z = 0) => {
    out[0] = vector[0];
    out[1] = vector[1];
    out[2] = z;
    return out;
  };
  var fromVec2 = fromVector2;
  const length$2 = vector => {
    const x = vector[0];
    const y = vector[1];
    const z = vector[2];
    return Math.sqrt(x * x + y * y + z * z);
  };
  var length_1$2 = length$2;
  const lerp$2 = (out, a, b, t) => {
    out[0] = a[0] + t * (b[0] - a[0]);
    out[1] = a[1] + t * (b[1] - a[1]);
    out[2] = a[2] + t * (b[2] - a[2]);
    return out;
  };
  var lerp_1$2 = lerp$2;
  const max$3 = (out, a, b) => {
    out[0] = Math.max(a[0], b[0]);
    out[1] = Math.max(a[1], b[1]);
    out[2] = Math.max(a[2], b[2]);
    return out;
  };
  var max_1$2 = max$3;
  const min$3 = (out, a, b) => {
    out[0] = Math.min(a[0], b[0]);
    out[1] = Math.min(a[1], b[1]);
    out[2] = Math.min(a[2], b[2]);
    return out;
  };
  var min_1$2 = min$3;
  const multiply$4 = (out, a, b) => {
    out[0] = a[0] * b[0];
    out[1] = a[1] * b[1];
    out[2] = a[2] * b[2];
    return out;
  };
  var multiply_1$4 = multiply$4;
  const negate$2 = (out, vector) => {
    out[0] = -vector[0];
    out[1] = -vector[1];
    out[2] = -vector[2];
    return out;
  };
  var negate_1$2 = negate$2;
  const normalize$3 = (out, vector) => {
    const x = vector[0];
    const y = vector[1];
    const z = vector[2];
    let len = x * x + y * y + z * z;
    if (len > 0) {
      len = 1 / Math.sqrt(len);
    }
    out[0] = x * len;
    out[1] = y * len;
    out[2] = z * len;
    return out;
  };
  var normalize_1$2 = normalize$3;
  const abs$1 = abs_1$1;
  const create$r = create_1$8;
  const cross$2 = cross_1$2;
  const orthogonal = (out, vector) => {
    const bV = abs$1(create$r(), vector);
    const b0 = 0 + (bV[0] < bV[1] && bV[0] < bV[2]);
    const b1 = 0 + (bV[1] <= bV[0] && bV[1] < bV[2]);
    const b2 = 0 + (bV[2] <= bV[0] && bV[2] <= bV[1]);
    return cross$2(out, vector, [b0, b1, b2]);
  };
  var orthogonal_1 = orthogonal;
  const rotateX$3 = (out, vector, origin, radians) => {
    const p = [];
    const r = [];
    p[0] = vector[0] - origin[0];
    p[1] = vector[1] - origin[1];
    p[2] = vector[2] - origin[2];
    r[0] = p[0];
    r[1] = p[1] * Math.cos(radians) - p[2] * Math.sin(radians);
    r[2] = p[1] * Math.sin(radians) + p[2] * Math.cos(radians);
    out[0] = r[0] + origin[0];
    out[1] = r[1] + origin[1];
    out[2] = r[2] + origin[2];
    return out;
  };
  var rotateX_1$3 = rotateX$3;
  const rotateY$3 = (out, vector, origin, radians) => {
    const p = [];
    const r = [];
    p[0] = vector[0] - origin[0];
    p[1] = vector[1] - origin[1];
    p[2] = vector[2] - origin[2];
    r[0] = p[2] * Math.sin(radians) + p[0] * Math.cos(radians);
    r[1] = p[1];
    r[2] = p[2] * Math.cos(radians) - p[0] * Math.sin(radians);
    out[0] = r[0] + origin[0];
    out[1] = r[1] + origin[1];
    out[2] = r[2] + origin[2];
    return out;
  };
  var rotateY_1$3 = rotateY$3;
  const rotateZ$3 = (out, vector, origin, radians) => {
    const p = [];
    const r = [];
    p[0] = vector[0] - origin[0];
    p[1] = vector[1] - origin[1];
    r[0] = p[0] * Math.cos(radians) - p[1] * Math.sin(radians);
    r[1] = p[0] * Math.sin(radians) + p[1] * Math.cos(radians);
    out[0] = r[0] + origin[0];
    out[1] = r[1] + origin[1];
    out[2] = vector[2];
    return out;
  };
  var rotateZ_1$3 = rotateZ$3;
  const scale$4 = (out, vector, amount) => {
    out[0] = vector[0] * amount;
    out[1] = vector[1] * amount;
    out[2] = vector[2] * amount;
    return out;
  };
  var scale_1$4 = scale$4;
  const snap$1 = (out, vector, epsilon) => {
    out[0] = Math.round(vector[0] / epsilon) * epsilon + 0;
    out[1] = Math.round(vector[1] / epsilon) * epsilon + 0;
    out[2] = Math.round(vector[2] / epsilon) * epsilon + 0;
    return out;
  };
  var snap_1$1 = snap$1;
  const squaredDistance$2 = (a, b) => {
    const x = b[0] - a[0];
    const y = b[1] - a[1];
    const z = b[2] - a[2];
    return x * x + y * y + z * z;
  };
  var squaredDistance_1$2 = squaredDistance$2;
  const squaredLength$2 = vector => {
    const x = vector[0];
    const y = vector[1];
    const z = vector[2];
    return x * x + y * y + z * z;
  };
  var squaredLength_1$2 = squaredLength$2;
  const subtract$3 = (out, a, b) => {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    return out;
  };
  var subtract_1$3 = subtract$3;
  const toString$7 = vec => `[${vec[0].toFixed(7)}, ${vec[1].toFixed(7)}, ${vec[2].toFixed(7)}]`;
  var toString_1$7 = toString$7;
  const transform$7 = (out, vector, matrix) => {
    const x = vector[0];
    const y = vector[1];
    const z = vector[2];
    let w = matrix[3] * x + matrix[7] * y + matrix[11] * z + matrix[15];
    w = w || 1.0;
    out[0] = (matrix[0] * x + matrix[4] * y + matrix[8] * z + matrix[12]) / w;
    out[1] = (matrix[1] * x + matrix[5] * y + matrix[9] * z + matrix[13]) / w;
    out[2] = (matrix[2] * x + matrix[6] * y + matrix[10] * z + matrix[14]) / w;
    return out;
  };
  var transform_1$7 = transform$7;
  var vec3$n = {
    abs: abs_1$1,
    add: add_1$2,
    angle: angle_1$1,
    clone: clone_1$7,
    copy: copy_1$4,
    create: create_1$8,
    cross: cross_1$2,
    distance: distance_1$2,
    divide: divide_1$2,
    dot: dot_1$3,
    equals: equals_1$4,
    fromScalar: fromScalar_1$2,
    fromValues: fromValues_1$3,
    fromVec2: fromVec2,
    length: length_1$2,
    lerp: lerp_1$2,
    max: max_1$2,
    min: min_1$2,
    multiply: multiply_1$4,
    negate: negate_1$2,
    normalize: normalize_1$2,
    orthogonal: orthogonal_1,
    rotateX: rotateX_1$3,
    rotateY: rotateY_1$3,
    rotateZ: rotateZ_1$3,
    scale: scale_1$4,
    snap: snap_1$1,
    squaredDistance: squaredDistance_1$2,
    squaredLength: squaredLength_1$2,
    subtract: subtract_1$3,
    toString: toString_1$7,
    transform: transform_1$7
  };
  const vec3$m = vec3$n;
  const fromRotation$1 = fromRotation_1$1;
  const fromVectorRotation = (out, source, target) => {
    const sourceNormal = vec3$m.normalize(vec3$m.create(), source);
    const targetNormal = vec3$m.normalize(vec3$m.create(), target);
    const axis = vec3$m.cross(vec3$m.create(), targetNormal, sourceNormal);
    const cosA = vec3$m.dot(targetNormal, sourceNormal);
    if (cosA === -1.0) return fromRotation$1(out, Math.PI, vec3$m.orthogonal(axis, sourceNormal));
    const k = 1 / (1 + cosA);
    out[0] = axis[0] * axis[0] * k + cosA;
    out[1] = axis[1] * axis[0] * k - axis[2];
    out[2] = axis[2] * axis[0] * k + axis[1];
    out[3] = 0;
    out[4] = axis[0] * axis[1] * k + axis[2];
    out[5] = axis[1] * axis[1] * k + cosA;
    out[6] = axis[2] * axis[1] * k - axis[0];
    out[7] = 0;
    out[8] = axis[0] * axis[2] * k - axis[1];
    out[9] = axis[1] * axis[2] * k + axis[0];
    out[10] = axis[2] * axis[2] * k + cosA;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  };
  var fromVectorRotation_1 = fromVectorRotation;
  const {sin: sin$8, cos: cos$8} = trigonometry;
  const fromXRotation$1 = (out, radians) => {
    const s = sin$8(radians);
    const c = cos$8(radians);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = c;
    out[6] = s;
    out[7] = 0;
    out[8] = 0;
    out[9] = -s;
    out[10] = c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  };
  var fromXRotation_1$1 = fromXRotation$1;
  const {sin: sin$7, cos: cos$7} = trigonometry;
  const fromYRotation$1 = (out, radians) => {
    const s = sin$7(radians);
    const c = cos$7(radians);
    out[0] = c;
    out[1] = 0;
    out[2] = -s;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = s;
    out[9] = 0;
    out[10] = c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  };
  var fromYRotation_1$1 = fromYRotation$1;
  const {sin: sin$6, cos: cos$6} = trigonometry;
  const fromZRotation$1 = (out, radians) => {
    const s = sin$6(radians);
    const c = cos$6(radians);
    out[0] = c;
    out[1] = s;
    out[2] = 0;
    out[3] = 0;
    out[4] = -s;
    out[5] = c;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  };
  var fromZRotation_1$1 = fromZRotation$1;
  const isIdentity = matrix => matrix[0] === 1 && matrix[1] === 0 && matrix[2] === 0 && matrix[3] === 0 && matrix[4] === 0 && matrix[5] === 1 && matrix[6] === 0 && matrix[7] === 0 && matrix[8] === 0 && matrix[9] === 0 && matrix[10] === 1 && matrix[11] === 0 && matrix[12] === 0 && matrix[13] === 0 && matrix[14] === 0 && matrix[15] === 1;
  var isIdentity_1 = isIdentity;
  const isOnlyTransformScale = matrix => isZero(matrix[1]) && isZero(matrix[2]) && isZero(matrix[3]) && isZero(matrix[4]) && isZero(matrix[6]) && isZero(matrix[7]) && isZero(matrix[8]) && isZero(matrix[9]) && isZero(matrix[11]) && matrix[15] === 1;
  const isZero = num => Math.abs(num) < Number.EPSILON;
  var isOnlyTransformScale_1 = isOnlyTransformScale;
  const isMirroring = matrix => {
    const x = matrix[4] * matrix[9] - matrix[8] * matrix[5];
    const y = matrix[8] * matrix[1] - matrix[0] * matrix[9];
    const z = matrix[0] * matrix[5] - matrix[4] * matrix[1];
    const d = x * matrix[2] + y * matrix[6] + z * matrix[10];
    return d < 0;
  };
  var isMirroring_1 = isMirroring;
  const mirrorByPlane = (out, plane) => {
    const [nx, ny, nz, w] = plane;
    out[0] = 1.0 - 2.0 * nx * nx;
    out[1] = -2.0 * ny * nx;
    out[2] = -2.0 * nz * nx;
    out[3] = 0;
    out[4] = -2.0 * nx * ny;
    out[5] = 1.0 - 2.0 * ny * ny;
    out[6] = -2.0 * nz * ny;
    out[7] = 0;
    out[8] = -2.0 * nx * nz;
    out[9] = -2.0 * ny * nz;
    out[10] = 1.0 - 2.0 * nz * nz;
    out[11] = 0;
    out[12] = 2.0 * nx * w;
    out[13] = 2.0 * ny * w;
    out[14] = 2.0 * nz * w;
    out[15] = 1;
    return out;
  };
  var mirrorByPlane_1 = mirrorByPlane;
  const multiply$3 = (out, a, b) => {
    const a00 = a[0];
    const a01 = a[1];
    const a02 = a[2];
    const a03 = a[3];
    const a10 = a[4];
    const a11 = a[5];
    const a12 = a[6];
    const a13 = a[7];
    const a20 = a[8];
    const a21 = a[9];
    const a22 = a[10];
    const a23 = a[11];
    const a30 = a[12];
    const a31 = a[13];
    const a32 = a[14];
    const a33 = a[15];
    let b0 = b[0];
    let b1 = b[1];
    let b2 = b[2];
    let b3 = b[3];
    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    b0 = b[4];
    b1 = b[5];
    b2 = b[6];
    b3 = b[7];
    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    b0 = b[8];
    b1 = b[9];
    b2 = b[10];
    b3 = b[11];
    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    b0 = b[12];
    b1 = b[13];
    b2 = b[14];
    b3 = b[15];
    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    return out;
  };
  var multiply_1$3 = multiply$3;
  const {EPS: EPS$3} = constants;
  const {sin: sin$5, cos: cos$5} = trigonometry;
  const copy$4 = copy_1$5;
  const rotate$5 = (out, matrix, radians, axis) => {
    let [x, y, z] = axis;
    const lengthSquared = x * x + y * y + z * z;
    if (Math.abs(lengthSquared) < EPS$3) {
      return copy$4(out, matrix);
    }
    const len = 1 / Math.sqrt(lengthSquared);
    x *= len;
    y *= len;
    z *= len;
    const s = sin$5(radians);
    const c = cos$5(radians);
    const t = 1 - c;
    const a00 = matrix[0];
    const a01 = matrix[1];
    const a02 = matrix[2];
    const a03 = matrix[3];
    const a10 = matrix[4];
    const a11 = matrix[5];
    const a12 = matrix[6];
    const a13 = matrix[7];
    const a20 = matrix[8];
    const a21 = matrix[9];
    const a22 = matrix[10];
    const a23 = matrix[11];
    const b00 = x * x * t + c;
    const b01 = y * x * t + z * s;
    const b02 = z * x * t - y * s;
    const b10 = x * y * t - z * s;
    const b11 = y * y * t + c;
    const b12 = z * y * t + x * s;
    const b20 = x * z * t + y * s;
    const b21 = y * z * t - x * s;
    const b22 = z * z * t + c;
    out[0] = a00 * b00 + a10 * b01 + a20 * b02;
    out[1] = a01 * b00 + a11 * b01 + a21 * b02;
    out[2] = a02 * b00 + a12 * b01 + a22 * b02;
    out[3] = a03 * b00 + a13 * b01 + a23 * b02;
    out[4] = a00 * b10 + a10 * b11 + a20 * b12;
    out[5] = a01 * b10 + a11 * b11 + a21 * b12;
    out[6] = a02 * b10 + a12 * b11 + a22 * b12;
    out[7] = a03 * b10 + a13 * b11 + a23 * b12;
    out[8] = a00 * b20 + a10 * b21 + a20 * b22;
    out[9] = a01 * b20 + a11 * b21 + a21 * b22;
    out[10] = a02 * b20 + a12 * b21 + a22 * b22;
    out[11] = a03 * b20 + a13 * b21 + a23 * b22;
    if (matrix !== out) {
      out[12] = matrix[12];
      out[13] = matrix[13];
      out[14] = matrix[14];
      out[15] = matrix[15];
    }
    return out;
  };
  var rotate_1$2 = rotate$5;
  const {sin: sin$4, cos: cos$4} = trigonometry;
  const rotateX$2 = (out, matrix, radians) => {
    const s = sin$4(radians);
    const c = cos$4(radians);
    const a10 = matrix[4];
    const a11 = matrix[5];
    const a12 = matrix[6];
    const a13 = matrix[7];
    const a20 = matrix[8];
    const a21 = matrix[9];
    const a22 = matrix[10];
    const a23 = matrix[11];
    if (matrix !== out) {
      out[0] = matrix[0];
      out[1] = matrix[1];
      out[2] = matrix[2];
      out[3] = matrix[3];
      out[12] = matrix[12];
      out[13] = matrix[13];
      out[14] = matrix[14];
      out[15] = matrix[15];
    }
    out[4] = a10 * c + a20 * s;
    out[5] = a11 * c + a21 * s;
    out[6] = a12 * c + a22 * s;
    out[7] = a13 * c + a23 * s;
    out[8] = a20 * c - a10 * s;
    out[9] = a21 * c - a11 * s;
    out[10] = a22 * c - a12 * s;
    out[11] = a23 * c - a13 * s;
    return out;
  };
  var rotateX_1$2 = rotateX$2;
  const {sin: sin$3, cos: cos$3} = trigonometry;
  const rotateY$2 = (out, matrix, radians) => {
    const s = sin$3(radians);
    const c = cos$3(radians);
    const a00 = matrix[0];
    const a01 = matrix[1];
    const a02 = matrix[2];
    const a03 = matrix[3];
    const a20 = matrix[8];
    const a21 = matrix[9];
    const a22 = matrix[10];
    const a23 = matrix[11];
    if (matrix !== out) {
      out[4] = matrix[4];
      out[5] = matrix[5];
      out[6] = matrix[6];
      out[7] = matrix[7];
      out[12] = matrix[12];
      out[13] = matrix[13];
      out[14] = matrix[14];
      out[15] = matrix[15];
    }
    out[0] = a00 * c - a20 * s;
    out[1] = a01 * c - a21 * s;
    out[2] = a02 * c - a22 * s;
    out[3] = a03 * c - a23 * s;
    out[8] = a00 * s + a20 * c;
    out[9] = a01 * s + a21 * c;
    out[10] = a02 * s + a22 * c;
    out[11] = a03 * s + a23 * c;
    return out;
  };
  var rotateY_1$2 = rotateY$2;
  const {sin: sin$2, cos: cos$2} = trigonometry;
  const rotateZ$2 = (out, matrix, radians) => {
    const s = sin$2(radians);
    const c = cos$2(radians);
    const a00 = matrix[0];
    const a01 = matrix[1];
    const a02 = matrix[2];
    const a03 = matrix[3];
    const a10 = matrix[4];
    const a11 = matrix[5];
    const a12 = matrix[6];
    const a13 = matrix[7];
    if (matrix !== out) {
      out[8] = matrix[8];
      out[9] = matrix[9];
      out[10] = matrix[10];
      out[11] = matrix[11];
      out[12] = matrix[12];
      out[13] = matrix[13];
      out[14] = matrix[14];
      out[15] = matrix[15];
    }
    out[0] = a00 * c + a10 * s;
    out[1] = a01 * c + a11 * s;
    out[2] = a02 * c + a12 * s;
    out[3] = a03 * c + a13 * s;
    out[4] = a10 * c - a00 * s;
    out[5] = a11 * c - a01 * s;
    out[6] = a12 * c - a02 * s;
    out[7] = a13 * c - a03 * s;
    return out;
  };
  var rotateZ_1$2 = rotateZ$2;
  const scale$3 = (out, matrix, dimensions) => {
    const x = dimensions[0];
    const y = dimensions[1];
    const z = dimensions[2];
    out[0] = matrix[0] * x;
    out[1] = matrix[1] * x;
    out[2] = matrix[2] * x;
    out[3] = matrix[3] * x;
    out[4] = matrix[4] * y;
    out[5] = matrix[5] * y;
    out[6] = matrix[6] * y;
    out[7] = matrix[7] * y;
    out[8] = matrix[8] * z;
    out[9] = matrix[9] * z;
    out[10] = matrix[10] * z;
    out[11] = matrix[11] * z;
    out[12] = matrix[12];
    out[13] = matrix[13];
    out[14] = matrix[14];
    out[15] = matrix[15];
    return out;
  };
  var scale_1$3 = scale$3;
  const subtract$2 = (out, a, b) => {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    out[3] = a[3] - b[3];
    out[4] = a[4] - b[4];
    out[5] = a[5] - b[5];
    out[6] = a[6] - b[6];
    out[7] = a[7] - b[7];
    out[8] = a[8] - b[8];
    out[9] = a[9] - b[9];
    out[10] = a[10] - b[10];
    out[11] = a[11] - b[11];
    out[12] = a[12] - b[12];
    out[13] = a[13] - b[13];
    out[14] = a[14] - b[14];
    out[15] = a[15] - b[15];
    return out;
  };
  var subtract_1$2 = subtract$2;
  const toString$6 = mat => mat.map(n => n.toFixed(7)).toString();
  var toString_1$6 = toString$6;
  const translate$1 = (out, matrix, offsets) => {
    const x = offsets[0];
    const y = offsets[1];
    const z = offsets[2];
    let a00;
    let a01;
    let a02;
    let a03;
    let a10;
    let a11;
    let a12;
    let a13;
    let a20;
    let a21;
    let a22;
    let a23;
    if (matrix === out) {
      out[12] = matrix[0] * x + matrix[4] * y + matrix[8] * z + matrix[12];
      out[13] = matrix[1] * x + matrix[5] * y + matrix[9] * z + matrix[13];
      out[14] = matrix[2] * x + matrix[6] * y + matrix[10] * z + matrix[14];
      out[15] = matrix[3] * x + matrix[7] * y + matrix[11] * z + matrix[15];
    } else {
      a00 = matrix[0];
      a01 = matrix[1];
      a02 = matrix[2];
      a03 = matrix[3];
      a10 = matrix[4];
      a11 = matrix[5];
      a12 = matrix[6];
      a13 = matrix[7];
      a20 = matrix[8];
      a21 = matrix[9];
      a22 = matrix[10];
      a23 = matrix[11];
      out[0] = a00;
      out[1] = a01;
      out[2] = a02;
      out[3] = a03;
      out[4] = a10;
      out[5] = a11;
      out[6] = a12;
      out[7] = a13;
      out[8] = a20;
      out[9] = a21;
      out[10] = a22;
      out[11] = a23;
      out[12] = a00 * x + a10 * y + a20 * z + matrix[12];
      out[13] = a01 * x + a11 * y + a21 * z + matrix[13];
      out[14] = a02 * x + a12 * y + a22 * z + matrix[14];
      out[15] = a03 * x + a13 * y + a23 * z + matrix[15];
    }
    return out;
  };
  var translate_1$1 = translate$1;
  var mat4$p = {
    add: add_1$3,
    clone: clone_1$8,
    copy: copy_1$5,
    create: create_1$9,
    invert: invert_1$3,
    equals: equals_1$5,
    fromRotation: fromRotation_1$1,
    fromScaling: fromScaling_1$1,
    fromTaitBryanRotation: fromTaitBryanRotation_1,
    fromTranslation: fromTranslation_1$1,
    fromValues: fromValues_1$4,
    fromVectorRotation: fromVectorRotation_1,
    fromXRotation: fromXRotation_1$1,
    fromYRotation: fromYRotation_1$1,
    fromZRotation: fromZRotation_1$1,
    identity: identity_1$1,
    isIdentity: isIdentity_1,
    isOnlyTransformScale: isOnlyTransformScale_1,
    isMirroring: isMirroring_1,
    mirrorByPlane: mirrorByPlane_1,
    multiply: multiply_1$3,
    rotate: rotate_1$2,
    rotateX: rotateX_1$2,
    rotateY: rotateY_1$2,
    rotateZ: rotateZ_1$2,
    scale: scale_1$3,
    subtract: subtract_1$2,
    toString: toString_1$6,
    translate: translate_1$1
  };
  const mat4$o = mat4$p;
  const create$q = polygons => {
    if (polygons === undefined) {
      polygons = [];
    }
    return {
      polygons,
      transforms: mat4$o.create()
    };
  };
  var create_1$7 = create$q;
  const create$p = vertices => {
    if (vertices === undefined || vertices.length < 3) {
      vertices = [];
    }
    return {
      vertices
    };
  };
  var create_1$6 = create$p;
  const create$o = create_1$6;
  const vec3$l = vec3$n;
  const clone$8 = (...params) => {
    let out;
    let poly3;
    if (params.length === 1) {
      out = create$o();
      poly3 = params[0];
    } else {
      out = params[0];
      poly3 = params[1];
    }
    out.vertices = poly3.vertices.map(vec => vec3$l.clone(vec));
    return out;
  };
  var clone_1$6 = clone$8;
  const vec3$k = vec3$n;
  const create$n = create_1$6;
  const fromPoints$7 = points => {
    const vertices = points.map(point => vec3$k.clone(point));
    return create$n(vertices);
  };
  var fromPoints_1$4 = fromPoints$7;
  const create$m = create_1$6;
  const fromPointsAndPlane = (vertices, plane) => {
    const poly = create$m(vertices);
    poly.plane = plane;
    return poly;
  };
  var fromPointsAndPlane_1 = fromPointsAndPlane;
  const create$l = () => [0, 0, 0, 0];
  var create_1$5 = create$l;
  const create$k = create_1$5;
  const clone$7 = vector => {
    const out = create$k();
    out[0] = vector[0];
    out[1] = vector[1];
    out[2] = vector[2];
    out[3] = vector[3];
    return out;
  };
  var clone_1$5 = clone$7;
  const copy$3 = (out, vector) => {
    out[0] = vector[0];
    out[1] = vector[1];
    out[2] = vector[2];
    out[3] = vector[3];
    return out;
  };
  var copy_1$3 = copy$3;
  const equals$4 = (a, b) => a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
  var equals_1$3 = equals$4;
  const flip$2 = (out, plane) => {
    out[0] = -plane[0];
    out[1] = -plane[1];
    out[2] = -plane[2];
    out[3] = -plane[3];
    return out;
  };
  var flip_1 = flip$2;
  const vec3$j = vec3$n;
  const fromNormalAndPoint = (out, normal, point) => {
    const u = vec3$j.normalize(vec3$j.create(), normal);
    const w = vec3$j.dot(point, u);
    out[0] = u[0];
    out[1] = u[1];
    out[2] = u[2];
    out[3] = w;
    return out;
  };
  var fromNormalAndPoint_1 = fromNormalAndPoint;
  const create$j = create_1$5;
  const fromValues$3 = (x, y, z, w) => {
    const out = create$j();
    out[0] = x;
    out[1] = y;
    out[2] = z;
    out[3] = w;
    return out;
  };
  var fromValues_1$2 = fromValues$3;
  const vec3$i = vec3$n;
  const fromPoints$6 = (out, ...vertices) => {
    const len = vertices.length;
    const ba = vec3$i.create();
    const ca = vec3$i.create();
    const vertexNormal = index => {
      const a = vertices[index];
      const b = vertices[(index + 1) % len];
      const c = vertices[(index + 2) % len];
      vec3$i.subtract(ba, b, a);
      vec3$i.subtract(ca, c, a);
      vec3$i.cross(ba, ba, ca);
      vec3$i.normalize(ba, ba);
      return ba;
    };
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    if (len === 3) {
      vec3$i.copy(out, vertexNormal(0));
    } else {
      vertices.forEach((v, i) => {
        vec3$i.add(out, out, vertexNormal(i));
      });
      vec3$i.normalize(out, out);
    }
    out[3] = vec3$i.dot(out, vertices[0]);
    return out;
  };
  var fromPoints_1$3 = fromPoints$6;
  const {EPS: EPS$2} = constants;
  const vec3$h = vec3$n;
  const fromPointsRandom = (out, a, b, c) => {
    let ba = vec3$h.subtract(vec3$h.create(), b, a);
    let ca = vec3$h.subtract(vec3$h.create(), c, a);
    if (vec3$h.length(ba) < EPS$2) {
      ba = vec3$h.orthogonal(ba, ca);
    }
    if (vec3$h.length(ca) < EPS$2) {
      ca = vec3$h.orthogonal(ca, ba);
    }
    let normal = vec3$h.cross(vec3$h.create(), ba, ca);
    if (vec3$h.length(normal) < EPS$2) {
      ca = vec3$h.orthogonal(ca, ba);
      normal = vec3$h.cross(normal, ba, ca);
    }
    normal = vec3$h.normalize(normal, normal);
    const w = vec3$h.dot(normal, a);
    out[0] = normal[0];
    out[1] = normal[1];
    out[2] = normal[2];
    out[3] = w;
    return out;
  };
  var fromPointsRandom_1 = fromPointsRandom;
  const vec3$g = vec3$n;
  const projectionOfPoint = (plane, point) => {
    const a = point[0] * plane[0] + point[1] * plane[1] + point[2] * plane[2] - plane[3];
    const x = point[0] - a * plane[0];
    const y = point[1] - a * plane[1];
    const z = point[2] - a * plane[2];
    return vec3$g.fromValues(x, y, z);
  };
  var projectionOfPoint_1 = projectionOfPoint;
  const vec3$f = vec3$n;
  const signedDistanceToPoint$1 = (plane, point) => vec3$f.dot(plane, point) - plane[3];
  var signedDistanceToPoint_1 = signedDistanceToPoint$1;
  const toString$5 = vec => `(${vec[0].toFixed(9)}, ${vec[1].toFixed(9)}, ${vec[2].toFixed(9)}, ${vec[3].toFixed(9)})`;
  var toString_1$5 = toString$5;
  const mat4$n = mat4$p;
  const vec3$e = vec3$n;
  const fromPoints$5 = fromPoints_1$3;
  const flip$1 = flip_1;
  const transform$6 = (out, plane, matrix) => {
    const ismirror = mat4$n.isMirroring(matrix);
    const r = vec3$e.orthogonal(vec3$e.create(), plane);
    const u = vec3$e.cross(r, plane, r);
    const v = vec3$e.cross(vec3$e.create(), plane, u);
    let point1 = vec3$e.fromScalar(vec3$e.create(), plane[3]);
    vec3$e.multiply(point1, point1, plane);
    let point2 = vec3$e.add(vec3$e.create(), point1, u);
    let point3 = vec3$e.add(vec3$e.create(), point1, v);
    point1 = vec3$e.transform(point1, point1, matrix);
    point2 = vec3$e.transform(point2, point2, matrix);
    point3 = vec3$e.transform(point3, point3, matrix);
    fromPoints$5(out, point1, point2, point3);
    if (ismirror) {
      flip$1(out, out);
    }
    return out;
  };
  var transform_1$6 = transform$6;
  var plane$5 = {
    clone: clone_1$5,
    copy: copy_1$3,
    create: create_1$5,
    equals: equals_1$3,
    flip: flip_1,
    fromNormalAndPoint: fromNormalAndPoint_1,
    fromValues: fromValues_1$2,
    fromPoints: fromPoints_1$3,
    fromPointsRandom: fromPointsRandom_1,
    projectionOfPoint: projectionOfPoint_1,
    signedDistanceToPoint: signedDistanceToPoint_1,
    toString: toString_1$5,
    transform: transform_1$6
  };
  const plane$4 = plane$5;
  const create$i = create_1$6;
  const invert$2 = polygon => {
    const vertices = polygon.vertices.slice().reverse();
    const inverted = create$i(vertices);
    if (polygon.plane) {
      inverted.plane = plane$4.flip(plane$4.create(), polygon.plane);
    }
    return inverted;
  };
  var invert_1$2 = invert$2;
  const isA$7 = object => {
    if (object && typeof object === 'object') {
      if (('vertices' in object)) {
        if (Array.isArray(object.vertices)) {
          return true;
        }
      }
    }
    return false;
  };
  var isA_1$3 = isA$7;
  const plane$3 = plane$5;
  const vec3$d = vec3$n;
  const isConvex$1 = polygon => areVerticesConvex(polygon.vertices);
  const areVerticesConvex = vertices => {
    const numvertices = vertices.length;
    if (numvertices > 2) {
      const normal = plane$3.fromPoints(plane$3.create(), ...vertices);
      let prevprevpos = vertices[numvertices - 2];
      let prevpos = vertices[numvertices - 1];
      for (let i = 0; i < numvertices; i++) {
        const pos = vertices[i];
        if (!isConvexPoint(prevprevpos, prevpos, pos, normal)) {
          return false;
        }
        prevprevpos = prevpos;
        prevpos = pos;
      }
    }
    return true;
  };
  const isConvexPoint = (prevpoint, point, nextpoint, normal) => {
    const crossproduct = vec3$d.cross(vec3$d.create(), vec3$d.subtract(vec3$d.create(), point, prevpoint), vec3$d.subtract(vec3$d.create(), nextpoint, point));
    const crossdotnormal = vec3$d.dot(crossproduct, normal);
    return crossdotnormal >= 0;
  };
  var isConvex_1 = isConvex$1;
  const mplane = plane$5;
  const plane$2 = polygon => {
    if (!polygon.plane) {
      polygon.plane = mplane.fromPoints(mplane.create(), ...polygon.vertices);
    }
    return polygon.plane;
  };
  var plane_1 = plane$2;
  const plane$1 = plane_1;
  const measureArea$1 = polygon => {
    const n = polygon.vertices.length;
    if (n < 3) {
      return 0;
    }
    const vertices = polygon.vertices;
    const normal = plane$1(polygon);
    const ax = Math.abs(normal[0]);
    const ay = Math.abs(normal[1]);
    const az = Math.abs(normal[2]);
    if (ax + ay + az === 0) {
      return 0;
    }
    let coord = 3;
    if (ax > ay && ax > az) {
      coord = 1;
    } else if (ay > az) {
      coord = 2;
    }
    let area = 0;
    let h = 0;
    let i = 1;
    let j = 2;
    switch (coord) {
      case 1:
        for (i = 1; i < n; i++) {
          h = i - 1;
          j = (i + 1) % n;
          area += vertices[i][1] * (vertices[j][2] - vertices[h][2]);
        }
        area += vertices[0][1] * (vertices[1][2] - vertices[n - 1][2]);
        area /= 2 * normal[0];
        break;
      case 2:
        for (i = 1; i < n; i++) {
          h = i - 1;
          j = (i + 1) % n;
          area += vertices[i][2] * (vertices[j][0] - vertices[h][0]);
        }
        area += vertices[0][2] * (vertices[1][0] - vertices[n - 1][0]);
        area /= 2 * normal[1];
        break;
      case 3:
      default:
        for (i = 1; i < n; i++) {
          h = i - 1;
          j = (i + 1) % n;
          area += vertices[i][0] * (vertices[j][1] - vertices[h][1]);
        }
        area += vertices[0][0] * (vertices[1][1] - vertices[n - 1][1]);
        area /= 2 * normal[2];
        break;
    }
    return area;
  };
  var measureArea_1 = measureArea$1;
  const vec3$c = vec3$n;
  const measureBoundingBox$1 = polygon => {
    const vertices = polygon.vertices;
    const numvertices = vertices.length;
    const min = numvertices === 0 ? vec3$c.create() : vec3$c.clone(vertices[0]);
    const max = vec3$c.clone(min);
    for (let i = 1; i < numvertices; i++) {
      vec3$c.min(min, min, vertices[i]);
      vec3$c.max(max, max, vertices[i]);
    }
    return [min, max];
  };
  var measureBoundingBox_1$1 = measureBoundingBox$1;
  const dot$3 = (a, b) => a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
  var dot_1$2 = dot$3;
  const fromScalar$1 = (out, scalar) => {
    out[0] = scalar;
    out[1] = scalar;
    out[2] = scalar;
    out[3] = scalar;
    return out;
  };
  var fromScalar_1$1 = fromScalar$1;
  const transform$5 = (out, vector, matrix) => {
    const [x, y, z, w] = vector;
    out[0] = matrix[0] * x + matrix[4] * y + matrix[8] * z + matrix[12] * w;
    out[1] = matrix[1] * x + matrix[5] * y + matrix[9] * z + matrix[13] * w;
    out[2] = matrix[2] * x + matrix[6] * y + matrix[10] * z + matrix[14] * w;
    out[3] = matrix[3] * x + matrix[7] * y + matrix[11] * z + matrix[15] * w;
    return out;
  };
  var transform_1$5 = transform$5;
  var vec4$1 = {
    clone: clone_1$5,
    copy: copy_1$3,
    create: create_1$5,
    dot: dot_1$2,
    equals: equals_1$3,
    fromScalar: fromScalar_1$1,
    fromValues: fromValues_1$2,
    toString: toString_1$5,
    transform: transform_1$5
  };
  const vec4 = vec4$1;
  const cache$2 = new WeakMap();
  const measureBoundingSphere = polygon => {
    let boundingSphere = cache$2.get(polygon);
    if (boundingSphere) return boundingSphere;
    const vertices = polygon.vertices;
    const out = vec4.create();
    if (vertices.length === 0) {
      out[0] = 0;
      out[1] = 0;
      out[2] = 0;
      out[3] = 0;
      return out;
    }
    let minx = vertices[0];
    let miny = minx;
    let minz = minx;
    let maxx = minx;
    let maxy = minx;
    let maxz = minx;
    vertices.forEach(v => {
      if (minx[0] > v[0]) minx = v;
      if (miny[1] > v[1]) miny = v;
      if (minz[2] > v[2]) minz = v;
      if (maxx[0] < v[0]) maxx = v;
      if (maxy[1] < v[1]) maxy = v;
      if (maxz[2] < v[2]) maxz = v;
    });
    out[0] = (minx[0] + maxx[0]) * 0.5;
    out[1] = (miny[1] + maxy[1]) * 0.5;
    out[2] = (minz[2] + maxz[2]) * 0.5;
    const x = out[0] - maxx[0];
    const y = out[1] - maxy[1];
    const z = out[2] - maxz[2];
    out[3] = Math.sqrt(x * x + y * y + z * z);
    cache$2.set(polygon, out);
    return out;
  };
  var measureBoundingSphere_1 = measureBoundingSphere;
  const vec3$b = vec3$n;
  const measureSignedVolume = polygon => {
    let signedVolume = 0;
    const vertices = polygon.vertices;
    const cross = vec3$b.create();
    for (let i = 0; i < vertices.length - 2; i++) {
      vec3$b.cross(cross, vertices[i + 1], vertices[i + 2]);
      signedVolume += vec3$b.dot(vertices[0], cross);
    }
    signedVolume /= 6;
    return signedVolume;
  };
  var measureSignedVolume_1 = measureSignedVolume;
  const toPoints$8 = polygon => polygon.vertices;
  var toPoints_1$3 = toPoints$8;
  const vec3$a = vec3$n;
  const toString$4 = polygon => {
    let result = 'poly3: vertices: [';
    polygon.vertices.forEach(vertex => {
      result += `${vec3$a.toString(vertex)}, `;
    });
    result += ']';
    return result;
  };
  var toString_1$4 = toString$4;
  const mat4$m = mat4$p;
  const vec3$9 = vec3$n;
  const create$h = create_1$6;
  const transform$4 = (matrix, polygon) => {
    const vertices = polygon.vertices.map(vertex => vec3$9.transform(vec3$9.create(), vertex, matrix));
    if (mat4$m.isMirroring(matrix)) {
      vertices.reverse();
    }
    return create$h(vertices);
  };
  var transform_1$4 = transform$4;
  const signedDistanceToPoint = signedDistanceToPoint_1;
  const {NEPS} = constants;
  const vec3$8 = vec3$n;
  const isA$6 = isA_1$3;
  const isConvex = isConvex_1;
  const measureArea = measureArea_1;
  const plane = plane_1;
  const validate$3 = object => {
    if (!isA$6(object)) {
      throw new Error('invalid poly3 structure');
    }
    if (object.vertices.length < 3) {
      throw new Error(`poly3 not enough vertices ${object.vertices.length}`);
    }
    if (measureArea(object) <= 0) {
      throw new Error('poly3 area must be greater than zero');
    }
    for (let i = 0; i < object.vertices.length; i++) {
      if (vec3$8.equals(object.vertices[i], object.vertices[(i + 1) % object.vertices.length])) {
        throw new Error(`poly3 duplicate vertex ${object.vertices[i]}`);
      }
    }
    if (!isConvex(object)) {
      throw new Error('poly3 must be convex');
    }
    object.vertices.forEach(vertex => {
      if (!vertex.every(Number.isFinite)) {
        throw new Error(`poly3 invalid vertex ${vertex}`);
      }
    });
    if (object.vertices.length > 3) {
      const normal = plane(object);
      object.vertices.forEach(vertex => {
        const dist = Math.abs(signedDistanceToPoint(normal, vertex));
        if (dist > NEPS) {
          throw new Error(`poly3 must be coplanar: vertex ${vertex} distance ${dist}`);
        }
      });
    }
  };
  var validate_1$3 = validate$3;
  var poly3$9 = {
    clone: clone_1$6,
    create: create_1$6,
    fromPoints: fromPoints_1$4,
    fromPointsAndPlane: fromPointsAndPlane_1,
    invert: invert_1$2,
    isA: isA_1$3,
    isConvex: isConvex_1,
    measureArea: measureArea_1,
    measureBoundingBox: measureBoundingBox_1$1,
    measureBoundingSphere: measureBoundingSphere_1,
    measureSignedVolume: measureSignedVolume_1,
    plane: plane_1,
    toPoints: toPoints_1$3,
    toString: toString_1$4,
    transform: transform_1$4,
    validate: validate_1$3
  };
  const poly3$8 = poly3$9;
  const create$g = create_1$7;
  const fromPoints$4 = listofpoints => {
    if (!Array.isArray(listofpoints)) {
      throw new Error('the given points must be an array');
    }
    const polygons = listofpoints.map((points, index) => {
      const polygon = poly3$8.create(points);
      return polygon;
    });
    const result = create$g(polygons);
    return result;
  };
  var fromPoints_1$2 = fromPoints$4;
  const vec3$7 = vec3$n;
  const mat4$l = mat4$p;
  const poly3$7 = poly3$9;
  const create$f = create_1$7;
  const fromCompactBinary$2 = data => {
    if (data[0] !== 1) throw new Error('invalid compact binary data');
    const created = create$f();
    created.transforms = mat4$l.clone(data.slice(1, 17));
    const numberOfVertices = data[21];
    let ci = 22;
    let vi = data.length - numberOfVertices * 3;
    while (vi < data.length) {
      const verticesPerPolygon = data[ci];
      ci++;
      const vertices = [];
      for (let i = 0; i < verticesPerPolygon; i++) {
        vertices.push(vec3$7.fromValues(data[vi], data[vi + 1], data[vi + 2]));
        vi += 3;
      }
      created.polygons.push(poly3$7.create(vertices));
    }
    if (data[17] >= 0) {
      created.color = [data[17], data[18], data[19], data[20]];
    }
    return created;
  };
  var fromCompactBinary_1$2 = fromCompactBinary$2;
  const mat4$k = mat4$p;
  const poly3$6 = poly3$9;
  const applyTransforms$5 = geometry => {
    if (mat4$k.isIdentity(geometry.transforms)) return geometry;
    geometry.polygons = geometry.polygons.map(polygon => poly3$6.transform(geometry.transforms, polygon));
    geometry.transforms = mat4$k.create();
    return geometry;
  };
  var applyTransforms_1$2 = applyTransforms$5;
  const applyTransforms$4 = applyTransforms_1$2;
  const toPolygons$3 = geometry => applyTransforms$4(geometry).polygons;
  var toPolygons_1 = toPolygons$3;
  const poly3$5 = poly3$9;
  const create$e = create_1$7;
  const toPolygons$2 = toPolygons_1;
  const invert$1 = geometry => {
    const polygons = toPolygons$2(geometry);
    const newpolygons = polygons.map(polygon => poly3$5.invert(polygon));
    return create$e(newpolygons);
  };
  var invert_1$1 = invert$1;
  const isA$5 = object => {
    if (object && typeof object === 'object') {
      if (('polygons' in object) && ('transforms' in object)) {
        if (Array.isArray(object.polygons) && ('length' in object.transforms)) {
          return true;
        }
      }
    }
    return false;
  };
  var isA_1$2 = isA$5;
  const poly3$4 = poly3$9;
  const toPolygons$1 = toPolygons_1;
  const toPoints$7 = geometry => {
    const polygons = toPolygons$1(geometry);
    const listofpoints = polygons.map(polygon => poly3$4.toPoints(polygon));
    return listofpoints;
  };
  var toPoints_1$2 = toPoints$7;
  const poly3$3 = poly3$9;
  const toPolygons = toPolygons_1;
  const toString$3 = geometry => {
    const polygons = toPolygons(geometry);
    let result = 'geom3 (' + polygons.length + ' polygons):\n';
    polygons.forEach(polygon => {
      result += '  ' + poly3$3.toString(polygon) + '\n';
    });
    return result;
  };
  var toString_1$3 = toString$3;
  const poly3$2 = poly3$9;
  const toCompactBinary$2 = geometry => {
    const polygons = geometry.polygons;
    const transforms = geometry.transforms;
    const numberOfPolygons = polygons.length;
    const numberOfVertices = polygons.reduce((count, polygon) => count + polygon.vertices.length, 0);
    let color = [-1, -1, -1, -1];
    if (geometry.color) color = geometry.color;
    const compacted = new Float32Array(1 + 16 + 4 + 1 + numberOfPolygons + numberOfVertices * 3);
    compacted[0] = 1;
    compacted[1] = transforms[0];
    compacted[2] = transforms[1];
    compacted[3] = transforms[2];
    compacted[4] = transforms[3];
    compacted[5] = transforms[4];
    compacted[6] = transforms[5];
    compacted[7] = transforms[6];
    compacted[8] = transforms[7];
    compacted[9] = transforms[8];
    compacted[10] = transforms[9];
    compacted[11] = transforms[10];
    compacted[12] = transforms[11];
    compacted[13] = transforms[12];
    compacted[14] = transforms[13];
    compacted[15] = transforms[14];
    compacted[16] = transforms[15];
    compacted[17] = color[0];
    compacted[18] = color[1];
    compacted[19] = color[2];
    compacted[20] = color[3];
    compacted[21] = numberOfVertices;
    let ci = 22;
    let vi = ci + numberOfPolygons;
    polygons.forEach(polygon => {
      const points = poly3$2.toPoints(polygon);
      compacted[ci] = points.length;
      ci++;
      for (let i = 0; i < points.length; i++) {
        const point = points[i];
        compacted[vi + 0] = point[0];
        compacted[vi + 1] = point[1];
        compacted[vi + 2] = point[2];
        vi += 3;
      }
    });
    return compacted;
  };
  var toCompactBinary_1$2 = toCompactBinary$2;
  const mat4$j = mat4$p;
  const transform$3 = (matrix, geometry) => {
    const transforms = mat4$j.multiply(mat4$j.create(), matrix, geometry.transforms);
    return Object.assign({}, geometry, {
      transforms
    });
  };
  var transform_1$3 = transform$3;
  const poly3$1 = poly3$9;
  const isA$4 = isA_1$2;
  const validate$2 = object => {
    if (!isA$4(object)) {
      throw new Error('invalid geom3 structure');
    }
    object.polygons.forEach(poly3$1.validate);
    validateManifold(object);
    if (!object.transforms.every(Number.isFinite)) {
      throw new Error(`geom3 invalid transforms ${object.transforms}`);
    }
  };
  const validateManifold = object => {
    const edgeCount = new Map();
    object.polygons.forEach(({vertices}) => {
      vertices.forEach((v, i) => {
        const v1 = `${v}`;
        const v2 = `${vertices[(i + 1) % vertices.length]}`;
        const edge = `${v1}/${v2}`;
        const count = edgeCount.has(edge) ? edgeCount.get(edge) : 0;
        edgeCount.set(edge, count + 1);
      });
    });
    const nonManifold = [];
    edgeCount.forEach((count, edge) => {
      const complementEdge = edge.split('/').reverse().join('/');
      const complementCount = edgeCount.get(complementEdge);
      if (count !== complementCount) {
        nonManifold.push(edge.replace('/', ' -> '));
      }
    });
    if (nonManifold.length > 0) {
      throw new Error(`non-manifold edges ${nonManifold.length}\n${nonManifold.join('\n')}`);
    }
  };
  var validate_1$2 = validate$2;
  var geom3$1 = {
    clone: clone_1$9,
    create: create_1$7,
    fromPoints: fromPoints_1$2,
    fromCompactBinary: fromCompactBinary_1$2,
    invert: invert_1$1,
    isA: isA_1$2,
    toPoints: toPoints_1$2,
    toPolygons: toPolygons_1,
    toString: toString_1$3,
    toCompactBinary: toCompactBinary_1$2,
    transform: transform_1$3,
    validate: validate_1$2
  };
  var RenderGroup = (function () {
    function RenderGroup(canvasNumber) {
      this.canvasNumber = canvasNumber;
      this.render = false;
      this.hasGrid = true;
      this.hasAxis = true;
      this.shapes = [];
    }
    RenderGroup.prototype.toReplString = function () {
      return ("<Render #").concat(this.canvasNumber, ">");
    };
    return RenderGroup;
  })();
  var RenderGroupManager = (function () {
    function RenderGroupManager() {
      this.canvasTracker = 1;
      this.renderGroups = [];
      this.addRenderGroup();
    }
    RenderGroupManager.prototype.addRenderGroup = function () {
      this.renderGroups.push(new RenderGroup(this.canvasTracker++));
    };
    RenderGroupManager.prototype.getCurrentRenderGroup = function () {
      return this.renderGroups.at(-1);
    };
    RenderGroupManager.prototype.nextRenderGroup = function (oldHasGrid, oldHasAxis) {
      if (oldHasGrid === void 0) {
        oldHasGrid = false;
      }
      if (oldHasAxis === void 0) {
        oldHasAxis = false;
      }
      var oldRenderGroup = this.getCurrentRenderGroup();
      oldRenderGroup.render = true;
      oldRenderGroup.hasGrid = oldHasGrid;
      oldRenderGroup.hasAxis = oldHasAxis;
      this.addRenderGroup();
      return oldRenderGroup;
    };
    RenderGroupManager.prototype.storeShape = function (shape) {
      this.getCurrentRenderGroup().shapes.push(shape);
    };
    RenderGroupManager.prototype.shouldRender = function () {
      return this.getGroupsToRender().length > 0;
    };
    RenderGroupManager.prototype.getGroupsToRender = function () {
      return this.renderGroups.filter(function (renderGroup) {
        return renderGroup.render;
      });
    };
    return RenderGroupManager;
  })();
  var CsgModuleState = (function () {
    function CsgModuleState() {
      this.componentCounter = 0;
      this.renderGroupManager = new RenderGroupManager();
    }
    CsgModuleState.prototype.nextComponent = function () {
      return ++this.componentCounter;
    };
    return CsgModuleState;
  })();
  function getModuleContext(moduleContexts) {
    var potentialModuleContext = moduleContexts.csg;
    return potentialModuleContext !== null && potentialModuleContext !== void 0 ? potentialModuleContext : null;
  }
  function hexToColor(hex) {
    var _a;
    var regex = _wrapRegExp(/^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i, {
      red: 1,
      green: 2,
      blue: 3
    });
    var potentialGroups = (_a = hex.match(regex)) === null || _a === void 0 ? void 0 : _a.groups;
    if (potentialGroups === undefined) return [0, 0, 0];
    var groups = potentialGroups;
    return [parseInt(groups.red, 16) / 255, parseInt(groups.green, 16) / 255, parseInt(groups.blue, 16) / 255];
  }
  function colorToAlphaColor(color, opacity) {
    if (opacity === void 0) {
      opacity = 1;
    }
    return __spreadArray(__spreadArray([], color, true), [opacity], false);
  }
  function hexToAlphaColor(hex) {
    return colorToAlphaColor(hexToColor(hex));
  }
  function looseInstanceof(object, c) {
    var _a;
    var objectName = (_a = object === null || object === void 0 ? void 0 : object.constructor) === null || _a === void 0 ? void 0 : _a.name;
    var className = c === null || c === void 0 ? void 0 : c.name;
    return objectName !== undefined && className !== undefined && objectName === className;
  }
  var Alignment = {
    CENTER: "center",
    LEFT: "left",
    RIGHT: "right"
  };
  var Elevation = {
    ZERO: 0,
    ONE: 1,
    TWO: 2,
    THREE: 3,
    FOUR: 4
  };
  var Intent = {
    NONE: "none",
    PRIMARY: "primary",
    SUCCESS: "success",
    WARNING: "warning",
    DANGER: "danger"
  };
  var Position = {
    BOTTOM: "bottom",
    BOTTOM_LEFT: "bottom-left",
    BOTTOM_RIGHT: "bottom-right",
    LEFT: "left",
    LEFT_BOTTOM: "left-bottom",
    LEFT_TOP: "left-top",
    RIGHT: "right",
    RIGHT_BOTTOM: "right-bottom",
    RIGHT_TOP: "right-top",
    TOP: "top",
    TOP_LEFT: "top-left",
    TOP_RIGHT: "top-right"
  };
  function isPositionHorizontal(position) {
    return position === Position.TOP || position === Position.TOP_LEFT || position === Position.TOP_RIGHT || position === Position.BOTTOM || position === Position.BOTTOM_LEFT || position === Position.BOTTOM_RIGHT;
  }
  function getPositionIgnoreAngles(position) {
    if (position === Position.TOP || position === Position.TOP_LEFT || position === Position.TOP_RIGHT) {
      return Position.TOP;
    } else if (position === Position.BOTTOM || position === Position.BOTTOM_LEFT || position === Position.BOTTOM_RIGHT) {
      return Position.BOTTOM;
    } else if (position === Position.LEFT || position === Position.LEFT_TOP || position === Position.LEFT_BOTTOM) {
      return Position.LEFT;
    } else {
      return Position.RIGHT;
    }
  }
  var _a, _b, _c, _d;
  var NS = "bp4";
  if (typeof process !== "undefined") {
    NS = (_d = (_b = (_a = process.env) === null || _a === void 0 ? void 0 : _a.BLUEPRINT_NAMESPACE) !== null && _b !== void 0 ? _b : (_c = process.env) === null || _c === void 0 ? void 0 : _c.REACT_APP_BLUEPRINT_NAMESPACE) !== null && _d !== void 0 ? _d : NS;
  }
  var ACTIVE = ("").concat(NS, "-active");
  var ALIGN_LEFT = ("").concat(NS, "-align-left");
  var ALIGN_RIGHT = ("").concat(NS, "-align-right");
  var DARK = ("").concat(NS, "-dark");
  var DISABLED = ("").concat(NS, "-disabled");
  var FILL = ("").concat(NS, "-fill");
  var FIXED = ("").concat(NS, "-fixed");
  var FIXED_TOP = ("").concat(NS, "-fixed-top");
  var INLINE = ("").concat(NS, "-inline");
  var INTERACTIVE = ("").concat(NS, "-interactive");
  var LARGE = ("").concat(NS, "-large");
  var LOADING = ("").concat(NS, "-loading");
  var MINIMAL = ("").concat(NS, "-minimal");
  var OUTLINED = ("").concat(NS, "-outlined");
  var MULTILINE = ("").concat(NS, "-multiline");
  var ROUND = ("").concat(NS, "-round");
  var SELECTED = ("").concat(NS, "-selected");
  var SMALL = ("").concat(NS, "-small");
  var VERTICAL = ("").concat(NS, "-vertical");
  positionClass(Position.TOP);
  positionClass(Position.BOTTOM);
  positionClass(Position.LEFT);
  positionClass(Position.RIGHT);
  intentClass(Intent.PRIMARY);
  intentClass(Intent.SUCCESS);
  intentClass(Intent.WARNING);
  intentClass(Intent.DANGER);
  var TEXT_MUTED = ("").concat(NS, "-text-muted");
  var TEXT_OVERFLOW_ELLIPSIS = ("").concat(NS, "-text-overflow-ellipsis");
  var HEADING = ("").concat(NS, "-heading");
  var ALERT = ("").concat(NS, "-alert");
  var ALERT_BODY = ("").concat(ALERT, "-body");
  var ALERT_CONTENTS = ("").concat(ALERT, "-contents");
  var ALERT_FOOTER = ("").concat(ALERT, "-footer");
  var BREADCRUMB = ("").concat(NS, "-breadcrumb");
  var BREADCRUMB_CURRENT = ("").concat(BREADCRUMB, "-current");
  var BREADCRUMBS = ("").concat(BREADCRUMB, "s");
  var BREADCRUMBS_COLLAPSED = ("").concat(BREADCRUMB, "s-collapsed");
  var BUTTON = ("").concat(NS, "-button");
  var BUTTON_GROUP = ("").concat(BUTTON, "-group");
  var BUTTON_SPINNER = ("").concat(BUTTON, "-spinner");
  var BUTTON_TEXT = ("").concat(BUTTON, "-text");
  var CALLOUT = ("").concat(NS, "-callout");
  var CALLOUT_ICON = ("").concat(CALLOUT, "-icon");
  var CARD = ("").concat(NS, "-card");
  var COLLAPSE = ("").concat(NS, "-collapse");
  var COLLAPSE_BODY = ("").concat(COLLAPSE, "-body");
  var COLLAPSIBLE_LIST = ("").concat(NS, "-collapse-list");
  var CONTEXT_MENU = ("").concat(NS, "-context-menu");
  var CONTEXT_MENU_POPOVER_TARGET = ("").concat(CONTEXT_MENU, "-popover-target");
  var CONTROL_GROUP = ("").concat(NS, "-control-group");
  var DIALOG = ("").concat(NS, "-dialog");
  var DIALOG_CONTAINER = ("").concat(DIALOG, "-container");
  var DIALOG_CLOSE_BUTTON = ("").concat(DIALOG, "-close-button");
  var DIALOG_FOOTER_ACTIONS = ("").concat(DIALOG, "-footer-actions");
  var DIALOG_HEADER = ("").concat(DIALOG, "-header");
  var DIALOG_STEP = ("").concat(NS, "-dialog-step");
  var DIALOG_STEP_CONTAINER = ("").concat(DIALOG_STEP, "-container");
  var DIALOG_STEP_TITLE = ("").concat(DIALOG_STEP, "-title");
  var DIALOG_STEP_ICON = ("").concat(DIALOG_STEP, "-icon");
  var DIALOG_STEP_VIEWED = ("").concat(DIALOG_STEP, "-viewed");
  var DIVIDER = ("").concat(NS, "-divider");
  var DRAWER = ("").concat(NS, "-drawer");
  var DRAWER_HEADER = ("").concat(DRAWER, "-header");
  var EDITABLE_TEXT = ("").concat(NS, "-editable-text");
  var EDITABLE_TEXT_CONTENT = ("").concat(EDITABLE_TEXT, "-content");
  var EDITABLE_TEXT_EDITING = ("").concat(EDITABLE_TEXT, "-editing");
  var EDITABLE_TEXT_INPUT = ("").concat(EDITABLE_TEXT, "-input");
  var EDITABLE_TEXT_PLACEHOLDER = ("").concat(EDITABLE_TEXT, "-placeholder");
  var FLEX_EXPANDER = ("").concat(NS, "-flex-expander");
  var HTML_SELECT = ("").concat(NS, "-html-select");
  var HTML_TABLE = ("").concat(NS, "-html-table");
  var HTML_TABLE_BORDERED = ("").concat(HTML_TABLE, "-bordered");
  var HTML_TABLE_CONDENSED = ("").concat(HTML_TABLE, "-condensed");
  var HTML_TABLE_STRIPED = ("").concat(HTML_TABLE, "-striped");
  var INPUT = ("").concat(NS, "-input");
  var INPUT_GHOST = ("").concat(INPUT, "-ghost");
  var INPUT_GROUP = ("").concat(INPUT, "-group");
  var INPUT_LEFT_CONTAINER = ("").concat(INPUT, "-left-container");
  var INPUT_ACTION = ("").concat(INPUT, "-action");
  var CONTROL = ("").concat(NS, "-control");
  var CONTROL_INDICATOR = ("").concat(CONTROL, "-indicator");
  var CONTROL_INDICATOR_CHILD = ("").concat(CONTROL_INDICATOR, "-child");
  var CHECKBOX = ("").concat(NS, "-checkbox");
  var RADIO = ("").concat(NS, "-radio");
  var SWITCH = ("").concat(NS, "-switch");
  var SWITCH_INNER_TEXT = ("").concat(SWITCH, "-inner-text");
  var FILE_INPUT = ("").concat(NS, "-file-input");
  var FILE_INPUT_HAS_SELECTION = ("").concat(NS, "-file-input-has-selection");
  var FILE_UPLOAD_INPUT = ("").concat(NS, "-file-upload-input");
  var FILE_UPLOAD_INPUT_CUSTOM_TEXT = ("").concat(NS, "-file-upload-input-custom-text");
  var KEY = ("").concat(NS, "-key");
  var KEY_COMBO = ("").concat(KEY, "-combo");
  var MODIFIER_KEY = ("").concat(NS, "-modifier-key");
  var HOTKEY = ("").concat(NS, "-hotkey");
  var HOTKEY_LABEL = ("").concat(HOTKEY, "-label");
  var HOTKEY_COLUMN = ("").concat(HOTKEY, "-column");
  var LABEL = ("").concat(NS, "-label");
  var FORM_GROUP = ("").concat(NS, "-form-group");
  var FORM_CONTENT = ("").concat(NS, "-form-content");
  var FORM_HELPER_TEXT = ("").concat(NS, "-form-helper-text");
  var FORM_GROUP_SUB_LABEL = ("").concat(NS, "-form-group-sub-label");
  var MENU = ("").concat(NS, "-menu");
  var MENU_ITEM = ("").concat(MENU, "-item");
  var MENU_ITEM_ICON = ("").concat(MENU_ITEM, "-icon");
  var MENU_ITEM_LABEL = ("").concat(MENU_ITEM, "-label");
  var MENU_SUBMENU = ("").concat(NS, "-submenu");
  var MENU_SUBMENU_ICON = ("").concat(MENU_SUBMENU, "-icon");
  var MENU_DIVIDER = ("").concat(MENU, "-divider");
  var MENU_HEADER = ("").concat(MENU, "-header");
  var MULTISTEP_DIALOG = ("").concat(NS, "-multistep-dialog");
  var MULTISTEP_DIALOG_PANELS = ("").concat(MULTISTEP_DIALOG, "-panels");
  var MULTISTEP_DIALOG_LEFT_PANEL = ("").concat(MULTISTEP_DIALOG, "-left-panel");
  var MULTISTEP_DIALOG_RIGHT_PANEL = ("").concat(MULTISTEP_DIALOG, "-right-panel");
  var MULTISTEP_DIALOG_FOOTER = ("").concat(MULTISTEP_DIALOG, "-footer");
  var MULTISTEP_DIALOG_NAV_TOP = ("").concat(MULTISTEP_DIALOG, "-nav-top");
  var MULTISTEP_DIALOG_NAV_RIGHT = ("").concat(MULTISTEP_DIALOG, "-nav-right");
  var NAVBAR = ("").concat(NS, "-navbar");
  var NAVBAR_GROUP = ("").concat(NAVBAR, "-group");
  var NAVBAR_HEADING = ("").concat(NAVBAR, "-heading");
  var NAVBAR_DIVIDER = ("").concat(NAVBAR, "-divider");
  var NON_IDEAL_STATE = ("").concat(NS, "-non-ideal-state");
  var NON_IDEAL_STATE_VISUAL = ("").concat(NON_IDEAL_STATE, "-visual");
  var NON_IDEAL_STATE_TEXT = ("").concat(NON_IDEAL_STATE, "-text");
  var NUMERIC_INPUT = ("").concat(NS, "-numeric-input");
  var OVERFLOW_LIST = ("").concat(NS, "-overflow-list");
  var OVERFLOW_LIST_SPACER = ("").concat(OVERFLOW_LIST, "-spacer");
  var OVERLAY = ("").concat(NS, "-overlay");
  var OVERLAY_BACKDROP = ("").concat(OVERLAY, "-backdrop");
  var OVERLAY_CONTAINER = ("").concat(OVERLAY, "-container");
  var OVERLAY_CONTENT = ("").concat(OVERLAY, "-content");
  var OVERLAY_INLINE = ("").concat(OVERLAY, "-inline");
  var OVERLAY_OPEN = ("").concat(OVERLAY, "-open");
  var OVERLAY_SCROLL_CONTAINER = ("").concat(OVERLAY, "-scroll-container");
  var OVERLAY_START_FOCUS_TRAP = ("").concat(OVERLAY, "-start-focus-trap");
  var OVERLAY_END_FOCUS_TRAP = ("").concat(OVERLAY, "-end-focus-trap");
  var PANEL_STACK = ("").concat(NS, "-panel-stack");
  var PANEL_STACK_HEADER = ("").concat(PANEL_STACK, "-header");
  var PANEL_STACK_HEADER_BACK = ("").concat(PANEL_STACK, "-header-back");
  var PANEL_STACK_VIEW = ("").concat(PANEL_STACK, "-view");
  var POPOVER = ("").concat(NS, "-popover");
  var POPOVER_ARROW = ("").concat(POPOVER, "-arrow");
  var POPOVER_BACKDROP = ("").concat(POPOVER, "-backdrop");
  var POPOVER_CAPTURING_DISMISS = ("").concat(POPOVER, "-capturing-dismiss");
  var POPOVER_CONTENT = ("").concat(POPOVER, "-content");
  var POPOVER_DISMISS = ("").concat(POPOVER, "-dismiss");
  var POPOVER_DISMISS_OVERRIDE = ("").concat(POPOVER_DISMISS, "-override");
  var POPOVER_OPEN = ("").concat(POPOVER, "-open");
  var POPOVER_OUT_OF_BOUNDARIES = ("").concat(POPOVER, "-out-of-boundaries");
  var POPOVER_TARGET = ("").concat(POPOVER, "-target");
  var POPOVER_WRAPPER = ("").concat(POPOVER, "-wrapper");
  var TRANSITION_CONTAINER = ("").concat(NS, "-transition-container");
  var PROGRESS_BAR = ("").concat(NS, "-progress-bar");
  var PROGRESS_METER = ("").concat(NS, "-progress-meter");
  var PROGRESS_NO_STRIPES = ("").concat(NS, "-no-stripes");
  var PROGRESS_NO_ANIMATION = ("").concat(NS, "-no-animation");
  var PORTAL = ("").concat(NS, "-portal");
  var SLIDER = ("").concat(NS, "-slider");
  var SLIDER_AXIS = ("").concat(SLIDER, "-axis");
  var SLIDER_HANDLE = ("").concat(SLIDER, "-handle");
  var SLIDER_LABEL = ("").concat(SLIDER, "-label");
  var SLIDER_TRACK = ("").concat(SLIDER, "-track");
  var SLIDER_PROGRESS = ("").concat(SLIDER, "-progress");
  var START = ("").concat(NS, "-start");
  var END = ("").concat(NS, "-end");
  var SPINNER = ("").concat(NS, "-spinner");
  var SPINNER_ANIMATION = ("").concat(SPINNER, "-animation");
  var SPINNER_HEAD = ("").concat(SPINNER, "-head");
  var SPINNER_NO_SPIN = ("").concat(NS, "-no-spin");
  var SPINNER_TRACK$1 = ("").concat(SPINNER, "-track");
  var TAB$1 = ("").concat(NS, "-tab");
  var TAB_INDICATOR = ("").concat(TAB$1, "-indicator");
  var TAB_INDICATOR_WRAPPER = ("").concat(TAB_INDICATOR, "-wrapper");
  var TAB_LIST = ("").concat(TAB$1, "-list");
  var TAB_PANEL = ("").concat(TAB$1, "-panel");
  var TABS = ("").concat(TAB$1, "s");
  var TAG = ("").concat(NS, "-tag");
  var TAG_REMOVE = ("").concat(TAG, "-remove");
  var TAG_INPUT = ("").concat(NS, "-tag-input");
  var TAG_INPUT_ICON = ("").concat(TAG_INPUT, "-icon");
  var TAG_INPUT_VALUES = ("").concat(TAG_INPUT, "-values");
  var TOAST = ("").concat(NS, "-toast");
  var TOAST_CONTAINER = ("").concat(TOAST, "-container");
  var TOAST_MESSAGE = ("").concat(TOAST, "-message");
  var TOOLTIP = ("").concat(NS, "-tooltip");
  var TREE = ("").concat(NS, "-tree");
  var TREE_NODE = ("").concat(NS, "-tree-node");
  var TREE_NODE_CARET = ("").concat(TREE_NODE, "-caret");
  var TREE_NODE_CARET_CLOSED = ("").concat(TREE_NODE_CARET, "-closed");
  var TREE_NODE_CARET_NONE = ("").concat(TREE_NODE_CARET, "-none");
  var TREE_NODE_CARET_OPEN = ("").concat(TREE_NODE_CARET, "-open");
  var TREE_NODE_CONTENT = ("").concat(TREE_NODE, "-content");
  var TREE_NODE_EXPANDED = ("").concat(TREE_NODE, "-expanded");
  var TREE_NODE_ICON = ("").concat(TREE_NODE, "-icon");
  var TREE_NODE_LABEL = ("").concat(TREE_NODE, "-label");
  var TREE_NODE_LIST = ("").concat(TREE_NODE, "-list");
  var TREE_NODE_SECONDARY_LABEL = ("").concat(TREE_NODE, "-secondary-label");
  var TREE_NODE_SELECTED = ("").concat(TREE_NODE, "-selected");
  var TREE_ROOT = ("").concat(NS, "-tree-root");
  var ICON = ("").concat(NS, "-icon");
  function getClassNamespace() {
    return NS;
  }
  function alignmentClass(alignment) {
    switch (alignment) {
      case Alignment.LEFT:
        return ALIGN_LEFT;
      case Alignment.RIGHT:
        return ALIGN_RIGHT;
      default:
        return undefined;
    }
  }
  function elevationClass(elevation) {
    if (elevation === undefined) {
      return undefined;
    }
    return ("").concat(NS, "-elevation-").concat(elevation);
  }
  function iconClass(iconName) {
    if (iconName == null) {
      return undefined;
    }
    return iconName.indexOf(("").concat(NS, "-icon-")) === 0 ? iconName : ("").concat(NS, "-icon-").concat(iconName);
  }
  function intentClass(intent) {
    if (intent == null || intent === Intent.NONE) {
      return undefined;
    }
    return ("").concat(NS, "-intent-").concat(intent.toLowerCase());
  }
  function positionClass(position) {
    if (position === undefined) {
      return undefined;
    }
    return ("").concat(NS, "-position-").concat(position);
  }
  function arraysEqual(arrA, arrB, compare) {
    if (compare === void 0) {
      compare = function (a, b) {
        return a === b;
      };
    }
    if (arrA == null && arrB == null) {
      return true;
    } else if (arrA == null || arrB == null || arrA.length !== arrB.length) {
      return false;
    } else {
      return arrA.every(function (a, i) {
        return compare(a, arrB[i]);
      });
    }
  }
  function shallowCompareKeys(objA, objB, keys) {
    if (objA == null && objB == null) {
      return true;
    } else if (objA == null || objB == null) {
      return false;
    } else if (Array.isArray(objA) || Array.isArray(objB)) {
      return false;
    } else if (keys != null) {
      return shallowCompareKeysImpl(objA, objB, keys);
    } else {
      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);
      return shallowCompareKeysImpl(objA, objB, {
        include: keysA
      }) && shallowCompareKeysImpl(objA, objB, {
        include: keysB
      });
    }
  }
  function shallowCompareKeysImpl(objA, objB, keys) {
    return filterKeys(objA, objB, keys).every(function (key) {
      return objA.hasOwnProperty(key) === objB.hasOwnProperty(key) && objA[key] === objB[key];
    });
  }
  function filterKeys(objA, objB, keys) {
    if (isAllowlist(keys)) {
      return keys.include;
    } else if (isDenylist(keys)) {
      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);
      var keySet_1 = arrayToObject(keysA.concat(keysB));
      keys.exclude.forEach(function (key) {
        return delete keySet_1[key];
      });
      return Object.keys(keySet_1);
    }
    return [];
  }
  function isAllowlist(keys) {
    return keys != null && keys.include != null;
  }
  function isDenylist(keys) {
    return keys != null && keys.exclude != null;
  }
  function arrayToObject(arr) {
    return arr.reduce(function (obj, element) {
      obj[element] = true;
      return obj;
    }, {});
  }
  function elementIsOrContains(element, testElement) {
    return element === testElement || element.contains(testElement);
  }
  function getActiveElement(element, options) {
    var _a;
    if (element == null) {
      return document.activeElement;
    }
    var rootNode = (_a = element.getRootNode(options)) !== null && _a !== void 0 ? _a : document;
    return rootNode.activeElement;
  }
  function isFunction$2(value) {
    return typeof value === "function";
  }
  var ns = "[Blueprint]";
  var CLAMP_MIN_MAX = ns + " clamp: max cannot be less than min";
  var ALERT_WARN_CANCEL_PROPS = ns + " <Alert> cancelButtonText and onCancel should be set together.";
  var ALERT_WARN_CANCEL_ESCAPE_KEY = ns + " <Alert> canEscapeKeyCancel enabled without onCancel or onClose handler.";
  var ALERT_WARN_CANCEL_OUTSIDE_CLICK = ns + " <Alert> canOutsideClickCancel enabled without onCancel or onClose handler.";
  var COLLAPSIBLE_LIST_INVALID_CHILD = ns + " <CollapsibleList> children must be <MenuItem>s";
  var HOTKEYS_HOTKEY_CHILDREN = ns + " <Hotkeys> only accepts <Hotkey> children.";
  var INPUT_WARN_LEFT_ELEMENT_LEFT_ICON_MUTEX = ns + " <InputGroup> leftElement and leftIcon prop are mutually exclusive, with leftElement taking priority.";
  var NUMERIC_INPUT_MIN_MAX = ns + " <NumericInput> requires min to be no greater than max if both are defined.";
  var NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND = ns + " <NumericInput> requires minorStepSize to be no greater than stepSize.";
  var NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND = ns + " <NumericInput> requires stepSize to be no greater than majorStepSize.";
  var NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires minorStepSize to be strictly greater than zero.";
  var NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires majorStepSize to be strictly greater than zero.";
  var NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE = ns + " <NumericInput> requires stepSize to be strictly greater than zero.";
  var NUMERIC_INPUT_CONTROLLED_VALUE_INVALID = ns + " <NumericInput> controlled value prop does not adhere to stepSize, min, and/or max constraints.";
  var PANEL_STACK_INITIAL_PANEL_STACK_MUTEX = ns + " <PanelStack> requires exactly one of initialPanel and stack prop";
  var PANEL_STACK_REQUIRES_PANEL = ns + " <PanelStack> requires at least one panel in the stack";
  var OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED = ns + " <OverflowList> does not support changing observeParents after mounting.";
  var POPOVER_REQUIRES_TARGET = ns + " <Popover> requires target prop or at least one child element.";
  var POPOVER_HAS_BACKDROP_INTERACTION = ns + " <Popover hasBackdrop={true}> requires interactionKind={PopoverInteractionKind.CLICK}.";
  var POPOVER_WARN_TOO_MANY_CHILDREN = ns + " <Popover> supports one or two children; additional children are ignored." + " First child is the target, second child is the content. You may instead supply these two as props.";
  var POPOVER_WARN_DOUBLE_CONTENT = ns + " <Popover> with two children ignores content prop; use either prop or children.";
  var POPOVER_WARN_DOUBLE_TARGET = ns + " <Popover> with children ignores target prop; use either prop or children.";
  var POPOVER_WARN_EMPTY_CONTENT = ns + " Disabling <Popover> with empty/whitespace content...";
  var POPOVER_WARN_HAS_BACKDROP_INLINE = ns + " <Popover usePortal={false}> ignores hasBackdrop";
  var POPOVER_WARN_PLACEMENT_AND_POSITION_MUTEX = ns + " <Popover> supports either placement or position prop, not both.";
  var POPOVER_WARN_UNCONTROLLED_ONINTERACTION = ns + " <Popover> onInteraction is ignored when uncontrolled.";
  var PORTAL_CONTEXT_CLASS_NAME_STRING = ns + " <Portal> context blueprintPortalClassName must be string";
  var PORTAL_LEGACY_CONTEXT_API = ns + " setting blueprintPortalClassName via legacy React context API is deprecated, use <PortalProvider> instead.";
  var RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX = ns + " <RadioGroup> children and options prop are mutually exclusive, with options taking priority.";
  var SLIDER_ZERO_STEP = ns + " <Slider> stepSize must be greater than zero.";
  var SLIDER_ZERO_LABEL_STEP = ns + " <Slider> labelStepSize must be greater than zero.";
  var RANGESLIDER_NULL_VALUE = ns + " <RangeSlider> value prop must be an array of two non-null numbers.";
  var MULTISLIDER_INVALID_CHILD = ns + " <MultiSlider> children must be <SliderHandle>s or <SliderTrackStop>s";
  var MULTISLIDER_WARN_LABEL_STEP_SIZE_LABEL_VALUES_MUTEX = ns + " <MultiSlider> labelStepSize and labelValues prop are mutually exclusive, with labelStepSize taking priority.";
  var SPINNER_WARN_CLASSES_SIZE = ns + " <Spinner> Classes.SMALL/LARGE are ignored if size prop is set.";
  var TOASTER_CREATE_NULL = ns + " Toaster.create() is not supported inside React lifecycle methods in React 16." + " See usage example on the docs site.";
  var TOASTER_WARN_INLINE = ns + " Toaster.create() ignores inline prop as it always creates a new element.";
  var DIALOG_WARN_NO_HEADER_ICON = ns + " <Dialog> iconName is ignored if title is omitted.";
  var DIALOG_WARN_NO_HEADER_CLOSE_BUTTON = ns + " <Dialog> isCloseButtonShown prop is ignored if title is omitted.";
  var DRAWER_ANGLE_POSITIONS_ARE_CASTED = ns + " <Drawer> all angle positions are casted into pure position (TOP, BOTTOM, LEFT or RIGHT)";
  var TOASTER_MAX_TOASTS_INVALID = ns + " <Toaster> maxToasts is set to an invalid number, must be greater than 0";
  function isNodeEnv(env) {
    return typeof process !== "undefined" && process.env && process.env.NODE_ENV === env;
  }
  function approxEqual(a, b, tolerance) {
    if (tolerance === void 0) {
      tolerance = 0.00001;
    }
    return Math.abs(a - b) <= tolerance;
  }
  function clamp(val, min, max) {
    if (val == null) {
      return val;
    }
    if (max < min) {
      throw new Error(CLAMP_MIN_MAX);
    }
    return Math.min(Math.max(val, min), max);
  }
  function countDecimalPlaces(num) {
    if (!isFinite(num)) {
      return 0;
    }
    var e = 1;
    var p = 0;
    while (Math.round(num * e) / e !== num) {
      e *= 10;
      p++;
    }
    return p;
  }
  var uniqueCountForNamespace = new Map();
  function uniqueId(namespace) {
    var _a;
    var curCount = (_a = uniqueCountForNamespace.get(namespace)) !== null && _a !== void 0 ? _a : 0;
    uniqueCountForNamespace.set(namespace, curCount + 1);
    return ("").concat(namespace, "-").concat(curCount);
  }
  function isReactNodeEmpty(node, skipArray) {
    if (skipArray === void 0) {
      skipArray = false;
    }
    return node == null || node === "" || node === false || !skipArray && Array.isArray(node) && (node.length === 0 || node.every(function (n) {
      return isReactNodeEmpty(n, true);
    }));
  }
  function isReactChildrenElementOrElements(children) {
    return !isReactNodeEmpty(children, true) && children !== true;
  }
  function ensureElement(child, tagName) {
    if (tagName === void 0) {
      tagName = "span";
    }
    if (child == null || typeof child === "boolean") {
      return undefined;
    } else if (typeof child === "string") {
      return child.trim().length > 0 ? React__namespace.createElement(tagName, {}, child) : undefined;
    } else if (typeof child === "number" || typeof child.type === "symbol" || Array.isArray(child)) {
      return React__namespace.createElement(tagName, {}, child);
    } else if (isReactElement(child)) {
      return child;
    } else {
      return undefined;
    }
  }
  function isReactElement(child) {
    return typeof child === "object" && typeof child.type !== "undefined" && typeof child.props !== "undefined";
  }
  function isElementOfType(element, ComponentType) {
    return element != null && element.type != null && element.type.displayName != null && element.type.displayName === ComponentType.displayName;
  }
  if (typeof require !== "undefined" && typeof window !== "undefined" && typeof document !== "undefined") {
    require("dom4");
  }
  function isRefObject(value) {
    return value != null && typeof value !== "function";
  }
  function isRefCallback(value) {
    return typeof value === "function";
  }
  function setRef$1(refTarget, ref) {
    if (isRefObject(refTarget)) {
      refTarget.current = ref;
    } else if (isRefCallback(refTarget)) {
      refTarget(ref);
    }
  }
  function refHandler(refTargetParent, refTargetKey, refProp) {
    return function (ref) {
      refTargetParent[refTargetKey] = ref;
      setRef$1(refProp, ref);
    };
  }
  (function (_super) {
    __extends(AbstractComponent, _super);
    function AbstractComponent(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.timeoutIds = [];
      _this.clearTimeouts = function () {
        if (_this.timeoutIds.length > 0) {
          for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {
            var timeoutId = _a[_i];
            window.clearTimeout(timeoutId);
          }
          _this.timeoutIds = [];
        }
      };
      if (!isNodeEnv("production")) {
        _this.validateProps(_this.props);
      }
      return _this;
    }
    AbstractComponent.prototype.componentWillReceiveProps = function (nextProps) {
      if (!isNodeEnv("production")) {
        this.validateProps(nextProps);
      }
    };
    AbstractComponent.prototype.componentWillUnmount = function () {
      this.clearTimeouts();
    };
    AbstractComponent.prototype.setTimeout = function (callback, timeout) {
      var handle = window.setTimeout(callback, timeout);
      this.timeoutIds.push(handle);
      return function () {
        return window.clearTimeout(handle);
      };
    };
    AbstractComponent.prototype.validateProps = function (_) {};
    return AbstractComponent;
  })(React__namespace.Component);
  (function (_super) {
    __extends(AbstractComponent2, _super);
    function AbstractComponent2(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.timeoutIds = [];
      _this.requestIds = [];
      _this.clearTimeouts = function () {
        if (_this.timeoutIds.length > 0) {
          for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {
            var timeoutId = _a[_i];
            window.clearTimeout(timeoutId);
          }
          _this.timeoutIds = [];
        }
      };
      _this.cancelAnimationFrames = function () {
        if (_this.requestIds.length > 0) {
          for (var _i = 0, _a = _this.requestIds; _i < _a.length; _i++) {
            var requestId = _a[_i];
            window.cancelAnimationFrame(requestId);
          }
          _this.requestIds = [];
        }
      };
      if (!isNodeEnv("production")) {
        _this.validateProps(_this.props);
      }
      return _this;
    }
    AbstractComponent2.prototype.componentDidUpdate = function (_prevProps, _prevState, _snapshot) {
      if (!isNodeEnv("production")) {
        this.validateProps(this.props);
      }
    };
    AbstractComponent2.prototype.componentWillUnmount = function () {
      this.clearTimeouts();
      this.cancelAnimationFrames();
    };
    AbstractComponent2.prototype.requestAnimationFrame = function (callback) {
      var handle = window.requestAnimationFrame(callback);
      this.requestIds.push(handle);
      return function () {
        return window.cancelAnimationFrame(handle);
      };
    };
    AbstractComponent2.prototype.setTimeout = function (callback, timeout) {
      var handle = window.setTimeout(callback, timeout);
      this.timeoutIds.push(handle);
      return function () {
        return window.clearTimeout(handle);
      };
    };
    AbstractComponent2.prototype.validateProps = function (_props) {};
    return AbstractComponent2;
  })(React__namespace.Component);
  (function (_super) {
    __extends(AbstractPureComponent, _super);
    function AbstractPureComponent(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.timeoutIds = [];
      _this.clearTimeouts = function () {
        if (_this.timeoutIds.length > 0) {
          for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {
            var timeoutId = _a[_i];
            window.clearTimeout(timeoutId);
          }
          _this.timeoutIds = [];
        }
      };
      if (!isNodeEnv("production")) {
        _this.validateProps(_this.props);
      }
      return _this;
    }
    AbstractPureComponent.prototype.componentWillReceiveProps = function (nextProps) {
      if (!isNodeEnv("production")) {
        this.validateProps(nextProps);
      }
    };
    AbstractPureComponent.prototype.componentWillUnmount = function () {
      this.clearTimeouts();
    };
    AbstractPureComponent.prototype.setTimeout = function (callback, timeout) {
      var handle = window.setTimeout(callback, timeout);
      this.timeoutIds.push(handle);
      return function () {
        return window.clearTimeout(handle);
      };
    };
    AbstractPureComponent.prototype.validateProps = function (_props) {};
    return AbstractPureComponent;
  })(React__namespace.PureComponent);
  var AbstractPureComponent2 = (function (_super) {
    __extends(AbstractPureComponent2, _super);
    function AbstractPureComponent2(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.timeoutIds = [];
      _this.requestIds = [];
      _this.clearTimeouts = function () {
        if (_this.timeoutIds.length > 0) {
          for (var _i = 0, _a = _this.timeoutIds; _i < _a.length; _i++) {
            var timeoutId = _a[_i];
            window.clearTimeout(timeoutId);
          }
          _this.timeoutIds = [];
        }
      };
      _this.cancelAnimationFrames = function () {
        if (_this.requestIds.length > 0) {
          for (var _i = 0, _a = _this.requestIds; _i < _a.length; _i++) {
            var requestId = _a[_i];
            window.cancelAnimationFrame(requestId);
          }
          _this.requestIds = [];
        }
      };
      if (!isNodeEnv("production")) {
        _this.validateProps(_this.props);
      }
      return _this;
    }
    AbstractPureComponent2.prototype.componentDidUpdate = function (_prevProps, _prevState, _snapshot) {
      if (!isNodeEnv("production")) {
        this.validateProps(this.props);
      }
    };
    AbstractPureComponent2.prototype.componentWillUnmount = function () {
      this.clearTimeouts();
      this.cancelAnimationFrames();
    };
    AbstractPureComponent2.prototype.requestAnimationFrame = function (callback) {
      var handle = window.requestAnimationFrame(callback);
      this.requestIds.push(handle);
      return function () {
        return window.cancelAnimationFrame(handle);
      };
    };
    AbstractPureComponent2.prototype.setTimeout = function (callback, timeout) {
      var handle = window.setTimeout(callback, timeout);
      this.timeoutIds.push(handle);
      return function () {
        return window.clearTimeout(handle);
      };
    };
    AbstractPureComponent2.prototype.validateProps = function (_props) {};
    return AbstractPureComponent2;
  })(React__namespace.PureComponent);
  var Boundary = {
    START: "start",
    END: "end"
  };
  var DISPLAYNAME_PREFIX = "Blueprint4";
  var INVALID_PROPS = ["active", "alignText", "asyncControl", "containerRef", "current", "elementRef", "fill", "icon", "inputRef", "intent", "inline", "large", "loading", "leftElement", "leftIcon", "minimal", "onRemove", "outlined", "panel", "panelClassName", "popoverProps", "rightElement", "rightIcon", "round", "small", "text"];
  function removeNonHTMLProps(props, invalidProps, shouldMerge) {
    if (invalidProps === void 0) {
      invalidProps = INVALID_PROPS;
    }
    if (shouldMerge === void 0) {
      shouldMerge = false;
    }
    if (shouldMerge) {
      invalidProps = invalidProps.concat(INVALID_PROPS);
    }
    return invalidProps.reduce(function (prev, curr) {
      if (curr.indexOf("-") !== -1) {
        return prev;
      }
      if (prev.hasOwnProperty(curr)) {
        delete prev[curr];
      }
      return prev;
    }, __assign({}, props));
  }
  var lib$1 = {};
  var colors = {};
  Object.defineProperty(colors, "__esModule", {
    value: true
  });
  colors.Colors = void 0;
  const grayScale = {
    BLACK: "#111418",
    DARK_GRAY1: "#1C2127",
    DARK_GRAY2: "#252A31",
    DARK_GRAY3: "#2F343C",
    DARK_GRAY4: "#383E47",
    DARK_GRAY5: "#404854",
    GRAY1: "#5F6B7C",
    GRAY2: "#738091",
    GRAY3: "#8F99A8",
    GRAY4: "#ABB3BF",
    GRAY5: "#C5CBD3",
    LIGHT_GRAY1: "#D3D8DE",
    LIGHT_GRAY2: "#DCE0E5",
    LIGHT_GRAY3: "#E5E8EB",
    LIGHT_GRAY4: "#EDEFF2",
    LIGHT_GRAY5: "#F6F7F9",
    WHITE: "#FFFFFF"
  };
  const coreColors = {
    BLUE1: "#184A90",
    BLUE2: "#215DB0",
    BLUE3: "#2D72D2",
    BLUE4: "#4C90F0",
    BLUE5: "#8ABBFF",
    GREEN1: "#165A36",
    GREEN2: "#1C6E42",
    GREEN3: "#238551",
    GREEN4: "#32A467",
    GREEN5: "#72CA9B",
    ORANGE1: "#77450D",
    ORANGE2: "#935610",
    ORANGE3: "#C87619",
    ORANGE4: "#EC9A3C",
    ORANGE5: "#FBB360",
    RED1: "#8E292C",
    RED2: "#AC2F33",
    RED3: "#CD4246",
    RED4: "#E76A6E",
    RED5: "#FA999C"
  };
  const extendedColors = {
    CERULEAN1: "#0C5174",
    CERULEAN2: "#0F6894",
    CERULEAN3: "#147EB3",
    CERULEAN4: "#3FA6DA",
    CERULEAN5: "#68C1EE",
    FOREST1: "#1D7324",
    FOREST2: "#238C2C",
    FOREST3: "#29A634",
    FOREST4: "#43BF4D",
    FOREST5: "#62D96B",
    GOLD1: "#5C4405",
    GOLD2: "#866103",
    GOLD3: "#D1980B",
    GOLD4: "#F0B726",
    GOLD5: "#FBD065",
    INDIGO1: "#5642A6",
    INDIGO2: "#634DBF",
    INDIGO3: "#7961DB",
    INDIGO4: "#9881F3",
    INDIGO5: "#BDADFF",
    LIME1: "#43501B",
    LIME2: "#5A701A",
    LIME3: "#8EB125",
    LIME4: "#B6D94C",
    LIME5: "#D4F17E",
    ROSE1: "#A82255",
    ROSE2: "#C22762",
    ROSE3: "#DB2C6F",
    ROSE4: "#F5498B",
    ROSE5: "#FF66A1",
    SEPIA1: "#5E4123",
    SEPIA2: "#7A542E",
    SEPIA3: "#946638",
    SEPIA4: "#AF855A",
    SEPIA5: "#D0B090",
    TURQUOISE1: "#004D46",
    TURQUOISE2: "#007067",
    TURQUOISE3: "#00A396",
    TURQUOISE4: "#13C9BA",
    TURQUOISE5: "#7AE1D8",
    VERMILION1: "#96290D",
    VERMILION2: "#B83211",
    VERMILION3: "#D33D17",
    VERMILION4: "#EB6847",
    VERMILION5: "#FF9980",
    VIOLET1: "#5C255C",
    VIOLET2: "#7C327C",
    VIOLET3: "#9D3F9D",
    VIOLET4: "#BD6BBD",
    VIOLET5: "#D69FD6"
  };
  const legacyColors$1 = {
    COBALT1: extendedColors.CERULEAN1,
    COBALT2: extendedColors.CERULEAN2,
    COBALT3: extendedColors.CERULEAN3,
    COBALT4: extendedColors.CERULEAN4,
    COBALT5: extendedColors.CERULEAN5
  };
  colors.Colors = Object.assign(Object.assign(Object.assign(Object.assign({}, grayScale), coreColors), extendedColors), legacyColors$1);
  var legacyColors = {};
  Object.defineProperty(legacyColors, "__esModule", {
    value: true
  });
  legacyColors.LegacyColors = void 0;
  legacyColors.LegacyColors = {
    BLACK: "#10161A",
    BLUE1: "#0E5A8A",
    BLUE2: "#106BA3",
    BLUE3: "#137CBD",
    BLUE4: "#2B95D6",
    BLUE5: "#48AFF0",
    COBALT1: "#1F4B99",
    COBALT2: "#2458B3",
    COBALT3: "#2965CC",
    COBALT4: "#4580E6",
    COBALT5: "#669EFF",
    DARK_GRAY1: "#182026",
    DARK_GRAY2: "#202B33",
    DARK_GRAY3: "#293742",
    DARK_GRAY4: "#30404D",
    DARK_GRAY5: "#394B59",
    FOREST1: "#1D7324",
    FOREST2: "#238C2C",
    FOREST3: "#29A634",
    FOREST4: "#43BF4D",
    FOREST5: "#62D96B",
    GOLD1: "#A67908",
    GOLD2: "#BF8C0A",
    GOLD3: "#D99E0B",
    GOLD4: "#F2B824",
    GOLD5: "#FFC940",
    GRAY1: "#5C7080",
    GRAY2: "#738694",
    GRAY3: "#8A9BA8",
    GRAY4: "#A7B6C2",
    GRAY5: "#BFCCD6",
    GREEN1: "#0A6640",
    GREEN2: "#0D8050",
    GREEN3: "#0F9960",
    GREEN4: "#15B371",
    GREEN5: "#3DCC91",
    INDIGO1: "#5642A6",
    INDIGO2: "#634DBF",
    INDIGO3: "#7157D9",
    INDIGO4: "#9179F2",
    INDIGO5: "#AD99FF",
    LIGHT_GRAY1: "#CED9E0",
    LIGHT_GRAY2: "#D8E1E8",
    LIGHT_GRAY3: "#E1E8ED",
    LIGHT_GRAY4: "#EBF1F5",
    LIGHT_GRAY5: "#F5F8FA",
    LIME1: "#728C23",
    LIME2: "#87A629",
    LIME3: "#9BBF30",
    LIME4: "#B6D94C",
    LIME5: "#D1F26D",
    ORANGE1: "#A66321",
    ORANGE2: "#BF7326",
    ORANGE3: "#D9822B",
    ORANGE4: "#F29D49",
    ORANGE5: "#FFB366",
    RED1: "#A82A2A",
    RED2: "#C23030",
    RED3: "#DB3737",
    RED4: "#F55656",
    RED5: "#FF7373",
    ROSE1: "#A82255",
    ROSE2: "#C22762",
    ROSE3: "#DB2C6F",
    ROSE4: "#F5498B",
    ROSE5: "#FF66A1",
    SEPIA1: "#63411E",
    SEPIA2: "#7D5125",
    SEPIA3: "#96622D",
    SEPIA4: "#B07B46",
    SEPIA5: "#C99765",
    TURQUOISE1: "#008075",
    TURQUOISE2: "#00998C",
    TURQUOISE3: "#00B3A4",
    TURQUOISE4: "#14CCBD",
    TURQUOISE5: "#2EE6D6",
    VERMILION1: "#9E2B0E",
    VERMILION2: "#B83211",
    VERMILION3: "#D13913",
    VERMILION4: "#EB532D",
    VERMILION5: "#FF6E4A",
    VIOLET1: "#5C255C",
    VIOLET2: "#752F75",
    VIOLET3: "#8F398F",
    VIOLET4: "#A854A8",
    VIOLET5: "#C274C2",
    WHITE: "#FFFFFF"
  };
  (function (exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.LegacyColors = exports.Colors = void 0;
    var colors_1 = colors;
    Object.defineProperty(exports, "Colors", {
      enumerable: true,
      get: function () {
        return colors_1.Colors;
      }
    });
    var legacyColors_1 = legacyColors;
    Object.defineProperty(exports, "LegacyColors", {
      enumerable: true,
      get: function () {
        return legacyColors_1.LegacyColors;
      }
    });
  })(lib$1);
  var BACKSPACE = 8;
  var TAB = 9;
  var ENTER = 13;
  var ESCAPE = 27;
  var SPACE = 32;
  var ARROW_LEFT = 37;
  var ARROW_UP = 38;
  var ARROW_RIGHT = 39;
  var ARROW_DOWN = 40;
  var DELETE = 46;
  function isKeyboardClick(keyCode) {
    return keyCode === ENTER || keyCode === SPACE;
  }
  var classnames = {
    exports: {}
  };
  (function (module) {
    (function () {
      var hasOwn = ({}).hasOwnProperty;
      function classNames() {
        var classes = [];
        for (var i = 0; i < arguments.length; i++) {
          var arg = arguments[i];
          if (!arg) continue;
          var argType = typeof arg;
          if (argType === 'string' || argType === 'number') {
            classes.push(arg);
          } else if (Array.isArray(arg)) {
            if (arg.length) {
              var inner = classNames.apply(null, arg);
              if (inner) {
                classes.push(inner);
              }
            }
          } else if (argType === 'object') {
            if (arg.toString === Object.prototype.toString) {
              for (var key in arg) {
                if (hasOwn.call(arg, key) && arg[key]) {
                  classes.push(key);
                }
              }
            } else {
              classes.push(arg.toString());
            }
          }
        }
        return classes.join(' ');
      }
      if (module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
      } else {
        window.classNames = classNames;
      }
    })();
  })(classnames);
  var classNames = classnames.exports;
  var objectWithoutPropertiesLoose = {
    exports: {}
  };
  (function (module) {
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    (module.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports["default"] = module.exports);
  })(objectWithoutPropertiesLoose);
  var _objectWithoutPropertiesLoose$1 = getDefaultExportFromCjs(objectWithoutPropertiesLoose.exports);
  var _extends$2 = {
    exports: {}
  };
  (function (module) {
    function _extends() {
      (module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports);
      return _extends.apply(this, arguments);
    }
    (module.exports = _extends, module.exports.__esModule = true, module.exports["default"] = module.exports);
  })(_extends$2);
  var _extends$1 = getDefaultExportFromCjs(_extends$2.exports);
  var inheritsLoose = {
    exports: {}
  };
  var setPrototypeOf = {
    exports: {}
  };
  (function (module) {
    function _setPrototypeOf(o, p) {
      (module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
        o.__proto__ = p;
        return o;
      }, module.exports.__esModule = true, module.exports["default"] = module.exports);
      return _setPrototypeOf(o, p);
    }
    (module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports);
  })(setPrototypeOf);
  (function (module) {
    var setPrototypeOf$1 = setPrototypeOf.exports;
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      setPrototypeOf$1(subClass, superClass);
    }
    (module.exports = _inheritsLoose, module.exports.__esModule = true, module.exports["default"] = module.exports);
  })(inheritsLoose);
  var _inheritsLoose$2 = getDefaultExportFromCjs(inheritsLoose.exports);
  var assertThisInitialized = {
    exports: {}
  };
  (function (module) {
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    (module.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports["default"] = module.exports);
  })(assertThisInitialized);
  var _assertThisInitialized = getDefaultExportFromCjs(assertThisInitialized.exports);
  var defineProperty$3 = {
    exports: {}
  };
  (function (module) {
    function _defineProperty(obj, key, value) {
      if ((key in obj)) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    (module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports);
  })(defineProperty$3);
  var _defineProperty = getDefaultExportFromCjs(defineProperty$3.exports);
  var toStr$3 = Object.prototype.toString;
  var isArguments$2 = function isArguments(value) {
    var str = toStr$3.call(value);
    var isArgs = str === '[object Arguments]';
    if (!isArgs) {
      isArgs = str !== '[object Array]' && value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr$3.call(value.callee) === '[object Function]';
    }
    return isArgs;
  };
  var implementation$9;
  var hasRequiredImplementation;
  function requireImplementation() {
    if (hasRequiredImplementation) return implementation$9;
    hasRequiredImplementation = 1;
    var keysShim;
    if (!Object.keys) {
      var has = Object.prototype.hasOwnProperty;
      var toStr = Object.prototype.toString;
      var isArgs = isArguments$2;
      var isEnumerable = Object.prototype.propertyIsEnumerable;
      var hasDontEnumBug = !isEnumerable.call({
        toString: null
      }, 'toString');
      var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
      var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];
      var equalsConstructorPrototype = function (o) {
        var ctor = o.constructor;
        return ctor && ctor.prototype === o;
      };
      var excludedKeys = {
        $applicationCache: true,
        $console: true,
        $external: true,
        $frame: true,
        $frameElement: true,
        $frames: true,
        $innerHeight: true,
        $innerWidth: true,
        $onmozfullscreenchange: true,
        $onmozfullscreenerror: true,
        $outerHeight: true,
        $outerWidth: true,
        $pageXOffset: true,
        $pageYOffset: true,
        $parent: true,
        $scrollLeft: true,
        $scrollTop: true,
        $scrollX: true,
        $scrollY: true,
        $self: true,
        $webkitIndexedDB: true,
        $webkitStorageInfo: true,
        $window: true
      };
      var hasAutomationEqualityBug = (function () {
        if (typeof window === 'undefined') {
          return false;
        }
        for (var k in window) {
          try {
            if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
              try {
                equalsConstructorPrototype(window[k]);
              } catch (e) {
                return true;
              }
            }
          } catch (e) {
            return true;
          }
        }
        return false;
      })();
      var equalsConstructorPrototypeIfNotBuggy = function (o) {
        if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
          return equalsConstructorPrototype(o);
        }
        try {
          return equalsConstructorPrototype(o);
        } catch (e) {
          return false;
        }
      };
      keysShim = function keys(object) {
        var isObject = object !== null && typeof object === 'object';
        var isFunction = toStr.call(object) === '[object Function]';
        var isArguments = isArgs(object);
        var isString = isObject && toStr.call(object) === '[object String]';
        var theKeys = [];
        if (!isObject && !isFunction && !isArguments) {
          throw new TypeError('Object.keys called on a non-object');
        }
        var skipProto = hasProtoEnumBug && isFunction;
        if (isString && object.length > 0 && !has.call(object, 0)) {
          for (var i = 0; i < object.length; ++i) {
            theKeys.push(String(i));
          }
        }
        if (isArguments && object.length > 0) {
          for (var j = 0; j < object.length; ++j) {
            theKeys.push(String(j));
          }
        } else {
          for (var name in object) {
            if (!(skipProto && name === 'prototype') && has.call(object, name)) {
              theKeys.push(String(name));
            }
          }
        }
        if (hasDontEnumBug) {
          var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
          for (var k = 0; k < dontEnums.length; ++k) {
            if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
              theKeys.push(dontEnums[k]);
            }
          }
        }
        return theKeys;
      };
    }
    implementation$9 = keysShim;
    return implementation$9;
  }
  var slice$1 = Array.prototype.slice;
  var isArgs = isArguments$2;
  var origKeys = Object.keys;
  var keysShim = origKeys ? function keys(o) {
    return origKeys(o);
  } : requireImplementation();
  var originalKeys = Object.keys;
  keysShim.shim = function shimObjectKeys() {
    if (Object.keys) {
      var keysWorksWithArguments = (function () {
        var args = Object.keys(arguments);
        return args && args.length === arguments.length;
      })(1, 2);
      if (!keysWorksWithArguments) {
        Object.keys = function keys(object) {
          if (isArgs(object)) {
            return originalKeys(slice$1.call(object));
          }
          return originalKeys(object);
        };
      }
    } else {
      Object.keys = keysShim;
    }
    return Object.keys || keysShim;
  };
  var objectKeys$1 = keysShim;
  var shams$1 = function hasSymbols() {
    if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') {
      return false;
    }
    if (typeof Symbol.iterator === 'symbol') {
      return true;
    }
    var obj = {};
    var sym = Symbol('test');
    var symObj = Object(sym);
    if (typeof sym === 'string') {
      return false;
    }
    if (Object.prototype.toString.call(sym) !== '[object Symbol]') {
      return false;
    }
    if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {
      return false;
    }
    var symVal = 42;
    obj[sym] = symVal;
    for (sym in obj) {
      return false;
    }
    if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {
      return false;
    }
    if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) {
      return false;
    }
    var syms = Object.getOwnPropertySymbols(obj);
    if (syms.length !== 1 || syms[0] !== sym) {
      return false;
    }
    if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
      return false;
    }
    if (typeof Object.getOwnPropertyDescriptor === 'function') {
      var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
      if (descriptor.value !== symVal || descriptor.enumerable !== true) {
        return false;
      }
    }
    return true;
  };
  var hasSymbols$3 = shams$1;
  var shams = function hasToStringTagShams() {
    return hasSymbols$3() && !!Symbol.toStringTag;
  };
  var origSymbol = typeof Symbol !== 'undefined' && Symbol;
  var hasSymbolSham = shams$1;
  var hasSymbols$2 = function hasNativeSymbols() {
    if (typeof origSymbol !== 'function') {
      return false;
    }
    if (typeof Symbol !== 'function') {
      return false;
    }
    if (typeof origSymbol('foo') !== 'symbol') {
      return false;
    }
    if (typeof Symbol('bar') !== 'symbol') {
      return false;
    }
    return hasSymbolSham();
  };
  var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
  var slice = Array.prototype.slice;
  var toStr$2 = Object.prototype.toString;
  var funcType = '[object Function]';
  var implementation$8 = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr$2.call(target) !== funcType) {
      throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);
    var bound;
    var binder = function () {
      if (this instanceof bound) {
        var result = target.apply(this, args.concat(slice.call(arguments)));
        if (Object(result) === result) {
          return result;
        }
        return this;
      } else {
        return target.apply(that, args.concat(slice.call(arguments)));
      }
    };
    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
      boundArgs.push('$' + i);
    }
    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);
    if (target.prototype) {
      var Empty = function Empty() {};
      Empty.prototype = target.prototype;
      bound.prototype = new Empty();
      Empty.prototype = null;
    }
    return bound;
  };
  var implementation$7 = implementation$8;
  var functionBind = Function.prototype.bind || implementation$7;
  var bind$1 = functionBind;
  var src$2 = bind$1.call(Function.call, Object.prototype.hasOwnProperty);
  var undefined$1;
  var $SyntaxError = SyntaxError;
  var $Function = Function;
  var $TypeError = TypeError;
  var getEvalledConstructor = function (expressionSyntax) {
    try {
      return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
    } catch (e) {}
  };
  var $gOPD$1 = Object.getOwnPropertyDescriptor;
  if ($gOPD$1) {
    try {
      $gOPD$1({}, '');
    } catch (e) {
      $gOPD$1 = null;
    }
  }
  var throwTypeError = function () {
    throw new $TypeError();
  };
  var ThrowTypeError = $gOPD$1 ? (function () {
    try {
      arguments.callee;
      return throwTypeError;
    } catch (calleeThrows) {
      try {
        return $gOPD$1(arguments, 'callee').get;
      } catch (gOPDthrows) {
        return throwTypeError;
      }
    }
  })() : throwTypeError;
  var hasSymbols$1 = hasSymbols$2();
  var getProto$1 = Object.getPrototypeOf || (function (x) {
    return x.__proto__;
  });
  var needsEval = {};
  var TypedArray = typeof Uint8Array === 'undefined' ? undefined$1 : getProto$1(Uint8Array);
  var INTRINSICS = {
    '%AggregateError%': typeof AggregateError === 'undefined' ? undefined$1 : AggregateError,
    '%Array%': Array,
    '%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined$1 : ArrayBuffer,
    '%ArrayIteratorPrototype%': hasSymbols$1 ? getProto$1([][Symbol.iterator]()) : undefined$1,
    '%AsyncFromSyncIteratorPrototype%': undefined$1,
    '%AsyncFunction%': needsEval,
    '%AsyncGenerator%': needsEval,
    '%AsyncGeneratorFunction%': needsEval,
    '%AsyncIteratorPrototype%': needsEval,
    '%Atomics%': typeof Atomics === 'undefined' ? undefined$1 : Atomics,
    '%BigInt%': typeof BigInt === 'undefined' ? undefined$1 : BigInt,
    '%Boolean%': Boolean,
    '%DataView%': typeof DataView === 'undefined' ? undefined$1 : DataView,
    '%Date%': Date,
    '%decodeURI%': decodeURI,
    '%decodeURIComponent%': decodeURIComponent,
    '%encodeURI%': encodeURI,
    '%encodeURIComponent%': encodeURIComponent,
    '%Error%': Error,
    '%eval%': eval,
    '%EvalError%': EvalError,
    '%Float32Array%': typeof Float32Array === 'undefined' ? undefined$1 : Float32Array,
    '%Float64Array%': typeof Float64Array === 'undefined' ? undefined$1 : Float64Array,
    '%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined$1 : FinalizationRegistry,
    '%Function%': $Function,
    '%GeneratorFunction%': needsEval,
    '%Int8Array%': typeof Int8Array === 'undefined' ? undefined$1 : Int8Array,
    '%Int16Array%': typeof Int16Array === 'undefined' ? undefined$1 : Int16Array,
    '%Int32Array%': typeof Int32Array === 'undefined' ? undefined$1 : Int32Array,
    '%isFinite%': isFinite,
    '%isNaN%': isNaN,
    '%IteratorPrototype%': hasSymbols$1 ? getProto$1(getProto$1([][Symbol.iterator]())) : undefined$1,
    '%JSON%': typeof JSON === 'object' ? JSON : undefined$1,
    '%Map%': typeof Map === 'undefined' ? undefined$1 : Map,
    '%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols$1 ? undefined$1 : getProto$1(new Map()[Symbol.iterator]()),
    '%Math%': Math,
    '%Number%': Number,
    '%Object%': Object,
    '%parseFloat%': parseFloat,
    '%parseInt%': parseInt,
    '%Promise%': typeof Promise === 'undefined' ? undefined$1 : Promise,
    '%Proxy%': typeof Proxy === 'undefined' ? undefined$1 : Proxy,
    '%RangeError%': RangeError,
    '%ReferenceError%': ReferenceError,
    '%Reflect%': typeof Reflect === 'undefined' ? undefined$1 : Reflect,
    '%RegExp%': RegExp,
    '%Set%': typeof Set === 'undefined' ? undefined$1 : Set,
    '%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols$1 ? undefined$1 : getProto$1(new Set()[Symbol.iterator]()),
    '%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined$1 : SharedArrayBuffer,
    '%String%': String,
    '%StringIteratorPrototype%': hasSymbols$1 ? getProto$1(('')[Symbol.iterator]()) : undefined$1,
    '%Symbol%': hasSymbols$1 ? Symbol : undefined$1,
    '%SyntaxError%': $SyntaxError,
    '%ThrowTypeError%': ThrowTypeError,
    '%TypedArray%': TypedArray,
    '%TypeError%': $TypeError,
    '%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined$1 : Uint8Array,
    '%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined$1 : Uint8ClampedArray,
    '%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined$1 : Uint16Array,
    '%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined$1 : Uint32Array,
    '%URIError%': URIError,
    '%WeakMap%': typeof WeakMap === 'undefined' ? undefined$1 : WeakMap,
    '%WeakRef%': typeof WeakRef === 'undefined' ? undefined$1 : WeakRef,
    '%WeakSet%': typeof WeakSet === 'undefined' ? undefined$1 : WeakSet
  };
  var doEval = function doEval(name) {
    var value;
    if (name === '%AsyncFunction%') {
      value = getEvalledConstructor('async function () {}');
    } else if (name === '%GeneratorFunction%') {
      value = getEvalledConstructor('function* () {}');
    } else if (name === '%AsyncGeneratorFunction%') {
      value = getEvalledConstructor('async function* () {}');
    } else if (name === '%AsyncGenerator%') {
      var fn = doEval('%AsyncGeneratorFunction%');
      if (fn) {
        value = fn.prototype;
      }
    } else if (name === '%AsyncIteratorPrototype%') {
      var gen = doEval('%AsyncGenerator%');
      if (gen) {
        value = getProto$1(gen.prototype);
      }
    }
    INTRINSICS[name] = value;
    return value;
  };
  var LEGACY_ALIASES = {
    '%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
    '%ArrayPrototype%': ['Array', 'prototype'],
    '%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
    '%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
    '%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
    '%ArrayProto_values%': ['Array', 'prototype', 'values'],
    '%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
    '%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
    '%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
    '%BooleanPrototype%': ['Boolean', 'prototype'],
    '%DataViewPrototype%': ['DataView', 'prototype'],
    '%DatePrototype%': ['Date', 'prototype'],
    '%ErrorPrototype%': ['Error', 'prototype'],
    '%EvalErrorPrototype%': ['EvalError', 'prototype'],
    '%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
    '%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
    '%FunctionPrototype%': ['Function', 'prototype'],
    '%Generator%': ['GeneratorFunction', 'prototype'],
    '%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
    '%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
    '%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
    '%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
    '%JSONParse%': ['JSON', 'parse'],
    '%JSONStringify%': ['JSON', 'stringify'],
    '%MapPrototype%': ['Map', 'prototype'],
    '%NumberPrototype%': ['Number', 'prototype'],
    '%ObjectPrototype%': ['Object', 'prototype'],
    '%ObjProto_toString%': ['Object', 'prototype', 'toString'],
    '%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
    '%PromisePrototype%': ['Promise', 'prototype'],
    '%PromiseProto_then%': ['Promise', 'prototype', 'then'],
    '%Promise_all%': ['Promise', 'all'],
    '%Promise_reject%': ['Promise', 'reject'],
    '%Promise_resolve%': ['Promise', 'resolve'],
    '%RangeErrorPrototype%': ['RangeError', 'prototype'],
    '%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
    '%RegExpPrototype%': ['RegExp', 'prototype'],
    '%SetPrototype%': ['Set', 'prototype'],
    '%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
    '%StringPrototype%': ['String', 'prototype'],
    '%SymbolPrototype%': ['Symbol', 'prototype'],
    '%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
    '%TypedArrayPrototype%': ['TypedArray', 'prototype'],
    '%TypeErrorPrototype%': ['TypeError', 'prototype'],
    '%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
    '%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
    '%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
    '%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
    '%URIErrorPrototype%': ['URIError', 'prototype'],
    '%WeakMapPrototype%': ['WeakMap', 'prototype'],
    '%WeakSetPrototype%': ['WeakSet', 'prototype']
  };
  var bind = functionBind;
  var hasOwn = src$2;
  var $concat = bind.call(Function.call, Array.prototype.concat);
  var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
  var $replace = bind.call(Function.call, String.prototype.replace);
  var $strSlice = bind.call(Function.call, String.prototype.slice);
  var $exec$1 = bind.call(Function.call, RegExp.prototype.exec);
  var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
  var reEscapeChar = /\\(\\)?/g;
  var stringToPath = function stringToPath(string) {
    var first = $strSlice(string, 0, 1);
    var last = $strSlice(string, -1);
    if (first === '%' && last !== '%') {
      throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
    } else if (last === '%' && first !== '%') {
      throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
    }
    var result = [];
    $replace(string, rePropName, function (match, number, quote, subString) {
      result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
    });
    return result;
  };
  var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
    var intrinsicName = name;
    var alias;
    if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
      alias = LEGACY_ALIASES[intrinsicName];
      intrinsicName = '%' + alias[0] + '%';
    }
    if (hasOwn(INTRINSICS, intrinsicName)) {
      var value = INTRINSICS[intrinsicName];
      if (value === needsEval) {
        value = doEval(intrinsicName);
      }
      if (typeof value === 'undefined' && !allowMissing) {
        throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
      }
      return {
        alias: alias,
        name: intrinsicName,
        value: value
      };
    }
    throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
  };
  var getIntrinsic = function GetIntrinsic(name, allowMissing) {
    if (typeof name !== 'string' || name.length === 0) {
      throw new $TypeError('intrinsic name must be a non-empty string');
    }
    if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
      throw new $TypeError('"allowMissing" argument must be a boolean');
    }
    if ($exec$1(/^%?[^%]*%?$/g, name) === null) {
      throw new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');
    }
    var parts = stringToPath(name);
    var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
    var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
    var intrinsicRealName = intrinsic.name;
    var value = intrinsic.value;
    var skipFurtherCaching = false;
    var alias = intrinsic.alias;
    if (alias) {
      intrinsicBaseName = alias[0];
      $spliceApply(parts, $concat([0, 1], alias));
    }
    for (var i = 1, isOwn = true; i < parts.length; i += 1) {
      var part = parts[i];
      var first = $strSlice(part, 0, 1);
      var last = $strSlice(part, -1);
      if ((first === '"' || first === "'" || first === '`' || (last === '"' || last === "'" || last === '`')) && first !== last) {
        throw new $SyntaxError('property names with quotes must have matching quotes');
      }
      if (part === 'constructor' || !isOwn) {
        skipFurtherCaching = true;
      }
      intrinsicBaseName += '.' + part;
      intrinsicRealName = '%' + intrinsicBaseName + '%';
      if (hasOwn(INTRINSICS, intrinsicRealName)) {
        value = INTRINSICS[intrinsicRealName];
      } else if (value != null) {
        if (!((part in value))) {
          if (!allowMissing) {
            throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
          }
          return void undefined$1;
        }
        if ($gOPD$1 && i + 1 >= parts.length) {
          var desc = $gOPD$1(value, part);
          isOwn = !!desc;
          if (isOwn && ('get' in desc) && !(('originalValue' in desc.get))) {
            value = desc.get;
          } else {
            value = value[part];
          }
        } else {
          isOwn = hasOwn(value, part);
          value = value[part];
        }
        if (isOwn && !skipFurtherCaching) {
          INTRINSICS[intrinsicRealName] = value;
        }
      }
    }
    return value;
  };
  var callBind$3 = {
    exports: {}
  };
  (function (module) {
    var bind = functionBind;
    var GetIntrinsic = getIntrinsic;
    var $apply = GetIntrinsic('%Function.prototype.apply%');
    var $call = GetIntrinsic('%Function.prototype.call%');
    var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);
    var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
    var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
    var $max = GetIntrinsic('%Math.max%');
    if ($defineProperty) {
      try {
        $defineProperty({}, 'a', {
          value: 1
        });
      } catch (e) {
        $defineProperty = null;
      }
    }
    module.exports = function callBind(originalFunction) {
      var func = $reflectApply(bind, $call, arguments);
      if ($gOPD && $defineProperty) {
        var desc = $gOPD(func, 'length');
        if (desc.configurable) {
          $defineProperty(func, 'length', {
            value: 1 + $max(0, originalFunction.length - (arguments.length - 1))
          });
        }
      }
      return func;
    };
    var applyBind = function applyBind() {
      return $reflectApply(bind, $apply, arguments);
    };
    if ($defineProperty) {
      $defineProperty(module.exports, 'apply', {
        value: applyBind
      });
    } else {
      module.exports.apply = applyBind;
    }
  })(callBind$3);
  var GetIntrinsic$1 = getIntrinsic;
  var callBind$2 = callBind$3.exports;
  var $indexOf = callBind$2(GetIntrinsic$1('String.prototype.indexOf'));
  var callBound$2 = function callBoundIntrinsic(name, allowMissing) {
    var intrinsic = GetIntrinsic$1(name, !!allowMissing);
    if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
      return callBind$2(intrinsic);
    }
    return intrinsic;
  };
  var hasToStringTag$2 = shams();
  var callBound$1 = callBound$2;
  var $toString$1 = callBound$1('Object.prototype.toString');
  var isStandardArguments = function isArguments(value) {
    if (hasToStringTag$2 && value && typeof value === 'object' && (Symbol.toStringTag in value)) {
      return false;
    }
    return $toString$1(value) === '[object Arguments]';
  };
  var isLegacyArguments = function isArguments(value) {
    if (isStandardArguments(value)) {
      return true;
    }
    return value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && $toString$1(value) !== '[object Array]' && $toString$1(value.callee) === '[object Function]';
  };
  var supportsStandardArguments = (function () {
    return isStandardArguments(arguments);
  })();
  isStandardArguments.isLegacyArguments = isLegacyArguments;
  var isArguments$1 = supportsStandardArguments ? isStandardArguments : isLegacyArguments;
  var GetIntrinsic = getIntrinsic;
  var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
  var hasPropertyDescriptors$1 = function hasPropertyDescriptors() {
    if ($defineProperty) {
      try {
        $defineProperty({}, 'a', {
          value: 1
        });
        return true;
      } catch (e) {
        return false;
      }
    }
    return false;
  };
  hasPropertyDescriptors$1.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
    if (!hasPropertyDescriptors$1()) {
      return null;
    }
    try {
      return $defineProperty([], 'length', {
        value: 1
      }).length !== 1;
    } catch (e) {
      return true;
    }
  };
  var hasPropertyDescriptors_1 = hasPropertyDescriptors$1;
  var keys = objectKeys$1;
  var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';
  var toStr$1 = Object.prototype.toString;
  var concat$2 = Array.prototype.concat;
  var origDefineProperty = Object.defineProperty;
  var isFunction$1 = function (fn) {
    return typeof fn === 'function' && toStr$1.call(fn) === '[object Function]';
  };
  var hasPropertyDescriptors = hasPropertyDescriptors_1();
  var supportsDescriptors$2 = origDefineProperty && hasPropertyDescriptors;
  var defineProperty$2 = function (object, name, value, predicate) {
    if ((name in object) && (!isFunction$1(predicate) || !predicate())) {
      return;
    }
    if (supportsDescriptors$2) {
      origDefineProperty(object, name, {
        configurable: true,
        enumerable: false,
        value: value,
        writable: true
      });
    } else {
      object[name] = value;
    }
  };
  var defineProperties = function (object, map) {
    var predicates = arguments.length > 2 ? arguments[2] : {};
    var props = keys(map);
    if (hasSymbols) {
      props = concat$2.call(props, Object.getOwnPropertySymbols(map));
    }
    for (var i = 0; i < props.length; i += 1) {
      defineProperty$2(object, props[i], map[props[i]], predicates[props[i]]);
    }
  };
  defineProperties.supportsDescriptors = !!supportsDescriptors$2;
  var defineProperties_1 = defineProperties;
  var numberIsNaN = function (value) {
    return value !== value;
  };
  var implementation$6 = function is(a, b) {
    if (a === 0 && b === 0) {
      return 1 / a === 1 / b;
    }
    if (a === b) {
      return true;
    }
    if (numberIsNaN(a) && numberIsNaN(b)) {
      return true;
    }
    return false;
  };
  var implementation$5 = implementation$6;
  var polyfill$2 = function getPolyfill() {
    return typeof Object.is === 'function' ? Object.is : implementation$5;
  };
  var getPolyfill$3 = polyfill$2;
  var define$2 = defineProperties_1;
  var shim$3 = function shimObjectIs() {
    var polyfill = getPolyfill$3();
    define$2(Object, {
      is: polyfill
    }, {
      is: function testObjectIs() {
        return Object.is !== polyfill;
      }
    });
    return polyfill;
  };
  var define$1 = defineProperties_1;
  var callBind$1 = callBind$3.exports;
  var implementation$4 = implementation$6;
  var getPolyfill$2 = polyfill$2;
  var shim$2 = shim$3;
  var polyfill$1 = callBind$1(getPolyfill$2(), Object);
  define$1(polyfill$1, {
    getPolyfill: getPolyfill$2,
    implementation: implementation$4,
    shim: shim$2
  });
  var objectIs = polyfill$1;
  var callBound = callBound$2;
  var hasToStringTag$1 = shams();
  var has$1;
  var $exec;
  var isRegexMarker;
  var badStringifier;
  if (hasToStringTag$1) {
    has$1 = callBound('Object.prototype.hasOwnProperty');
    $exec = callBound('RegExp.prototype.exec');
    isRegexMarker = {};
    var throwRegexMarker = function () {
      throw isRegexMarker;
    };
    badStringifier = {
      toString: throwRegexMarker,
      valueOf: throwRegexMarker
    };
    if (typeof Symbol.toPrimitive === 'symbol') {
      badStringifier[Symbol.toPrimitive] = throwRegexMarker;
    }
  }
  var $toString = callBound('Object.prototype.toString');
  var gOPD$2 = Object.getOwnPropertyDescriptor;
  var regexClass = '[object RegExp]';
  var isRegex$1 = hasToStringTag$1 ? function isRegex(value) {
    if (!value || typeof value !== 'object') {
      return false;
    }
    var descriptor = gOPD$2(value, 'lastIndex');
    var hasLastIndexDataProperty = descriptor && has$1(descriptor, 'value');
    if (!hasLastIndexDataProperty) {
      return false;
    }
    try {
      $exec(value, badStringifier);
    } catch (e) {
      return e === isRegexMarker;
    }
  } : function isRegex(value) {
    if (!value || typeof value !== 'object' && typeof value !== 'function') {
      return false;
    }
    return $toString(value) === regexClass;
  };
  var implementation$3 = {
    exports: {}
  };
  var functionsHaveNames = function functionsHaveNames() {
    return typeof (function f() {}).name === 'string';
  };
  var gOPD$1 = Object.getOwnPropertyDescriptor;
  if (gOPD$1) {
    try {
      gOPD$1([], 'length');
    } catch (e) {
      gOPD$1 = null;
    }
  }
  functionsHaveNames.functionsHaveConfigurableNames = function functionsHaveConfigurableNames() {
    if (!functionsHaveNames() || !gOPD$1) {
      return false;
    }
    var desc = gOPD$1(function () {}, 'name');
    return !!desc && !!desc.configurable;
  };
  var $bind = Function.prototype.bind;
  functionsHaveNames.boundFunctionsHaveNames = function boundFunctionsHaveNames() {
    return functionsHaveNames() && typeof $bind === 'function' && (function f() {}).bind().name !== '';
  };
  var functionsHaveNames_1 = functionsHaveNames;
  (function (module) {
    var functionsHaveConfigurableNames = functionsHaveNames_1.functionsHaveConfigurableNames();
    var $Object = Object;
    var $TypeError = TypeError;
    module.exports = function flags() {
      if (this != null && this !== $Object(this)) {
        throw new $TypeError('RegExp.prototype.flags getter called on non-object');
      }
      var result = '';
      if (this.hasIndices) {
        result += 'd';
      }
      if (this.global) {
        result += 'g';
      }
      if (this.ignoreCase) {
        result += 'i';
      }
      if (this.multiline) {
        result += 'm';
      }
      if (this.dotAll) {
        result += 's';
      }
      if (this.unicode) {
        result += 'u';
      }
      if (this.sticky) {
        result += 'y';
      }
      return result;
    };
    if (functionsHaveConfigurableNames && Object.defineProperty) {
      Object.defineProperty(module.exports, 'name', {
        value: 'get flags'
      });
    }
  })(implementation$3);
  var implementation$2 = implementation$3.exports;
  var supportsDescriptors$1 = defineProperties_1.supportsDescriptors;
  var $gOPD = Object.getOwnPropertyDescriptor;
  var polyfill = function getPolyfill() {
    if (supportsDescriptors$1 && (/a/mig).flags === 'gim') {
      var descriptor = $gOPD(RegExp.prototype, 'flags');
      if (descriptor && typeof descriptor.get === 'function' && typeof RegExp.prototype.dotAll === 'boolean' && typeof RegExp.prototype.hasIndices === 'boolean') {
        var calls = '';
        var o = {};
        Object.defineProperty(o, 'hasIndices', {
          get: function () {
            calls += 'd';
          }
        });
        Object.defineProperty(o, 'sticky', {
          get: function () {
            calls += 'y';
          }
        });
        if (calls === 'dy') {
          return descriptor.get;
        }
      }
    }
    return implementation$2;
  };
  var supportsDescriptors = defineProperties_1.supportsDescriptors;
  var getPolyfill$1 = polyfill;
  var gOPD = Object.getOwnPropertyDescriptor;
  var defineProperty$1 = Object.defineProperty;
  var TypeErr = TypeError;
  var getProto = Object.getPrototypeOf;
  var regex = /a/;
  var shim$1 = function shimFlags() {
    if (!supportsDescriptors || !getProto) {
      throw new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
    }
    var polyfill = getPolyfill$1();
    var proto = getProto(regex);
    var descriptor = gOPD(proto, 'flags');
    if (!descriptor || descriptor.get !== polyfill) {
      defineProperty$1(proto, 'flags', {
        configurable: true,
        enumerable: false,
        get: polyfill
      });
    }
    return polyfill;
  };
  var define = defineProperties_1;
  var callBind = callBind$3.exports;
  var implementation$1 = implementation$3.exports;
  var getPolyfill = polyfill;
  var shim = shim$1;
  var flagsBound = callBind(getPolyfill());
  define(flagsBound, {
    getPolyfill: getPolyfill,
    implementation: implementation$1,
    shim: shim
  });
  var regexp_prototype_flags = flagsBound;
  var getDay = Date.prototype.getDay;
  var tryDateObject = function tryDateGetDayCall(value) {
    try {
      getDay.call(value);
      return true;
    } catch (e) {
      return false;
    }
  };
  var toStr = Object.prototype.toString;
  var dateClass = '[object Date]';
  var hasToStringTag = shams();
  var isDateObject = function isDateObject(value) {
    if (typeof value !== 'object' || value === null) {
      return false;
    }
    return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
  };
  var objectKeys = objectKeys$1;
  var isArguments = isArguments$1;
  var is = objectIs;
  var isRegex = isRegex$1;
  var flags = regexp_prototype_flags;
  var isDate = isDateObject;
  var getTime = Date.prototype.getTime;
  function deepEqual(actual, expected, options) {
    var opts = options || ({});
    if (opts.strict ? is(actual, expected) : actual === expected) {
      return true;
    }
    if (!actual || !expected || typeof actual !== 'object' && typeof expected !== 'object') {
      return opts.strict ? is(actual, expected) : actual == expected;
    }
    return objEquiv(actual, expected, opts);
  }
  function isUndefinedOrNull(value) {
    return value === null || value === undefined;
  }
  function isBuffer(x) {
    if (!x || typeof x !== 'object' || typeof x.length !== 'number') {
      return false;
    }
    if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
      return false;
    }
    if (x.length > 0 && typeof x[0] !== 'number') {
      return false;
    }
    return true;
  }
  function objEquiv(a, b, opts) {
    var i, key;
    if (typeof a !== typeof b) {
      return false;
    }
    if (isUndefinedOrNull(a) || isUndefinedOrNull(b)) {
      return false;
    }
    if (a.prototype !== b.prototype) {
      return false;
    }
    if (isArguments(a) !== isArguments(b)) {
      return false;
    }
    var aIsRegex = isRegex(a);
    var bIsRegex = isRegex(b);
    if (aIsRegex !== bIsRegex) {
      return false;
    }
    if (aIsRegex || bIsRegex) {
      return a.source === b.source && flags(a) === flags(b);
    }
    if (isDate(a) && isDate(b)) {
      return getTime.call(a) === getTime.call(b);
    }
    var aIsBuffer = isBuffer(a);
    var bIsBuffer = isBuffer(b);
    if (aIsBuffer !== bIsBuffer) {
      return false;
    }
    if (aIsBuffer || bIsBuffer) {
      if (a.length !== b.length) {
        return false;
      }
      for (i = 0; i < a.length; i++) {
        if (a[i] !== b[i]) {
          return false;
        }
      }
      return true;
    }
    if (typeof a !== typeof b) {
      return false;
    }
    try {
      var ka = objectKeys(a);
      var kb = objectKeys(b);
    } catch (e) {
      return false;
    }
    if (ka.length !== kb.length) {
      return false;
    }
    ka.sort();
    kb.sort();
    for (i = ka.length - 1; i >= 0; i--) {
      if (ka[i] != kb[i]) {
        return false;
      }
    }
    for (i = ka.length - 1; i >= 0; i--) {
      key = ka[i];
      if (!deepEqual(a[key], b[key], opts)) {
        return false;
      }
    }
    return true;
  }
  var deepEqual_1 = deepEqual;
  var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';
  var timeoutDuration = (function () {
    var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
    for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
      if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
        return 1;
      }
    }
    return 0;
  })();
  function microtaskDebounce(fn) {
    var called = false;
    return function () {
      if (called) {
        return;
      }
      called = true;
      window.Promise.resolve().then(function () {
        called = false;
        fn();
      });
    };
  }
  function taskDebounce(fn) {
    var scheduled = false;
    return function () {
      if (!scheduled) {
        scheduled = true;
        setTimeout(function () {
          scheduled = false;
          fn();
        }, timeoutDuration);
      }
    };
  }
  var supportsMicroTasks = isBrowser && window.Promise;
  var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
  function isFunction(functionToCheck) {
    var getType = {};
    return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
  }
  function getStyleComputedProperty(element, property) {
    if (element.nodeType !== 1) {
      return [];
    }
    var window = element.ownerDocument.defaultView;
    var css = window.getComputedStyle(element, null);
    return property ? css[property] : css;
  }
  function getParentNode(element) {
    if (element.nodeName === 'HTML') {
      return element;
    }
    return element.parentNode || element.host;
  }
  function getScrollParent(element) {
    if (!element) {
      return document.body;
    }
    switch (element.nodeName) {
      case 'HTML':
      case 'BODY':
        return element.ownerDocument.body;
      case '#document':
        return element.body;
    }
    var _getStyleComputedProp = getStyleComputedProperty(element), overflow = _getStyleComputedProp.overflow, overflowX = _getStyleComputedProp.overflowX, overflowY = _getStyleComputedProp.overflowY;
    if ((/(auto|scroll|overlay)/).test(overflow + overflowY + overflowX)) {
      return element;
    }
    return getScrollParent(getParentNode(element));
  }
  function getReferenceNode(reference) {
    return reference && reference.referenceNode ? reference.referenceNode : reference;
  }
  var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
  var isIE10 = isBrowser && (/MSIE 10/).test(navigator.userAgent);
  function isIE(version) {
    if (version === 11) {
      return isIE11;
    }
    if (version === 10) {
      return isIE10;
    }
    return isIE11 || isIE10;
  }
  function getOffsetParent(element) {
    if (!element) {
      return document.documentElement;
    }
    var noOffsetParent = isIE(10) ? document.body : null;
    var offsetParent = element.offsetParent || null;
    while (offsetParent === noOffsetParent && element.nextElementSibling) {
      offsetParent = (element = element.nextElementSibling).offsetParent;
    }
    var nodeName = offsetParent && offsetParent.nodeName;
    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
      return element ? element.ownerDocument.documentElement : document.documentElement;
    }
    if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
      return getOffsetParent(offsetParent);
    }
    return offsetParent;
  }
  function isOffsetContainer(element) {
    var nodeName = element.nodeName;
    if (nodeName === 'BODY') {
      return false;
    }
    return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
  }
  function getRoot(node) {
    if (node.parentNode !== null) {
      return getRoot(node.parentNode);
    }
    return node;
  }
  function findCommonOffsetParent(element1, element2) {
    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
      return document.documentElement;
    }
    var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
    var start = order ? element1 : element2;
    var end = order ? element2 : element1;
    var range = document.createRange();
    range.setStart(start, 0);
    range.setEnd(end, 0);
    var commonAncestorContainer = range.commonAncestorContainer;
    if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
      if (isOffsetContainer(commonAncestorContainer)) {
        return commonAncestorContainer;
      }
      return getOffsetParent(commonAncestorContainer);
    }
    var element1root = getRoot(element1);
    if (element1root.host) {
      return findCommonOffsetParent(element1root.host, element2);
    } else {
      return findCommonOffsetParent(element1, getRoot(element2).host);
    }
  }
  function getScroll(element) {
    var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
    var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
    var nodeName = element.nodeName;
    if (nodeName === 'BODY' || nodeName === 'HTML') {
      var html = element.ownerDocument.documentElement;
      var scrollingElement = element.ownerDocument.scrollingElement || html;
      return scrollingElement[upperSide];
    }
    return element[upperSide];
  }
  function includeScroll(rect, element) {
    var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var scrollTop = getScroll(element, 'top');
    var scrollLeft = getScroll(element, 'left');
    var modifier = subtract ? -1 : 1;
    rect.top += scrollTop * modifier;
    rect.bottom += scrollTop * modifier;
    rect.left += scrollLeft * modifier;
    rect.right += scrollLeft * modifier;
    return rect;
  }
  function getBordersSize(styles, axis) {
    var sideA = axis === 'x' ? 'Left' : 'Top';
    var sideB = sideA === 'Left' ? 'Right' : 'Bottom';
    return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
  }
  function getSize(axis, body, html, computedStyle) {
    return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
  }
  function getWindowSizes(document) {
    var body = document.body;
    var html = document.documentElement;
    var computedStyle = isIE(10) && getComputedStyle(html);
    return {
      height: getSize('Height', body, html, computedStyle),
      width: getSize('Width', body, html, computedStyle)
    };
  }
  var classCallCheck = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };
  var createClass = (function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if (("value" in descriptor)) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var defineProperty = function (obj, key, value) {
    if ((key in obj)) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }
    return obj;
  };
  var _extends = Object.assign || (function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  });
  function getClientRect(offsets) {
    return _extends({}, offsets, {
      right: offsets.left + offsets.width,
      bottom: offsets.top + offsets.height
    });
  }
  function getBoundingClientRect(element) {
    var rect = {};
    try {
      if (isIE(10)) {
        rect = element.getBoundingClientRect();
        var scrollTop = getScroll(element, 'top');
        var scrollLeft = getScroll(element, 'left');
        rect.top += scrollTop;
        rect.left += scrollLeft;
        rect.bottom += scrollTop;
        rect.right += scrollLeft;
      } else {
        rect = element.getBoundingClientRect();
      }
    } catch (e) {}
    var result = {
      left: rect.left,
      top: rect.top,
      width: rect.right - rect.left,
      height: rect.bottom - rect.top
    };
    var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
    var width = sizes.width || element.clientWidth || result.width;
    var height = sizes.height || element.clientHeight || result.height;
    var horizScrollbar = element.offsetWidth - width;
    var vertScrollbar = element.offsetHeight - height;
    if (horizScrollbar || vertScrollbar) {
      var styles = getStyleComputedProperty(element);
      horizScrollbar -= getBordersSize(styles, 'x');
      vertScrollbar -= getBordersSize(styles, 'y');
      result.width -= horizScrollbar;
      result.height -= vertScrollbar;
    }
    return getClientRect(result);
  }
  function getOffsetRectRelativeToArbitraryNode(children, parent) {
    var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var isIE10 = isIE(10);
    var isHTML = parent.nodeName === 'HTML';
    var childrenRect = getBoundingClientRect(children);
    var parentRect = getBoundingClientRect(parent);
    var scrollParent = getScrollParent(children);
    var styles = getStyleComputedProperty(parent);
    var borderTopWidth = parseFloat(styles.borderTopWidth);
    var borderLeftWidth = parseFloat(styles.borderLeftWidth);
    if (fixedPosition && isHTML) {
      parentRect.top = Math.max(parentRect.top, 0);
      parentRect.left = Math.max(parentRect.left, 0);
    }
    var offsets = getClientRect({
      top: childrenRect.top - parentRect.top - borderTopWidth,
      left: childrenRect.left - parentRect.left - borderLeftWidth,
      width: childrenRect.width,
      height: childrenRect.height
    });
    offsets.marginTop = 0;
    offsets.marginLeft = 0;
    if (!isIE10 && isHTML) {
      var marginTop = parseFloat(styles.marginTop);
      var marginLeft = parseFloat(styles.marginLeft);
      offsets.top -= borderTopWidth - marginTop;
      offsets.bottom -= borderTopWidth - marginTop;
      offsets.left -= borderLeftWidth - marginLeft;
      offsets.right -= borderLeftWidth - marginLeft;
      offsets.marginTop = marginTop;
      offsets.marginLeft = marginLeft;
    }
    if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
      offsets = includeScroll(offsets, parent);
    }
    return offsets;
  }
  function getViewportOffsetRectRelativeToArtbitraryNode(element) {
    var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var html = element.ownerDocument.documentElement;
    var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
    var width = Math.max(html.clientWidth, window.innerWidth || 0);
    var height = Math.max(html.clientHeight, window.innerHeight || 0);
    var scrollTop = !excludeScroll ? getScroll(html) : 0;
    var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;
    var offset = {
      top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
      left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
      width: width,
      height: height
    };
    return getClientRect(offset);
  }
  function isFixed(element) {
    var nodeName = element.nodeName;
    if (nodeName === 'BODY' || nodeName === 'HTML') {
      return false;
    }
    if (getStyleComputedProperty(element, 'position') === 'fixed') {
      return true;
    }
    var parentNode = getParentNode(element);
    if (!parentNode) {
      return false;
    }
    return isFixed(parentNode);
  }
  function getFixedPositionOffsetParent(element) {
    if (!element || !element.parentElement || isIE()) {
      return document.documentElement;
    }
    var el = element.parentElement;
    while (el && getStyleComputedProperty(el, 'transform') === 'none') {
      el = el.parentElement;
    }
    return el || document.documentElement;
  }
  function getBoundaries(popper, reference, padding, boundariesElement) {
    var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    var boundaries = {
      top: 0,
      left: 0
    };
    var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
    if (boundariesElement === 'viewport') {
      boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
    } else {
      var boundariesNode = void 0;
      if (boundariesElement === 'scrollParent') {
        boundariesNode = getScrollParent(getParentNode(reference));
        if (boundariesNode.nodeName === 'BODY') {
          boundariesNode = popper.ownerDocument.documentElement;
        }
      } else if (boundariesElement === 'window') {
        boundariesNode = popper.ownerDocument.documentElement;
      } else {
        boundariesNode = boundariesElement;
      }
      var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);
      if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
        var _getWindowSizes = getWindowSizes(popper.ownerDocument), height = _getWindowSizes.height, width = _getWindowSizes.width;
        boundaries.top += offsets.top - offsets.marginTop;
        boundaries.bottom = height + offsets.top;
        boundaries.left += offsets.left - offsets.marginLeft;
        boundaries.right = width + offsets.left;
      } else {
        boundaries = offsets;
      }
    }
    padding = padding || 0;
    var isPaddingNumber = typeof padding === 'number';
    boundaries.left += isPaddingNumber ? padding : padding.left || 0;
    boundaries.top += isPaddingNumber ? padding : padding.top || 0;
    boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
    boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
    return boundaries;
  }
  function getArea(_ref) {
    var width = _ref.width, height = _ref.height;
    return width * height;
  }
  function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
    var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
    if (placement.indexOf('auto') === -1) {
      return placement;
    }
    var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
    var rects = {
      top: {
        width: boundaries.width,
        height: refRect.top - boundaries.top
      },
      right: {
        width: boundaries.right - refRect.right,
        height: boundaries.height
      },
      bottom: {
        width: boundaries.width,
        height: boundaries.bottom - refRect.bottom
      },
      left: {
        width: refRect.left - boundaries.left,
        height: boundaries.height
      }
    };
    var sortedAreas = Object.keys(rects).map(function (key) {
      return _extends({
        key: key
      }, rects[key], {
        area: getArea(rects[key])
      });
    }).sort(function (a, b) {
      return b.area - a.area;
    });
    var filteredAreas = sortedAreas.filter(function (_ref2) {
      var width = _ref2.width, height = _ref2.height;
      return width >= popper.clientWidth && height >= popper.clientHeight;
    });
    var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
    var variation = placement.split('-')[1];
    return computedPlacement + (variation ? '-' + variation : '');
  }
  function getReferenceOffsets(state, popper, reference) {
    var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
    return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
  }
  function getOuterSizes(element) {
    var window = element.ownerDocument.defaultView;
    var styles = window.getComputedStyle(element);
    var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
    var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
    var result = {
      width: element.offsetWidth + y,
      height: element.offsetHeight + x
    };
    return result;
  }
  function getOppositePlacement(placement) {
    var hash = {
      left: 'right',
      right: 'left',
      bottom: 'top',
      top: 'bottom'
    };
    return placement.replace(/left|right|bottom|top/g, function (matched) {
      return hash[matched];
    });
  }
  function getPopperOffsets(popper, referenceOffsets, placement) {
    placement = placement.split('-')[0];
    var popperRect = getOuterSizes(popper);
    var popperOffsets = {
      width: popperRect.width,
      height: popperRect.height
    };
    var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
    var mainSide = isHoriz ? 'top' : 'left';
    var secondarySide = isHoriz ? 'left' : 'top';
    var measurement = isHoriz ? 'height' : 'width';
    var secondaryMeasurement = !isHoriz ? 'height' : 'width';
    popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
    if (placement === secondarySide) {
      popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
    } else {
      popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
    }
    return popperOffsets;
  }
  function find(arr, check) {
    if (Array.prototype.find) {
      return arr.find(check);
    }
    return arr.filter(check)[0];
  }
  function findIndex(arr, prop, value) {
    if (Array.prototype.findIndex) {
      return arr.findIndex(function (cur) {
        return cur[prop] === value;
      });
    }
    var match = find(arr, function (obj) {
      return obj[prop] === value;
    });
    return arr.indexOf(match);
  }
  function runModifiers(modifiers, data, ends) {
    var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));
    modifiersToRun.forEach(function (modifier) {
      if (modifier['function']) {
        console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
      }
      var fn = modifier['function'] || modifier.fn;
      if (modifier.enabled && isFunction(fn)) {
        data.offsets.popper = getClientRect(data.offsets.popper);
        data.offsets.reference = getClientRect(data.offsets.reference);
        data = fn(data, modifier);
      }
    });
    return data;
  }
  function update$2() {
    if (this.state.isDestroyed) {
      return;
    }
    var data = {
      instance: this,
      styles: {},
      arrowStyles: {},
      attributes: {},
      flipped: false,
      offsets: {}
    };
    data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);
    data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);
    data.originalPlacement = data.placement;
    data.positionFixed = this.options.positionFixed;
    data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
    data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';
    data = runModifiers(this.modifiers, data);
    if (!this.state.isCreated) {
      this.state.isCreated = true;
      this.options.onCreate(data);
    } else {
      this.options.onUpdate(data);
    }
  }
  function isModifierEnabled(modifiers, modifierName) {
    return modifiers.some(function (_ref) {
      var name = _ref.name, enabled = _ref.enabled;
      return enabled && name === modifierName;
    });
  }
  function getSupportedPropertyName(property) {
    var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
    var upperProp = property.charAt(0).toUpperCase() + property.slice(1);
    for (var i = 0; i < prefixes.length; i++) {
      var prefix = prefixes[i];
      var toCheck = prefix ? '' + prefix + upperProp : property;
      if (typeof document.body.style[toCheck] !== 'undefined') {
        return toCheck;
      }
    }
    return null;
  }
  function destroy() {
    this.state.isDestroyed = true;
    if (isModifierEnabled(this.modifiers, 'applyStyle')) {
      this.popper.removeAttribute('x-placement');
      this.popper.style.position = '';
      this.popper.style.top = '';
      this.popper.style.left = '';
      this.popper.style.right = '';
      this.popper.style.bottom = '';
      this.popper.style.willChange = '';
      this.popper.style[getSupportedPropertyName('transform')] = '';
    }
    this.disableEventListeners();
    if (this.options.removeOnDestroy) {
      this.popper.parentNode.removeChild(this.popper);
    }
    return this;
  }
  function getWindow(element) {
    var ownerDocument = element.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView : window;
  }
  function attachToScrollParents(scrollParent, event, callback, scrollParents) {
    var isBody = scrollParent.nodeName === 'BODY';
    var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
    target.addEventListener(event, callback, {
      passive: true
    });
    if (!isBody) {
      attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
    }
    scrollParents.push(target);
  }
  function setupEventListeners(reference, options, state, updateBound) {
    state.updateBound = updateBound;
    getWindow(reference).addEventListener('resize', state.updateBound, {
      passive: true
    });
    var scrollElement = getScrollParent(reference);
    attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
    state.scrollElement = scrollElement;
    state.eventsEnabled = true;
    return state;
  }
  function enableEventListeners() {
    if (!this.state.eventsEnabled) {
      this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
    }
  }
  function removeEventListeners(reference, state) {
    getWindow(reference).removeEventListener('resize', state.updateBound);
    state.scrollParents.forEach(function (target) {
      target.removeEventListener('scroll', state.updateBound);
    });
    state.updateBound = null;
    state.scrollParents = [];
    state.scrollElement = null;
    state.eventsEnabled = false;
    return state;
  }
  function disableEventListeners() {
    if (this.state.eventsEnabled) {
      cancelAnimationFrame(this.scheduleUpdate);
      this.state = removeEventListeners(this.reference, this.state);
    }
  }
  function isNumeric(n) {
    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
  }
  function setStyles(element, styles) {
    Object.keys(styles).forEach(function (prop) {
      var unit = '';
      if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
        unit = 'px';
      }
      element.style[prop] = styles[prop] + unit;
    });
  }
  function setAttributes(element, attributes) {
    Object.keys(attributes).forEach(function (prop) {
      var value = attributes[prop];
      if (value !== false) {
        element.setAttribute(prop, attributes[prop]);
      } else {
        element.removeAttribute(prop);
      }
    });
  }
  function applyStyle(data) {
    setStyles(data.instance.popper, data.styles);
    setAttributes(data.instance.popper, data.attributes);
    if (data.arrowElement && Object.keys(data.arrowStyles).length) {
      setStyles(data.arrowElement, data.arrowStyles);
    }
    return data;
  }
  function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
    var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);
    var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
    popper.setAttribute('x-placement', placement);
    setStyles(popper, {
      position: options.positionFixed ? 'fixed' : 'absolute'
    });
    return options;
  }
  function getRoundedOffsets(data, shouldRound) {
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var round = Math.round, floor = Math.floor;
    var noRound = function noRound(v) {
      return v;
    };
    var referenceWidth = round(reference.width);
    var popperWidth = round(popper.width);
    var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
    var isVariation = data.placement.indexOf('-') !== -1;
    var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
    var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
    var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
    var verticalToInteger = !shouldRound ? noRound : round;
    return {
      left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
      top: verticalToInteger(popper.top),
      bottom: verticalToInteger(popper.bottom),
      right: horizontalToInteger(popper.right)
    };
  }
  var isFirefox = isBrowser && (/Firefox/i).test(navigator.userAgent);
  function computeStyle(data, options) {
    var x = options.x, y = options.y;
    var popper = data.offsets.popper;
    var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
      return modifier.name === 'applyStyle';
    }).gpuAcceleration;
    if (legacyGpuAccelerationOption !== undefined) {
      console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
    }
    var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
    var offsetParent = getOffsetParent(data.instance.popper);
    var offsetParentRect = getBoundingClientRect(offsetParent);
    var styles = {
      position: popper.position
    };
    var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
    var sideA = x === 'bottom' ? 'top' : 'bottom';
    var sideB = y === 'right' ? 'left' : 'right';
    var prefixedProperty = getSupportedPropertyName('transform');
    var left = void 0, top = void 0;
    if (sideA === 'bottom') {
      if (offsetParent.nodeName === 'HTML') {
        top = -offsetParent.clientHeight + offsets.bottom;
      } else {
        top = -offsetParentRect.height + offsets.bottom;
      }
    } else {
      top = offsets.top;
    }
    if (sideB === 'right') {
      if (offsetParent.nodeName === 'HTML') {
        left = -offsetParent.clientWidth + offsets.right;
      } else {
        left = -offsetParentRect.width + offsets.right;
      }
    } else {
      left = offsets.left;
    }
    if (gpuAcceleration && prefixedProperty) {
      styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
      styles[sideA] = 0;
      styles[sideB] = 0;
      styles.willChange = 'transform';
    } else {
      var invertTop = sideA === 'bottom' ? -1 : 1;
      var invertLeft = sideB === 'right' ? -1 : 1;
      styles[sideA] = top * invertTop;
      styles[sideB] = left * invertLeft;
      styles.willChange = sideA + ', ' + sideB;
    }
    var attributes = {
      'x-placement': data.placement
    };
    data.attributes = _extends({}, attributes, data.attributes);
    data.styles = _extends({}, styles, data.styles);
    data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
    return data;
  }
  function isModifierRequired(modifiers, requestingName, requestedName) {
    var requesting = find(modifiers, function (_ref) {
      var name = _ref.name;
      return name === requestingName;
    });
    var isRequired = !!requesting && modifiers.some(function (modifier) {
      return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
    });
    if (!isRequired) {
      var _requesting = '`' + requestingName + '`';
      var requested = '`' + requestedName + '`';
      console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
    }
    return isRequired;
  }
  function arrow(data, options) {
    var _data$offsets$arrow;
    if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
      return data;
    }
    var arrowElement = options.element;
    if (typeof arrowElement === 'string') {
      arrowElement = data.instance.popper.querySelector(arrowElement);
      if (!arrowElement) {
        return data;
      }
    } else {
      if (!data.instance.popper.contains(arrowElement)) {
        console.warn('WARNING: `arrow.element` must be child of its popper element!');
        return data;
      }
    }
    var placement = data.placement.split('-')[0];
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var isVertical = ['left', 'right'].indexOf(placement) !== -1;
    var len = isVertical ? 'height' : 'width';
    var sideCapitalized = isVertical ? 'Top' : 'Left';
    var side = sideCapitalized.toLowerCase();
    var altSide = isVertical ? 'left' : 'top';
    var opSide = isVertical ? 'bottom' : 'right';
    var arrowElementSize = getOuterSizes(arrowElement)[len];
    if (reference[opSide] - arrowElementSize < popper[side]) {
      data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
    }
    if (reference[side] + arrowElementSize > popper[opSide]) {
      data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
    }
    data.offsets.popper = getClientRect(data.offsets.popper);
    var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;
    var css = getStyleComputedProperty(data.instance.popper);
    var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
    var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
    var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;
    sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
    data.arrowElement = arrowElement;
    data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);
    return data;
  }
  function getOppositeVariation(variation) {
    if (variation === 'end') {
      return 'start';
    } else if (variation === 'start') {
      return 'end';
    }
    return variation;
  }
  var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];
  var validPlacements = placements.slice(3);
  function clockwise(placement) {
    var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var index = validPlacements.indexOf(placement);
    var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
    return counter ? arr.reverse() : arr;
  }
  var BEHAVIORS = {
    FLIP: 'flip',
    CLOCKWISE: 'clockwise',
    COUNTERCLOCKWISE: 'counterclockwise'
  };
  function flip(data, options) {
    if (isModifierEnabled(data.instance.modifiers, 'inner')) {
      return data;
    }
    if (data.flipped && data.placement === data.originalPlacement) {
      return data;
    }
    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
    var placement = data.placement.split('-')[0];
    var placementOpposite = getOppositePlacement(placement);
    var variation = data.placement.split('-')[1] || '';
    var flipOrder = [];
    switch (options.behavior) {
      case BEHAVIORS.FLIP:
        flipOrder = [placement, placementOpposite];
        break;
      case BEHAVIORS.CLOCKWISE:
        flipOrder = clockwise(placement);
        break;
      case BEHAVIORS.COUNTERCLOCKWISE:
        flipOrder = clockwise(placement, true);
        break;
      default:
        flipOrder = options.behavior;
    }
    flipOrder.forEach(function (step, index) {
      if (placement !== step || flipOrder.length === index + 1) {
        return data;
      }
      placement = data.placement.split('-')[0];
      placementOpposite = getOppositePlacement(placement);
      var popperOffsets = data.offsets.popper;
      var refOffsets = data.offsets.reference;
      var floor = Math.floor;
      var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);
      var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
      var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
      var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
      var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
      var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;
      var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
      var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);
      var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);
      var flippedVariation = flippedVariationByRef || flippedVariationByContent;
      if (overlapsRef || overflowsBoundaries || flippedVariation) {
        data.flipped = true;
        if (overlapsRef || overflowsBoundaries) {
          placement = flipOrder[index + 1];
        }
        if (flippedVariation) {
          variation = getOppositeVariation(variation);
        }
        data.placement = placement + (variation ? '-' + variation : '');
        data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
        data = runModifiers(data.instance.modifiers, data, 'flip');
      }
    });
    return data;
  }
  function keepTogether(data) {
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var placement = data.placement.split('-')[0];
    var floor = Math.floor;
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
    var side = isVertical ? 'right' : 'bottom';
    var opSide = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';
    if (popper[side] < floor(reference[opSide])) {
      data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
    }
    if (popper[opSide] > floor(reference[side])) {
      data.offsets.popper[opSide] = floor(reference[side]);
    }
    return data;
  }
  function toValue(str, measurement, popperOffsets, referenceOffsets) {
    var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
    var value = +split[1];
    var unit = split[2];
    if (!value) {
      return str;
    }
    if (unit.indexOf('%') === 0) {
      var element = void 0;
      switch (unit) {
        case '%p':
          element = popperOffsets;
          break;
        case '%':
        case '%r':
        default:
          element = referenceOffsets;
      }
      var rect = getClientRect(element);
      return rect[measurement] / 100 * value;
    } else if (unit === 'vh' || unit === 'vw') {
      var size = void 0;
      if (unit === 'vh') {
        size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
      } else {
        size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
      }
      return size / 100 * value;
    } else {
      return value;
    }
  }
  function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
    var offsets = [0, 0];
    var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;
    var fragments = offset.split(/(\+|\-)/).map(function (frag) {
      return frag.trim();
    });
    var divider = fragments.indexOf(find(fragments, function (frag) {
      return frag.search(/,|\s/) !== -1;
    }));
    if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
      console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
    }
    var splitRegex = /\s*,\s*|\s+/;
    var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];
    ops = ops.map(function (op, index) {
      var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
      var mergeWithPrevious = false;
      return op.reduce(function (a, b) {
        if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
          a[a.length - 1] = b;
          mergeWithPrevious = true;
          return a;
        } else if (mergeWithPrevious) {
          a[a.length - 1] += b;
          mergeWithPrevious = false;
          return a;
        } else {
          return a.concat(b);
        }
      }, []).map(function (str) {
        return toValue(str, measurement, popperOffsets, referenceOffsets);
      });
    });
    ops.forEach(function (op, index) {
      op.forEach(function (frag, index2) {
        if (isNumeric(frag)) {
          offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
        }
      });
    });
    return offsets;
  }
  function offset(data, _ref) {
    var offset = _ref.offset;
    var placement = data.placement, _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var basePlacement = placement.split('-')[0];
    var offsets = void 0;
    if (isNumeric(+offset)) {
      offsets = [+offset, 0];
    } else {
      offsets = parseOffset(offset, popper, reference, basePlacement);
    }
    if (basePlacement === 'left') {
      popper.top += offsets[0];
      popper.left -= offsets[1];
    } else if (basePlacement === 'right') {
      popper.top += offsets[0];
      popper.left += offsets[1];
    } else if (basePlacement === 'top') {
      popper.left += offsets[0];
      popper.top -= offsets[1];
    } else if (basePlacement === 'bottom') {
      popper.left += offsets[0];
      popper.top += offsets[1];
    }
    data.popper = popper;
    return data;
  }
  function preventOverflow(data, options) {
    var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);
    if (data.instance.reference === boundariesElement) {
      boundariesElement = getOffsetParent(boundariesElement);
    }
    var transformProp = getSupportedPropertyName('transform');
    var popperStyles = data.instance.popper.style;
    var top = popperStyles.top, left = popperStyles.left, transform = popperStyles[transformProp];
    popperStyles.top = '';
    popperStyles.left = '';
    popperStyles[transformProp] = '';
    var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
    popperStyles.top = top;
    popperStyles.left = left;
    popperStyles[transformProp] = transform;
    options.boundaries = boundaries;
    var order = options.priority;
    var popper = data.offsets.popper;
    var check = {
      primary: function primary(placement) {
        var value = popper[placement];
        if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
          value = Math.max(popper[placement], boundaries[placement]);
        }
        return defineProperty({}, placement, value);
      },
      secondary: function secondary(placement) {
        var mainSide = placement === 'right' ? 'left' : 'top';
        var value = popper[mainSide];
        if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
          value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
        }
        return defineProperty({}, mainSide, value);
      }
    };
    order.forEach(function (placement) {
      var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
      popper = _extends({}, popper, check[side](placement));
    });
    data.offsets.popper = popper;
    return data;
  }
  function shift(data) {
    var placement = data.placement;
    var basePlacement = placement.split('-')[0];
    var shiftvariation = placement.split('-')[1];
    if (shiftvariation) {
      var _data$offsets = data.offsets, reference = _data$offsets.reference, popper = _data$offsets.popper;
      var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
      var side = isVertical ? 'left' : 'top';
      var measurement = isVertical ? 'width' : 'height';
      var shiftOffsets = {
        start: defineProperty({}, side, reference[side]),
        end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
      };
      data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
    }
    return data;
  }
  function hide(data) {
    if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
      return data;
    }
    var refRect = data.offsets.reference;
    var bound = find(data.instance.modifiers, function (modifier) {
      return modifier.name === 'preventOverflow';
    }).boundaries;
    if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
      if (data.hide === true) {
        return data;
      }
      data.hide = true;
      data.attributes['x-out-of-boundaries'] = '';
    } else {
      if (data.hide === false) {
        return data;
      }
      data.hide = false;
      data.attributes['x-out-of-boundaries'] = false;
    }
    return data;
  }
  function inner(data) {
    var placement = data.placement;
    var basePlacement = placement.split('-')[0];
    var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
    var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;
    var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;
    popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);
    data.placement = getOppositePlacement(placement);
    data.offsets.popper = getClientRect(popper);
    return data;
  }
  var modifiers = {
    shift: {
      order: 100,
      enabled: true,
      fn: shift
    },
    offset: {
      order: 200,
      enabled: true,
      fn: offset,
      offset: 0
    },
    preventOverflow: {
      order: 300,
      enabled: true,
      fn: preventOverflow,
      priority: ['left', 'right', 'top', 'bottom'],
      padding: 5,
      boundariesElement: 'scrollParent'
    },
    keepTogether: {
      order: 400,
      enabled: true,
      fn: keepTogether
    },
    arrow: {
      order: 500,
      enabled: true,
      fn: arrow,
      element: '[x-arrow]'
    },
    flip: {
      order: 600,
      enabled: true,
      fn: flip,
      behavior: 'flip',
      padding: 5,
      boundariesElement: 'viewport',
      flipVariations: false,
      flipVariationsByContent: false
    },
    inner: {
      order: 700,
      enabled: false,
      fn: inner
    },
    hide: {
      order: 800,
      enabled: true,
      fn: hide
    },
    computeStyle: {
      order: 850,
      enabled: true,
      fn: computeStyle,
      gpuAcceleration: true,
      x: 'bottom',
      y: 'right'
    },
    applyStyle: {
      order: 900,
      enabled: true,
      fn: applyStyle,
      onLoad: applyStyleOnLoad,
      gpuAcceleration: undefined
    }
  };
  var Defaults = {
    placement: 'bottom',
    positionFixed: false,
    eventsEnabled: true,
    removeOnDestroy: false,
    onCreate: function onCreate() {},
    onUpdate: function onUpdate() {},
    modifiers: modifiers
  };
  var Popper$1 = (function () {
    function Popper(reference, popper) {
      var _this = this;
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      classCallCheck(this, Popper);
      this.scheduleUpdate = function () {
        return requestAnimationFrame(_this.update);
      };
      this.update = debounce(this.update.bind(this));
      this.options = _extends({}, Popper.Defaults, options);
      this.state = {
        isDestroyed: false,
        isCreated: false,
        scrollParents: []
      };
      this.reference = reference && reference.jquery ? reference[0] : reference;
      this.popper = popper && popper.jquery ? popper[0] : popper;
      this.options.modifiers = {};
      Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
        _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || ({}), options.modifiers ? options.modifiers[name] : {});
      });
      this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
        return _extends({
          name: name
        }, _this.options.modifiers[name]);
      }).sort(function (a, b) {
        return a.order - b.order;
      });
      this.modifiers.forEach(function (modifierOptions) {
        if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
          modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
        }
      });
      this.update();
      var eventsEnabled = this.options.eventsEnabled;
      if (eventsEnabled) {
        this.enableEventListeners();
      }
      this.state.eventsEnabled = eventsEnabled;
    }
    createClass(Popper, [{
      key: 'update',
      value: function update$$1() {
        return update$2.call(this);
      }
    }, {
      key: 'destroy',
      value: function destroy$$1() {
        return destroy.call(this);
      }
    }, {
      key: 'enableEventListeners',
      value: function enableEventListeners$$1() {
        return enableEventListeners.call(this);
      }
    }, {
      key: 'disableEventListeners',
      value: function disableEventListeners$$1() {
        return disableEventListeners.call(this);
      }
    }]);
    return Popper;
  })();
  Popper$1.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
  Popper$1.placements = placements;
  Popper$1.Defaults = Defaults;
  var lib = {
    exports: {}
  };
  var implementation = {
    exports: {}
  };
  var propTypes = {
    exports: {}
  };
  var reactIs = {
    exports: {}
  };
  var reactIs_production_min = {};
  var hasRequiredReactIs_production_min;
  function requireReactIs_production_min() {
    if (hasRequiredReactIs_production_min) return reactIs_production_min;
    hasRequiredReactIs_production_min = 1;
    var b = "function" === typeof Symbol && Symbol.for, c = b ? Symbol.for("react.element") : 60103, d = b ? Symbol.for("react.portal") : 60106, e = b ? Symbol.for("react.fragment") : 60107, f = b ? Symbol.for("react.strict_mode") : 60108, g = b ? Symbol.for("react.profiler") : 60114, h = b ? Symbol.for("react.provider") : 60109, k = b ? Symbol.for("react.context") : 60110, l = b ? Symbol.for("react.async_mode") : 60111, m = b ? Symbol.for("react.concurrent_mode") : 60111, n = b ? Symbol.for("react.forward_ref") : 60112, p = b ? Symbol.for("react.suspense") : 60113, q = b ? Symbol.for("react.suspense_list") : 60120, r = b ? Symbol.for("react.memo") : 60115, t = b ? Symbol.for("react.lazy") : 60116, v = b ? Symbol.for("react.block") : 60121, w = b ? Symbol.for("react.fundamental") : 60117, x = b ? Symbol.for("react.responder") : 60118, y = b ? Symbol.for("react.scope") : 60119;
    function z(a) {
      if ("object" === typeof a && null !== a) {
        var u = a.$$typeof;
        switch (u) {
          case c:
            switch ((a = a.type, a)) {
              case l:
              case m:
              case e:
              case g:
              case f:
              case p:
                return a;
              default:
                switch ((a = a && a.$$typeof, a)) {
                  case k:
                  case n:
                  case t:
                  case r:
                  case h:
                    return a;
                  default:
                    return u;
                }
            }
          case d:
            return u;
        }
      }
    }
    function A(a) {
      return z(a) === m;
    }
    reactIs_production_min.AsyncMode = l;
    reactIs_production_min.ConcurrentMode = m;
    reactIs_production_min.ContextConsumer = k;
    reactIs_production_min.ContextProvider = h;
    reactIs_production_min.Element = c;
    reactIs_production_min.ForwardRef = n;
    reactIs_production_min.Fragment = e;
    reactIs_production_min.Lazy = t;
    reactIs_production_min.Memo = r;
    reactIs_production_min.Portal = d;
    reactIs_production_min.Profiler = g;
    reactIs_production_min.StrictMode = f;
    reactIs_production_min.Suspense = p;
    reactIs_production_min.isAsyncMode = function (a) {
      return A(a) || z(a) === l;
    };
    reactIs_production_min.isConcurrentMode = A;
    reactIs_production_min.isContextConsumer = function (a) {
      return z(a) === k;
    };
    reactIs_production_min.isContextProvider = function (a) {
      return z(a) === h;
    };
    reactIs_production_min.isElement = function (a) {
      return "object" === typeof a && null !== a && a.$$typeof === c;
    };
    reactIs_production_min.isForwardRef = function (a) {
      return z(a) === n;
    };
    reactIs_production_min.isFragment = function (a) {
      return z(a) === e;
    };
    reactIs_production_min.isLazy = function (a) {
      return z(a) === t;
    };
    reactIs_production_min.isMemo = function (a) {
      return z(a) === r;
    };
    reactIs_production_min.isPortal = function (a) {
      return z(a) === d;
    };
    reactIs_production_min.isProfiler = function (a) {
      return z(a) === g;
    };
    reactIs_production_min.isStrictMode = function (a) {
      return z(a) === f;
    };
    reactIs_production_min.isSuspense = function (a) {
      return z(a) === p;
    };
    reactIs_production_min.isValidElementType = function (a) {
      return "string" === typeof a || "function" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || "object" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);
    };
    reactIs_production_min.typeOf = z;
    return reactIs_production_min;
  }
  var reactIs_development = {};
  var hasRequiredReactIs_development;
  function requireReactIs_development() {
    if (hasRequiredReactIs_development) return reactIs_development;
    hasRequiredReactIs_development = 1;
    if (process.env.NODE_ENV !== "production") {
      (function () {
        var hasSymbol = typeof Symbol === 'function' && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
        function isValidElementType(type) {
          return typeof type === 'string' || typeof type === 'function' || type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === 'object' && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return undefined;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        reactIs_development.AsyncMode = AsyncMode;
        reactIs_development.ConcurrentMode = ConcurrentMode;
        reactIs_development.ContextConsumer = ContextConsumer;
        reactIs_development.ContextProvider = ContextProvider;
        reactIs_development.Element = Element;
        reactIs_development.ForwardRef = ForwardRef;
        reactIs_development.Fragment = Fragment;
        reactIs_development.Lazy = Lazy;
        reactIs_development.Memo = Memo;
        reactIs_development.Portal = Portal;
        reactIs_development.Profiler = Profiler;
        reactIs_development.StrictMode = StrictMode;
        reactIs_development.Suspense = Suspense;
        reactIs_development.isAsyncMode = isAsyncMode;
        reactIs_development.isConcurrentMode = isConcurrentMode;
        reactIs_development.isContextConsumer = isContextConsumer;
        reactIs_development.isContextProvider = isContextProvider;
        reactIs_development.isElement = isElement;
        reactIs_development.isForwardRef = isForwardRef;
        reactIs_development.isFragment = isFragment;
        reactIs_development.isLazy = isLazy;
        reactIs_development.isMemo = isMemo;
        reactIs_development.isPortal = isPortal;
        reactIs_development.isProfiler = isProfiler;
        reactIs_development.isStrictMode = isStrictMode;
        reactIs_development.isSuspense = isSuspense;
        reactIs_development.isValidElementType = isValidElementType;
        reactIs_development.typeOf = typeOf;
      })();
    }
    return reactIs_development;
  }
  var hasRequiredReactIs;
  function requireReactIs() {
    if (hasRequiredReactIs) return reactIs.exports;
    hasRequiredReactIs = 1;
    (function (module) {
      if (process.env.NODE_ENV === 'production') {
        module.exports = requireReactIs_production_min();
      } else {
        module.exports = requireReactIs_development();
      }
    })(reactIs);
    return reactIs.exports;
  }
  var objectAssign;
  var hasRequiredObjectAssign;
  function requireObjectAssign() {
    if (hasRequiredObjectAssign) return objectAssign;
    hasRequiredObjectAssign = 1;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === undefined) {
        throw new TypeError('Object.assign cannot be called with null or undefined');
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String('abc');
        test1[5] = 'de';
        if (Object.getOwnPropertyNames(test1)[0] === '5') {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2['_' + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
          return test2[n];
        });
        if (order2.join('') !== '0123456789') {
          return false;
        }
        var test3 = {};
        ('abcdefghijklmnopqrst').split('').forEach(function (letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    objectAssign = shouldUseNative() ? Object.assign : function (target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
    return objectAssign;
  }
  var ReactPropTypesSecret_1;
  var hasRequiredReactPropTypesSecret;
  function requireReactPropTypesSecret() {
    if (hasRequiredReactPropTypesSecret) return ReactPropTypesSecret_1;
    hasRequiredReactPropTypesSecret = 1;
    var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
    ReactPropTypesSecret_1 = ReactPropTypesSecret;
    return ReactPropTypesSecret_1;
  }
  var has;
  var hasRequiredHas;
  function requireHas() {
    if (hasRequiredHas) return has;
    hasRequiredHas = 1;
    has = Function.call.bind(Object.prototype.hasOwnProperty);
    return has;
  }
  var checkPropTypes_1;
  var hasRequiredCheckPropTypes;
  function requireCheckPropTypes() {
    if (hasRequiredCheckPropTypes) return checkPropTypes_1;
    hasRequiredCheckPropTypes = 1;
    var printWarning = function () {};
    if (process.env.NODE_ENV !== 'production') {
      var ReactPropTypesSecret = requireReactPropTypesSecret();
      var loggedTypeFailures = {};
      var has = requireHas();
      printWarning = function (text) {
        var message = 'Warning: ' + text;
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };
    }
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (process.env.NODE_ENV !== 'production') {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== 'function') {
                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                err.name = 'Invariant Violation';
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
            }
            if (error instanceof Error && !((error.message in loggedTypeFailures))) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : '';
              printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function () {
      if (process.env.NODE_ENV !== 'production') {
        loggedTypeFailures = {};
      }
    };
    checkPropTypes_1 = checkPropTypes;
    return checkPropTypes_1;
  }
  var factoryWithTypeCheckers;
  var hasRequiredFactoryWithTypeCheckers;
  function requireFactoryWithTypeCheckers() {
    if (hasRequiredFactoryWithTypeCheckers) return factoryWithTypeCheckers;
    hasRequiredFactoryWithTypeCheckers = 1;
    var ReactIs = requireReactIs();
    var assign = requireObjectAssign();
    var ReactPropTypesSecret = requireReactPropTypesSecret();
    var has = requireHas();
    var checkPropTypes = requireCheckPropTypes();
    var printWarning = function () {};
    if (process.env.NODE_ENV !== 'production') {
      printWarning = function (text) {
        var message = 'Warning: ' + text;
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {}
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    factoryWithTypeCheckers = function (isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = '@@iterator';
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') {
          return iteratorFn;
        }
      }
      var ANONYMOUS = '<<anonymous>>';
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bigint: createPrimitiveTypeChecker('bigint'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === 'object' ? data : {};
        this.stack = '';
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (process.env.NODE_ENV !== 'production') {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
              err.name = 'Invariant Violation';
              throw err;
            } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
              var cacheKey = componentName + ':' + propName;
              if (!manualPropTypeCallCache[cacheKey] && manualPropTypeWarningCount < 3) {
                printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
              }
              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
              expectedType: expectedType
            });
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (process.env.NODE_ENV !== 'production') {
            if (arguments.length > 1) {
              printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
            } else {
              printWarning('Invalid argument supplied to oneOf, expected an array.');
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === 'symbol') {
              return String(value);
            }
            return value;
          });
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== 'function') {
            printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
            var checker = arrayOfTypeCheckers[i];
            var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== 'function') {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== 'function') {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
            }
            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case 'number':
          case 'string':
          case 'undefined':
            return true;
          case 'boolean':
            return !propValue;
          case 'object':
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === 'symbol') {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue['@@toStringTag'] === 'Symbol') {
          return true;
        }
        if (typeof Symbol === 'function' && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return 'array';
        }
        if (propValue instanceof RegExp) {
          return 'object';
        }
        if (isSymbol(propType, propValue)) {
          return 'symbol';
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) {
          return '' + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === 'object') {
          if (propValue instanceof Date) {
            return 'date';
          } else if (propValue instanceof RegExp) {
            return 'regexp';
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case 'array':
          case 'object':
            return 'an ' + type;
          case 'boolean':
          case 'date':
          case 'regexp':
            return 'a ' + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
    return factoryWithTypeCheckers;
  }
  var factoryWithThrowingShims;
  var hasRequiredFactoryWithThrowingShims;
  function requireFactoryWithThrowingShims() {
    if (hasRequiredFactoryWithThrowingShims) return factoryWithThrowingShims;
    hasRequiredFactoryWithThrowingShims = 1;
    var ReactPropTypesSecret = requireReactPropTypesSecret();
    function emptyFunction() {}
    function emptyFunctionWithReset() {}
    emptyFunctionWithReset.resetWarningCache = emptyFunction;
    factoryWithThrowingShims = function () {
      function shim(props, propName, componentName, location, propFullName, secret) {
        if (secret === ReactPropTypesSecret) {
          return;
        }
        var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
        err.name = 'Invariant Violation';
        throw err;
      }
      shim.isRequired = shim;
      function getShim() {
        return shim;
      }
      var ReactPropTypes = {
        array: shim,
        bigint: shim,
        bool: shim,
        func: shim,
        number: shim,
        object: shim,
        string: shim,
        symbol: shim,
        any: shim,
        arrayOf: getShim,
        element: shim,
        elementType: shim,
        instanceOf: getShim,
        node: shim,
        objectOf: getShim,
        oneOf: getShim,
        oneOfType: getShim,
        shape: getShim,
        exact: getShim,
        checkPropTypes: emptyFunctionWithReset,
        resetWarningCache: emptyFunction
      };
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
    return factoryWithThrowingShims;
  }
  if (process.env.NODE_ENV !== 'production') {
    var ReactIs = requireReactIs();
    var throwOnDirectAccess = true;
    propTypes.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
  } else {
    propTypes.exports = requireFactoryWithThrowingShims()();
  }
  var key = '__global_unique_id__';
  var gud = function () {
    return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;
  };
  var __DEV__ = process.env.NODE_ENV !== 'production';
  var warning = function () {};
  if (__DEV__) {
    var printWarning = function printWarning(format, args) {
      var len = arguments.length;
      args = new Array(len > 1 ? len - 1 : 0);
      for (var key = 1; key < len; key++) {
        args[key - 1] = arguments[key];
      }
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        throw new Error(message);
      } catch (x) {}
    };
    warning = function (condition, format, args) {
      var len = arguments.length;
      args = new Array(len > 2 ? len - 2 : 0);
      for (var key = 2; key < len; key++) {
        args[key - 2] = arguments[key];
      }
      if (format === undefined) {
        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
      }
      if (!condition) {
        printWarning.apply(null, [format].concat(args));
      }
    };
  }
  var warning_1 = warning;
  (function (module, exports) {
    exports.__esModule = true;
    var _react = React__default["default"];
    _interopRequireDefault(_react);
    var _propTypes = propTypes.exports;
    var _propTypes2 = _interopRequireDefault(_propTypes);
    var _gud = gud;
    var _gud2 = _interopRequireDefault(_gud);
    var _warning = warning_1;
    var _warning2 = _interopRequireDefault(_warning);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {
        constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var MAX_SIGNED_31_BIT_INT = 1073741823;
    function objectIs(x, y) {
      if (x === y) {
        return x !== 0 || 1 / x === 1 / y;
      } else {
        return x !== x && y !== y;
      }
    }
    function createEventEmitter(value) {
      var handlers = [];
      return {
        on: function on(handler) {
          handlers.push(handler);
        },
        off: function off(handler) {
          handlers = handlers.filter(function (h) {
            return h !== handler;
          });
        },
        get: function get() {
          return value;
        },
        set: function set(newValue, changedBits) {
          value = newValue;
          handlers.forEach(function (handler) {
            return handler(value, changedBits);
          });
        }
      };
    }
    function onlyChild(children) {
      return Array.isArray(children) ? children[0] : children;
    }
    function createReactContext(defaultValue, calculateChangedBits) {
      var _Provider$childContex, _Consumer$contextType;
      var contextProp = '__create-react-context-' + (0, _gud2.default)() + '__';
      var Provider = (function (_Component) {
        _inherits(Provider, _Component);
        function Provider() {
          var _temp, _this, _ret;
          _classCallCheck(this, Provider);
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return (_ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.emitter = createEventEmitter(_this.props.value), _temp), _possibleConstructorReturn(_this, _ret));
        }
        Provider.prototype.getChildContext = function getChildContext() {
          var _ref;
          return (_ref = {}, _ref[contextProp] = this.emitter, _ref);
        };
        Provider.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          if (this.props.value !== nextProps.value) {
            var oldValue = this.props.value;
            var newValue = nextProps.value;
            var changedBits = void 0;
            if (objectIs(oldValue, newValue)) {
              changedBits = 0;
            } else {
              changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
              if (process.env.NODE_ENV !== 'production') {
                (0, _warning2.default)((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits);
              }
              changedBits |= 0;
              if (changedBits !== 0) {
                this.emitter.set(nextProps.value, changedBits);
              }
            }
          }
        };
        Provider.prototype.render = function render() {
          return this.props.children;
        };
        return Provider;
      })(_react.Component);
      Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = _propTypes2.default.object.isRequired, _Provider$childContex);
      var Consumer = (function (_Component2) {
        _inherits(Consumer, _Component2);
        function Consumer() {
          var _temp2, _this2, _ret2;
          _classCallCheck(this, Consumer);
          for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return (_ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _Component2.call.apply(_Component2, [this].concat(args))), _this2), _this2.state = {
            value: _this2.getValue()
          }, _this2.onUpdate = function (newValue, changedBits) {
            var observedBits = _this2.observedBits | 0;
            if ((observedBits & changedBits) !== 0) {
              _this2.setState({
                value: _this2.getValue()
              });
            }
          }, _temp2), _possibleConstructorReturn(_this2, _ret2));
        }
        Consumer.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
          var observedBits = nextProps.observedBits;
          this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
        };
        Consumer.prototype.componentDidMount = function componentDidMount() {
          if (this.context[contextProp]) {
            this.context[contextProp].on(this.onUpdate);
          }
          var observedBits = this.props.observedBits;
          this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;
        };
        Consumer.prototype.componentWillUnmount = function componentWillUnmount() {
          if (this.context[contextProp]) {
            this.context[contextProp].off(this.onUpdate);
          }
        };
        Consumer.prototype.getValue = function getValue() {
          if (this.context[contextProp]) {
            return this.context[contextProp].get();
          } else {
            return defaultValue;
          }
        };
        Consumer.prototype.render = function render() {
          return onlyChild(this.props.children)(this.state.value);
        };
        return Consumer;
      })(_react.Component);
      Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = _propTypes2.default.object, _Consumer$contextType);
      return {
        Provider: Provider,
        Consumer: Consumer
      };
    }
    exports.default = createReactContext;
    module.exports = exports['default'];
  })(implementation, implementation.exports);
  (function (module, exports) {
    exports.__esModule = true;
    var _react = React__default["default"];
    var _react2 = _interopRequireDefault(_react);
    var _implementation = implementation.exports;
    var _implementation2 = _interopRequireDefault(_implementation);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    exports.default = _react2.default.createContext || _implementation2.default;
    module.exports = exports['default'];
  })(lib, lib.exports);
  var createContext = getDefaultExportFromCjs(lib.exports);
  var ManagerReferenceNodeContext = createContext();
  var ManagerReferenceNodeSetterContext = createContext();
  var Manager = (function (_React$Component) {
    _inheritsLoose$2(Manager, _React$Component);
    function Manager() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "referenceNode", void 0);
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setReferenceNode", function (newReferenceNode) {
        if (newReferenceNode && _this.referenceNode !== newReferenceNode) {
          _this.referenceNode = newReferenceNode;
          _this.forceUpdate();
        }
      });
      return _this;
    }
    var _proto = Manager.prototype;
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.referenceNode = null;
    };
    _proto.render = function render() {
      return React__namespace.createElement(ManagerReferenceNodeContext.Provider, {
        value: this.referenceNode
      }, React__namespace.createElement(ManagerReferenceNodeSetterContext.Provider, {
        value: this.setReferenceNode
      }, this.props.children));
    };
    return Manager;
  })(React__namespace.Component);
  var unwrapArray = function unwrapArray(arg) {
    return Array.isArray(arg) ? arg[0] : arg;
  };
  var safeInvoke = function safeInvoke(fn) {
    if (typeof fn === "function") {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return fn.apply(void 0, args);
    }
  };
  var shallowEqual = function shallowEqual(objA, objB) {
    var aKeys = Object.keys(objA);
    var bKeys = Object.keys(objB);
    if (bKeys.length !== aKeys.length) {
      return false;
    }
    for (var i = 0; i < bKeys.length; i++) {
      var key = aKeys[i];
      if (objA[key] !== objB[key]) {
        return false;
      }
    }
    return true;
  };
  var setRef = function setRef(ref, node) {
    if (typeof ref === "function") {
      return safeInvoke(ref, node);
    } else if (ref != null) {
      ref.current = node;
    }
  };
  var initialStyle = {
    position: 'absolute',
    top: 0,
    left: 0,
    opacity: 0,
    pointerEvents: 'none'
  };
  var initialArrowStyle = {};
  var InnerPopper = (function (_React$Component) {
    _inheritsLoose$2(InnerPopper, _React$Component);
    function InnerPopper() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
        data: undefined,
        placement: undefined
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "popperInstance", void 0);
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "popperNode", null);
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "arrowNode", null);
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setPopperNode", function (popperNode) {
        if (!popperNode || _this.popperNode === popperNode) return;
        setRef(_this.props.innerRef, popperNode);
        _this.popperNode = popperNode;
        _this.updatePopperInstance();
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "setArrowNode", function (arrowNode) {
        _this.arrowNode = arrowNode;
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "updateStateModifier", {
        enabled: true,
        order: 900,
        fn: function fn(data) {
          var placement = data.placement;
          _this.setState({
            data: data,
            placement: placement
          });
          return data;
        }
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getOptions", function () {
        return {
          placement: _this.props.placement,
          eventsEnabled: _this.props.eventsEnabled,
          positionFixed: _this.props.positionFixed,
          modifiers: _extends$1({}, _this.props.modifiers, {
            arrow: _extends$1({}, _this.props.modifiers && _this.props.modifiers.arrow, {
              enabled: !!_this.arrowNode,
              element: _this.arrowNode
            }),
            applyStyle: {
              enabled: false
            },
            updateStateModifier: _this.updateStateModifier
          })
        };
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getPopperStyle", function () {
        return !_this.popperNode || !_this.state.data ? initialStyle : _extends$1({
          position: _this.state.data.offsets.popper.position
        }, _this.state.data.styles);
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getPopperPlacement", function () {
        return !_this.state.data ? undefined : _this.state.placement;
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getArrowStyle", function () {
        return !_this.arrowNode || !_this.state.data ? initialArrowStyle : _this.state.data.arrowStyles;
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getOutOfBoundariesState", function () {
        return _this.state.data ? _this.state.data.hide : undefined;
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "destroyPopperInstance", function () {
        if (!_this.popperInstance) return;
        _this.popperInstance.destroy();
        _this.popperInstance = null;
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "updatePopperInstance", function () {
        _this.destroyPopperInstance();
        var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)), popperNode = _assertThisInitialize.popperNode;
        var referenceElement = _this.props.referenceElement;
        if (!referenceElement || !popperNode) return;
        _this.popperInstance = new Popper$1(referenceElement, popperNode, _this.getOptions());
      });
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "scheduleUpdate", function () {
        if (_this.popperInstance) {
          _this.popperInstance.scheduleUpdate();
        }
      });
      return _this;
    }
    var _proto = InnerPopper.prototype;
    _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
      if (this.props.placement !== prevProps.placement || this.props.referenceElement !== prevProps.referenceElement || this.props.positionFixed !== prevProps.positionFixed || !deepEqual_1(this.props.modifiers, prevProps.modifiers, {
        strict: true
      })) {
        if (process.env.NODE_ENV === "development") {
          if (this.props.modifiers !== prevProps.modifiers && this.props.modifiers != null && prevProps.modifiers != null && shallowEqual(this.props.modifiers, prevProps.modifiers)) {
            console.warn("'modifiers' prop reference updated even though all values appear the same.\nConsider memoizing the 'modifiers' object to avoid needless rendering.");
          }
        }
        this.updatePopperInstance();
      } else if (this.props.eventsEnabled !== prevProps.eventsEnabled && this.popperInstance) {
        this.props.eventsEnabled ? this.popperInstance.enableEventListeners() : this.popperInstance.disableEventListeners();
      }
      if (prevState.placement !== this.state.placement) {
        this.scheduleUpdate();
      }
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      setRef(this.props.innerRef, null);
      this.destroyPopperInstance();
    };
    _proto.render = function render() {
      return unwrapArray(this.props.children)({
        ref: this.setPopperNode,
        style: this.getPopperStyle(),
        placement: this.getPopperPlacement(),
        outOfBoundaries: this.getOutOfBoundariesState(),
        scheduleUpdate: this.scheduleUpdate,
        arrowProps: {
          ref: this.setArrowNode,
          style: this.getArrowStyle()
        }
      });
    };
    return InnerPopper;
  })(React__namespace.Component);
  _defineProperty(InnerPopper, "defaultProps", {
    placement: 'bottom',
    eventsEnabled: true,
    referenceElement: undefined,
    positionFixed: false
  });
  Popper$1.placements;
  function Popper(_ref) {
    var referenceElement = _ref.referenceElement, props = _objectWithoutPropertiesLoose$1(_ref, ["referenceElement"]);
    return React__namespace.createElement(ManagerReferenceNodeContext.Consumer, null, function (referenceNode) {
      return React__namespace.createElement(InnerPopper, _extends$1({
        referenceElement: referenceElement !== undefined ? referenceElement : referenceNode
      }, props));
    });
  }
  var InnerReference = (function (_React$Component) {
    _inheritsLoose$2(InnerReference, _React$Component);
    function InnerReference() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "refHandler", function (node) {
        setRef(_this.props.innerRef, node);
        safeInvoke(_this.props.setReferenceNode, node);
      });
      return _this;
    }
    var _proto = InnerReference.prototype;
    _proto.componentWillUnmount = function componentWillUnmount() {
      setRef(this.props.innerRef, null);
    };
    _proto.render = function render() {
      warning_1(Boolean(this.props.setReferenceNode), '`Reference` should not be used outside of a `Manager` component.');
      return unwrapArray(this.props.children)({
        ref: this.refHandler
      });
    };
    return InnerReference;
  })(React__namespace.Component);
  function Reference(props) {
    return React__namespace.createElement(ManagerReferenceNodeSetterContext.Consumer, null, function (setReferenceNode) {
      return React__namespace.createElement(InnerReference, _extends$1({
        setReferenceNode: setReferenceNode
      }, props));
    });
  }
  var CSSTransition$1 = {
    exports: {}
  };
  function hasClass(element, className) {
    if (element.classList) return !!className && element.classList.contains(className);
    return (" " + (element.className.baseVal || element.className) + " ").indexOf(" " + className + " ") !== -1;
  }
  function addClass(element, className) {
    if (element.classList) element.classList.add(className); else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + " " + className; else element.setAttribute('class', (element.className && element.className.baseVal || '') + " " + className);
  }
  var addClass$1 = Object.freeze({
    __proto__: null,
    'default': addClass
  });
  var require$$1 = getAugmentedNamespace(addClass$1);
  function replaceClassName(origClass, classToRemove) {
    return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
  }
  function removeClass(element, className) {
    if (element.classList) {
      element.classList.remove(className);
    } else if (typeof element.className === 'string') {
      element.className = replaceClassName(element.className, className);
    } else {
      element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));
    }
  }
  var removeClass$1 = Object.freeze({
    __proto__: null,
    'default': removeClass
  });
  var require$$2 = getAugmentedNamespace(removeClass$1);
  var Transition$1 = {};
  var config = {
    exports: {}
  };
  (function (module, exports) {
    exports.__esModule = true;
    exports.default = void 0;
    var _default = {
      disabled: false
    };
    exports.default = _default;
    module.exports = exports.default;
  })(config, config.exports);
  var PropTypes = {};
  PropTypes.__esModule = true;
  PropTypes.classNamesShape = PropTypes.timeoutsShape = void 0;
  var _propTypes$2 = _interopRequireDefault$3(propTypes.exports);
  function _interopRequireDefault$3(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  var timeoutsShape = process.env.NODE_ENV !== 'production' ? _propTypes$2.default.oneOfType([_propTypes$2.default.number, _propTypes$2.default.shape({
    enter: _propTypes$2.default.number,
    exit: _propTypes$2.default.number,
    appear: _propTypes$2.default.number
  }).isRequired]) : null;
  PropTypes.timeoutsShape = timeoutsShape;
  var classNamesShape = process.env.NODE_ENV !== 'production' ? _propTypes$2.default.oneOfType([_propTypes$2.default.string, _propTypes$2.default.shape({
    enter: _propTypes$2.default.string,
    exit: _propTypes$2.default.string,
    active: _propTypes$2.default.string
  }), _propTypes$2.default.shape({
    enter: _propTypes$2.default.string,
    enterDone: _propTypes$2.default.string,
    enterActive: _propTypes$2.default.string,
    exit: _propTypes$2.default.string,
    exitDone: _propTypes$2.default.string,
    exitActive: _propTypes$2.default.string
  })]) : null;
  PropTypes.classNamesShape = classNamesShape;
  var TransitionGroupContext = {
    exports: {}
  };
  (function (module, exports) {
    exports.__esModule = true;
    exports.default = void 0;
    var _react = _interopRequireDefault(React__default["default"]);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    var _default = _react.default.createContext(null);
    exports.default = _default;
    module.exports = exports.default;
  })(TransitionGroupContext, TransitionGroupContext.exports);
  var reflow = {};
  reflow.__esModule = true;
  reflow.forceReflow = void 0;
  var forceReflow = function forceReflow(node) {
    return node.scrollTop;
  };
  reflow.forceReflow = forceReflow;
  Transition$1.__esModule = true;
  Transition$1.default = Transition$1.EXITING = Transition$1.ENTERED = Transition$1.ENTERING = Transition$1.EXITED = Transition$1.UNMOUNTED = void 0;
  var _propTypes$1 = _interopRequireDefault$2(propTypes.exports);
  var _react$2 = _interopRequireDefault$2(React__default["default"]);
  var _reactDom = _interopRequireDefault$2(ReactDOM__default["default"]);
  var _config$1 = _interopRequireDefault$2(config.exports);
  var _PropTypes = PropTypes;
  var _TransitionGroupContext$1 = _interopRequireDefault$2(TransitionGroupContext.exports);
  var _reflow = reflow;
  function _interopRequireDefault$2(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;
    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }
    return target;
  }
  function _inheritsLoose$1(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  var UNMOUNTED = 'unmounted';
  Transition$1.UNMOUNTED = UNMOUNTED;
  var EXITED = 'exited';
  Transition$1.EXITED = EXITED;
  var ENTERING = 'entering';
  Transition$1.ENTERING = ENTERING;
  var ENTERED = 'entered';
  Transition$1.ENTERED = ENTERED;
  var EXITING = 'exiting';
  Transition$1.EXITING = EXITING;
  var Transition = (function (_React$Component) {
    _inheritsLoose$1(Transition, _React$Component);
    function Transition(props, context) {
      var _this;
      _this = _React$Component.call(this, props, context) || this;
      var parentGroup = context;
      var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
      var initialStatus;
      _this.appearStatus = null;
      if (props.in) {
        if (appear) {
          initialStatus = EXITED;
          _this.appearStatus = ENTERING;
        } else {
          initialStatus = ENTERED;
        }
      } else {
        if (props.unmountOnExit || props.mountOnEnter) {
          initialStatus = UNMOUNTED;
        } else {
          initialStatus = EXITED;
        }
      }
      _this.state = {
        status: initialStatus
      };
      _this.nextCallback = null;
      return _this;
    }
    Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
      var nextIn = _ref.in;
      if (nextIn && prevState.status === UNMOUNTED) {
        return {
          status: EXITED
        };
      }
      return null;
    };
    var _proto = Transition.prototype;
    _proto.componentDidMount = function componentDidMount() {
      this.updateStatus(true, this.appearStatus);
    };
    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
      var nextStatus = null;
      if (prevProps !== this.props) {
        var status = this.state.status;
        if (this.props.in) {
          if (status !== ENTERING && status !== ENTERED) {
            nextStatus = ENTERING;
          }
        } else {
          if (status === ENTERING || status === ENTERED) {
            nextStatus = EXITING;
          }
        }
      }
      this.updateStatus(false, nextStatus);
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      this.cancelNextCallback();
    };
    _proto.getTimeouts = function getTimeouts() {
      var timeout = this.props.timeout;
      var exit, enter, appear;
      exit = enter = appear = timeout;
      if (timeout != null && typeof timeout !== 'number') {
        exit = timeout.exit;
        enter = timeout.enter;
        appear = timeout.appear !== undefined ? timeout.appear : enter;
      }
      return {
        exit: exit,
        enter: enter,
        appear: appear
      };
    };
    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
      if (mounting === void 0) {
        mounting = false;
      }
      if (nextStatus !== null) {
        this.cancelNextCallback();
        if (nextStatus === ENTERING) {
          if (this.props.unmountOnExit || this.props.mountOnEnter) {
            var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDom.default.findDOMNode(this);
            if (node) (0, _reflow.forceReflow)(node);
          }
          this.performEnter(mounting);
        } else {
          this.performExit();
        }
      } else if (this.props.unmountOnExit && this.state.status === EXITED) {
        this.setState({
          status: UNMOUNTED
        });
      }
    };
    _proto.performEnter = function performEnter(mounting) {
      var _this2 = this;
      var enter = this.props.enter;
      var appearing = this.context ? this.context.isMounting : mounting;
      var _ref2 = this.props.nodeRef ? [appearing] : [_reactDom.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
      var timeouts = this.getTimeouts();
      var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
      if (!mounting && !enter || _config$1.default.disabled) {
        this.safeSetState({
          status: ENTERED
        }, function () {
          _this2.props.onEntered(maybeNode);
        });
        return;
      }
      this.props.onEnter(maybeNode, maybeAppearing);
      this.safeSetState({
        status: ENTERING
      }, function () {
        _this2.props.onEntering(maybeNode, maybeAppearing);
        _this2.onTransitionEnd(enterTimeout, function () {
          _this2.safeSetState({
            status: ENTERED
          }, function () {
            _this2.props.onEntered(maybeNode, maybeAppearing);
          });
        });
      });
    };
    _proto.performExit = function performExit() {
      var _this3 = this;
      var exit = this.props.exit;
      var timeouts = this.getTimeouts();
      var maybeNode = this.props.nodeRef ? undefined : _reactDom.default.findDOMNode(this);
      if (!exit || _config$1.default.disabled) {
        this.safeSetState({
          status: EXITED
        }, function () {
          _this3.props.onExited(maybeNode);
        });
        return;
      }
      this.props.onExit(maybeNode);
      this.safeSetState({
        status: EXITING
      }, function () {
        _this3.props.onExiting(maybeNode);
        _this3.onTransitionEnd(timeouts.exit, function () {
          _this3.safeSetState({
            status: EXITED
          }, function () {
            _this3.props.onExited(maybeNode);
          });
        });
      });
    };
    _proto.cancelNextCallback = function cancelNextCallback() {
      if (this.nextCallback !== null) {
        this.nextCallback.cancel();
        this.nextCallback = null;
      }
    };
    _proto.safeSetState = function safeSetState(nextState, callback) {
      callback = this.setNextCallback(callback);
      this.setState(nextState, callback);
    };
    _proto.setNextCallback = function setNextCallback(callback) {
      var _this4 = this;
      var active = true;
      this.nextCallback = function (event) {
        if (active) {
          active = false;
          _this4.nextCallback = null;
          callback(event);
        }
      };
      this.nextCallback.cancel = function () {
        active = false;
      };
      return this.nextCallback;
    };
    _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
      this.setNextCallback(handler);
      var node = this.props.nodeRef ? this.props.nodeRef.current : _reactDom.default.findDOMNode(this);
      var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;
      if (!node || doesNotHaveTimeoutOrListener) {
        setTimeout(this.nextCallback, 0);
        return;
      }
      if (this.props.addEndListener) {
        var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
        this.props.addEndListener(maybeNode, maybeNextCallback);
      }
      if (timeout != null) {
        setTimeout(this.nextCallback, timeout);
      }
    };
    _proto.render = function render() {
      var status = this.state.status;
      if (status === UNMOUNTED) {
        return null;
      }
      var _this$props = this.props, children = _this$props.children;
      _this$props.in;
      _this$props.mountOnEnter;
      _this$props.unmountOnExit;
      _this$props.appear;
      _this$props.enter;
      _this$props.exit;
      _this$props.timeout;
      _this$props.addEndListener;
      _this$props.onEnter;
      _this$props.onEntering;
      _this$props.onEntered;
      _this$props.onExit;
      _this$props.onExiting;
      _this$props.onExited;
      _this$props.nodeRef;
      var childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
      return _react$2.default.createElement(_TransitionGroupContext$1.default.Provider, {
        value: null
      }, typeof children === 'function' ? children(status, childProps) : _react$2.default.cloneElement(_react$2.default.Children.only(children), childProps));
    };
    return Transition;
  })(_react$2.default.Component);
  Transition.contextType = _TransitionGroupContext$1.default;
  Transition.propTypes = process.env.NODE_ENV !== "production" ? {
    nodeRef: _propTypes$1.default.shape({
      current: typeof Element === 'undefined' ? _propTypes$1.default.any : function (propValue, key, componentName, location, propFullName, secret) {
        var value = propValue[key];
        return _propTypes$1.default.instanceOf(value && ('ownerDocument' in value) ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
      }
    }),
    children: _propTypes$1.default.oneOfType([_propTypes$1.default.func.isRequired, _propTypes$1.default.element.isRequired]).isRequired,
    in: _propTypes$1.default.bool,
    mountOnEnter: _propTypes$1.default.bool,
    unmountOnExit: _propTypes$1.default.bool,
    appear: _propTypes$1.default.bool,
    enter: _propTypes$1.default.bool,
    exit: _propTypes$1.default.bool,
    timeout: function timeout(props) {
      var pt = _PropTypes.timeoutsShape;
      if (!props.addEndListener) pt = pt.isRequired;
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return pt.apply(void 0, [props].concat(args));
    },
    addEndListener: _propTypes$1.default.func,
    onEnter: _propTypes$1.default.func,
    onEntering: _propTypes$1.default.func,
    onEntered: _propTypes$1.default.func,
    onExit: _propTypes$1.default.func,
    onExiting: _propTypes$1.default.func,
    onExited: _propTypes$1.default.func
  } : {};
  function noop() {}
  Transition.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: noop,
    onEntering: noop,
    onEntered: noop,
    onExit: noop,
    onExiting: noop,
    onExited: noop
  };
  Transition.UNMOUNTED = UNMOUNTED;
  Transition.EXITED = EXITED;
  Transition.ENTERING = ENTERING;
  Transition.ENTERED = ENTERED;
  Transition.EXITING = EXITING;
  var _default$1 = Transition;
  Transition$1.default = _default$1;
  (function (module, exports) {
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(propTypes.exports);
    var _addClass2 = _interopRequireDefault(require$$1);
    var _removeClass = _interopRequireDefault(require$$2);
    var _react = _interopRequireDefault(React__default["default"]);
    var _Transition = _interopRequireDefault(Transition$1);
    var _PropTypes = PropTypes;
    var _reflow = reflow;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _extends() {
      _extends = Object.assign || (function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      });
      return _extends.apply(this, arguments);
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var _addClass = function addClass(node, classes) {
      return node && classes && classes.split(' ').forEach(function (c) {
        return (0, _addClass2.default)(node, c);
      });
    };
    var removeClass = function removeClass(node, classes) {
      return node && classes && classes.split(' ').forEach(function (c) {
        return (0, _removeClass.default)(node, c);
      });
    };
    var CSSTransition = (function (_React$Component) {
      _inheritsLoose(CSSTransition, _React$Component);
      function CSSTransition() {
        var _this;
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
        _this.appliedClasses = {
          appear: {},
          enter: {},
          exit: {}
        };
        _this.onEnter = function (maybeNode, maybeAppearing) {
          var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
          _this.removeClasses(node, 'exit');
          _this.addClass(node, appearing ? 'appear' : 'enter', 'base');
          if (_this.props.onEnter) {
            _this.props.onEnter(maybeNode, maybeAppearing);
          }
        };
        _this.onEntering = function (maybeNode, maybeAppearing) {
          var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
          var type = appearing ? 'appear' : 'enter';
          _this.addClass(node, type, 'active');
          if (_this.props.onEntering) {
            _this.props.onEntering(maybeNode, maybeAppearing);
          }
        };
        _this.onEntered = function (maybeNode, maybeAppearing) {
          var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing), node = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
          var type = appearing ? 'appear' : 'enter';
          _this.removeClasses(node, type);
          _this.addClass(node, type, 'done');
          if (_this.props.onEntered) {
            _this.props.onEntered(maybeNode, maybeAppearing);
          }
        };
        _this.onExit = function (maybeNode) {
          var _this$resolveArgument4 = _this.resolveArguments(maybeNode), node = _this$resolveArgument4[0];
          _this.removeClasses(node, 'appear');
          _this.removeClasses(node, 'enter');
          _this.addClass(node, 'exit', 'base');
          if (_this.props.onExit) {
            _this.props.onExit(maybeNode);
          }
        };
        _this.onExiting = function (maybeNode) {
          var _this$resolveArgument5 = _this.resolveArguments(maybeNode), node = _this$resolveArgument5[0];
          _this.addClass(node, 'exit', 'active');
          if (_this.props.onExiting) {
            _this.props.onExiting(maybeNode);
          }
        };
        _this.onExited = function (maybeNode) {
          var _this$resolveArgument6 = _this.resolveArguments(maybeNode), node = _this$resolveArgument6[0];
          _this.removeClasses(node, 'exit');
          _this.addClass(node, 'exit', 'done');
          if (_this.props.onExited) {
            _this.props.onExited(maybeNode);
          }
        };
        _this.resolveArguments = function (maybeNode, maybeAppearing) {
          return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
        };
        _this.getClassNames = function (type) {
          var classNames = _this.props.classNames;
          var isStringClassNames = typeof classNames === 'string';
          var prefix = isStringClassNames && classNames ? classNames + "-" : '';
          var baseClassName = isStringClassNames ? "" + prefix + type : classNames[type];
          var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames[type + "Active"];
          var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames[type + "Done"];
          return {
            baseClassName: baseClassName,
            activeClassName: activeClassName,
            doneClassName: doneClassName
          };
        };
        return _this;
      }
      var _proto = CSSTransition.prototype;
      _proto.addClass = function addClass(node, type, phase) {
        var className = this.getClassNames(type)[phase + "ClassName"];
        var _this$getClassNames = this.getClassNames('enter'), doneClassName = _this$getClassNames.doneClassName;
        if (type === 'appear' && phase === 'done' && doneClassName) {
          className += " " + doneClassName;
        }
        if (phase === 'active') {
          if (node) (0, _reflow.forceReflow)(node);
        }
        if (className) {
          this.appliedClasses[type][phase] = className;
          _addClass(node, className);
        }
      };
      _proto.removeClasses = function removeClasses(node, type) {
        var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
        this.appliedClasses[type] = {};
        if (baseClassName) {
          removeClass(node, baseClassName);
        }
        if (activeClassName) {
          removeClass(node, activeClassName);
        }
        if (doneClassName) {
          removeClass(node, doneClassName);
        }
      };
      _proto.render = function render() {
        var _this$props = this.props;
        _this$props.classNames;
        var props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
        return _react.default.createElement(_Transition.default, _extends({}, props, {
          onEnter: this.onEnter,
          onEntered: this.onEntered,
          onEntering: this.onEntering,
          onExit: this.onExit,
          onExiting: this.onExiting,
          onExited: this.onExited
        }));
      };
      return CSSTransition;
    })(_react.default.Component);
    CSSTransition.defaultProps = {
      classNames: ''
    };
    CSSTransition.propTypes = process.env.NODE_ENV !== "production" ? _extends({}, _Transition.default.propTypes, {
      classNames: _PropTypes.classNamesShape,
      onEnter: _propTypes.default.func,
      onEntering: _propTypes.default.func,
      onEntered: _propTypes.default.func,
      onExit: _propTypes.default.func,
      onExiting: _propTypes.default.func,
      onExited: _propTypes.default.func
    }) : {};
    var _default = CSSTransition;
    exports.default = _default;
    module.exports = exports.default;
  })(CSSTransition$1, CSSTransition$1.exports);
  var ReplaceTransition = {
    exports: {}
  };
  var TransitionGroup$1 = {
    exports: {}
  };
  var ChildMapping = {};
  ChildMapping.__esModule = true;
  ChildMapping.getChildMapping = getChildMapping;
  ChildMapping.mergeChildMappings = mergeChildMappings;
  ChildMapping.getInitialChildMapping = getInitialChildMapping;
  ChildMapping.getNextChildMapping = getNextChildMapping;
  var _react$1 = React__default["default"];
  function getChildMapping(children, mapFn) {
    var mapper = function mapper(child) {
      return mapFn && (0, _react$1.isValidElement)(child) ? mapFn(child) : child;
    };
    var result = Object.create(null);
    if (children) _react$1.Children.map(children, function (c) {
      return c;
    }).forEach(function (child) {
      result[child.key] = mapper(child);
    });
    return result;
  }
  function mergeChildMappings(prev, next) {
    prev = prev || ({});
    next = next || ({});
    function getValueForKey(key) {
      return (key in next) ? next[key] : prev[key];
    }
    var nextKeysPending = Object.create(null);
    var pendingKeys = [];
    for (var prevKey in prev) {
      if ((prevKey in next)) {
        if (pendingKeys.length) {
          nextKeysPending[prevKey] = pendingKeys;
          pendingKeys = [];
        }
      } else {
        pendingKeys.push(prevKey);
      }
    }
    var i;
    var childMapping = {};
    for (var nextKey in next) {
      if (nextKeysPending[nextKey]) {
        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
          var pendingNextKey = nextKeysPending[nextKey][i];
          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
        }
      }
      childMapping[nextKey] = getValueForKey(nextKey);
    }
    for (i = 0; i < pendingKeys.length; i++) {
      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
    }
    return childMapping;
  }
  function getProp(child, prop, props) {
    return props[prop] != null ? props[prop] : child.props[prop];
  }
  function getInitialChildMapping(props, onExited) {
    return getChildMapping(props.children, function (child) {
      return (0, _react$1.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        appear: getProp(child, 'appear', props),
        enter: getProp(child, 'enter', props),
        exit: getProp(child, 'exit', props)
      });
    });
  }
  function getNextChildMapping(nextProps, prevChildMapping, onExited) {
    var nextChildMapping = getChildMapping(nextProps.children);
    var children = mergeChildMappings(prevChildMapping, nextChildMapping);
    Object.keys(children).forEach(function (key) {
      var child = children[key];
      if (!(0, _react$1.isValidElement)(child)) return;
      var hasPrev = (key in prevChildMapping);
      var hasNext = (key in nextChildMapping);
      var prevChild = prevChildMapping[key];
      var isLeaving = (0, _react$1.isValidElement)(prevChild) && !prevChild.props.in;
      if (hasNext && (!hasPrev || isLeaving)) {
        children[key] = (0, _react$1.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: true,
          exit: getProp(child, 'exit', nextProps),
          enter: getProp(child, 'enter', nextProps)
        });
      } else if (!hasNext && hasPrev && !isLeaving) {
        children[key] = (0, _react$1.cloneElement)(child, {
          in: false
        });
      } else if (hasNext && hasPrev && (0, _react$1.isValidElement)(prevChild)) {
        children[key] = (0, _react$1.cloneElement)(child, {
          onExited: onExited.bind(null, child),
          in: prevChild.props.in,
          exit: getProp(child, 'exit', nextProps),
          enter: getProp(child, 'enter', nextProps)
        });
      }
    });
    return children;
  }
  (function (module, exports) {
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(propTypes.exports);
    var _react = _interopRequireDefault(React__default["default"]);
    var _TransitionGroupContext = _interopRequireDefault(TransitionGroupContext.exports);
    var _ChildMapping = ChildMapping;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign || (function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      });
      return _extends.apply(this, arguments);
    }
    function _assertThisInitialized(self) {
      if (self === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var values = Object.values || (function (obj) {
      return Object.keys(obj).map(function (k) {
        return obj[k];
      });
    });
    var defaultProps = {
      component: 'div',
      childFactory: function childFactory(child) {
        return child;
      }
    };
    var TransitionGroup = (function (_React$Component) {
      _inheritsLoose(TransitionGroup, _React$Component);
      function TransitionGroup(props, context) {
        var _this;
        _this = _React$Component.call(this, props, context) || this;
        var handleExited = _this.handleExited.bind(_assertThisInitialized(_this));
        _this.state = {
          contextValue: {
            isMounting: true
          },
          handleExited: handleExited,
          firstRender: true
        };
        return _this;
      }
      var _proto = TransitionGroup.prototype;
      _proto.componentDidMount = function componentDidMount() {
        this.mounted = true;
        this.setState({
          contextValue: {
            isMounting: false
          }
        });
      };
      _proto.componentWillUnmount = function componentWillUnmount() {
        this.mounted = false;
      };
      TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
        var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
        return {
          children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),
          firstRender: false
        };
      };
      _proto.handleExited = function handleExited(child, node) {
        var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);
        if ((child.key in currentChildMapping)) return;
        if (child.props.onExited) {
          child.props.onExited(node);
        }
        if (this.mounted) {
          this.setState(function (state) {
            var children = _extends({}, state.children);
            delete children[child.key];
            return {
              children: children
            };
          });
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, Component = _this$props.component, childFactory = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
        var contextValue = this.state.contextValue;
        var children = values(this.state.children).map(childFactory);
        delete props.appear;
        delete props.enter;
        delete props.exit;
        if (Component === null) {
          return _react.default.createElement(_TransitionGroupContext.default.Provider, {
            value: contextValue
          }, children);
        }
        return _react.default.createElement(_TransitionGroupContext.default.Provider, {
          value: contextValue
        }, _react.default.createElement(Component, props, children));
      };
      return TransitionGroup;
    })(_react.default.Component);
    TransitionGroup.propTypes = process.env.NODE_ENV !== "production" ? {
      component: _propTypes.default.any,
      children: _propTypes.default.node,
      appear: _propTypes.default.bool,
      enter: _propTypes.default.bool,
      exit: _propTypes.default.bool,
      childFactory: _propTypes.default.func
    } : {};
    TransitionGroup.defaultProps = defaultProps;
    var _default = TransitionGroup;
    exports.default = _default;
    module.exports = exports.default;
  })(TransitionGroup$1, TransitionGroup$1.exports);
  (function (module, exports) {
    exports.__esModule = true;
    exports.default = void 0;
    var _propTypes = _interopRequireDefault(propTypes.exports);
    var _react = _interopRequireDefault(React__default["default"]);
    var _reactDom = _interopRequireDefault(ReactDOM__default["default"]);
    var _TransitionGroup = _interopRequireDefault(TransitionGroup$1.exports);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        default: obj
      };
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null) return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        target[key] = source[key];
      }
      return target;
    }
    function _inheritsLoose(subClass, superClass) {
      subClass.prototype = Object.create(superClass.prototype);
      subClass.prototype.constructor = subClass;
      subClass.__proto__ = superClass;
    }
    var ReplaceTransition = (function (_React$Component) {
      _inheritsLoose(ReplaceTransition, _React$Component);
      function ReplaceTransition() {
        var _this;
        for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
          _args[_key] = arguments[_key];
        }
        _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;
        _this.handleEnter = function () {
          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _this.handleLifecycle('onEnter', 0, args);
        };
        _this.handleEntering = function () {
          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            args[_key3] = arguments[_key3];
          }
          return _this.handleLifecycle('onEntering', 0, args);
        };
        _this.handleEntered = function () {
          for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            args[_key4] = arguments[_key4];
          }
          return _this.handleLifecycle('onEntered', 0, args);
        };
        _this.handleExit = function () {
          for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            args[_key5] = arguments[_key5];
          }
          return _this.handleLifecycle('onExit', 1, args);
        };
        _this.handleExiting = function () {
          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
          }
          return _this.handleLifecycle('onExiting', 1, args);
        };
        _this.handleExited = function () {
          for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
            args[_key7] = arguments[_key7];
          }
          return _this.handleLifecycle('onExited', 1, args);
        };
        return _this;
      }
      var _proto = ReplaceTransition.prototype;
      _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {
        var _child$props;
        var children = this.props.children;
        var child = _react.default.Children.toArray(children)[idx];
        if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);
        if (this.props[handler]) {
          var maybeNode = child.props.nodeRef ? undefined : _reactDom.default.findDOMNode(this);
          this.props[handler](maybeNode);
        }
      };
      _proto.render = function render() {
        var _this$props = this.props, children = _this$props.children, inProp = _this$props.in, props = _objectWithoutPropertiesLoose(_this$props, ["children", "in"]);
        var _React$Children$toArr = _react.default.Children.toArray(children), first = _React$Children$toArr[0], second = _React$Children$toArr[1];
        delete props.onEnter;
        delete props.onEntering;
        delete props.onEntered;
        delete props.onExit;
        delete props.onExiting;
        delete props.onExited;
        return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {
          key: 'first',
          onEnter: this.handleEnter,
          onEntering: this.handleEntering,
          onEntered: this.handleEntered
        }) : _react.default.cloneElement(second, {
          key: 'second',
          onEnter: this.handleExit,
          onEntering: this.handleExiting,
          onEntered: this.handleExited
        }));
      };
      return ReplaceTransition;
    })(_react.default.Component);
    ReplaceTransition.propTypes = process.env.NODE_ENV !== "production" ? {
      in: _propTypes.default.bool.isRequired,
      children: function children(props, propName) {
        if (_react.default.Children.count(props[propName]) !== 2) return new Error("\"" + propName + "\" must be exactly two transition components.");
        return null;
      }
    } : {};
    var _default = ReplaceTransition;
    exports.default = _default;
    module.exports = exports.default;
  })(ReplaceTransition, ReplaceTransition.exports);
  var SwitchTransition$1 = {};
  SwitchTransition$1.__esModule = true;
  SwitchTransition$1.default = SwitchTransition$1.modes = void 0;
  var _react = _interopRequireDefault$1(React__default["default"]);
  var _propTypes = _interopRequireDefault$1(propTypes.exports);
  var _Transition$1 = Transition$1;
  var _TransitionGroupContext = _interopRequireDefault$1(TransitionGroupContext.exports);
  var _leaveRenders, _enterRenders;
  function _interopRequireDefault$1(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  function areChildrenDifferent(oldChildren, newChildren) {
    if (oldChildren === newChildren) return false;
    if (_react.default.isValidElement(oldChildren) && _react.default.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {
      return false;
    }
    return true;
  }
  var modes = {
    out: 'out-in',
    in: 'in-out'
  };
  SwitchTransition$1.modes = modes;
  var callHook = function callHook(element, name, cb) {
    return function () {
      var _element$props;
      element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);
      cb();
    };
  };
  var leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {
    var current = _ref.current, changeState = _ref.changeState;
    return _react.default.cloneElement(current, {
      in: false,
      onExited: callHook(current, 'onExited', function () {
        changeState(_Transition$1.ENTERING, null);
      })
    });
  }, _leaveRenders[modes.in] = function (_ref2) {
    var current = _ref2.current, changeState = _ref2.changeState, children = _ref2.children;
    return [current, _react.default.cloneElement(children, {
      in: true,
      onEntered: callHook(children, 'onEntered', function () {
        changeState(_Transition$1.ENTERING);
      })
    })];
  }, _leaveRenders);
  var enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {
    var children = _ref3.children, changeState = _ref3.changeState;
    return _react.default.cloneElement(children, {
      in: true,
      onEntered: callHook(children, 'onEntered', function () {
        changeState(_Transition$1.ENTERED, _react.default.cloneElement(children, {
          in: true
        }));
      })
    });
  }, _enterRenders[modes.in] = function (_ref4) {
    var current = _ref4.current, children = _ref4.children, changeState = _ref4.changeState;
    return [_react.default.cloneElement(current, {
      in: false,
      onExited: callHook(current, 'onExited', function () {
        changeState(_Transition$1.ENTERED, _react.default.cloneElement(children, {
          in: true
        }));
      })
    }), _react.default.cloneElement(children, {
      in: true
    })];
  }, _enterRenders);
  var SwitchTransition = (function (_React$Component) {
    _inheritsLoose(SwitchTransition, _React$Component);
    function SwitchTransition() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
      _this.state = {
        status: _Transition$1.ENTERED,
        current: null
      };
      _this.appeared = false;
      _this.changeState = function (status, current) {
        if (current === void 0) {
          current = _this.state.current;
        }
        _this.setState({
          status: status,
          current: current
        });
      };
      return _this;
    }
    var _proto = SwitchTransition.prototype;
    _proto.componentDidMount = function componentDidMount() {
      this.appeared = true;
    };
    SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {
      if (props.children == null) {
        return {
          current: null
        };
      }
      if (state.status === _Transition$1.ENTERING && props.mode === modes.in) {
        return {
          status: _Transition$1.ENTERING
        };
      }
      if (state.current && areChildrenDifferent(state.current, props.children)) {
        return {
          status: _Transition$1.EXITING
        };
      }
      return {
        current: _react.default.cloneElement(props.children, {
          in: true
        })
      };
    };
    _proto.render = function render() {
      var _this$props = this.props, children = _this$props.children, mode = _this$props.mode, _this$state = this.state, status = _this$state.status, current = _this$state.current;
      var data = {
        children: children,
        current: current,
        changeState: this.changeState,
        status: status
      };
      var component;
      switch (status) {
        case _Transition$1.ENTERING:
          component = enterRenders[mode](data);
          break;
        case _Transition$1.EXITING:
          component = leaveRenders[mode](data);
          break;
        case _Transition$1.ENTERED:
          component = current;
      }
      return _react.default.createElement(_TransitionGroupContext.default.Provider, {
        value: {
          isMounting: !this.appeared
        }
      }, component);
    };
    return SwitchTransition;
  })(_react.default.Component);
  SwitchTransition.propTypes = process.env.NODE_ENV !== "production" ? {
    mode: _propTypes.default.oneOf([modes.in, modes.out]),
    children: _propTypes.default.oneOfType([_propTypes.default.element.isRequired])
  } : {};
  SwitchTransition.defaultProps = {
    mode: modes.out
  };
  var _default = SwitchTransition;
  SwitchTransition$1.default = _default;
  TransitionGroup = CSSTransition = void 0;
  var _CSSTransition = _interopRequireDefault(CSSTransition$1.exports);
  var CSSTransition = _CSSTransition.default;
  var _ReplaceTransition = _interopRequireDefault(ReplaceTransition.exports);
  _ReplaceTransition.default;
  var _SwitchTransition = _interopRequireDefault(SwitchTransition$1);
  _SwitchTransition.default;
  var _TransitionGroup = _interopRequireDefault(TransitionGroup$1.exports);
  var TransitionGroup = _TransitionGroup.default;
  var _Transition = _interopRequireDefault(Transition$1);
  _Transition.default;
  var _config = _interopRequireDefault(config.exports);
  _config.default;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }
  var PortalContext = React__namespace.createContext({});
  function usePrevious(value) {
    var ref = React__namespace.useRef();
    React__namespace.useEffect(function () {
      ref.current = value;
    }, [value]);
    return ref.current;
  }
  var REACT_CONTEXT_TYPES = {
    blueprintPortalClassName: function (obj, key) {
      if (obj[key] != null && typeof obj[key] !== "string") {
        return new Error(PORTAL_CONTEXT_CLASS_NAME_STRING);
      }
      return undefined;
    }
  };
  function Portal(props, legacyContext) {
    if (legacyContext === void 0) {
      legacyContext = {};
    }
    var context = React__namespace.useContext(PortalContext);
    var _a = React__namespace.useState(false), hasMounted = _a[0], setHasMounted = _a[1];
    var _b = React__namespace.useState(), portalElement = _b[0], setPortalElement = _b[1];
    var createContainerElement = React__namespace.useCallback(function () {
      var container = document.createElement("div");
      container.classList.add(PORTAL);
      maybeAddClass(container.classList, props.className);
      maybeAddClass(container.classList, context.portalClassName);
      var blueprintPortalClassName = legacyContext.blueprintPortalClassName;
      if (blueprintPortalClassName != null && blueprintPortalClassName !== "") {
        console.error(PORTAL_LEGACY_CONTEXT_API);
        maybeAddClass(container.classList, blueprintPortalClassName);
      }
      return container;
    }, [props.className, context.portalClassName]);
    React__namespace.useEffect(function () {
      if (props.container == null) {
        return;
      }
      var newPortalElement = createContainerElement();
      props.container.appendChild(newPortalElement);
      setPortalElement(newPortalElement);
      setHasMounted(true);
      return function () {
        newPortalElement.remove();
        setHasMounted(false);
        setPortalElement(undefined);
      };
    }, [props.container, createContainerElement]);
    React__namespace.useEffect(function () {
      var _a;
      if (hasMounted) {
        (_a = props.onChildrenMount) === null || _a === void 0 ? void 0 : _a.call(props);
      }
    }, [hasMounted, props.onChildrenMount]);
    var prevClassName = usePrevious(props.className);
    React__namespace.useEffect(function () {
      if (portalElement != null) {
        maybeRemoveClass(portalElement.classList, prevClassName);
        maybeAddClass(portalElement.classList, props.className);
      }
    }, [props.className]);
    if (typeof document === "undefined" || !hasMounted || portalElement == null) {
      return null;
    } else {
      return ReactDOM__namespace.createPortal(props.children, portalElement);
    }
  }
  Portal.defaultProps = {
    container: typeof document !== "undefined" ? document.body : undefined
  };
  Portal.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Portal");
  Portal.contextTypes = REACT_CONTEXT_TYPES;
  function maybeRemoveClass(classList, className) {
    if (className != null && className !== "") {
      classList.remove.apply(classList, className.split(" "));
    }
  }
  function maybeAddClass(classList, className) {
    if (className != null && className !== "") {
      classList.add.apply(classList, className.split(" "));
    }
  }
  var Overlay = (function (_super) {
    __extends(Overlay, _super);
    function Overlay() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.isAutoFocusing = false;
      _this.state = {
        hasEverOpened: _this.props.isOpen
      };
      _this.containerElement = null;
      _this.startFocusTrapElement = null;
      _this.endFocusTrapElement = null;
      _this.refHandlers = {
        container: function (ref) {
          return _this.containerElement = ReactDOM.findDOMNode(ref);
        },
        endFocusTrap: function (ref) {
          return _this.endFocusTrapElement = ref;
        },
        startFocusTrap: function (ref) {
          return _this.startFocusTrapElement = ref;
        }
      };
      _this.maybeRenderChild = function (child) {
        if (isFunction$2(child)) {
          child = child();
        }
        if (child == null) {
          return null;
        }
        var decoratedChild = typeof child === "object" ? React__namespace.cloneElement(child, {
          className: classNames(child.props.className, OVERLAY_CONTENT)
        }) : React__namespace.createElement("span", {
          className: OVERLAY_CONTENT
        }, child);
        var _a = _this.props, onOpening = _a.onOpening, onOpened = _a.onOpened, onClosing = _a.onClosing, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;
        return React__namespace.createElement(CSSTransition, {
          classNames: transitionName,
          onEntering: onOpening,
          onEntered: onOpened,
          onExiting: onClosing,
          onExited: _this.handleTransitionExited,
          timeout: transitionDuration,
          addEndListener: _this.handleTransitionAddEnd
        }, decoratedChild);
      };
      _this.handleStartFocusTrapElementFocus = function (e) {
        var _a;
        if (!_this.props.enforceFocus || _this.isAutoFocusing) {
          return;
        }
        if (e.relatedTarget != null && _this.containerElement.contains(e.relatedTarget) && e.relatedTarget !== _this.endFocusTrapElement) {
          (_a = _this.endFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus({
            preventScroll: true
          });
        }
      };
      _this.handleStartFocusTrapElementKeyDown = function (e) {
        var _a;
        if (!_this.props.enforceFocus) {
          return;
        }
        if (e.shiftKey && e.which === TAB) {
          var lastFocusableElement = _this.getKeyboardFocusableElements().pop();
          if (lastFocusableElement != null) {
            lastFocusableElement.focus();
          } else {
            (_a = _this.endFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus({
              preventScroll: true
            });
          }
        }
      };
      _this.handleEndFocusTrapElementFocus = function (e) {
        var _a, _b;
        if (e.relatedTarget != null && _this.containerElement.contains(e.relatedTarget) && e.relatedTarget !== _this.startFocusTrapElement) {
          var firstFocusableElement = _this.getKeyboardFocusableElements().shift();
          if (!_this.isAutoFocusing && firstFocusableElement != null && firstFocusableElement !== e.relatedTarget) {
            firstFocusableElement.focus();
          } else {
            (_a = _this.startFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus({
              preventScroll: true
            });
          }
        } else {
          var lastFocusableElement = _this.getKeyboardFocusableElements().pop();
          if (lastFocusableElement != null) {
            lastFocusableElement.focus();
          } else {
            (_b = _this.startFocusTrapElement) === null || _b === void 0 ? void 0 : _b.focus({
              preventScroll: true
            });
          }
        }
      };
      _this.handleTransitionExited = function (node) {
        var _a, _b;
        if (_this.props.shouldReturnFocusOnClose && _this.lastActiveElementBeforeOpened instanceof HTMLElement) {
          _this.lastActiveElementBeforeOpened.focus();
        }
        (_b = (_a = _this.props).onClosed) === null || _b === void 0 ? void 0 : _b.call(_a, node);
      };
      _this.handleBackdropMouseDown = function (e) {
        var _a;
        var _b = _this.props, backdropProps = _b.backdropProps, canOutsideClickClose = _b.canOutsideClickClose, enforceFocus = _b.enforceFocus, onClose = _b.onClose;
        if (canOutsideClickClose) {
          onClose === null || onClose === void 0 ? void 0 : onClose(e);
        }
        if (enforceFocus) {
          _this.bringFocusInsideOverlay();
        }
        (_a = backdropProps === null || backdropProps === void 0 ? void 0 : backdropProps.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(backdropProps, e);
      };
      _this.handleDocumentClick = function (e) {
        var _a = _this.props, canOutsideClickClose = _a.canOutsideClickClose, isOpen = _a.isOpen, onClose = _a.onClose;
        var eventTarget = e.composed ? e.composedPath()[0] : e.target;
        var stackIndex = Overlay.openStack.indexOf(_this);
        var isClickInThisOverlayOrDescendant = Overlay.openStack.slice(stackIndex).some(function (_a) {
          var elem = _a.containerElement;
          return elem && elem.contains(eventTarget) && !elem.isSameNode(eventTarget);
        });
        if (isOpen && !isClickInThisOverlayOrDescendant && canOutsideClickClose) {
          onClose === null || onClose === void 0 ? void 0 : onClose(e);
        }
      };
      _this.handleDocumentFocus = function (e) {
        var eventTarget = e.composed ? e.composedPath()[0] : e.target;
        if (_this.props.enforceFocus && _this.containerElement != null && eventTarget instanceof Node && !_this.containerElement.contains(eventTarget)) {
          e.preventDefault();
          e.stopImmediatePropagation();
          _this.bringFocusInsideOverlay();
        }
      };
      _this.handleKeyDown = function (e) {
        var _a = _this.props, canEscapeKeyClose = _a.canEscapeKeyClose, onClose = _a.onClose;
        if (e.key === "Escape" && canEscapeKeyClose) {
          onClose === null || onClose === void 0 ? void 0 : onClose(e);
          e.stopPropagation();
          e.preventDefault();
        }
      };
      _this.handleTransitionAddEnd = function () {};
      return _this;
    }
    Overlay.getDerivedStateFromProps = function (_a) {
      var hasEverOpened = _a.isOpen;
      if (hasEverOpened) {
        return {
          hasEverOpened: hasEverOpened
        };
      }
      return null;
    };
    Overlay.prototype.render = function () {
      var _a;
      var _b;
      if (this.props.lazy && !this.state.hasEverOpened) {
        return null;
      }
      var _c = this.props, autoFocus = _c.autoFocus, children = _c.children, className = _c.className, enforceFocus = _c.enforceFocus, usePortal = _c.usePortal, isOpen = _c.isOpen;
      var childrenWithTransitions = isOpen ? (_b = React__namespace.Children.map(children, this.maybeRenderChild)) !== null && _b !== void 0 ? _b : [] : [];
      var maybeBackdrop = this.maybeRenderBackdrop();
      if (maybeBackdrop !== null) {
        childrenWithTransitions.unshift(maybeBackdrop);
      }
      if (isOpen && (autoFocus || enforceFocus) && childrenWithTransitions.length > 0) {
        childrenWithTransitions.unshift(this.renderDummyElement("__start", {
          className: OVERLAY_START_FOCUS_TRAP,
          onFocus: this.handleStartFocusTrapElementFocus,
          onKeyDown: this.handleStartFocusTrapElementKeyDown,
          ref: this.refHandlers.startFocusTrap
        }));
        if (enforceFocus) {
          childrenWithTransitions.push(this.renderDummyElement("__end", {
            className: OVERLAY_END_FOCUS_TRAP,
            onFocus: this.handleEndFocusTrapElementFocus,
            ref: this.refHandlers.endFocusTrap
          }));
        }
      }
      var containerClasses = classNames(OVERLAY, (_a = {}, _a[OVERLAY_OPEN] = isOpen, _a[OVERLAY_INLINE] = !usePortal, _a), className);
      var transitionGroup = React__namespace.createElement(TransitionGroup, {
        appear: true,
        "aria-live": "polite",
        className: containerClasses,
        component: "div",
        onKeyDown: this.handleKeyDown,
        ref: this.refHandlers.container
      }, childrenWithTransitions);
      if (usePortal) {
        return React__namespace.createElement(Portal, {
          className: this.props.portalClassName,
          container: this.props.portalContainer
        }, transitionGroup);
      } else {
        return transitionGroup;
      }
    };
    Overlay.prototype.componentDidMount = function () {
      if (this.props.isOpen) {
        this.overlayWillOpen();
      }
    };
    Overlay.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.isOpen && !this.props.isOpen) {
        this.overlayWillClose();
      } else if (!prevProps.isOpen && this.props.isOpen) {
        this.overlayWillOpen();
      }
    };
    Overlay.prototype.componentWillUnmount = function () {
      this.overlayWillClose();
    };
    Overlay.prototype.bringFocusInsideOverlay = function () {
      var _this = this;
      return this.requestAnimationFrame(function () {
        var _a;
        var activeElement = getActiveElement(_this.containerElement);
        if (_this.containerElement == null || activeElement == null || !_this.props.isOpen) {
          return;
        }
        var isFocusOutsideModal = !_this.containerElement.contains(activeElement);
        if (isFocusOutsideModal) {
          (_a = _this.startFocusTrapElement) === null || _a === void 0 ? void 0 : _a.focus({
            preventScroll: true
          });
          _this.isAutoFocusing = false;
        }
      });
    };
    Overlay.prototype.maybeRenderBackdrop = function () {
      var _a = this.props, backdropClassName = _a.backdropClassName, backdropProps = _a.backdropProps, hasBackdrop = _a.hasBackdrop, isOpen = _a.isOpen, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;
      if (hasBackdrop && isOpen) {
        return React__namespace.createElement(CSSTransition, {
          classNames: transitionName,
          key: "__backdrop",
          timeout: transitionDuration,
          addEndListener: this.handleTransitionAddEnd
        }, React__namespace.createElement("div", __assign({}, backdropProps, {
          className: classNames(OVERLAY_BACKDROP, backdropClassName, backdropProps === null || backdropProps === void 0 ? void 0 : backdropProps.className),
          onMouseDown: this.handleBackdropMouseDown
        })));
      } else {
        return null;
      }
    };
    Overlay.prototype.renderDummyElement = function (key, props) {
      var _a = this.props, transitionDuration = _a.transitionDuration, transitionName = _a.transitionName;
      return React__namespace.createElement(CSSTransition, {
        classNames: transitionName,
        key: key,
        addEndListener: this.handleTransitionAddEnd,
        timeout: transitionDuration,
        unmountOnExit: true
      }, React__namespace.createElement("div", __assign({
        tabIndex: 0
      }, props)));
    };
    Overlay.prototype.getKeyboardFocusableElements = function () {
      var focusableElements = this.containerElement !== null ? Array.from(this.containerElement.querySelectorAll(['a[href]:not([tabindex="-1"])', 'button:not([disabled]):not([tabindex="-1"])', 'details:not([tabindex="-1"])', 'input:not([disabled]):not([tabindex="-1"])', 'select:not([disabled]):not([tabindex="-1"])', 'textarea:not([disabled]):not([tabindex="-1"])', '[tabindex]:not([tabindex="-1"])'].join(","))) : [];
      return focusableElements.filter(function (el) {
        return !el.classList.contains(OVERLAY_START_FOCUS_TRAP) && !el.classList.contains(OVERLAY_END_FOCUS_TRAP);
      });
    };
    Overlay.prototype.overlayWillClose = function () {
      document.removeEventListener("focus", this.handleDocumentFocus, true);
      document.removeEventListener("mousedown", this.handleDocumentClick);
      var openStack = Overlay.openStack;
      var stackIndex = openStack.indexOf(this);
      if (stackIndex !== -1) {
        openStack.splice(stackIndex, 1);
        if (openStack.length > 0) {
          var lastOpenedOverlay = Overlay.getLastOpened();
          if (lastOpenedOverlay.props.autoFocus && lastOpenedOverlay.props.enforceFocus) {
            lastOpenedOverlay.bringFocusInsideOverlay();
            document.addEventListener("focus", lastOpenedOverlay.handleDocumentFocus, true);
          }
        }
        if (openStack.filter(function (o) {
          return o.props.usePortal && o.props.hasBackdrop;
        }).length === 0) {
          document.body.classList.remove(OVERLAY_OPEN);
        }
      }
    };
    Overlay.prototype.overlayWillOpen = function () {
      var getLastOpened = Overlay.getLastOpened, openStack = Overlay.openStack;
      if (openStack.length > 0) {
        document.removeEventListener("focus", getLastOpened().handleDocumentFocus, true);
      }
      openStack.push(this);
      if (this.props.autoFocus) {
        this.isAutoFocusing = true;
        this.bringFocusInsideOverlay();
      }
      if (this.props.enforceFocus) {
        document.addEventListener("focus", this.handleDocumentFocus, true);
      }
      if (this.props.canOutsideClickClose && !this.props.hasBackdrop) {
        document.addEventListener("mousedown", this.handleDocumentClick);
      }
      if (this.props.hasBackdrop && this.props.usePortal) {
        document.body.classList.add(OVERLAY_OPEN);
      }
      this.lastActiveElementBeforeOpened = getActiveElement(this.containerElement);
    };
    Overlay.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Overlay");
    Overlay.defaultProps = {
      autoFocus: true,
      backdropProps: {},
      canEscapeKeyClose: true,
      canOutsideClickClose: true,
      enforceFocus: true,
      hasBackdrop: true,
      isOpen: false,
      lazy: true,
      shouldReturnFocusOnClose: true,
      transitionDuration: 300,
      transitionName: OVERLAY,
      usePortal: true
    };
    Overlay.openStack = [];
    Overlay.getLastOpened = function () {
      return Overlay.openStack[Overlay.openStack.length - 1];
    };
    return Overlay;
  })(AbstractPureComponent2);
  var resizeObservers = [];
  var hasActiveObservations = function () {
    return resizeObservers.some(function (ro) {
      return ro.activeTargets.length > 0;
    });
  };
  var hasSkippedObservations = function () {
    return resizeObservers.some(function (ro) {
      return ro.skippedTargets.length > 0;
    });
  };
  var msg = 'ResizeObserver loop completed with undelivered notifications.';
  var deliverResizeLoopError = function () {
    var event;
    if (typeof ErrorEvent === 'function') {
      event = new ErrorEvent('error', {
        message: msg
      });
    } else {
      event = document.createEvent('Event');
      event.initEvent('error', false, false);
      event.message = msg;
    }
    window.dispatchEvent(event);
  };
  var ResizeObserverBoxOptions;
  (function (ResizeObserverBoxOptions) {
    ResizeObserverBoxOptions["BORDER_BOX"] = "border-box";
    ResizeObserverBoxOptions["CONTENT_BOX"] = "content-box";
    ResizeObserverBoxOptions["DEVICE_PIXEL_CONTENT_BOX"] = "device-pixel-content-box";
  })(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));
  var freeze = function (obj) {
    return Object.freeze(obj);
  };
  var ResizeObserverSize = (function () {
    function ResizeObserverSize(inlineSize, blockSize) {
      this.inlineSize = inlineSize;
      this.blockSize = blockSize;
      freeze(this);
    }
    return ResizeObserverSize;
  })();
  var DOMRectReadOnly = (function () {
    function DOMRectReadOnly(x, y, width, height) {
      this.x = x;
      this.y = y;
      this.width = width;
      this.height = height;
      this.top = this.y;
      this.left = this.x;
      this.bottom = this.top + this.height;
      this.right = this.left + this.width;
      return freeze(this);
    }
    DOMRectReadOnly.prototype.toJSON = function () {
      var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;
      return {
        x: x,
        y: y,
        top: top,
        right: right,
        bottom: bottom,
        left: left,
        width: width,
        height: height
      };
    };
    DOMRectReadOnly.fromRect = function (rectangle) {
      return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);
    };
    return DOMRectReadOnly;
  })();
  var isSVG = function (target) {
    return target instanceof SVGElement && ('getBBox' in target);
  };
  var isHidden = function (target) {
    if (isSVG(target)) {
      var _a = target.getBBox(), width = _a.width, height = _a.height;
      return !width && !height;
    }
    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;
    return !(offsetWidth || offsetHeight || target.getClientRects().length);
  };
  var isElement = function (obj) {
    var _a, _b;
    if (obj instanceof Element) {
      return true;
    }
    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;
    return !!(scope && obj instanceof scope.Element);
  };
  var isReplacedElement = function (target) {
    switch (target.tagName) {
      case 'INPUT':
        if (target.type !== 'image') {
          break;
        }
      case 'VIDEO':
      case 'AUDIO':
      case 'EMBED':
      case 'OBJECT':
      case 'CANVAS':
      case 'IFRAME':
      case 'IMG':
        return true;
    }
    return false;
  };
  var global$1 = typeof window !== 'undefined' ? window : {};
  var cache$1 = new WeakMap();
  var scrollRegexp = /auto|scroll/;
  var verticalRegexp = /^tb|vertical/;
  var IE = (/msie|trident/i).test(global$1.navigator && global$1.navigator.userAgent);
  var parseDimension = function (pixel) {
    return parseFloat(pixel || '0');
  };
  var size = function (inlineSize, blockSize, switchSizes) {
    if (inlineSize === void 0) {
      inlineSize = 0;
    }
    if (blockSize === void 0) {
      blockSize = 0;
    }
    if (switchSizes === void 0) {
      switchSizes = false;
    }
    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);
  };
  var zeroBoxes = freeze({
    devicePixelContentBoxSize: size(),
    borderBoxSize: size(),
    contentBoxSize: size(),
    contentRect: new DOMRectReadOnly(0, 0, 0, 0)
  });
  var calculateBoxSizes = function (target, forceRecalculation) {
    if (forceRecalculation === void 0) {
      forceRecalculation = false;
    }
    if (cache$1.has(target) && !forceRecalculation) {
      return cache$1.get(target);
    }
    if (isHidden(target)) {
      cache$1.set(target, zeroBoxes);
      return zeroBoxes;
    }
    var cs = getComputedStyle(target);
    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();
    var removePadding = !IE && cs.boxSizing === 'border-box';
    var switchSizes = verticalRegexp.test(cs.writingMode || '');
    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');
    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');
    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);
    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);
    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);
    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);
    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);
    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);
    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);
    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);
    var horizontalPadding = paddingLeft + paddingRight;
    var verticalPadding = paddingTop + paddingBottom;
    var horizontalBorderArea = borderLeft + borderRight;
    var verticalBorderArea = borderTop + borderBottom;
    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;
    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;
    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;
    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;
    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;
    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;
    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;
    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;
    var boxes = freeze({
      devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),
      borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),
      contentBoxSize: size(contentWidth, contentHeight, switchSizes),
      contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)
    });
    cache$1.set(target, boxes);
    return boxes;
  };
  var calculateBoxSize = function (target, observedBox, forceRecalculation) {
    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;
    switch (observedBox) {
      case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:
        return devicePixelContentBoxSize;
      case ResizeObserverBoxOptions.BORDER_BOX:
        return borderBoxSize;
      default:
        return contentBoxSize;
    }
  };
  var ResizeObserverEntry = (function () {
    function ResizeObserverEntry(target) {
      var boxes = calculateBoxSizes(target);
      this.target = target;
      this.contentRect = boxes.contentRect;
      this.borderBoxSize = freeze([boxes.borderBoxSize]);
      this.contentBoxSize = freeze([boxes.contentBoxSize]);
      this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);
    }
    return ResizeObserverEntry;
  })();
  var calculateDepthForNode = function (node) {
    if (isHidden(node)) {
      return Infinity;
    }
    var depth = 0;
    var parent = node.parentNode;
    while (parent) {
      depth += 1;
      parent = parent.parentNode;
    }
    return depth;
  };
  var broadcastActiveObservations = function () {
    var shallowestDepth = Infinity;
    var callbacks = [];
    resizeObservers.forEach(function processObserver(ro) {
      if (ro.activeTargets.length === 0) {
        return;
      }
      var entries = [];
      ro.activeTargets.forEach(function processTarget(ot) {
        var entry = new ResizeObserverEntry(ot.target);
        var targetDepth = calculateDepthForNode(ot.target);
        entries.push(entry);
        ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);
        if (targetDepth < shallowestDepth) {
          shallowestDepth = targetDepth;
        }
      });
      callbacks.push(function resizeObserverCallback() {
        ro.callback.call(ro.observer, entries, ro.observer);
      });
      ro.activeTargets.splice(0, ro.activeTargets.length);
    });
    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {
      var callback = callbacks_1[_i];
      callback();
    }
    return shallowestDepth;
  };
  var gatherActiveObservationsAtDepth = function (depth) {
    resizeObservers.forEach(function processObserver(ro) {
      ro.activeTargets.splice(0, ro.activeTargets.length);
      ro.skippedTargets.splice(0, ro.skippedTargets.length);
      ro.observationTargets.forEach(function processTarget(ot) {
        if (ot.isActive()) {
          if (calculateDepthForNode(ot.target) > depth) {
            ro.activeTargets.push(ot);
          } else {
            ro.skippedTargets.push(ot);
          }
        }
      });
    });
  };
  var process$1 = function () {
    var depth = 0;
    gatherActiveObservationsAtDepth(depth);
    while (hasActiveObservations()) {
      depth = broadcastActiveObservations();
      gatherActiveObservationsAtDepth(depth);
    }
    if (hasSkippedObservations()) {
      deliverResizeLoopError();
    }
    return depth > 0;
  };
  var trigger;
  var callbacks = [];
  var notify = function () {
    return callbacks.splice(0).forEach(function (cb) {
      return cb();
    });
  };
  var queueMicroTask = function (callback) {
    if (!trigger) {
      var toggle_1 = 0;
      var el_1 = document.createTextNode('');
      var config = {
        characterData: true
      };
      new MutationObserver(function () {
        return notify();
      }).observe(el_1, config);
      trigger = function () {
        el_1.textContent = "" + (toggle_1 ? toggle_1-- : toggle_1++);
      };
    }
    callbacks.push(callback);
    trigger();
  };
  var queueResizeObserver = function (cb) {
    queueMicroTask(function ResizeObserver() {
      requestAnimationFrame(cb);
    });
  };
  var watching = 0;
  var isWatching = function () {
    return !!watching;
  };
  var CATCH_PERIOD = 250;
  var observerConfig = {
    attributes: true,
    characterData: true,
    childList: true,
    subtree: true
  };
  var events = ['resize', 'load', 'transitionend', 'animationend', 'animationstart', 'animationiteration', 'keyup', 'keydown', 'mouseup', 'mousedown', 'mouseover', 'mouseout', 'blur', 'focus'];
  var time = function (timeout) {
    if (timeout === void 0) {
      timeout = 0;
    }
    return Date.now() + timeout;
  };
  var scheduled = false;
  var Scheduler = (function () {
    function Scheduler() {
      var _this = this;
      this.stopped = true;
      this.listener = function () {
        return _this.schedule();
      };
    }
    Scheduler.prototype.run = function (timeout) {
      var _this = this;
      if (timeout === void 0) {
        timeout = CATCH_PERIOD;
      }
      if (scheduled) {
        return;
      }
      scheduled = true;
      var until = time(timeout);
      queueResizeObserver(function () {
        var elementsHaveResized = false;
        try {
          elementsHaveResized = process$1();
        } finally {
          scheduled = false;
          timeout = until - time();
          if (!isWatching()) {
            return;
          }
          if (elementsHaveResized) {
            _this.run(1000);
          } else if (timeout > 0) {
            _this.run(timeout);
          } else {
            _this.start();
          }
        }
      });
    };
    Scheduler.prototype.schedule = function () {
      this.stop();
      this.run();
    };
    Scheduler.prototype.observe = function () {
      var _this = this;
      var cb = function () {
        return _this.observer && _this.observer.observe(document.body, observerConfig);
      };
      document.body ? cb() : global$1.addEventListener('DOMContentLoaded', cb);
    };
    Scheduler.prototype.start = function () {
      var _this = this;
      if (this.stopped) {
        this.stopped = false;
        this.observer = new MutationObserver(this.listener);
        this.observe();
        events.forEach(function (name) {
          return global$1.addEventListener(name, _this.listener, true);
        });
      }
    };
    Scheduler.prototype.stop = function () {
      var _this = this;
      if (!this.stopped) {
        this.observer && this.observer.disconnect();
        events.forEach(function (name) {
          return global$1.removeEventListener(name, _this.listener, true);
        });
        this.stopped = true;
      }
    };
    return Scheduler;
  })();
  var scheduler = new Scheduler();
  var updateCount = function (n) {
    !watching && n > 0 && scheduler.start();
    watching += n;
    !watching && scheduler.stop();
  };
  var skipNotifyOnElement = function (target) {
    return !isSVG(target) && !isReplacedElement(target) && getComputedStyle(target).display === 'inline';
  };
  var ResizeObservation = (function () {
    function ResizeObservation(target, observedBox) {
      this.target = target;
      this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;
      this.lastReportedSize = {
        inlineSize: 0,
        blockSize: 0
      };
    }
    ResizeObservation.prototype.isActive = function () {
      var size = calculateBoxSize(this.target, this.observedBox, true);
      if (skipNotifyOnElement(this.target)) {
        this.lastReportedSize = size;
      }
      if (this.lastReportedSize.inlineSize !== size.inlineSize || this.lastReportedSize.blockSize !== size.blockSize) {
        return true;
      }
      return false;
    };
    return ResizeObservation;
  })();
  var ResizeObserverDetail = (function () {
    function ResizeObserverDetail(resizeObserver, callback) {
      this.activeTargets = [];
      this.skippedTargets = [];
      this.observationTargets = [];
      this.observer = resizeObserver;
      this.callback = callback;
    }
    return ResizeObserverDetail;
  })();
  var observerMap = new WeakMap();
  var getObservationIndex = function (observationTargets, target) {
    for (var i = 0; i < observationTargets.length; i += 1) {
      if (observationTargets[i].target === target) {
        return i;
      }
    }
    return -1;
  };
  var ResizeObserverController = (function () {
    function ResizeObserverController() {}
    ResizeObserverController.connect = function (resizeObserver, callback) {
      var detail = new ResizeObserverDetail(resizeObserver, callback);
      observerMap.set(resizeObserver, detail);
    };
    ResizeObserverController.observe = function (resizeObserver, target, options) {
      var detail = observerMap.get(resizeObserver);
      var firstObservation = detail.observationTargets.length === 0;
      if (getObservationIndex(detail.observationTargets, target) < 0) {
        firstObservation && resizeObservers.push(detail);
        detail.observationTargets.push(new ResizeObservation(target, options && options.box));
        updateCount(1);
        scheduler.schedule();
      }
    };
    ResizeObserverController.unobserve = function (resizeObserver, target) {
      var detail = observerMap.get(resizeObserver);
      var index = getObservationIndex(detail.observationTargets, target);
      var lastObservation = detail.observationTargets.length === 1;
      if (index >= 0) {
        lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);
        detail.observationTargets.splice(index, 1);
        updateCount(-1);
      }
    };
    ResizeObserverController.disconnect = function (resizeObserver) {
      var _this = this;
      var detail = observerMap.get(resizeObserver);
      detail.observationTargets.slice().forEach(function (ot) {
        return _this.unobserve(resizeObserver, ot.target);
      });
      detail.activeTargets.splice(0, detail.activeTargets.length);
    };
    return ResizeObserverController;
  })();
  var ResizeObserver$1 = (function () {
    function ResizeObserver(callback) {
      if (arguments.length === 0) {
        throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
      }
      if (typeof callback !== 'function') {
        throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
      }
      ResizeObserverController.connect(this, callback);
    }
    ResizeObserver.prototype.observe = function (target, options) {
      if (arguments.length === 0) {
        throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
      }
      if (!isElement(target)) {
        throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
      }
      ResizeObserverController.observe(this, target, options);
    };
    ResizeObserver.prototype.unobserve = function (target) {
      if (arguments.length === 0) {
        throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
      }
      if (!isElement(target)) {
        throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
      }
      ResizeObserverController.unobserve(this, target);
    };
    ResizeObserver.prototype.disconnect = function () {
      ResizeObserverController.disconnect(this);
    };
    ResizeObserver.toString = function () {
      return 'function ResizeObserver () { [polyfill code] }';
    };
    return ResizeObserver;
  })();
  var ResizeSensor = (function (_super) {
    __extends(ResizeSensor, _super);
    function ResizeSensor() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.element = null;
      _this.observer = new ResizeObserver$1(function (entries) {
        var _a, _b;
        return (_b = (_a = _this.props).onResize) === null || _b === void 0 ? void 0 : _b.call(_a, entries);
      });
      return _this;
    }
    ResizeSensor.prototype.render = function () {
      return React__namespace.Children.only(this.props.children);
    };
    ResizeSensor.prototype.componentDidMount = function () {
      this.observeElement();
    };
    ResizeSensor.prototype.componentDidUpdate = function (prevProps) {
      this.observeElement(this.props.observeParents !== prevProps.observeParents);
    };
    ResizeSensor.prototype.componentWillUnmount = function () {
      this.observer.disconnect();
      this.element = null;
    };
    ResizeSensor.prototype.observeElement = function (force) {
      if (force === void 0) {
        force = false;
      }
      var element = this.getElement();
      if (!(element instanceof Element)) {
        this.observer.disconnect();
        return;
      }
      if (element === this.element && !force) {
        return;
      } else {
        this.observer.disconnect();
        this.element = element;
      }
      this.observer.observe(element);
      if (this.props.observeParents) {
        var parent_1 = element.parentElement;
        while (parent_1 != null) {
          this.observer.observe(parent_1);
          parent_1 = parent_1.parentElement;
        }
      }
    };
    ResizeSensor.prototype.getElement = function () {
      try {
        return ReactDOM.findDOMNode(this);
      } catch (_a) {
        return null;
      }
    };
    ResizeSensor.displayName = ("").concat(DISPLAYNAME_PREFIX, ".ResizeSensor");
    return ResizeSensor;
  })(AbstractPureComponent2);
  var Tooltip = (function (_super) {
    __extends(Tooltip, _super);
    function Tooltip() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.popover = null;
      return _this;
    }
    Tooltip.prototype.render = function () {
      var _a;
      var _this = this;
      var _b = this.props, children = _b.children, intent = _b.intent, popoverClassName = _b.popoverClassName, restProps = __rest(_b, ["children", "intent", "popoverClassName"]);
      var classes = classNames(TOOLTIP, (_a = {}, _a[MINIMAL] = this.props.minimal, _a), intentClass(intent), popoverClassName);
      return React__namespace.createElement(Popover, __assign({
        interactionKind: PopoverInteractionKind.HOVER_TARGET_ONLY,
        modifiers: {
          arrow: {
            enabled: !this.props.minimal
          }
        }
      }, restProps, {
        autoFocus: false,
        canEscapeKeyClose: false,
        enforceFocus: false,
        lazy: true,
        popoverClassName: classes,
        portalContainer: this.props.portalContainer,
        ref: function (ref) {
          return _this.popover = ref;
        }
      }), children);
    };
    Tooltip.prototype.reposition = function () {
      if (this.popover != null) {
        this.popover.reposition();
      }
    };
    Tooltip.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Tooltip");
    Tooltip.defaultProps = {
      hoverCloseDelay: 0,
      hoverOpenDelay: 100,
      minimal: false,
      transitionDuration: 100
    };
    return Tooltip;
  })(AbstractPureComponent2);
  function getPosition(placement) {
    return placement.split("-")[0];
  }
  function isVerticalPosition(side) {
    return ["left", "right"].indexOf(side) !== -1;
  }
  function getOppositePosition(side) {
    switch (side) {
      case "top":
        return "bottom";
      case "left":
        return "right";
      case "bottom":
        return "top";
      default:
        return "left";
    }
  }
  function getAlignment(placement) {
    var align = placement.split("-")[1];
    switch (align) {
      case "start":
        return "left";
      case "end":
        return "right";
      default:
        return "center";
    }
  }
  function getTransformOrigin(data) {
    var position = getPosition(data.placement);
    if (data.arrowElement == null) {
      return isVerticalPosition(position) ? ("").concat(getOppositePosition(position), " ").concat(getAlignment(position)) : ("").concat(getAlignment(position), " ").concat(getOppositePosition(position));
    } else {
      var arrowSizeShift = data.arrowElement.clientHeight / 2;
      var arrow = data.offsets.arrow;
      return isVerticalPosition(position) ? ("").concat(getOppositePosition(position), " ").concat(arrow.top + arrowSizeShift, "px") : ("").concat(arrow.left + arrowSizeShift, "px ").concat(getOppositePosition(position));
    }
  }
  var ARROW_SPACING = 4;
  var arrowOffsetModifier = function (data) {
    if (data.arrowElement == null) {
      return data;
    }
    var arrowSize = data.arrowElement.clientWidth;
    var position = getPosition(data.placement);
    var isVertical = isVerticalPosition(position);
    var len = isVertical ? "width" : "height";
    var offsetSide = isVertical ? "left" : "top";
    var arrowOffsetSize = Math.round(arrowSize / 2 / Math.sqrt(2));
    if (position === "top" || position === "left") {
      data.offsets.popper[offsetSide] -= arrowOffsetSize + ARROW_SPACING;
      data.offsets.arrow[offsetSide] = data.offsets.popper[len] - arrowSize + arrowOffsetSize;
    } else {
      data.offsets.popper[offsetSide] += arrowOffsetSize + ARROW_SPACING;
      data.offsets.arrow[offsetSide] = -arrowOffsetSize;
    }
    return data;
  };
  var SVG_SHADOW_PATH = "M8.11 6.302c1.015-.936 1.887-2.922 1.887-4.297v26c0-1.378" + "-.868-3.357-1.888-4.297L.925 17.09c-1.237-1.14-1.233-3.034 0-4.17L8.11 6.302z";
  var SVG_ARROW_PATH = "M8.787 7.036c1.22-1.125 2.21-3.376 2.21-5.03V0v30-2.005" + "c0-1.654-.983-3.9-2.21-5.03l-7.183-6.616c-.81-.746-.802-1.96 0-2.7l7.183-6.614z";
  function getArrowAngle(placement) {
    if (placement == null) {
      return 0;
    }
    switch (getPosition(placement)) {
      case "top":
        return -90;
      case "left":
        return 180;
      case "bottom":
        return 90;
      default:
        return 0;
    }
  }
  var PopoverArrow = function (_a) {
    var _b = _a.arrowProps, ref = _b.ref, style = _b.style, placement = _a.placement;
    return React__namespace.createElement("div", {
      className: POPOVER_ARROW,
      ref: ref,
      style: style.left == null || isNaN(+style.left) ? {} : style
    }, React__namespace.createElement("svg", {
      viewBox: "0 0 30 30",
      style: {
        transform: ("rotate(").concat(getArrowAngle(placement), "deg)")
      }
    }, React__namespace.createElement("path", {
      className: POPOVER_ARROW + "-border",
      d: SVG_SHADOW_PATH
    }), React__namespace.createElement("path", {
      className: POPOVER_ARROW + "-fill",
      d: SVG_ARROW_PATH
    })));
  };
  PopoverArrow.displayName = ("").concat(DISPLAYNAME_PREFIX, ".PopoverArrow");
  function positionToPlacement(position) {
    switch (position) {
      case Position.TOP_LEFT:
        return "top-start";
      case Position.TOP:
        return "top";
      case Position.TOP_RIGHT:
        return "top-end";
      case Position.RIGHT_TOP:
        return "right-start";
      case Position.RIGHT:
        return "right";
      case Position.RIGHT_BOTTOM:
        return "right-end";
      case Position.BOTTOM_RIGHT:
        return "bottom-end";
      case Position.BOTTOM:
        return "bottom";
      case Position.BOTTOM_LEFT:
        return "bottom-start";
      case Position.LEFT_BOTTOM:
        return "left-end";
      case Position.LEFT:
        return "left";
      case Position.LEFT_TOP:
        return "left-start";
      case "auto":
      case "auto-start":
      case "auto-end":
        return position;
      default:
        return assertNever(position);
    }
  }
  function assertNever(x) {
    throw new Error("Unexpected position: " + x);
  }
  var PopoverInteractionKind = {
    CLICK: "click",
    CLICK_TARGET_ONLY: "click-target",
    HOVER: "hover",
    HOVER_TARGET_ONLY: "hover-target"
  };
  var Popover = (function (_super) {
    __extends(Popover, _super);
    function Popover() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.popoverRef = React__namespace.createRef();
      _this.popoverElement = null;
      _this.targetElement = null;
      _this.state = {
        hasDarkParent: false,
        isOpen: _this.getIsOpen(_this.props),
        transformOrigin: ""
      };
      _this.isMouseInTargetOrPopover = false;
      _this.lostFocusOnSamePage = true;
      _this.handlePopoverRef = refHandler(_this, "popoverElement", _this.props.popoverRef);
      _this.handleTargetRef = function (ref) {
        return _this.targetElement = ref;
      };
      _this.reposition = function () {
        var _a;
        return (_a = _this.popperScheduleUpdate) === null || _a === void 0 ? void 0 : _a.call(_this);
      };
      _this.renderPopover = function (popperProps) {
        var _a;
        var _b = _this.props, interactionKind = _b.interactionKind, usePortal = _b.usePortal;
        var transformOrigin = _this.state.transformOrigin;
        _this.popperScheduleUpdate = popperProps.scheduleUpdate;
        var popoverHandlers = {
          onClick: _this.handlePopoverClick
        };
        if (interactionKind === PopoverInteractionKind.HOVER || !usePortal && interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY) {
          popoverHandlers.onMouseEnter = _this.handleMouseEnter;
          popoverHandlers.onMouseLeave = _this.handleMouseLeave;
        }
        var popoverClasses = classNames(POPOVER, (_a = {}, _a[DARK] = _this.props.inheritDarkTheme && _this.state.hasDarkParent, _a[MINIMAL] = _this.props.minimal, _a[POPOVER_CAPTURING_DISMISS] = _this.props.captureDismiss, _a[POPOVER_OUT_OF_BOUNDARIES] = popperProps.outOfBoundaries === true, _a), _this.props.popoverClassName);
        return React__namespace.createElement("div", {
          className: TRANSITION_CONTAINER,
          ref: popperProps.ref,
          style: popperProps.style
        }, React__namespace.createElement(ResizeSensor, {
          onResize: _this.reposition
        }, React__namespace.createElement("div", __assign({
          className: popoverClasses,
          style: {
            transformOrigin: transformOrigin
          },
          ref: _this.popoverRef
        }, popoverHandlers), _this.isArrowEnabled() && React__namespace.createElement(PopoverArrow, {
          arrowProps: popperProps.arrowProps,
          placement: popperProps.placement
        }), React__namespace.createElement("div", {
          className: POPOVER_CONTENT
        }, _this.understandChildren().content))));
      };
      _this.renderTarget = function (referenceProps) {
        var _a, _b;
        var _c = _this.props, fill = _c.fill, openOnTargetFocus = _c.openOnTargetFocus, targetClassName = _c.targetClassName, _d = _c.targetProps, targetProps = _d === void 0 ? {} : _d;
        var isOpen = _this.state.isOpen;
        var isControlled = _this.isControlled();
        var isHoverInteractionKind = _this.isHoverInteractionKind();
        var targetTagName = _this.props.targetTagName;
        if (fill) {
          targetTagName = "div";
        }
        var finalTargetProps = isHoverInteractionKind ? {
          onBlur: _this.handleTargetBlur,
          onFocus: _this.handleTargetFocus,
          onMouseEnter: _this.handleMouseEnter,
          onMouseLeave: _this.handleMouseLeave
        } : {
          onClick: _this.handleTargetClick
        };
        finalTargetProps["aria-haspopup"] = "true";
        finalTargetProps.className = classNames(POPOVER_TARGET, (_a = {}, _a[POPOVER_OPEN] = isOpen, _a), targetProps.className, targetClassName);
        finalTargetProps.ref = referenceProps.ref;
        var rawTarget = ensureElement(_this.understandChildren().target);
        if (rawTarget === undefined) {
          return null;
        }
        var rawTabIndex = rawTarget.props.tabIndex;
        var tabIndex = rawTabIndex == null && openOnTargetFocus && isHoverInteractionKind ? 0 : rawTabIndex;
        var clonedTarget = React__namespace.cloneElement(rawTarget, {
          className: classNames(rawTarget.props.className, (_b = {}, _b[ACTIVE] = isOpen && !isControlled && !isHoverInteractionKind, _b)),
          disabled: isOpen && isElementOfType(rawTarget, Tooltip) ? true : rawTarget.props.disabled,
          tabIndex: tabIndex
        });
        var target = React__namespace.createElement(targetTagName, __assign(__assign({}, targetProps), finalTargetProps), clonedTarget);
        return React__namespace.createElement(ResizeSensor, {
          onResize: _this.reposition
        }, target);
      };
      _this.isControlled = function () {
        return _this.props.isOpen !== undefined;
      };
      _this.handleTargetFocus = function (e) {
        var _a, _b;
        if (_this.props.openOnTargetFocus && _this.isHoverInteractionKind()) {
          if (e.relatedTarget == null && !_this.lostFocusOnSamePage) {
            return;
          }
          _this.handleMouseEnter(e);
        }
        (_b = (_a = _this.props.targetProps) === null || _a === void 0 ? void 0 : _a.onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handleTargetBlur = function (e) {
        var _a, _b;
        if (_this.props.openOnTargetFocus && _this.isHoverInteractionKind()) {
          if (e.relatedTarget != null && !_this.isElementInPopover(e.relatedTarget)) {
            _this.handleMouseLeave(e);
          }
        }
        _this.lostFocusOnSamePage = e.relatedTarget != null;
        (_b = (_a = _this.props.targetProps) === null || _a === void 0 ? void 0 : _a.onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handleMouseEnter = function (e) {
        var _a, _b;
        _this.isMouseInTargetOrPopover = true;
        if (!_this.props.usePortal && _this.isElementInPopover(e.target) && _this.props.interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY && !_this.props.openOnTargetFocus) {
          _this.handleMouseLeave(e);
        } else if (!_this.props.disabled) {
          _this.setOpenState(true, e, _this.props.hoverOpenDelay);
        }
        (_b = (_a = _this.props.targetProps) === null || _a === void 0 ? void 0 : _a.onMouseEnter) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handleMouseLeave = function (e) {
        var _a, _b;
        _this.isMouseInTargetOrPopover = false;
        _this.setTimeout(function () {
          if (_this.isMouseInTargetOrPopover) {
            return;
          }
          _this.setOpenState(false, e, _this.props.hoverCloseDelay);
        });
        (_b = (_a = _this.props.targetProps) === null || _a === void 0 ? void 0 : _a.onMouseLeave) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handlePopoverClick = function (e) {
        var eventTarget = e.target;
        var eventPopover = eventTarget.closest((".").concat(POPOVER));
        var isEventFromSelf = eventPopover === _this.popoverRef.current;
        var isEventPopoverCapturing = eventPopover === null || eventPopover === void 0 ? void 0 : eventPopover.classList.contains(POPOVER_CAPTURING_DISMISS);
        var dismissElement = eventTarget.closest((".").concat(POPOVER_DISMISS, ", .").concat(POPOVER_DISMISS_OVERRIDE));
        var shouldDismiss = dismissElement != null && dismissElement.classList.contains(POPOVER_DISMISS);
        var isDisabled = eventTarget.closest((":disabled, .").concat(DISABLED)) != null;
        if (shouldDismiss && !isDisabled && (!isEventPopoverCapturing || isEventFromSelf)) {
          _this.setOpenState(false, e);
        }
      };
      _this.handleOverlayClose = function (e) {
        if (_this.targetElement === null || e === undefined) {
          return;
        }
        var eventTarget = e.target;
        if (!elementIsOrContains(_this.targetElement, eventTarget) || e.nativeEvent instanceof KeyboardEvent) {
          _this.setOpenState(false, e);
        }
      };
      _this.handleTargetClick = function (e) {
        var _a, _b;
        if (!_this.props.disabled && !_this.isElementInPopover(e.target)) {
          if (_this.props.isOpen == null) {
            _this.setState(function (prevState) {
              return {
                isOpen: !prevState.isOpen
              };
            });
          } else {
            _this.setOpenState(!_this.props.isOpen, e);
          }
        }
        (_b = (_a = _this.props.targetProps) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.updatePopoverState = function (data) {
        _this.setState({
          transformOrigin: getTransformOrigin(data)
        });
        return data;
      };
      return _this;
    }
    Popover.prototype.render = function () {
      var _a;
      var _b;
      var _c = this.props, className = _c.className, disabled = _c.disabled, fill = _c.fill, placement = _c.placement, _d = _c.position, position = _d === void 0 ? "auto" : _d, shouldReturnFocusOnClose = _c.shouldReturnFocusOnClose;
      var isOpen = this.state.isOpen;
      var wrapperTagName = this.props.wrapperTagName;
      if (fill) {
        wrapperTagName = "div";
      }
      var isContentEmpty = ensureElement(this.understandChildren().content) == null;
      if (isContentEmpty && !disabled && isOpen !== false && !isNodeEnv("production")) {
        console.warn(POPOVER_WARN_EMPTY_CONTENT);
      }
      var wrapperClasses = classNames(POPOVER_WRAPPER, className, (_a = {}, _a[FILL] = fill, _a));
      var defaultAutoFocus = this.isHoverInteractionKind() ? false : undefined;
      var wrapper = React__namespace.createElement(wrapperTagName, {
        className: wrapperClasses
      }, React__namespace.createElement(Reference, {
        innerRef: this.handleTargetRef
      }, this.renderTarget), React__namespace.createElement(Overlay, {
        autoFocus: (_b = this.props.autoFocus) !== null && _b !== void 0 ? _b : defaultAutoFocus,
        backdropClassName: POPOVER_BACKDROP,
        backdropProps: this.props.backdropProps,
        canEscapeKeyClose: this.props.canEscapeKeyClose,
        canOutsideClickClose: this.props.interactionKind === PopoverInteractionKind.CLICK,
        className: this.props.portalClassName,
        enforceFocus: this.props.enforceFocus,
        hasBackdrop: this.props.hasBackdrop,
        isOpen: isOpen && !isContentEmpty,
        onClose: this.handleOverlayClose,
        onClosed: this.props.onClosed,
        onClosing: this.props.onClosing,
        onOpened: this.props.onOpened,
        onOpening: this.props.onOpening,
        transitionDuration: this.props.transitionDuration,
        transitionName: POPOVER,
        usePortal: this.props.usePortal,
        portalContainer: this.props.portalContainer,
        shouldReturnFocusOnClose: this.isHoverInteractionKind() ? false : shouldReturnFocusOnClose
      }, React__namespace.createElement(Popper, {
        innerRef: this.handlePopoverRef,
        placement: placement !== null && placement !== void 0 ? placement : positionToPlacement(position),
        modifiers: this.getPopperModifiers()
      }, this.renderPopover)));
      return React__namespace.createElement(Manager, null, wrapper);
    };
    Popover.prototype.componentDidMount = function () {
      this.updateDarkParent();
    };
    Popover.prototype.componentDidUpdate = function (prevProps, prevState) {
      _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
      if (prevProps.popoverRef !== this.props.popoverRef) {
        setRef$1(prevProps.popoverRef, null);
        this.handlePopoverRef = refHandler(this, "popoverElement", this.props.popoverRef);
        setRef$1(this.props.popoverRef, this.popoverElement);
      }
      this.updateDarkParent();
      var nextIsOpen = this.getIsOpen(this.props);
      if (this.props.isOpen != null && nextIsOpen !== this.state.isOpen) {
        this.setOpenState(nextIsOpen);
        this.setState({
          isOpen: nextIsOpen
        });
      } else if (this.props.disabled && this.state.isOpen && this.props.isOpen == null) {
        this.setOpenState(false);
      }
    };
    Popover.prototype.validateProps = function (props) {
      if (props.isOpen == null && props.onInteraction != null) {
        console.warn(POPOVER_WARN_UNCONTROLLED_ONINTERACTION);
      }
      if (props.hasBackdrop && !props.usePortal) {
        console.warn(POPOVER_WARN_HAS_BACKDROP_INLINE);
      }
      if (props.hasBackdrop && props.interactionKind !== PopoverInteractionKind.CLICK) {
        console.error(POPOVER_HAS_BACKDROP_INTERACTION);
      }
      if (props.placement !== undefined && props.position !== undefined) {
        console.warn(POPOVER_WARN_PLACEMENT_AND_POSITION_MUTEX);
      }
      var childrenCount = React__namespace.Children.count(props.children);
      var hasContentProp = props.content !== undefined;
      var hasTargetProp = props.target !== undefined;
      if (childrenCount === 0 && !hasTargetProp) {
        console.error(POPOVER_REQUIRES_TARGET);
      }
      if (childrenCount > 2) {
        console.warn(POPOVER_WARN_TOO_MANY_CHILDREN);
      }
      if (childrenCount > 0 && hasTargetProp) {
        console.warn(POPOVER_WARN_DOUBLE_TARGET);
      }
      if (childrenCount === 2 && hasContentProp) {
        console.warn(POPOVER_WARN_DOUBLE_CONTENT);
      }
    };
    Popover.prototype.updateDarkParent = function () {
      if (this.props.usePortal && this.state.isOpen) {
        var hasDarkParent = this.targetElement != null && this.targetElement.closest((".").concat(DARK)) != null;
        this.setState({
          hasDarkParent: hasDarkParent
        });
      }
    };
    Popover.prototype.understandChildren = function () {
      var _a = this.props, children = _a.children, contentProp = _a.content, targetProp = _a.target;
      var _b = React__namespace.Children.toArray(children), targetChild = _b[0], contentChild = _b[1];
      return {
        content: contentChild == null ? contentProp : contentChild,
        target: targetChild == null ? targetProp : targetChild
      };
    };
    Popover.prototype.getIsOpen = function (props) {
      if (props.disabled) {
        return false;
      } else if (props.isOpen != null) {
        return props.isOpen;
      } else {
        return props.defaultIsOpen;
      }
    };
    Popover.prototype.getPopperModifiers = function () {
      var _a = this.props, boundary = _a.boundary, modifiers = _a.modifiers;
      var _b = modifiers, _c = _b.flip, flip = _c === void 0 ? {} : _c, _d = _b.preventOverflow, preventOverflow = _d === void 0 ? {} : _d;
      return __assign(__assign({}, modifiers), {
        arrowOffset: {
          enabled: this.isArrowEnabled(),
          fn: arrowOffsetModifier,
          order: 510
        },
        flip: __assign({
          boundariesElement: boundary
        }, flip),
        preventOverflow: __assign({
          boundariesElement: boundary
        }, preventOverflow),
        updatePopoverState: {
          enabled: true,
          fn: this.updatePopoverState,
          order: 900
        }
      });
    };
    Popover.prototype.setOpenState = function (isOpen, e, timeout) {
      var _this = this;
      var _a, _b, _c, _d, _e;
      (_a = this.cancelOpenTimeout) === null || _a === void 0 ? void 0 : _a.call(this);
      if (timeout !== undefined && timeout > 0) {
        this.cancelOpenTimeout = this.setTimeout(function () {
          return _this.setOpenState(isOpen, e);
        }, timeout);
      } else {
        if (this.props.isOpen == null) {
          this.setState({
            isOpen: isOpen
          });
        } else {
          (_c = (_b = this.props).onInteraction) === null || _c === void 0 ? void 0 : _c.call(_b, isOpen, e);
        }
        if (!isOpen) {
          (_e = (_d = this.props).onClose) === null || _e === void 0 ? void 0 : _e.call(_d, e);
        }
      }
    };
    Popover.prototype.isArrowEnabled = function () {
      var _a = this.props, minimal = _a.minimal, modifiers = _a.modifiers;
      return !minimal && ((modifiers === null || modifiers === void 0 ? void 0 : modifiers.arrow) == null || modifiers.arrow.enabled);
    };
    Popover.prototype.isElementInPopover = function (element) {
      var _a;
      return (_a = this.popoverElement) === null || _a === void 0 ? void 0 : _a.contains(element);
    };
    Popover.prototype.isHoverInteractionKind = function () {
      return this.props.interactionKind === PopoverInteractionKind.HOVER || this.props.interactionKind === PopoverInteractionKind.HOVER_TARGET_ONLY;
    };
    Popover.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Popover");
    Popover.defaultProps = {
      boundary: "scrollParent",
      captureDismiss: false,
      defaultIsOpen: false,
      disabled: false,
      fill: false,
      hasBackdrop: false,
      hoverCloseDelay: 300,
      hoverOpenDelay: 150,
      inheritDarkTheme: true,
      interactionKind: PopoverInteractionKind.CLICK,
      minimal: false,
      modifiers: {},
      openOnTargetFocus: true,
      shouldReturnFocusOnClose: false,
      targetTagName: "span",
      transitionDuration: 300,
      usePortal: true,
      wrapperTagName: "span"
    };
    return Popover;
  })(AbstractPureComponent2);
  var POPPER_MODIFIERS = {
    preventOverflow: {
      boundariesElement: "viewport"
    }
  };
  var TRANSITION_DURATION = 100;
  (function (_super) {
    __extends(ContextMenu, _super);
    function ContextMenu() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        isDarkTheme: false,
        isOpen: false
      };
      _this.cancelContextMenu = function (e) {
        return e.preventDefault();
      };
      _this.handleBackdropContextMenu = function (e) {
        e.persist();
        e.preventDefault();
        _this.setTimeout(function () {
          var newTarget = document.elementFromPoint(e.clientX, e.clientY);
          e.view;
          var newEventInit = __rest(e, ["view"]);
          newTarget === null || newTarget === void 0 ? void 0 : newTarget.dispatchEvent(new MouseEvent("contextmenu", newEventInit));
        }, TRANSITION_DURATION);
      };
      _this.handlePopoverInteraction = function (nextOpenState) {
        if (!nextOpenState) {
          _this.requestAnimationFrame(function () {
            return _this.hide();
          });
        }
      };
      return _this;
    }
    ContextMenu.prototype.render = function () {
      var _a;
      var content = React__namespace.createElement("div", {
        onContextMenu: this.cancelContextMenu
      }, this.state.menu);
      var popoverClassName = classNames((_a = {}, _a[DARK] = this.state.isDarkTheme, _a));
      var key = this.state.offset === undefined ? "" : ("").concat(this.state.offset.left, "x").concat(this.state.offset.top);
      return React__namespace.createElement("div", {
        className: CONTEXT_MENU_POPOVER_TARGET,
        style: this.state.offset
      }, React__namespace.createElement(Popover, __assign({}, this.props, {
        backdropProps: {
          onContextMenu: this.handleBackdropContextMenu
        },
        content: content,
        enforceFocus: false,
        key: key,
        hasBackdrop: true,
        isOpen: this.state.isOpen,
        minimal: true,
        modifiers: POPPER_MODIFIERS,
        onInteraction: this.handlePopoverInteraction,
        position: Position.RIGHT_TOP,
        popoverClassName: popoverClassName,
        target: React__namespace.createElement("div", null),
        transitionDuration: TRANSITION_DURATION
      })));
    };
    ContextMenu.prototype.show = function (menu, offset, onClose, isDarkTheme) {
      if (isDarkTheme === void 0) {
        isDarkTheme = false;
      }
      this.setState({
        isOpen: true,
        menu: menu,
        offset: offset,
        onClose: onClose,
        isDarkTheme: isDarkTheme
      });
    };
    ContextMenu.prototype.hide = function () {
      var _a, _b;
      (_b = (_a = this.state).onClose) === null || _b === void 0 ? void 0 : _b.call(_a);
      this.setState({
        isOpen: false,
        onClose: undefined
      });
    };
    return ContextMenu;
  })(AbstractPureComponent2);
  var IconSize;
  (function (IconSize) {
    IconSize[IconSize["STANDARD"] = 16] = "STANDARD";
    IconSize[IconSize["LARGE"] = 20] = "LARGE";
  })(IconSize || (IconSize = {}));
  var Icon = (function (_super) {
    __extends(Icon, _super);
    function Icon() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Icon.prototype.render = function () {
      var icon = this.props.icon;
      if (icon == null || typeof icon === "boolean") {
        return null;
      } else if (typeof icon !== "string") {
        return icon;
      }
      var _a = this.props, className = _a.className, color = _a.color, htmlTitle = _a.htmlTitle, iconSize = _a.iconSize, intent = _a.intent, _b = _a.size, size = _b === void 0 ? iconSize !== null && iconSize !== void 0 ? iconSize : IconSize.STANDARD : _b, title = _a.title, _c = _a.tagName, tagName = _c === void 0 ? "span" : _c, htmlprops = __rest(_a, ["className", "color", "htmlTitle", "iconSize", "intent", "size", "title", "tagName"]);
      var pixelGridSize = size >= IconSize.LARGE ? IconSize.LARGE : IconSize.STANDARD;
      var paths = this.renderSvgPaths(pixelGridSize, icon);
      var classes = classNames(ICON, iconClass(icon), intentClass(intent), className);
      var viewBox = ("0 0 ").concat(pixelGridSize, " ").concat(pixelGridSize);
      var titleId = uniqueId("iconTitle");
      return React__namespace.createElement(tagName, __assign(__assign({}, htmlprops), {
        "aria-hidden": title ? undefined : true,
        className: classes,
        title: htmlTitle
      }), React__namespace.createElement("svg", {
        fill: color,
        "data-icon": icon,
        width: size,
        height: size,
        viewBox: viewBox,
        "aria-labelledby": title ? titleId : undefined,
        role: "img"
      }, title && React__namespace.createElement("title", {
        id: titleId
      }, title), paths));
    };
    Icon.prototype.renderSvgPaths = function (pathsSize, iconName) {
      var svgPathsRecord = pathsSize === IconSize.STANDARD ? IconSvgPaths16 : IconSvgPaths20;
      var paths = svgPathsRecord[iconNameToPathsRecordKey(iconName)];
      if (paths == null) {
        return null;
      }
      return paths.map(function (path, i) {
        return React__namespace.createElement("path", {
          key: i,
          d: path,
          fillRule: "evenodd"
        });
      });
    };
    Icon.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Icon");
    return Icon;
  })(AbstractPureComponent2);
  var SpinnerSize;
  (function (SpinnerSize) {
    SpinnerSize[SpinnerSize["SMALL"] = 20] = "SMALL";
    SpinnerSize[SpinnerSize["STANDARD"] = 50] = "STANDARD";
    SpinnerSize[SpinnerSize["LARGE"] = 100] = "LARGE";
  })(SpinnerSize || (SpinnerSize = {}));
  var R = 45;
  var SPINNER_TRACK = ("M 50,50 m 0,-").concat(R, " a ").concat(R, ",").concat(R, " 0 1 1 0,").concat(R * 2, " a ").concat(R, ",").concat(R, " 0 1 1 0,-").concat(R * 2);
  var PATH_LENGTH = 280;
  var MIN_SIZE = 10;
  var STROKE_WIDTH = 4;
  var MIN_STROKE_WIDTH = 16;
  var Spinner = (function (_super) {
    __extends(Spinner, _super);
    function Spinner() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Spinner.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.value !== this.props.value) {
        this.forceUpdate();
      }
    };
    Spinner.prototype.render = function () {
      var _a;
      var _b = this.props, className = _b.className, intent = _b.intent, value = _b.value, _c = _b.tagName, tagName = _c === void 0 ? "div" : _c, htmlProps = __rest(_b, ["className", "intent", "value", "tagName"]);
      var size = this.getSize();
      var classes = classNames(SPINNER, intentClass(intent), (_a = {}, _a[SPINNER_NO_SPIN] = value != null, _a), className);
      var strokeWidth = Math.min(MIN_STROKE_WIDTH, STROKE_WIDTH * SpinnerSize.LARGE / size);
      var strokeOffset = PATH_LENGTH - PATH_LENGTH * (value == null ? 0.25 : clamp(value, 0, 1));
      return React__namespace.createElement(tagName, __assign({
        "aria-valuemax": 100,
        "aria-valuemin": 0,
        "aria-valuenow": value === undefined ? undefined : value * 100,
        className: classes,
        role: "progressbar"
      }, htmlProps), React__namespace.createElement(tagName, {
        className: SPINNER_ANIMATION
      }, React__namespace.createElement("svg", {
        width: size,
        height: size,
        strokeWidth: strokeWidth.toFixed(2),
        viewBox: this.getViewBox(strokeWidth)
      }, React__namespace.createElement("path", {
        className: SPINNER_TRACK$1,
        d: SPINNER_TRACK
      }), React__namespace.createElement("path", {
        className: SPINNER_HEAD,
        d: SPINNER_TRACK,
        pathLength: PATH_LENGTH,
        strokeDasharray: ("").concat(PATH_LENGTH, " ").concat(PATH_LENGTH),
        strokeDashoffset: strokeOffset
      }))));
    };
    Spinner.prototype.validateProps = function (_a) {
      var _b = _a.className, className = _b === void 0 ? "" : _b, size = _a.size;
      if (size != null && (className.indexOf(SMALL) >= 0 || className.indexOf(LARGE) >= 0)) {
        console.warn(SPINNER_WARN_CLASSES_SIZE);
      }
    };
    Spinner.prototype.getSize = function () {
      var _a = this.props, _b = _a.className, className = _b === void 0 ? "" : _b, size = _a.size;
      if (size == null) {
        if (className.indexOf(SMALL) >= 0) {
          return SpinnerSize.SMALL;
        } else if (className.indexOf(LARGE) >= 0) {
          return SpinnerSize.LARGE;
        }
        return SpinnerSize.STANDARD;
      }
      return Math.max(MIN_SIZE, size);
    };
    Spinner.prototype.getViewBox = function (strokeWidth) {
      var radius = R + strokeWidth / 2;
      var viewBoxX = (50 - radius).toFixed(2);
      var viewBoxWidth = (radius * 2).toFixed(2);
      return ("").concat(viewBoxX, " ").concat(viewBoxX, " ").concat(viewBoxWidth, " ").concat(viewBoxWidth);
    };
    Spinner.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Spinner");
    return Spinner;
  })(AbstractPureComponent2);
  var AbstractButton = (function (_super) {
    __extends(AbstractButton, _super);
    function AbstractButton() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        isActive: false
      };
      _this.handleKeyDown = function (e) {
        var _a, _b;
        if (isKeyboardClick(e.which)) {
          e.preventDefault();
          if (e.which !== _this.currentKeyDown) {
            _this.setState({
              isActive: true
            });
          }
        }
        _this.currentKeyDown = e.which;
        (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handleKeyUp = function (e) {
        var _a, _b, _c;
        if (isKeyboardClick(e.which)) {
          _this.setState({
            isActive: false
          });
          (_a = _this.buttonRef) === null || _a === void 0 ? void 0 : _a.click();
        }
        _this.currentKeyDown = undefined;
        (_c = (_b = _this.props).onKeyUp) === null || _c === void 0 ? void 0 : _c.call(_b, e);
      };
      _this.handleBlur = function (e) {
        var _a, _b;
        if (_this.state.isActive) {
          _this.setState({
            isActive: false
          });
        }
        (_b = (_a = _this.props).onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      return _this;
    }
    AbstractButton.prototype.getCommonButtonProps = function () {
      var _a;
      var _b = this.props, _c = _b.active, active = _c === void 0 ? false : _c, alignText = _b.alignText, fill = _b.fill, large = _b.large, _d = _b.loading, loading = _d === void 0 ? false : _d, outlined = _b.outlined, minimal = _b.minimal, small = _b.small, tabIndex = _b.tabIndex;
      var disabled = this.props.disabled || loading;
      var className = classNames(BUTTON, (_a = {}, _a[ACTIVE] = !disabled && (active || this.state.isActive), _a[DISABLED] = disabled, _a[FILL] = fill, _a[LARGE] = large, _a[LOADING] = loading, _a[MINIMAL] = minimal, _a[OUTLINED] = outlined, _a[SMALL] = small, _a), alignmentClass(alignText), intentClass(this.props.intent), this.props.className);
      return {
        className: className,
        disabled: disabled,
        onBlur: this.handleBlur,
        onClick: disabled ? undefined : this.props.onClick,
        onKeyDown: this.handleKeyDown,
        onKeyUp: this.handleKeyUp,
        tabIndex: disabled ? -1 : tabIndex
      };
    };
    AbstractButton.prototype.renderChildren = function () {
      var _a = this.props, children = _a.children, icon = _a.icon, loading = _a.loading, rightIcon = _a.rightIcon, text = _a.text;
      var maybeHasText = !isReactNodeEmpty(text) || !isReactNodeEmpty(children);
      return [loading && React__namespace.createElement(Spinner, {
        key: "loading",
        className: BUTTON_SPINNER,
        size: IconSize.LARGE
      }), React__namespace.createElement(Icon, {
        key: "leftIcon",
        icon: icon,
        "aria-hidden": maybeHasText,
        tabIndex: maybeHasText ? -1 : undefined
      }), maybeHasText && React__namespace.createElement("span", {
        key: "text",
        className: BUTTON_TEXT
      }, text, children), React__namespace.createElement(Icon, {
        key: "rightIcon",
        icon: rightIcon
      })];
    };
    return AbstractButton;
  })(AbstractPureComponent2);
  var Button = (function (_super) {
    __extends(Button, _super);
    function Button() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.buttonRef = null;
      _this.handleRef = refHandler(_this, "buttonRef", _this.props.elementRef);
      return _this;
    }
    Button.prototype.render = function () {
      return React__namespace.createElement("button", __assign({
        type: "button",
        ref: this.handleRef
      }, removeNonHTMLProps(this.props), this.getCommonButtonProps()), this.renderChildren());
    };
    Button.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.elementRef !== this.props.elementRef) {
        setRef$1(prevProps.elementRef, null);
        this.handleRef = refHandler(this, "buttonRef", this.props.elementRef);
        setRef$1(this.props.elementRef, this.buttonRef);
      }
    };
    Button.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Button");
    return Button;
  })(AbstractButton);
  var AnchorButton = (function (_super) {
    __extends(AnchorButton, _super);
    function AnchorButton() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.buttonRef = null;
      _this.handleRef = refHandler(_this, "buttonRef", _this.props.elementRef);
      return _this;
    }
    AnchorButton.prototype.render = function () {
      var _a = this.props, href = _a.href, _b = _a.tabIndex, tabIndex = _b === void 0 ? 0 : _b;
      var commonProps = this.getCommonButtonProps();
      return React__namespace.createElement("a", __assign({
        role: "button",
        ref: this.handleRef
      }, removeNonHTMLProps(this.props), commonProps, {
        href: commonProps.disabled ? undefined : href,
        tabIndex: commonProps.disabled ? -1 : tabIndex
      }), this.renderChildren());
    };
    AnchorButton.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.elementRef !== this.props.elementRef) {
        setRef$1(prevProps.elementRef, null);
        this.handleRef = refHandler(this, "buttonRef", this.props.elementRef);
        setRef$1(this.props.elementRef, this.buttonRef);
      }
    };
    AnchorButton.displayName = ("").concat(DISPLAYNAME_PREFIX, ".AnchorButton");
    return AnchorButton;
  })(AbstractButton);
  function htmlElement(tagName, tagClassName) {
    return function (props) {
      var className = props.className, elementRef = props.elementRef, children = props.children, htmlProps = __rest(props, ["className", "elementRef", "children"]);
      return React__namespace.createElement(tagName, __assign(__assign({}, htmlProps), {
        className: classNames(tagClassName, className),
        ref: elementRef
      }), children);
    };
  }
  var H4 = htmlElement("h4", HEADING);
  var H5 = htmlElement("h5", HEADING);
  var H6 = htmlElement("h6", HEADING);
  var Dialog = (function (_super) {
    __extends(Dialog, _super);
    function Dialog(props) {
      var _this = _super.call(this, props) || this;
      var id = uniqueId("bp-dialog");
      _this.titleId = ("title-").concat(id);
      return _this;
    }
    Dialog.prototype.render = function () {
      return React__namespace.createElement(Overlay, __assign({}, this.props, {
        className: OVERLAY_SCROLL_CONTAINER,
        hasBackdrop: true
      }), React__namespace.createElement("div", {
        className: DIALOG_CONTAINER,
        ref: this.props.containerRef
      }, React__namespace.createElement("div", {
        className: classNames(DIALOG, this.props.className),
        role: "dialog",
        "aria-labelledby": this.props["aria-labelledby"] || (this.props.title ? this.titleId : undefined),
        "aria-describedby": this.props["aria-describedby"],
        style: this.props.style
      }, this.maybeRenderHeader(), this.props.children)));
    };
    Dialog.prototype.validateProps = function (props) {
      if (props.title == null) {
        if (props.icon != null) {
          console.warn(DIALOG_WARN_NO_HEADER_ICON);
        }
        if (props.isCloseButtonShown != null) {
          console.warn(DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);
        }
      }
    };
    Dialog.prototype.maybeRenderCloseButton = function () {
      if (this.props.isCloseButtonShown !== false) {
        return React__namespace.createElement(Button, {
          "aria-label": "Close",
          className: DIALOG_CLOSE_BUTTON,
          icon: React__namespace.createElement(Icon, {
            icon: "cross",
            size: IconSize.STANDARD
          }),
          minimal: true,
          onClick: this.props.onClose
        });
      } else {
        return undefined;
      }
    };
    Dialog.prototype.maybeRenderHeader = function () {
      var _a = this.props, icon = _a.icon, title = _a.title;
      if (title == null) {
        return undefined;
      }
      return React__namespace.createElement("div", {
        className: DIALOG_HEADER
      }, React__namespace.createElement(Icon, {
        icon: icon,
        size: IconSize.STANDARD,
        "aria-hidden": true,
        tabIndex: -1
      }), React__namespace.createElement(H5, {
        id: this.titleId
      }, title), this.maybeRenderCloseButton());
    };
    Dialog.defaultProps = {
      canOutsideClickClose: true,
      isOpen: false
    };
    Dialog.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Dialog");
    return Dialog;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(Alert, _super);
    function Alert() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleCancel = function (evt) {
        return _this.internalHandleCallbacks(false, evt);
      };
      _this.handleConfirm = function (evt) {
        return _this.internalHandleCallbacks(true, evt);
      };
      return _this;
    }
    Alert.prototype.render = function () {
      var _a = this.props, canEscapeKeyCancel = _a.canEscapeKeyCancel, canOutsideClickCancel = _a.canOutsideClickCancel, children = _a.children, className = _a.className, icon = _a.icon, intent = _a.intent, loading = _a.loading, cancelButtonText = _a.cancelButtonText, confirmButtonText = _a.confirmButtonText;
      _a.onClose;
      var overlayProps = __rest(_a, ["canEscapeKeyCancel", "canOutsideClickCancel", "children", "className", "icon", "intent", "loading", "cancelButtonText", "confirmButtonText", "onClose"]);
      return React__namespace.createElement(Dialog, __assign({}, overlayProps, {
        className: classNames(ALERT, className),
        canEscapeKeyClose: canEscapeKeyCancel,
        canOutsideClickClose: canOutsideClickCancel,
        onClose: this.handleCancel,
        portalContainer: this.props.portalContainer
      }), React__namespace.createElement("div", {
        className: ALERT_BODY
      }, React__namespace.createElement(Icon, {
        icon: icon,
        size: 40,
        intent: intent
      }), React__namespace.createElement("div", {
        className: ALERT_CONTENTS
      }, children)), React__namespace.createElement("div", {
        className: ALERT_FOOTER
      }, React__namespace.createElement(Button, {
        loading: loading,
        intent: intent,
        text: confirmButtonText,
        onClick: this.handleConfirm
      }), cancelButtonText && React__namespace.createElement(Button, {
        text: cancelButtonText,
        disabled: loading,
        onClick: this.handleCancel
      })));
    };
    Alert.prototype.validateProps = function (props) {
      if (props.onClose == null && props.cancelButtonText == null !== (props.onCancel == null)) {
        console.warn(ALERT_WARN_CANCEL_PROPS);
      }
      var hasCancelHandler = props.onCancel != null || props.onClose != null;
      if (props.canEscapeKeyCancel && !hasCancelHandler) {
        console.warn(ALERT_WARN_CANCEL_ESCAPE_KEY);
      }
      if (props.canOutsideClickCancel && !hasCancelHandler) {
        console.warn(ALERT_WARN_CANCEL_OUTSIDE_CLICK);
      }
    };
    Alert.prototype.internalHandleCallbacks = function (confirmed, evt) {
      var _a;
      var _b = this.props, onCancel = _b.onCancel, onClose = _b.onClose, onConfirm = _b.onConfirm;
      (_a = confirmed ? onConfirm : onCancel) === null || _a === void 0 ? void 0 : _a(evt);
      onClose === null || onClose === void 0 ? void 0 : onClose(confirmed, evt);
    };
    Alert.defaultProps = {
      canEscapeKeyCancel: false,
      canOutsideClickCancel: false,
      confirmButtonText: "OK",
      isOpen: false,
      loading: false
    };
    Alert.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Alert");
    return Alert;
  })(AbstractPureComponent2);
  var Breadcrumb = function (props) {
    var _a;
    var classes = classNames(BREADCRUMB, (_a = {}, _a[BREADCRUMB_CURRENT] = props.current, _a[DISABLED] = props.disabled, _a), props.className);
    var icon = props.icon != null ? React__namespace.createElement(Icon, {
      title: props.iconTitle,
      icon: props.icon
    }) : undefined;
    if (props.href == null && props.onClick == null) {
      return React__namespace.createElement("span", {
        className: classes
      }, icon, props.text, props.children);
    }
    return React__namespace.createElement("a", {
      className: classes,
      href: props.href,
      onClick: props.disabled ? undefined : props.onClick,
      tabIndex: props.disabled ? undefined : 0,
      target: props.target
    }, icon, props.text, props.children);
  };
  var Menu = (function (_super) {
    __extends(Menu, _super);
    function Menu() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Menu.prototype.render = function () {
      var _a;
      var _b = this.props, className = _b.className, children = _b.children, large = _b.large, ulRef = _b.ulRef, htmlProps = __rest(_b, ["className", "children", "large", "ulRef"]);
      var classes = classNames(MENU, (_a = {}, _a[LARGE] = large, _a), className);
      return React__namespace.createElement("ul", __assign({
        role: "menu"
      }, htmlProps, {
        className: classes,
        ref: ulRef
      }), children);
    };
    Menu.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Menu");
    return Menu;
  })(AbstractPureComponent2);
  var Text = (function (_super) {
    __extends(Text, _super);
    function Text() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        isContentOverflowing: false,
        textContent: ""
      };
      _this.textRef = null;
      return _this;
    }
    Text.prototype.componentDidMount = function () {
      this.update();
    };
    Text.prototype.componentDidUpdate = function () {
      this.update();
    };
    Text.prototype.render = function () {
      var _a;
      var _this = this;
      var _b = this.props, children = _b.children, className = _b.className, ellipsize = _b.ellipsize, _c = _b.tagName, tagName = _c === void 0 ? "div" : _c, title = _b.title, htmlProps = __rest(_b, ["children", "className", "ellipsize", "tagName", "title"]);
      var classes = classNames(className, (_a = {}, _a[TEXT_OVERFLOW_ELLIPSIS] = ellipsize, _a));
      return React__namespace.createElement(tagName, __assign(__assign({}, htmlProps), {
        className: classes,
        ref: function (ref) {
          return _this.textRef = ref;
        },
        title: title !== null && title !== void 0 ? title : this.state.isContentOverflowing ? this.state.textContent : undefined
      }), children);
    };
    Text.prototype.update = function () {
      var _a;
      if (((_a = this.textRef) === null || _a === void 0 ? void 0 : _a.textContent) == null) {
        return;
      }
      var newState = {
        isContentOverflowing: this.props.ellipsize && this.textRef.scrollWidth > this.textRef.clientWidth,
        textContent: this.textRef.textContent
      };
      this.setState(newState);
    };
    Text.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Text");
    Text.defaultProps = {
      ellipsize: false
    };
    return Text;
  })(AbstractPureComponent2);
  var MenuItem = (function (_super) {
    __extends(MenuItem, _super);
    function MenuItem() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuItem.prototype.render = function () {
      var _a, _b;
      var _c = this.props, active = _c.active, className = _c.className, children = _c.children, disabled = _c.disabled, icon = _c.icon, intent = _c.intent;
      _c.labelClassName;
      var labelElement = _c.labelElement, multiline = _c.multiline;
      _c.popoverProps;
      var _d = _c.roleStructure, roleStructure = _d === void 0 ? "menuitem" : _d, selected = _c.selected, shouldDismissPopover = _c.shouldDismissPopover;
      _c.submenuProps;
      var text = _c.text, textClassName = _c.textClassName, _e = _c.tagName, tagName = _e === void 0 ? "a" : _e, htmlTitle = _c.htmlTitle, htmlProps = __rest(_c, ["active", "className", "children", "disabled", "icon", "intent", "labelClassName", "labelElement", "multiline", "popoverProps", "roleStructure", "selected", "shouldDismissPopover", "submenuProps", "text", "textClassName", "tagName", "htmlTitle"]);
      var hasIcon = icon != null;
      var hasSubmenu = children != null;
      var intentClass$1 = intentClass(intent);
      var anchorClasses = classNames(MENU_ITEM, intentClass$1, (_a = {}, _a[ACTIVE] = active, _a[DISABLED] = disabled, _a[POPOVER_DISMISS] = shouldDismissPopover && !disabled && !hasSubmenu, _a[SELECTED] = selected || active && intentClass$1 === undefined, _a), className);
      var _f = roleStructure === "listoption" ? ["option", undefined, active || selected] : ["none", "menuitem", undefined], liRole = _f[0], targetRole = _f[1], ariaSelected = _f[2];
      var target = React__namespace.createElement(tagName, __assign(__assign(__assign({
        role: targetRole,
        tabIndex: 0
      }, htmlProps), disabled ? DISABLED_PROPS : {}), {
        className: anchorClasses
      }), hasIcon ? React__namespace.createElement("span", {
        className: MENU_ITEM_ICON
      }, React__namespace.createElement(Icon, {
        icon: icon,
        "aria-hidden": true,
        tabIndex: -1
      })) : undefined, React__namespace.createElement(Text, {
        className: classNames(FILL, textClassName),
        ellipsize: !multiline,
        title: htmlTitle
      }, text), this.maybeRenderLabel(labelElement), hasSubmenu ? React__namespace.createElement(Icon, {
        className: MENU_SUBMENU_ICON,
        icon: "caret-right"
      }) : undefined);
      var liClasses = classNames((_b = {}, _b[MENU_SUBMENU] = hasSubmenu, _b));
      return React__namespace.createElement("li", {
        className: liClasses,
        role: liRole,
        "aria-selected": ariaSelected
      }, this.maybeRenderPopover(target, children));
    };
    MenuItem.prototype.maybeRenderLabel = function (labelElement) {
      var _a = this.props, label = _a.label, labelClassName = _a.labelClassName;
      if (label == null && labelElement == null) {
        return null;
      }
      return React__namespace.createElement("span", {
        className: classNames(MENU_ITEM_LABEL, labelClassName)
      }, label, labelElement);
    };
    MenuItem.prototype.maybeRenderPopover = function (target, children) {
      if (children == null) {
        return target;
      }
      var _a = this.props, disabled = _a.disabled, popoverProps = _a.popoverProps, submenuProps = _a.submenuProps;
      return React__namespace.createElement(Popover, __assign({
        autoFocus: false,
        captureDismiss: false,
        disabled: disabled,
        enforceFocus: false,
        hoverCloseDelay: 0,
        interactionKind: PopoverInteractionKind.HOVER,
        modifiers: SUBMENU_POPOVER_MODIFIERS,
        position: Position.RIGHT_TOP,
        usePortal: false
      }, popoverProps, {
        content: React__namespace.createElement(Menu, __assign({}, submenuProps), children),
        minimal: true,
        popoverClassName: classNames(MENU_SUBMENU, popoverProps === null || popoverProps === void 0 ? void 0 : popoverProps.popoverClassName),
        target: target
      }));
    };
    MenuItem.defaultProps = {
      active: false,
      disabled: false,
      multiline: false,
      popoverProps: {},
      selected: false,
      shouldDismissPopover: true,
      text: ""
    };
    MenuItem.displayName = ("").concat(DISPLAYNAME_PREFIX, ".MenuItem");
    return MenuItem;
  })(AbstractPureComponent2);
  var SUBMENU_POPOVER_MODIFIERS = {
    flip: {
      boundariesElement: "viewport",
      padding: 20
    },
    offset: {
      offset: -5
    },
    preventOverflow: {
      boundariesElement: "viewport",
      padding: 20
    }
  };
  var DISABLED_PROPS = {
    href: undefined,
    onClick: undefined,
    onMouseDown: undefined,
    onMouseEnter: undefined,
    onMouseLeave: undefined,
    tabIndex: -1
  };
  var OverflowList = (function (_super) {
    __extends(OverflowList, _super);
    function OverflowList() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        chopSize: _this.defaultChopSize(),
        lastChopSize: null,
        lastOverflowCount: 0,
        overflow: [],
        repartitioning: false,
        visible: _this.props.items
      };
      _this.spacer = null;
      _this.resize = function () {
        _this.repartition();
      };
      return _this;
    }
    OverflowList.ofType = function () {
      return OverflowList;
    };
    OverflowList.prototype.componentDidMount = function () {
      this.repartition();
    };
    OverflowList.prototype.shouldComponentUpdate = function (nextProps, nextState) {
      return this.props !== nextProps || !(this.state !== nextState && shallowCompareKeys(this.state, nextState));
    };
    OverflowList.prototype.componentDidUpdate = function (prevProps, prevState) {
      var _a, _b;
      if (prevProps.observeParents !== this.props.observeParents) {
        console.warn(OVERFLOW_LIST_OBSERVE_PARENTS_CHANGED);
      }
      if (prevProps.collapseFrom !== this.props.collapseFrom || prevProps.items !== this.props.items || prevProps.minVisibleItems !== this.props.minVisibleItems || prevProps.overflowRenderer !== this.props.overflowRenderer || prevProps.alwaysRenderOverflow !== this.props.alwaysRenderOverflow || prevProps.visibleItemRenderer !== this.props.visibleItemRenderer) {
        this.setState({
          chopSize: this.defaultChopSize(),
          lastChopSize: null,
          lastOverflowCount: 0,
          overflow: [],
          repartitioning: true,
          visible: this.props.items
        });
      }
      var _c = this.state, repartitioning = _c.repartitioning, overflow = _c.overflow, lastOverflowCount = _c.lastOverflowCount;
      if (repartitioning === false && prevState.repartitioning === true) {
        if (overflow.length !== lastOverflowCount) {
          (_b = (_a = this.props).onOverflow) === null || _b === void 0 ? void 0 : _b.call(_a, overflow.slice());
        }
      } else if (!shallowCompareKeys(prevState, this.state)) {
        this.repartition();
      }
    };
    OverflowList.prototype.render = function () {
      var _this = this;
      var _a = this.props, className = _a.className, collapseFrom = _a.collapseFrom, observeParents = _a.observeParents, style = _a.style, _b = _a.tagName, tagName = _b === void 0 ? "div" : _b, visibleItemRenderer = _a.visibleItemRenderer;
      var overflow = this.maybeRenderOverflow();
      var list = React__namespace.createElement(tagName, {
        className: classNames(OVERFLOW_LIST, className),
        style: style
      }, collapseFrom === Boundary.START ? overflow : null, this.state.visible.map(visibleItemRenderer), collapseFrom === Boundary.END ? overflow : null, React__namespace.createElement("div", {
        className: OVERFLOW_LIST_SPACER,
        ref: function (ref) {
          return _this.spacer = ref;
        }
      }));
      return React__namespace.createElement(ResizeSensor, {
        onResize: this.resize,
        observeParents: observeParents
      }, list);
    };
    OverflowList.prototype.maybeRenderOverflow = function () {
      var overflow = this.state.overflow;
      if (overflow.length === 0 && !this.props.alwaysRenderOverflow) {
        return null;
      }
      return this.props.overflowRenderer(overflow.slice());
    };
    OverflowList.prototype.repartition = function () {
      var _this = this;
      var _a;
      if (this.spacer == null) {
        return;
      }
      var partitionExhausted = this.state.lastChopSize === 1;
      var minVisible = (_a = this.props.minVisibleItems) !== null && _a !== void 0 ? _a : 0;
      var shouldShrink = this.spacer.offsetWidth < 0.9 && this.state.visible.length > minVisible;
      var shouldGrow = (this.spacer.offsetWidth >= 1 || this.state.visible.length < minVisible) && this.state.overflow.length > 0 && !partitionExhausted;
      if (shouldShrink || shouldGrow) {
        this.setState(function (state) {
          var visible;
          var overflow;
          if (_this.props.collapseFrom === Boundary.END) {
            var result = shiftElements(state.visible, state.overflow, _this.state.chopSize * (shouldShrink ? 1 : -1));
            visible = result[0];
            overflow = result[1];
          } else {
            var result = shiftElements(state.overflow, state.visible, _this.state.chopSize * (shouldShrink ? -1 : 1));
            overflow = result[0];
            visible = result[1];
          }
          return {
            chopSize: halve(state.chopSize),
            lastChopSize: state.chopSize,
            lastOverflowCount: _this.isFirstPartitionCycle(state.chopSize) ? state.overflow.length : state.lastOverflowCount,
            overflow: overflow,
            repartitioning: true,
            visible: visible
          };
        });
      } else {
        this.setState({
          chopSize: this.defaultChopSize(),
          lastChopSize: null,
          repartitioning: false
        });
      }
    };
    OverflowList.prototype.defaultChopSize = function () {
      return halve(this.props.items.length);
    };
    OverflowList.prototype.isFirstPartitionCycle = function (currentChopSize) {
      return currentChopSize === this.defaultChopSize();
    };
    OverflowList.displayName = ("").concat(DISPLAYNAME_PREFIX, ".OverflowList");
    OverflowList.defaultProps = {
      alwaysRenderOverflow: false,
      collapseFrom: Boundary.START,
      minVisibleItems: 0
    };
    return OverflowList;
  })(React__namespace.Component);
  function halve(num) {
    return Math.ceil(num / 2);
  }
  function shiftElements(leftArray, rightArray, num) {
    var allElements = leftArray.concat(rightArray);
    var newLeftLength = leftArray.length - num;
    if (newLeftLength <= 0) {
      return [[], allElements];
    } else if (newLeftLength >= allElements.length) {
      return [allElements, []];
    }
    var sliceIndex = allElements.length - newLeftLength;
    return [allElements.slice(0, -sliceIndex), allElements.slice(-sliceIndex)];
  }
  (function (_super) {
    __extends(Breadcrumbs, _super);
    function Breadcrumbs() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.renderOverflow = function (items) {
        var collapseFrom = _this.props.collapseFrom;
        var position = collapseFrom === Boundary.END ? Position.BOTTOM_RIGHT : Position.BOTTOM_LEFT;
        var orderedItems = items;
        if (collapseFrom === Boundary.START) {
          orderedItems = items.slice().reverse();
        }
        return React__namespace.createElement("li", null, React__namespace.createElement(Popover, __assign({
          position: position,
          disabled: orderedItems.length === 0,
          content: React__namespace.createElement(Menu, null, orderedItems.map(_this.renderOverflowBreadcrumb))
        }, _this.props.popoverProps), React__namespace.createElement("span", {
          className: BREADCRUMBS_COLLAPSED
        })));
      };
      _this.renderOverflowBreadcrumb = function (props, index) {
        var isClickable = props.href != null || props.onClick != null;
        var htmlProps = removeNonHTMLProps(props);
        return React__namespace.createElement(MenuItem, __assign({
          disabled: !isClickable
        }, htmlProps, {
          text: props.text,
          key: index
        }));
      };
      _this.renderBreadcrumbWrapper = function (props, index) {
        var isCurrent = _this.props.items[_this.props.items.length - 1] === props;
        return React__namespace.createElement("li", {
          key: index
        }, _this.renderBreadcrumb(props, isCurrent));
      };
      return _this;
    }
    Breadcrumbs.prototype.render = function () {
      var _a = this.props, className = _a.className, collapseFrom = _a.collapseFrom, items = _a.items, minVisibleItems = _a.minVisibleItems, _b = _a.overflowListProps, overflowListProps = _b === void 0 ? {} : _b;
      return React__namespace.createElement(OverflowList, __assign({
        collapseFrom: collapseFrom,
        minVisibleItems: minVisibleItems,
        tagName: "ul"
      }, overflowListProps, {
        className: classNames(BREADCRUMBS, overflowListProps.className, className),
        items: items,
        overflowRenderer: this.renderOverflow,
        visibleItemRenderer: this.renderBreadcrumbWrapper
      }));
    };
    Breadcrumbs.prototype.renderBreadcrumb = function (props, isCurrent) {
      if (isCurrent && this.props.currentBreadcrumbRenderer != null) {
        return this.props.currentBreadcrumbRenderer(props);
      } else if (this.props.breadcrumbRenderer != null) {
        return this.props.breadcrumbRenderer(props);
      } else {
        return React__namespace.createElement(Breadcrumb, __assign({
          current: isCurrent
        }, props));
      }
    };
    Breadcrumbs.defaultProps = {
      collapseFrom: Boundary.START
    };
    return Breadcrumbs;
  })(AbstractPureComponent2);
  var ButtonGroup = (function (_super) {
    __extends(ButtonGroup, _super);
    function ButtonGroup() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ButtonGroup.prototype.render = function () {
      var _a;
      var _b = this.props, alignText = _b.alignText, className = _b.className, fill = _b.fill, minimal = _b.minimal, large = _b.large, vertical = _b.vertical, htmlProps = __rest(_b, ["alignText", "className", "fill", "minimal", "large", "vertical"]);
      var buttonGroupClasses = classNames(BUTTON_GROUP, (_a = {}, _a[FILL] = fill, _a[LARGE] = large, _a[MINIMAL] = minimal, _a[VERTICAL] = vertical, _a), alignmentClass(alignText), className);
      return React__namespace.createElement("div", __assign({}, htmlProps, {
        className: buttonGroupClasses
      }), this.props.children);
    };
    ButtonGroup.displayName = ("").concat(DISPLAYNAME_PREFIX, ".ButtonGroup");
    return ButtonGroup;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(Callout, _super);
    function Callout() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Callout.prototype.render = function () {
      var _a;
      var _b = this.props, className = _b.className, children = _b.children, icon = _b.icon, intent = _b.intent, title = _b.title, htmlProps = __rest(_b, ["className", "children", "icon", "intent", "title"]);
      var iconName = this.getIconName(icon, intent);
      var classes = classNames(CALLOUT, intentClass(intent), (_a = {}, _a[CALLOUT_ICON] = iconName != null, _a), className);
      return React__namespace.createElement("div", __assign({
        className: classes
      }, htmlProps), iconName && React__namespace.createElement(Icon, {
        icon: iconName,
        size: IconSize.LARGE,
        "aria-hidden": true,
        tabIndex: -1
      }), title && React__namespace.createElement(H4, null, title), children);
    };
    Callout.prototype.getIconName = function (icon, intent) {
      if (icon === null) {
        return undefined;
      }
      if (icon !== undefined) {
        return icon;
      }
      switch (intent) {
        case Intent.DANGER:
          return "error";
        case Intent.PRIMARY:
          return "info-sign";
        case Intent.WARNING:
          return "warning-sign";
        case Intent.SUCCESS:
          return "tick";
        default:
          return undefined;
      }
    };
    Callout.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Callout");
    return Callout;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(Card, _super);
    function Card() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Card.prototype.render = function () {
      var _a;
      var _b = this.props, className = _b.className, elevation = _b.elevation, interactive = _b.interactive, htmlProps = __rest(_b, ["className", "elevation", "interactive"]);
      var classes = classNames(CARD, (_a = {}, _a[INTERACTIVE] = interactive, _a), elevationClass(elevation), className);
      return React__namespace.createElement("div", __assign({
        className: classes
      }, htmlProps));
    };
    Card.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Card");
    Card.defaultProps = {
      elevation: Elevation.ZERO,
      interactive: false
    };
    return Card;
  })(AbstractPureComponent2);
  var AnimationStates;
  (function (AnimationStates) {
    AnimationStates[AnimationStates["OPEN_START"] = 0] = "OPEN_START";
    AnimationStates[AnimationStates["OPENING"] = 1] = "OPENING";
    AnimationStates[AnimationStates["OPEN"] = 2] = "OPEN";
    AnimationStates[AnimationStates["CLOSING_START"] = 3] = "CLOSING_START";
    AnimationStates[AnimationStates["CLOSING"] = 4] = "CLOSING";
    AnimationStates[AnimationStates["CLOSED"] = 5] = "CLOSED";
  })(AnimationStates || (AnimationStates = {}));
  var Collapse = (function (_super) {
    __extends(Collapse, _super);
    function Collapse() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        animationState: _this.props.isOpen ? AnimationStates.OPEN : AnimationStates.CLOSED,
        height: undefined,
        heightWhenOpen: undefined
      };
      _this.contents = null;
      _this.contentsRefHandler = function (el) {
        _this.contents = el;
        if (_this.contents != null) {
          var height = _this.contents.clientHeight;
          _this.setState({
            animationState: _this.props.isOpen ? AnimationStates.OPEN : AnimationStates.CLOSED,
            height: height === 0 ? undefined : ("").concat(height, "px"),
            heightWhenOpen: height === 0 ? undefined : height
          });
        }
      };
      return _this;
    }
    Collapse.getDerivedStateFromProps = function (props, state) {
      var isOpen = props.isOpen;
      var animationState = state.animationState;
      if (isOpen) {
        switch (animationState) {
          case AnimationStates.OPEN:
            break;
          case AnimationStates.OPENING:
            break;
          default:
            return {
              animationState: AnimationStates.OPEN_START
            };
        }
      } else {
        switch (animationState) {
          case AnimationStates.CLOSED:
            break;
          case AnimationStates.CLOSING:
            break;
          default:
            return {
              animationState: AnimationStates.CLOSING_START,
              height: ("").concat(state.heightWhenOpen, "px")
            };
        }
      }
      return null;
    };
    Collapse.prototype.render = function () {
      var isContentVisible = this.state.animationState !== AnimationStates.CLOSED;
      var shouldRenderChildren = isContentVisible || this.props.keepChildrenMounted;
      var displayWithTransform = isContentVisible && this.state.animationState !== AnimationStates.CLOSING;
      var isAutoHeight = this.state.height === "auto";
      var containerStyle = {
        height: isContentVisible ? this.state.height : undefined,
        overflowY: isAutoHeight ? "visible" : undefined,
        transition: isAutoHeight ? "none" : undefined
      };
      var contentsStyle = {
        transform: displayWithTransform ? "translateY(0)" : ("translateY(-").concat(this.state.heightWhenOpen, "px)"),
        transition: isAutoHeight ? "none" : undefined
      };
      return React__namespace.createElement(this.props.component, {
        className: classNames(COLLAPSE, this.props.className),
        style: containerStyle
      }, React__namespace.createElement("div", {
        className: COLLAPSE_BODY,
        ref: this.contentsRefHandler,
        style: contentsStyle,
        "aria-hidden": !isContentVisible && this.props.keepChildrenMounted
      }, shouldRenderChildren ? this.props.children : null));
    };
    Collapse.prototype.componentDidMount = function () {
      this.forceUpdate();
      if (this.props.isOpen) {
        this.setState({
          animationState: AnimationStates.OPEN,
          height: "auto"
        });
      } else {
        this.setState({
          animationState: AnimationStates.CLOSED,
          height: "0px"
        });
      }
    };
    Collapse.prototype.componentDidUpdate = function () {
      var _this = this;
      if (this.contents == null) {
        return;
      }
      var transitionDuration = this.props.transitionDuration;
      var animationState = this.state.animationState;
      if (animationState === AnimationStates.OPEN_START) {
        var clientHeight = this.contents.clientHeight;
        this.setState({
          animationState: AnimationStates.OPENING,
          height: ("").concat(clientHeight, "px"),
          heightWhenOpen: clientHeight
        });
        this.setTimeout(function () {
          return _this.onDelayedStateChange();
        }, transitionDuration);
      } else if (animationState === AnimationStates.CLOSING_START) {
        var clientHeight_1 = this.contents.clientHeight;
        this.setTimeout(function () {
          return _this.setState({
            animationState: AnimationStates.CLOSING,
            height: "0px",
            heightWhenOpen: clientHeight_1
          });
        });
        this.setTimeout(function () {
          return _this.onDelayedStateChange();
        }, transitionDuration);
      }
    };
    Collapse.prototype.onDelayedStateChange = function () {
      switch (this.state.animationState) {
        case AnimationStates.OPENING:
          this.setState({
            animationState: AnimationStates.OPEN,
            height: "auto"
          });
          break;
        case AnimationStates.CLOSING:
          this.setState({
            animationState: AnimationStates.CLOSED
          });
          break;
      }
    };
    Collapse.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Collapse");
    Collapse.defaultProps = {
      component: "div",
      isOpen: false,
      keepChildrenMounted: false,
      transitionDuration: 200
    };
    return Collapse;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(CollapsibleList, _super);
    function CollapsibleList() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    CollapsibleList.prototype.render = function () {
      var _this = this;
      var collapseFrom = this.props.collapseFrom;
      var childrenLength = React__namespace.Children.count(this.props.children);
      var _a = this.partitionChildren(), visibleChildren = _a[0], collapsedChildren = _a[1];
      var visibleItems = visibleChildren.map(function (child, index) {
        var absoluteIndex = collapseFrom === Boundary.START ? childrenLength - 1 - index : index;
        return React__namespace.createElement("li", {
          className: _this.props.visibleItemClassName,
          key: absoluteIndex
        }, _this.props.visibleItemRenderer(child.props, absoluteIndex));
      });
      if (collapseFrom === Boundary.START) {
        visibleItems.reverse();
      }
      var collapsedPopover;
      if (collapsedChildren.length > 0) {
        var position = collapseFrom === Boundary.END ? Position.BOTTOM_RIGHT : Position.BOTTOM_LEFT;
        collapsedPopover = React__namespace.createElement("li", {
          className: this.props.visibleItemClassName
        }, React__namespace.createElement(Popover, __assign({
          content: React__namespace.createElement(Menu, null, collapsedChildren),
          position: position
        }, this.props.dropdownProps), this.props.dropdownTarget));
      }
      return React__namespace.createElement("ul", {
        className: classNames(COLLAPSIBLE_LIST, this.props.className)
      }, collapseFrom === Boundary.START ? collapsedPopover : null, visibleItems, collapseFrom === Boundary.END ? collapsedPopover : null);
    };
    CollapsibleList.prototype.partitionChildren = function () {
      var childrenArray = React__namespace.Children.map(this.props.children, function (child, index) {
        if (!isElementOfType(child, MenuItem)) {
          throw new Error(COLLAPSIBLE_LIST_INVALID_CHILD);
        }
        return React__namespace.cloneElement(child, {
          key: ("visible-").concat(index)
        });
      });
      if (childrenArray == null) {
        return [[], []];
      }
      if (this.props.collapseFrom === Boundary.START) {
        childrenArray.reverse();
      }
      var visibleItemCount = this.props.visibleItemCount;
      return [childrenArray.slice(0, visibleItemCount), childrenArray.slice(visibleItemCount)];
    };
    CollapsibleList.displayName = ("").concat(DISPLAYNAME_PREFIX, ".CollapsibleList");
    CollapsibleList.defaultProps = {
      collapseFrom: Boundary.START,
      visibleItemCount: 3
    };
    return CollapsibleList;
  })(React__namespace.Component);
  var DialogStep = (function (_super) {
    __extends(DialogStep, _super);
    function DialogStep() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    DialogStep.prototype.render = function () {
      var className = this.props.className;
      return React__namespace.createElement("div", {
        className: DIALOG_STEP_CONTAINER
      }, React__namespace.createElement("div", {
        className: classNames(DIALOG_STEP, className),
        role: "dialogsteplist"
      }));
    };
    DialogStep.displayName = ("").concat(DISPLAYNAME_PREFIX, ".DialogStep");
    return DialogStep;
  })(AbstractPureComponent2);
  var PADDING_BOTTOM = 0;
  var MIN_WIDTH = 800;
  (function (_super) {
    __extends(MultistepDialog, _super);
    function MultistepDialog() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = _this.getInitialIndexFromProps(_this.props);
      _this.renderDialogStep = function (step, index) {
        var _a;
        var stepNumber = index + 1;
        var hasBeenViewed = _this.state.lastViewedIndex >= index;
        var currentlySelected = _this.state.selectedIndex === index;
        return React__namespace.createElement("div", {
          className: classNames(DIALOG_STEP_CONTAINER, (_a = {}, _a[ACTIVE] = currentlySelected, _a[DIALOG_STEP_VIEWED] = hasBeenViewed, _a)),
          key: index
        }, React__namespace.createElement("div", {
          className: DIALOG_STEP,
          onClick: _this.handleClickDialogStep(index)
        }, React__namespace.createElement("div", {
          className: DIALOG_STEP_ICON
        }, stepNumber), React__namespace.createElement("div", {
          className: DIALOG_STEP_TITLE
        }, step.props.title)));
      };
      _this.handleClickDialogStep = function (index) {
        if (index > _this.state.lastViewedIndex) {
          return;
        }
        return _this.getDialogStepChangeHandler(index);
      };
      return _this;
    }
    MultistepDialog.prototype.render = function () {
      var _a;
      var _b = this.props, className = _b.className, navigationPosition = _b.navigationPosition, showCloseButtonInFooter = _b.showCloseButtonInFooter, isCloseButtonShown = _b.isCloseButtonShown, otherProps = __rest(_b, ["className", "navigationPosition", "showCloseButtonInFooter", "isCloseButtonShown"]);
      var isCloseButtonVisible = !showCloseButtonInFooter && isCloseButtonShown;
      return React__namespace.createElement(Dialog, __assign({
        isCloseButtonShown: isCloseButtonVisible
      }, otherProps, {
        className: classNames((_a = {}, _a[MULTISTEP_DIALOG_NAV_RIGHT] = navigationPosition === "right", _a[MULTISTEP_DIALOG_NAV_TOP] = navigationPosition === "top", _a), className),
        style: this.getDialogStyle()
      }), React__namespace.createElement("div", {
        className: MULTISTEP_DIALOG_PANELS
      }, this.renderLeftPanel(), this.maybeRenderRightPanel()));
    };
    MultistepDialog.prototype.componentDidUpdate = function (prevProps) {
      if ((prevProps.resetOnClose || prevProps.initialStepIndex !== this.props.initialStepIndex) && !prevProps.isOpen && this.props.isOpen) {
        this.setState(this.getInitialIndexFromProps(this.props));
      }
    };
    MultistepDialog.prototype.getDialogStyle = function () {
      return __assign({
        minWidth: MIN_WIDTH,
        paddingBottom: PADDING_BOTTOM
      }, this.props.style);
    };
    MultistepDialog.prototype.renderLeftPanel = function () {
      return React__namespace.createElement("div", {
        className: MULTISTEP_DIALOG_LEFT_PANEL
      }, this.getDialogStepChildren().filter(isDialogStepElement).map(this.renderDialogStep));
    };
    MultistepDialog.prototype.maybeRenderRightPanel = function () {
      var steps = this.getDialogStepChildren();
      if (steps.length <= this.state.selectedIndex) {
        return null;
      }
      var _a = steps[this.state.selectedIndex].props, className = _a.className, panel = _a.panel, panelClassName = _a.panelClassName;
      return React__namespace.createElement("div", {
        className: classNames(MULTISTEP_DIALOG_RIGHT_PANEL, className, panelClassName)
      }, panel, this.renderFooter());
    };
    MultistepDialog.prototype.renderFooter = function () {
      var _a = this.props, closeButtonProps = _a.closeButtonProps, isCloseButtonShown = _a.isCloseButtonShown, showCloseButtonInFooter = _a.showCloseButtonInFooter, onClose = _a.onClose;
      var isFooterCloseButtonVisible = showCloseButtonInFooter && isCloseButtonShown;
      var maybeCloseButton = !isFooterCloseButtonVisible ? undefined : React__namespace.createElement(Button, __assign({
        text: "Close",
        onClick: onClose
      }, closeButtonProps));
      return React__namespace.createElement("div", {
        className: MULTISTEP_DIALOG_FOOTER
      }, maybeCloseButton, React__namespace.createElement("div", {
        className: DIALOG_FOOTER_ACTIONS
      }, this.renderButtons()));
    };
    MultistepDialog.prototype.renderButtons = function () {
      var _a, _b;
      var selectedIndex = this.state.selectedIndex;
      var steps = this.getDialogStepChildren();
      var buttons = [];
      if (this.state.selectedIndex > 0) {
        var backButtonProps = (_a = steps[selectedIndex].props.backButtonProps) !== null && _a !== void 0 ? _a : this.props.backButtonProps;
        buttons.push(React__namespace.createElement(Button, __assign({
          key: "back",
          onClick: this.getDialogStepChangeHandler(selectedIndex - 1),
          text: "Back"
        }, backButtonProps)));
      }
      if (selectedIndex === this.getDialogStepChildren().length - 1) {
        buttons.push(React__namespace.createElement(Button, __assign({
          intent: "primary",
          key: "final",
          text: "Submit"
        }, this.props.finalButtonProps)));
      } else {
        var nextButtonProps = (_b = steps[selectedIndex].props.nextButtonProps) !== null && _b !== void 0 ? _b : this.props.nextButtonProps;
        buttons.push(React__namespace.createElement(Button, __assign({
          intent: "primary",
          key: "next",
          onClick: this.getDialogStepChangeHandler(selectedIndex + 1),
          text: "Next"
        }, nextButtonProps)));
      }
      return buttons;
    };
    MultistepDialog.prototype.getDialogStepChangeHandler = function (index) {
      var _this = this;
      return function (event) {
        if (_this.props.onChange !== undefined) {
          var steps = _this.getDialogStepChildren();
          var prevStepId = steps[_this.state.selectedIndex].props.id;
          var newStepId = steps[index].props.id;
          _this.props.onChange(newStepId, prevStepId, event);
        }
        _this.setState({
          lastViewedIndex: Math.max(_this.state.lastViewedIndex, index),
          selectedIndex: index
        });
      };
    };
    MultistepDialog.prototype.getDialogStepChildren = function (props) {
      if (props === void 0) {
        props = this.props;
      }
      return React__namespace.Children.toArray(props.children).filter(isDialogStepElement);
    };
    MultistepDialog.prototype.getInitialIndexFromProps = function (props) {
      if (props.initialStepIndex !== undefined) {
        var boundedInitialIndex = Math.max(0, Math.min(props.initialStepIndex, this.getDialogStepChildren(props).length - 1));
        return {
          lastViewedIndex: boundedInitialIndex,
          selectedIndex: boundedInitialIndex
        };
      } else {
        return {
          lastViewedIndex: 0,
          selectedIndex: 0
        };
      }
    };
    MultistepDialog.displayName = ("").concat(DISPLAYNAME_PREFIX, ".MultistepDialog");
    MultistepDialog.defaultProps = {
      canOutsideClickClose: true,
      isOpen: false,
      navigationPosition: "left",
      resetOnClose: true,
      showCloseButtonInFooter: false
    };
    return MultistepDialog;
  })(AbstractPureComponent2);
  function isDialogStepElement(child) {
    return isElementOfType(child, DialogStep);
  }
  (function (_super) {
    __extends(Divider, _super);
    function Divider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Divider.prototype.render = function () {
      var _a = this.props, className = _a.className, _b = _a.tagName, tagName = _b === void 0 ? "div" : _b, htmlProps = __rest(_a, ["className", "tagName"]);
      var classes = classNames(DIVIDER, className);
      return React__namespace.createElement(tagName, __assign(__assign({}, htmlProps), {
        className: classes
      }));
    };
    Divider.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Divider");
    return Divider;
  })(AbstractPureComponent2);
  var DrawerSize;
  (function (DrawerSize) {
    DrawerSize["SMALL"] = "360px";
    DrawerSize["STANDARD"] = "50%";
    DrawerSize["LARGE"] = "90%";
  })(DrawerSize || (DrawerSize = {}));
  (function (_super) {
    __extends(Drawer, _super);
    function Drawer() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Drawer.prototype.render = function () {
      var _a, _b;
      var _c;
      var _d = this.props, size = _d.size, style = _d.style, position = _d.position;
      var realPosition = getPositionIgnoreAngles(position);
      var classes = classNames(DRAWER, (_a = {}, _a[(_c = positionClass(realPosition)) !== null && _c !== void 0 ? _c : ""] = true, _a), this.props.className);
      var styleProp = size == null ? style : __assign(__assign({}, style), (_b = {}, _b[isPositionHorizontal(realPosition) ? "height" : "width"] = size, _b));
      return React__namespace.createElement(Overlay, __assign({}, this.props, {
        className: OVERLAY_CONTAINER
      }), React__namespace.createElement("div", {
        className: classes,
        style: styleProp
      }, this.maybeRenderHeader(), this.props.children));
    };
    Drawer.prototype.validateProps = function (props) {
      if (props.title == null) {
        if (props.icon != null) {
          console.warn(DIALOG_WARN_NO_HEADER_ICON);
        }
        if (props.isCloseButtonShown != null) {
          console.warn(DIALOG_WARN_NO_HEADER_CLOSE_BUTTON);
        }
      }
      if (props.position != null) {
        if (props.position !== getPositionIgnoreAngles(props.position)) {
          console.warn(DRAWER_ANGLE_POSITIONS_ARE_CASTED);
        }
      }
    };
    Drawer.prototype.maybeRenderCloseButton = function () {
      if (this.props.isCloseButtonShown !== false) {
        return React__namespace.createElement(Button, {
          "aria-label": "Close",
          className: DIALOG_CLOSE_BUTTON,
          icon: React__namespace.createElement(Icon, {
            icon: "small-cross",
            size: IconSize.LARGE
          }),
          minimal: true,
          onClick: this.props.onClose
        });
      } else {
        return null;
      }
    };
    Drawer.prototype.maybeRenderHeader = function () {
      var _a = this.props, icon = _a.icon, title = _a.title;
      if (title == null) {
        return null;
      }
      return React__namespace.createElement("div", {
        className: DRAWER_HEADER
      }, React__namespace.createElement(Icon, {
        icon: icon,
        size: IconSize.LARGE
      }), React__namespace.createElement(H4, null, title), this.maybeRenderCloseButton());
    };
    Drawer.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Drawer");
    Drawer.defaultProps = {
      canOutsideClickClose: true,
      isOpen: false,
      position: "right",
      style: {}
    };
    return Drawer;
  })(AbstractPureComponent2);
  var userAgent = typeof navigator !== "undefined" ? navigator.userAgent : "";
  var browser = {
    isEdge: (/Edge/).test(userAgent),
    isInternetExplorer: (/Trident|rv:11/).test(userAgent),
    isWebkit: (/AppleWebKit/).test(userAgent)
  };
  var Browser = {
    isEdge: function () {
      return browser.isEdge;
    },
    isInternetExplorer: function () {
      return browser.isInternetExplorer;
    },
    isWebkit: function () {
      return browser.isWebkit;
    }
  };
  var BUFFER_WIDTH_DEFAULT = 5;
  var BUFFER_WIDTH_IE = 30;
  (function (_super) {
    __extends(EditableText, _super);
    function EditableText(props, context) {
      var _this = _super.call(this, props, context) || this;
      _this.inputElement = null;
      _this.valueElement = null;
      _this.refHandlers = {
        content: function (spanElement) {
          _this.valueElement = spanElement;
        },
        input: function (input) {
          if (input != null) {
            _this.inputElement = input;
            if (!_this.props.alwaysRenderInput) {
              _this.inputElement.focus();
            }
            if (_this.state != null && _this.state.isEditing) {
              var supportsSelection = inputSupportsSelection(input);
              if (supportsSelection) {
                var length_1 = input.value.length;
                input.setSelectionRange(_this.props.selectAllOnFocus ? 0 : length_1, length_1);
              }
              if (!supportsSelection || !_this.props.selectAllOnFocus) {
                input.scrollLeft = input.scrollWidth;
              }
            }
          }
        }
      };
      _this.cancelEditing = function () {
        var _a, _b, _c, _d;
        var _e = _this.state, lastValue = _e.lastValue, value = _e.value;
        _this.setState({
          isEditing: false,
          value: lastValue
        });
        if (value !== lastValue) {
          (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, lastValue);
        }
        (_d = (_c = _this.props).onCancel) === null || _d === void 0 ? void 0 : _d.call(_c, lastValue);
      };
      _this.toggleEditing = function () {
        var _a, _b;
        if (_this.state.isEditing) {
          var value = _this.state.value;
          _this.setState({
            isEditing: false,
            lastValue: value
          });
          (_b = (_a = _this.props).onConfirm) === null || _b === void 0 ? void 0 : _b.call(_a, value);
        } else if (!_this.props.disabled) {
          _this.setState({
            isEditing: true
          });
        }
      };
      _this.handleFocus = function () {
        var _a = _this.props, alwaysRenderInput = _a.alwaysRenderInput, disabled = _a.disabled, selectAllOnFocus = _a.selectAllOnFocus;
        if (!disabled) {
          _this.setState({
            isEditing: true
          });
        }
        if (alwaysRenderInput && selectAllOnFocus && _this.inputElement != null) {
          var length_2 = _this.inputElement.value.length;
          _this.inputElement.setSelectionRange(0, length_2);
        }
      };
      _this.handleTextChange = function (event) {
        var _a, _b;
        var value = event.target.value;
        if (_this.props.value == null) {
          _this.setState({
            value: value
          });
        }
        (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, value);
      };
      _this.handleKeyEvent = function (event) {
        var altKey = event.altKey, ctrlKey = event.ctrlKey, metaKey = event.metaKey, shiftKey = event.shiftKey, which = event.which;
        if (which === ESCAPE) {
          _this.cancelEditing();
          return;
        }
        var hasModifierKey = altKey || ctrlKey || metaKey || shiftKey;
        if (which === ENTER) {
          if (altKey || shiftKey) {
            event.preventDefault();
          }
          if (_this.props.confirmOnEnterKey && _this.props.multiline) {
            if (event.target != null && hasModifierKey) {
              insertAtCaret(event.target, "\n");
              _this.handleTextChange(event);
            } else {
              _this.toggleEditing();
            }
          } else if (!_this.props.multiline || hasModifierKey) {
            _this.toggleEditing();
          }
        }
      };
      var value = props.value == null ? props.defaultValue : props.value;
      _this.state = {
        inputHeight: 0,
        inputWidth: 0,
        isEditing: props.isEditing === true && props.disabled === false,
        lastValue: value,
        value: value
      };
      return _this;
    }
    EditableText.prototype.render = function () {
      var _a;
      var _b;
      var _c = this.props, alwaysRenderInput = _c.alwaysRenderInput, disabled = _c.disabled, multiline = _c.multiline, contentId = _c.contentId;
      var value = (_b = this.props.value) !== null && _b !== void 0 ? _b : this.state.value;
      var hasValue = value != null && value !== "";
      var classes = classNames(EDITABLE_TEXT, intentClass(this.props.intent), (_a = {}, _a[DISABLED] = disabled, _a[EDITABLE_TEXT_EDITING] = this.state.isEditing, _a[EDITABLE_TEXT_PLACEHOLDER] = !hasValue, _a[MULTILINE] = multiline, _a), this.props.className);
      var contentStyle;
      if (multiline) {
        contentStyle = {
          height: !this.state.isEditing ? this.state.inputHeight : undefined
        };
      } else {
        contentStyle = {
          height: this.state.inputHeight,
          lineHeight: this.state.inputHeight != null ? ("").concat(this.state.inputHeight, "px") : undefined,
          minWidth: this.props.minWidth
        };
      }
      var tabIndex = alwaysRenderInput || this.state.isEditing || disabled ? undefined : 0;
      var shouldHideContents = alwaysRenderInput && !this.state.isEditing;
      var spanProps = contentId != null ? {
        id: contentId
      } : {};
      return React__namespace.createElement("div", {
        className: classes,
        onFocus: this.handleFocus,
        tabIndex: tabIndex
      }, alwaysRenderInput || this.state.isEditing ? this.renderInput(value) : undefined, shouldHideContents ? undefined : React__namespace.createElement("span", __assign({}, spanProps, {
        className: EDITABLE_TEXT_CONTENT,
        ref: this.refHandlers.content,
        style: contentStyle
      }), hasValue ? value : this.props.placeholder));
    };
    EditableText.prototype.componentDidMount = function () {
      this.updateInputDimensions();
    };
    EditableText.prototype.componentDidUpdate = function (prevProps, prevState) {
      var _a, _b;
      var newState = {};
      if (this.props.value !== prevProps.value && (prevProps.value != null || this.props.value != null)) {
        newState.value = this.props.value;
      }
      if (this.props.isEditing != null && this.props.isEditing !== prevProps.isEditing) {
        newState.isEditing = this.props.isEditing;
      }
      if (this.props.disabled || this.props.disabled == null && prevProps.disabled) {
        newState.isEditing = false;
      }
      this.setState(newState);
      if (this.state.isEditing && !prevState.isEditing) {
        (_b = (_a = this.props).onEdit) === null || _b === void 0 ? void 0 : _b.call(_a, this.state.value);
      }
      if (this.state.value !== prevState.value || this.props.alwaysRenderInput !== prevProps.alwaysRenderInput || this.props.maxLines !== prevProps.maxLines || this.props.minLines !== prevProps.minLines || this.props.minWidth !== prevProps.minWidth || this.props.multiline !== prevProps.multiline) {
        this.updateInputDimensions();
      }
    };
    EditableText.prototype.renderInput = function (value) {
      var _a = this.props, disabled = _a.disabled, maxLength = _a.maxLength, multiline = _a.multiline, type = _a.type, placeholder = _a.placeholder;
      var props = {
        className: EDITABLE_TEXT_INPUT,
        disabled: disabled,
        maxLength: maxLength,
        onBlur: this.toggleEditing,
        onChange: this.handleTextChange,
        onKeyDown: this.handleKeyEvent,
        placeholder: placeholder,
        value: value
      };
      var _b = this.state, inputHeight = _b.inputHeight, inputWidth = _b.inputWidth;
      if (inputHeight !== 0 && inputWidth !== 0) {
        props.style = {
          height: inputHeight,
          lineHeight: !multiline && inputHeight != null ? ("").concat(inputHeight, "px") : undefined,
          width: multiline ? "100%" : inputWidth
        };
      }
      return multiline ? React__namespace.createElement("textarea", __assign({
        ref: this.refHandlers.input
      }, props)) : React__namespace.createElement("input", __assign({
        ref: this.refHandlers.input,
        type: type
      }, props));
    };
    EditableText.prototype.updateInputDimensions = function () {
      if (this.valueElement != null) {
        var _a = this.props, maxLines = _a.maxLines, minLines = _a.minLines, minWidth = _a.minWidth, multiline = _a.multiline;
        var _b = this.valueElement, parentElement_1 = _b.parentElement, textContent = _b.textContent;
        var _c = this.valueElement, scrollHeight_1 = _c.scrollHeight, scrollWidth = _c.scrollWidth;
        var lineHeight = getLineHeight(this.valueElement);
        if (multiline && this.state.isEditing && (/\n$/).test(textContent !== null && textContent !== void 0 ? textContent : "")) {
          scrollHeight_1 += lineHeight;
        }
        if (lineHeight > 0) {
          scrollHeight_1 = clamp(scrollHeight_1, minLines * lineHeight, maxLines * lineHeight);
        }
        scrollHeight_1 = Math.max(scrollHeight_1, getFontSize(this.valueElement) + 1, getLineHeight(parentElement_1));
        scrollWidth += Browser.isInternetExplorer() ? BUFFER_WIDTH_IE : BUFFER_WIDTH_DEFAULT;
        this.setState({
          inputHeight: scrollHeight_1,
          inputWidth: Math.max(scrollWidth, minWidth)
        });
        if (multiline && this.state.isEditing) {
          this.setTimeout(function () {
            return parentElement_1.style.height = ("").concat(scrollHeight_1, "px");
          });
        }
      }
    };
    EditableText.displayName = ("").concat(DISPLAYNAME_PREFIX, ".EditableText");
    EditableText.defaultProps = {
      alwaysRenderInput: false,
      confirmOnEnterKey: false,
      defaultValue: "",
      disabled: false,
      maxLines: Infinity,
      minLines: 1,
      minWidth: 80,
      multiline: false,
      placeholder: "Click to Edit",
      type: "text"
    };
    return EditableText;
  })(AbstractPureComponent2);
  function getFontSize(element) {
    var fontSize = getComputedStyle(element).fontSize;
    return fontSize === "" ? 0 : parseInt(fontSize.slice(0, -2), 10);
  }
  function getLineHeight(element) {
    var lineHeight = parseInt(getComputedStyle(element).lineHeight.slice(0, -2), 10);
    if (isNaN(lineHeight)) {
      var line = document.createElement("span");
      line.innerHTML = "<br>";
      element.appendChild(line);
      var singleLineHeight = element.offsetHeight;
      line.innerHTML = "<br><br>";
      var doubleLineHeight = element.offsetHeight;
      element.removeChild(line);
      lineHeight = doubleLineHeight - singleLineHeight;
    }
    return lineHeight;
  }
  function insertAtCaret(el, text) {
    var selectionEnd = el.selectionEnd, selectionStart = el.selectionStart, value = el.value;
    if (selectionStart >= 0) {
      var before_1 = value.substring(0, selectionStart);
      var after_1 = value.substring(selectionEnd, value.length);
      var len = text.length;
      el.value = ("").concat(before_1).concat(text).concat(after_1);
      el.selectionStart = selectionStart + len;
      el.selectionEnd = selectionStart + len;
    }
  }
  function inputSupportsSelection(input) {
    switch (input.type) {
      case "textarea":
        return true;
      case "text":
      case "search":
      case "tel":
      case "url":
      case "password":
        return true;
      default:
        return false;
    }
  }
  var ControlGroup = (function (_super) {
    __extends(ControlGroup, _super);
    function ControlGroup() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ControlGroup.prototype.render = function () {
      var _a;
      var _b = this.props, children = _b.children, className = _b.className, fill = _b.fill, vertical = _b.vertical, htmlProps = __rest(_b, ["children", "className", "fill", "vertical"]);
      var rootClasses = classNames(CONTROL_GROUP, (_a = {}, _a[FILL] = fill, _a[VERTICAL] = vertical, _a), className);
      return React__namespace.createElement("div", __assign({}, htmlProps, {
        className: rootClasses
      }), children);
    };
    ControlGroup.displayName = ("").concat(DISPLAYNAME_PREFIX, ".ControlGroup");
    return ControlGroup;
  })(AbstractPureComponent2);
  var Control = function (_a) {
    var _b;
    var alignIndicator = _a.alignIndicator, children = _a.children, className = _a.className, indicatorChildren = _a.indicatorChildren, inline = _a.inline, inputRef = _a.inputRef, label = _a.label, labelElement = _a.labelElement, large = _a.large, style = _a.style, type = _a.type, typeClassName = _a.typeClassName, _c = _a.tagName, tagName = _c === void 0 ? "label" : _c, htmlProps = __rest(_a, ["alignIndicator", "children", "className", "indicatorChildren", "inline", "inputRef", "label", "labelElement", "large", "style", "type", "typeClassName", "tagName"]);
    var classes = classNames(CONTROL, typeClassName, (_b = {}, _b[DISABLED] = htmlProps.disabled, _b[INLINE] = inline, _b[LARGE] = large, _b), alignmentClass(alignIndicator), className);
    return React__namespace.createElement(tagName, {
      className: classes,
      style: style
    }, React__namespace.createElement("input", __assign({}, htmlProps, {
      ref: inputRef,
      type: type
    })), React__namespace.createElement("span", {
      className: CONTROL_INDICATOR
    }, indicatorChildren), label, labelElement, children);
  };
  (function (_super) {
    __extends(Switch, _super);
    function Switch() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Switch.prototype.render = function () {
      var _a = this.props, innerLabelChecked = _a.innerLabelChecked, innerLabel = _a.innerLabel, controlProps = __rest(_a, ["innerLabelChecked", "innerLabel"]);
      var switchLabels = innerLabel || innerLabelChecked ? [React__namespace.createElement("div", {
        key: "checked",
        className: CONTROL_INDICATOR_CHILD
      }, React__namespace.createElement("div", {
        className: SWITCH_INNER_TEXT
      }, innerLabelChecked ? innerLabelChecked : innerLabel)), React__namespace.createElement("div", {
        key: "unchecked",
        className: CONTROL_INDICATOR_CHILD
      }, React__namespace.createElement("div", {
        className: SWITCH_INNER_TEXT
      }, innerLabel))] : null;
      return React__namespace.createElement(Control, __assign({}, controlProps, {
        type: "checkbox",
        typeClassName: SWITCH,
        indicatorChildren: switchLabels
      }));
    };
    Switch.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Switch");
    return Switch;
  })(AbstractPureComponent2);
  var Radio = (function (_super) {
    __extends(Radio, _super);
    function Radio() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Radio.prototype.render = function () {
      return React__namespace.createElement(Control, __assign({}, this.props, {
        type: "radio",
        typeClassName: RADIO
      }));
    };
    Radio.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Radio");
    return Radio;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(Checkbox, _super);
    function Checkbox() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        indeterminate: _this.props.indeterminate || _this.props.defaultIndeterminate || false
      };
      _this.input = null;
      _this.handleInputRef = refHandler(_this, "input", _this.props.inputRef);
      _this.handleChange = function (evt) {
        var _a, _b;
        var indeterminate = evt.target.indeterminate;
        if (_this.props.indeterminate == null) {
          _this.setState({
            indeterminate: indeterminate
          });
        }
        (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, evt);
      };
      return _this;
    }
    Checkbox.getDerivedStateFromProps = function (_a) {
      var indeterminate = _a.indeterminate;
      if (indeterminate != null) {
        return {
          indeterminate: indeterminate
        };
      }
      return null;
    };
    Checkbox.prototype.render = function () {
      var _a = this.props;
      _a.defaultIndeterminate;
      _a.indeterminate;
      var controlProps = __rest(_a, ["defaultIndeterminate", "indeterminate"]);
      return React__namespace.createElement(Control, __assign({}, controlProps, {
        inputRef: this.handleInputRef,
        onChange: this.handleChange,
        type: "checkbox",
        typeClassName: CHECKBOX
      }));
    };
    Checkbox.prototype.componentDidMount = function () {
      this.updateIndeterminate();
    };
    Checkbox.prototype.componentDidUpdate = function (prevProps) {
      this.updateIndeterminate();
      if (prevProps.inputRef !== this.props.inputRef) {
        setRef$1(prevProps.inputRef, null);
        this.handleInputRef = refHandler(this, "input", this.props.inputRef);
        setRef$1(this.props.inputRef, this.input);
      }
    };
    Checkbox.prototype.updateIndeterminate = function () {
      if (this.input != null) {
        this.input.indeterminate = this.state.indeterminate;
      }
    };
    Checkbox.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Checkbox");
    return Checkbox;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(FileInput, _super);
    function FileInput() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleInputChange = function (e) {
        var _a, _b, _c, _d;
        (_b = (_a = _this.props).onInputChange) === null || _b === void 0 ? void 0 : _b.call(_a, e);
        (_d = (_c = _this.props.inputProps) === null || _c === void 0 ? void 0 : _c.onChange) === null || _d === void 0 ? void 0 : _d.call(_c, e);
      };
      return _this;
    }
    FileInput.prototype.render = function () {
      var _a, _b, _c;
      var _d = this.props, buttonText = _d.buttonText, className = _d.className, disabled = _d.disabled, fill = _d.fill, hasSelection = _d.hasSelection, inputProps = _d.inputProps, large = _d.large;
      _d.onInputChange;
      var text = _d.text, htmlProps = __rest(_d, ["buttonText", "className", "disabled", "fill", "hasSelection", "inputProps", "large", "onInputChange", "text"]);
      var rootClasses = classNames(FILE_INPUT, (_a = {}, _a[FILE_INPUT_HAS_SELECTION] = hasSelection, _a[DISABLED] = disabled, _a[FILL] = fill, _a[LARGE] = large, _a), className);
      var NS = getClassNamespace();
      var uploadProps = (_b = {}, _b[("").concat(NS, "-button-text")] = buttonText, _b.className = classNames(FILE_UPLOAD_INPUT, (_c = {}, _c[FILE_UPLOAD_INPUT_CUSTOM_TEXT] = !!buttonText, _c)), _b);
      return React__namespace.createElement("label", __assign({}, htmlProps, {
        className: rootClasses
      }), React__namespace.createElement("input", __assign({}, inputProps, {
        onChange: this.handleInputChange,
        type: "file",
        disabled: disabled
      })), React__namespace.createElement("span", __assign({}, uploadProps), text));
    };
    FileInput.displayName = ("").concat(DISPLAYNAME_PREFIX, ".FileInput");
    FileInput.defaultProps = {
      hasSelection: false,
      inputProps: {},
      text: "Choose file..."
    };
    return FileInput;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(FormGroup, _super);
    function FormGroup() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    FormGroup.prototype.render = function () {
      var _a = this.props, children = _a.children, contentClassName = _a.contentClassName, helperText = _a.helperText, label = _a.label, labelFor = _a.labelFor, labelInfo = _a.labelInfo, style = _a.style, subLabel = _a.subLabel;
      return React__namespace.createElement("div", {
        className: this.getClassName(),
        style: style
      }, label && React__namespace.createElement("label", {
        className: LABEL,
        htmlFor: labelFor
      }, label, " ", React__namespace.createElement("span", {
        className: TEXT_MUTED
      }, labelInfo)), subLabel && React__namespace.createElement("div", {
        className: FORM_GROUP_SUB_LABEL
      }, subLabel), React__namespace.createElement("div", {
        className: classNames(FORM_CONTENT, contentClassName)
      }, children, helperText && React__namespace.createElement("div", {
        className: FORM_HELPER_TEXT
      }, helperText)));
    };
    FormGroup.prototype.getClassName = function () {
      var _a;
      var _b = this.props, className = _b.className, disabled = _b.disabled, inline = _b.inline, intent = _b.intent;
      return classNames(FORM_GROUP, intentClass(intent), (_a = {}, _a[DISABLED] = disabled, _a[INLINE] = inline, _a), className);
    };
    FormGroup.displayName = ("").concat(DISPLAYNAME_PREFIX, ".FormGroup");
    return FormGroup;
  })(AbstractPureComponent2);
  var AsyncControllableInput = (function (_super) {
    __extends(AsyncControllableInput, _super);
    function AsyncControllableInput() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        hasPendingUpdate: false,
        isComposing: false,
        nextValue: _this.props.value,
        value: _this.props.value
      };
      _this.cancelPendingCompositionEnd = null;
      _this.handleCompositionStart = function (e) {
        var _a, _b, _c;
        (_a = _this.cancelPendingCompositionEnd) === null || _a === void 0 ? void 0 : _a.call(_this);
        _this.setState({
          isComposing: true
        });
        (_c = (_b = _this.props).onCompositionStart) === null || _c === void 0 ? void 0 : _c.call(_b, e);
      };
      _this.handleCompositionEnd = function (e) {
        var _a, _b;
        _this.cancelPendingCompositionEnd = _this.setTimeout(function () {
          return _this.setState({
            isComposing: false
          });
        }, AsyncControllableInput.COMPOSITION_END_DELAY);
        (_b = (_a = _this.props).onCompositionEnd) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handleChange = function (e) {
        var _a, _b;
        var value = e.target.value;
        _this.setState({
          nextValue: value
        });
        (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      return _this;
    }
    AsyncControllableInput.getDerivedStateFromProps = function (nextProps, nextState) {
      if (nextState.isComposing || nextProps.value === undefined) {
        return null;
      }
      var userTriggeredUpdate = nextState.nextValue !== nextState.value;
      if (userTriggeredUpdate) {
        if (nextProps.value === nextState.nextValue) {
          if (nextState.hasPendingUpdate) {
            return {
              value: nextProps.value,
              hasPendingUpdate: false
            };
          } else {
            return {
              value: nextState.nextValue
            };
          }
        } else {
          if (nextProps.value === nextState.value) {
            return {
              hasPendingUpdate: true
            };
          }
          return {
            value: nextProps.value,
            nextValue: nextProps.value,
            hasPendingUpdate: false
          };
        }
      } else {
        return {
          value: nextProps.value,
          nextValue: nextProps.value,
          hasPendingUpdate: false
        };
      }
    };
    AsyncControllableInput.prototype.render = function () {
      var _a = this.state, isComposing = _a.isComposing, hasPendingUpdate = _a.hasPendingUpdate, value = _a.value, nextValue = _a.nextValue;
      var _b = this.props, inputRef = _b.inputRef, restProps = __rest(_b, ["inputRef"]);
      return React__namespace.createElement("input", __assign({}, restProps, {
        ref: inputRef,
        value: isComposing || hasPendingUpdate ? nextValue : value,
        onCompositionStart: this.handleCompositionStart,
        onCompositionEnd: this.handleCompositionEnd,
        onChange: this.handleChange
      }));
    };
    AsyncControllableInput.displayName = ("").concat(DISPLAYNAME_PREFIX, ".AsyncControllableInput");
    AsyncControllableInput.COMPOSITION_END_DELAY = 10;
    return AsyncControllableInput;
  })(AbstractPureComponent2);
  var InputGroup = (function (_super) {
    __extends(InputGroup, _super);
    function InputGroup() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {};
      _this.leftElement = null;
      _this.rightElement = null;
      _this.refHandlers = {
        leftElement: function (ref) {
          return _this.leftElement = ref;
        },
        rightElement: function (ref) {
          return _this.rightElement = ref;
        }
      };
      return _this;
    }
    InputGroup.prototype.render = function () {
      var _a;
      var _b = this.props, _c = _b.asyncControl, asyncControl = _c === void 0 ? false : _c, className = _b.className, disabled = _b.disabled, fill = _b.fill, inputRef = _b.inputRef, intent = _b.intent, large = _b.large, small = _b.small, round = _b.round;
      var inputGroupClasses = classNames(INPUT_GROUP, intentClass(intent), (_a = {}, _a[DISABLED] = disabled, _a[FILL] = fill, _a[LARGE] = large, _a[SMALL] = small, _a[ROUND] = round, _a), className);
      var style = __assign(__assign({}, this.props.style), {
        paddingLeft: this.state.leftElementWidth,
        paddingRight: this.state.rightElementWidth
      });
      var inputProps = __assign(__assign({
        type: "text"
      }, removeNonHTMLProps(this.props)), {
        className: INPUT,
        style: style
      });
      return React__namespace.createElement("div", {
        className: inputGroupClasses
      }, this.maybeRenderLeftElement(), asyncControl ? React__namespace.createElement(AsyncControllableInput, __assign({}, inputProps, {
        inputRef: inputRef
      })) : React__namespace.createElement("input", __assign({}, inputProps, {
        ref: inputRef
      })), this.maybeRenderRightElement());
    };
    InputGroup.prototype.componentDidMount = function () {
      this.updateInputWidth();
    };
    InputGroup.prototype.componentDidUpdate = function (prevProps) {
      var _a = this.props, leftElement = _a.leftElement, rightElement = _a.rightElement;
      if (prevProps.leftElement !== leftElement || prevProps.rightElement !== rightElement) {
        this.updateInputWidth();
      }
    };
    InputGroup.prototype.validateProps = function (props) {
      if (props.leftElement != null && props.leftIcon != null) {
        console.warn(INPUT_WARN_LEFT_ELEMENT_LEFT_ICON_MUTEX);
      }
    };
    InputGroup.prototype.maybeRenderLeftElement = function () {
      var _a = this.props, leftElement = _a.leftElement, leftIcon = _a.leftIcon;
      if (leftElement != null) {
        return React__namespace.createElement("span", {
          className: INPUT_LEFT_CONTAINER,
          ref: this.refHandlers.leftElement
        }, leftElement);
      } else if (leftIcon != null) {
        return React__namespace.createElement(Icon, {
          icon: leftIcon,
          "aria-hidden": true,
          tabIndex: -1
        });
      }
      return undefined;
    };
    InputGroup.prototype.maybeRenderRightElement = function () {
      var rightElement = this.props.rightElement;
      if (rightElement == null) {
        return undefined;
      }
      return React__namespace.createElement("span", {
        className: INPUT_ACTION,
        ref: this.refHandlers.rightElement
      }, rightElement);
    };
    InputGroup.prototype.updateInputWidth = function () {
      var _a = this.state, leftElementWidth = _a.leftElementWidth, rightElementWidth = _a.rightElementWidth;
      if (this.leftElement != null) {
        var clientWidth = this.leftElement.clientWidth;
        if (leftElementWidth === undefined || Math.abs(clientWidth - leftElementWidth) > 2) {
          this.setState({
            leftElementWidth: clientWidth
          });
        }
      } else {
        this.setState({
          leftElementWidth: undefined
        });
      }
      if (this.rightElement != null) {
        var clientWidth = this.rightElement.clientWidth;
        if (rightElementWidth === undefined || Math.abs(clientWidth - rightElementWidth) > 2) {
          this.setState({
            rightElementWidth: clientWidth
          });
        }
      } else {
        this.setState({
          rightElementWidth: undefined
        });
      }
    };
    InputGroup.displayName = ("").concat(DISPLAYNAME_PREFIX, ".InputGroup");
    return InputGroup;
  })(AbstractPureComponent2);
  function getDecimalSeparator(locale) {
    var testNumber = 1.9;
    var testText = testNumber.toLocaleString(locale);
    var one = (1).toLocaleString(locale);
    var nine = (9).toLocaleString(locale);
    var pattern = ("").concat(one, "(.+)").concat(nine);
    var result = new RegExp(pattern).exec(testText);
    return result && result[1] || ".";
  }
  function toLocaleString(num, locale) {
    if (locale === void 0) {
      locale = "en-US";
    }
    return sanitizeNumericInput(num.toLocaleString(locale), locale);
  }
  function clampValue(value, min, max) {
    var adjustedMin = min != null ? min : -Infinity;
    var adjustedMax = max != null ? max : Infinity;
    return clamp(value, adjustedMin, adjustedMax);
  }
  function getValueOrEmptyValue(value) {
    if (value === void 0) {
      value = "";
    }
    return value.toString();
  }
  function transformLocalizedNumberToStringNumber(character, locale) {
    var charactersMap = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(function (value) {
      return value.toLocaleString(locale);
    });
    var jsNumber = charactersMap.indexOf(character);
    if (jsNumber !== -1) {
      return jsNumber;
    } else {
      return character;
    }
  }
  function parseStringToStringNumber(value, locale) {
    var valueAsString = "" + value;
    if (parseFloat(valueAsString).toString() === value.toString()) {
      return value.toString();
    }
    if (locale !== undefined) {
      var decimalSeparator = getDecimalSeparator(locale);
      var sanitizedString = sanitizeNumericInput(valueAsString, locale);
      return sanitizedString.split("").map(function (character) {
        return transformLocalizedNumberToStringNumber(character, locale);
      }).join("").replace(decimalSeparator, ".");
    }
    return value.toString();
  }
  function isValueNumeric(value, locale) {
    var stringToStringNumber = parseStringToStringNumber(value, locale);
    return value != null && stringToStringNumber - parseFloat(stringToStringNumber) + 1 >= 0;
  }
  function isValidNumericKeyboardEvent(e, locale) {
    if (e.key == null) {
      return true;
    }
    if (e.ctrlKey || e.altKey || e.metaKey) {
      return true;
    }
    var isSingleCharKey = e.key.length === 1;
    if (!isSingleCharKey) {
      return true;
    }
    return isFloatingPointNumericCharacter(e.key, locale);
  }
  function isFloatingPointNumericCharacter(character, locale) {
    if (locale !== undefined) {
      var decimalSeparator = getDecimalSeparator(locale).replace(".", "\\.");
      var numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(function (value) {
        return value.toLocaleString(locale);
      }).join("");
      var localeFloatingPointNumericCharacterRegex = new RegExp("^[Ee" + numbers + "\\+\\-" + decimalSeparator + "]$");
      return localeFloatingPointNumericCharacterRegex.test(character);
    } else {
      var floatingPointNumericCharacterRegex = /^[Ee0-9\+\-\.]$/;
      return floatingPointNumericCharacterRegex.test(character);
    }
  }
  function toMaxPrecision(value, maxPrecision) {
    var scaleFactor = Math.pow(10, maxPrecision);
    return Math.round(value * scaleFactor) / scaleFactor;
  }
  function convertFullWidthNumbersToAscii(value) {
    return value.replace(/[\uFF10-\uFF19]/g, function (m) {
      return String.fromCharCode(m.charCodeAt(0) - 0xfee0);
    });
  }
  function sanitizeNumericInput(value, locale) {
    var valueChars = convertFullWidthNumbersToAscii(value).split("");
    var sanitizedValueChars = valueChars.filter(function (valueChar) {
      return isFloatingPointNumericCharacter(valueChar, locale);
    });
    return sanitizedValueChars.join("");
  }
  var IncrementDirection;
  (function (IncrementDirection) {
    IncrementDirection[IncrementDirection["DOWN"] = -1] = "DOWN";
    IncrementDirection[IncrementDirection["UP"] = 1] = "UP";
  })(IncrementDirection || (IncrementDirection = {}));
  var NON_HTML_PROPS = ["allowNumericCharactersOnly", "buttonPosition", "clampValueOnBlur", "className", "defaultValue", "majorStepSize", "minorStepSize", "onButtonClick", "onValueChange", "selectAllOnFocus", "selectAllOnIncrement", "stepSize"];
  (function (_super) {
    __extends(NumericInput, _super);
    function NumericInput() {
      var _this = this;
      var _a;
      _this = _super.apply(this, arguments) || this;
      _this.numericInputId = uniqueId("numericInput");
      _this.state = {
        currentImeInputInvalid: false,
        shouldSelectAfterUpdate: false,
        stepMaxPrecision: NumericInput.getStepMaxPrecision(_this.props),
        value: getValueOrEmptyValue((_a = _this.props.value) !== null && _a !== void 0 ? _a : _this.props.defaultValue)
      };
      _this.didPasteEventJustOccur = false;
      _this.delta = 0;
      _this.inputElement = null;
      _this.inputRef = refHandler(_this, "inputElement", _this.props.inputRef);
      _this.incrementButtonHandlers = _this.getButtonEventHandlers(IncrementDirection.UP);
      _this.decrementButtonHandlers = _this.getButtonEventHandlers(IncrementDirection.DOWN);
      _this.getCurrentValueAsNumber = function () {
        return Number(parseStringToStringNumber(_this.state.value, _this.props.locale));
      };
      _this.handleButtonClick = function (e, direction) {
        var _a, _b;
        var delta = _this.updateDelta(direction, e);
        var nextValue = _this.incrementValue(delta);
        (_b = (_a = _this.props).onButtonClick) === null || _b === void 0 ? void 0 : _b.call(_a, Number(parseStringToStringNumber(nextValue, _this.props.locale)), nextValue);
      };
      _this.stopContinuousChange = function () {
        _this.delta = 0;
        _this.clearTimeouts();
        clearInterval(_this.intervalId);
        document.removeEventListener("mouseup", _this.stopContinuousChange);
      };
      _this.handleContinuousChange = function () {
        var _a, _b, _c, _d;
        if (_this.props.min !== undefined || _this.props.max !== undefined) {
          var min = (_a = _this.props.min) !== null && _a !== void 0 ? _a : -Infinity;
          var max = (_b = _this.props.max) !== null && _b !== void 0 ? _b : Infinity;
          var valueAsNumber = _this.getCurrentValueAsNumber();
          if (valueAsNumber <= min || valueAsNumber >= max) {
            _this.stopContinuousChange();
            return;
          }
        }
        var nextValue = _this.incrementValue(_this.delta);
        (_d = (_c = _this.props).onButtonClick) === null || _d === void 0 ? void 0 : _d.call(_c, Number(parseStringToStringNumber(nextValue, _this.props.locale)), nextValue);
      };
      _this.handleInputFocus = function (e) {
        var _a, _b;
        _this.setState({
          shouldSelectAfterUpdate: _this.props.selectAllOnFocus
        });
        (_b = (_a = _this.props).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handleInputBlur = function (e) {
        var _a, _b;
        _this.setState({
          shouldSelectAfterUpdate: false
        });
        if (_this.props.clampValueOnBlur) {
          var value = e.target.value;
          _this.handleNextValue(_this.roundAndClampValue(value));
        }
        (_b = (_a = _this.props).onBlur) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handleInputKeyDown = function (e) {
        var _a, _b;
        if (_this.props.disabled || _this.props.readOnly) {
          return;
        }
        var keyCode = e.keyCode;
        var direction;
        if (keyCode === ARROW_UP) {
          direction = IncrementDirection.UP;
        } else if (keyCode === ARROW_DOWN) {
          direction = IncrementDirection.DOWN;
        }
        if (direction !== undefined) {
          e.preventDefault();
          var delta = _this.updateDelta(direction, e);
          _this.incrementValue(delta);
        }
        (_b = (_a = _this.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handleCompositionEnd = function (e) {
        if (_this.props.allowNumericCharactersOnly) {
          _this.handleNextValue(sanitizeNumericInput(e.data, _this.props.locale));
          _this.setState({
            currentImeInputInvalid: false
          });
        }
      };
      _this.handleCompositionUpdate = function (e) {
        if (_this.props.allowNumericCharactersOnly) {
          var data = e.data;
          var sanitizedValue = sanitizeNumericInput(data, _this.props.locale);
          if (sanitizedValue.length === 0 && data.length > 0) {
            _this.setState({
              currentImeInputInvalid: true
            });
          } else {
            _this.setState({
              currentImeInputInvalid: false
            });
          }
        }
      };
      _this.handleInputKeyPress = function (e) {
        var _a, _b;
        if (_this.props.allowNumericCharactersOnly && !isValidNumericKeyboardEvent(e, _this.props.locale)) {
          e.preventDefault();
        }
        (_b = (_a = _this.props).onKeyPress) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handleInputPaste = function (e) {
        var _a, _b;
        _this.didPasteEventJustOccur = true;
        (_b = (_a = _this.props).onPaste) === null || _b === void 0 ? void 0 : _b.call(_a, e);
      };
      _this.handleInputChange = function (e) {
        var value = e.target.value;
        var nextValue = value;
        if (_this.props.allowNumericCharactersOnly && _this.didPasteEventJustOccur) {
          _this.didPasteEventJustOccur = false;
          nextValue = sanitizeNumericInput(value, _this.props.locale);
        }
        _this.handleNextValue(nextValue);
        _this.setState({
          shouldSelectAfterUpdate: false
        });
      };
      return _this;
    }
    NumericInput.getDerivedStateFromProps = function (props, state) {
      var _a, _b;
      var nextState = {
        prevMaxProp: props.max,
        prevMinProp: props.min
      };
      var didMinChange = props.min !== state.prevMinProp;
      var didMaxChange = props.max !== state.prevMaxProp;
      var didBoundsChange = didMinChange || didMaxChange;
      var value = (_b = (_a = props.value) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : state.value;
      var stepMaxPrecision = NumericInput.getStepMaxPrecision(props);
      var sanitizedValue = value !== NumericInput.VALUE_EMPTY ? NumericInput.roundAndClampValue(value, stepMaxPrecision, props.min, props.max, 0, props.locale) : NumericInput.VALUE_EMPTY;
      if (didBoundsChange && sanitizedValue !== state.value) {
        return __assign(__assign({}, nextState), {
          stepMaxPrecision: stepMaxPrecision,
          value: sanitizedValue
        });
      }
      return __assign(__assign({}, nextState), {
        stepMaxPrecision: stepMaxPrecision,
        value: value
      });
    };
    NumericInput.getStepMaxPrecision = function (props) {
      if (props.minorStepSize != null) {
        return countDecimalPlaces(props.minorStepSize);
      } else {
        return countDecimalPlaces(props.stepSize);
      }
    };
    NumericInput.roundAndClampValue = function (value, stepMaxPrecision, min, max, delta, locale) {
      if (delta === void 0) {
        delta = 0;
      }
      if (!isValueNumeric(value, locale)) {
        return NumericInput.VALUE_EMPTY;
      }
      var currentValue = parseStringToStringNumber(value, locale);
      var nextValue = toMaxPrecision(Number(currentValue) + delta, stepMaxPrecision);
      var clampedValue = clampValue(nextValue, min, max);
      return toLocaleString(clampedValue, locale);
    };
    NumericInput.prototype.render = function () {
      var _a;
      var _b = this.props, buttonPosition = _b.buttonPosition, className = _b.className, fill = _b.fill, large = _b.large;
      var containerClasses = classNames(NUMERIC_INPUT, (_a = {}, _a[LARGE] = large, _a), className);
      var buttons = this.renderButtons();
      return React__namespace.createElement(ControlGroup, {
        className: containerClasses,
        fill: fill
      }, buttonPosition === Position.LEFT && buttons, this.renderInput(), buttonPosition === Position.RIGHT && buttons);
    };
    NumericInput.prototype.componentDidUpdate = function (prevProps, prevState) {
      var _a, _b, _c;
      _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
      if (prevProps.inputRef !== this.props.inputRef) {
        setRef$1(prevProps.inputRef, null);
        this.inputRef = refHandler(this, "inputElement", this.props.inputRef);
        setRef$1(this.props.inputRef, this.inputElement);
      }
      if (this.state.shouldSelectAfterUpdate) {
        (_a = this.inputElement) === null || _a === void 0 ? void 0 : _a.setSelectionRange(0, this.state.value.length);
      }
      var didMinChange = this.props.min !== prevProps.min;
      var didMaxChange = this.props.max !== prevProps.max;
      var didBoundsChange = didMinChange || didMaxChange;
      var didLocaleChange = this.props.locale !== prevProps.locale;
      var didValueChange = this.state.value !== prevState.value;
      if (didBoundsChange && didValueChange || didLocaleChange && prevState.value !== NumericInput.VALUE_EMPTY) {
        var valueToParse = didLocaleChange ? prevState.value : this.state.value;
        var valueAsString = parseStringToStringNumber(valueToParse, prevProps.locale);
        var localizedValue = toLocaleString(+valueAsString, this.props.locale);
        (_c = (_b = this.props).onValueChange) === null || _c === void 0 ? void 0 : _c.call(_b, +valueAsString, localizedValue, this.inputElement);
      }
    };
    NumericInput.prototype.validateProps = function (nextProps) {
      var majorStepSize = nextProps.majorStepSize, max = nextProps.max, min = nextProps.min, minorStepSize = nextProps.minorStepSize, stepSize = nextProps.stepSize, value = nextProps.value;
      if (min != null && max != null && min > max) {
        console.error(NUMERIC_INPUT_MIN_MAX);
      }
      if (stepSize <= 0) {
        console.error(NUMERIC_INPUT_STEP_SIZE_NON_POSITIVE);
      }
      if (minorStepSize && minorStepSize <= 0) {
        console.error(NUMERIC_INPUT_MINOR_STEP_SIZE_NON_POSITIVE);
      }
      if (majorStepSize && majorStepSize <= 0) {
        console.error(NUMERIC_INPUT_MAJOR_STEP_SIZE_NON_POSITIVE);
      }
      if (minorStepSize && minorStepSize > stepSize) {
        console.error(NUMERIC_INPUT_MINOR_STEP_SIZE_BOUND);
      }
      if (majorStepSize && majorStepSize < stepSize) {
        console.error(NUMERIC_INPUT_MAJOR_STEP_SIZE_BOUND);
      }
      if (value != null) {
        var stepMaxPrecision = NumericInput.getStepMaxPrecision(nextProps);
        var sanitizedValue = NumericInput.roundAndClampValue(value.toString(), stepMaxPrecision, min, max, 0, this.props.locale);
        var valueDoesNotMatch = sanitizedValue !== value.toString();
        var localizedValue = toLocaleString(Number(parseStringToStringNumber(value, this.props.locale)), this.props.locale);
        var isNotLocalized = sanitizedValue !== localizedValue;
        if (valueDoesNotMatch && isNotLocalized) {
          console.warn(NUMERIC_INPUT_CONTROLLED_VALUE_INVALID);
        }
      }
    };
    NumericInput.prototype.renderButtons = function () {
      var _a = this.props, intent = _a.intent, max = _a.max, min = _a.min, locale = _a.locale;
      var value = parseStringToStringNumber(this.state.value, locale);
      var disabled = this.props.disabled || this.props.readOnly;
      var isIncrementDisabled = max !== undefined && value !== "" && +value >= max;
      var isDecrementDisabled = min !== undefined && value !== "" && +value <= min;
      return React__namespace.createElement(ButtonGroup, {
        className: FIXED,
        key: "button-group",
        vertical: true
      }, React__namespace.createElement(Button, __assign({
        "aria-label": "increment",
        "aria-controls": this.numericInputId,
        disabled: disabled || isIncrementDisabled,
        icon: "chevron-up",
        intent: intent
      }, this.incrementButtonHandlers)), React__namespace.createElement(Button, __assign({
        "aria-label": "decrement",
        "aria-controls": this.numericInputId,
        disabled: disabled || isDecrementDisabled,
        icon: "chevron-down",
        intent: intent
      }, this.decrementButtonHandlers)));
    };
    NumericInput.prototype.renderInput = function () {
      var inputGroupHtmlProps = removeNonHTMLProps(this.props, NON_HTML_PROPS, true);
      var valueAsNumber = this.getCurrentValueAsNumber();
      return React__namespace.createElement(InputGroup, __assign({
        asyncControl: this.props.asyncControl,
        autoComplete: "off",
        id: this.numericInputId,
        role: this.props.allowNumericCharactersOnly ? "spinbutton" : undefined
      }, inputGroupHtmlProps, {
        "aria-valuemax": this.props.max,
        "aria-valuemin": this.props.min,
        "aria-valuenow": valueAsNumber,
        intent: this.state.currentImeInputInvalid ? Intent.DANGER : this.props.intent,
        inputRef: this.inputRef,
        large: this.props.large,
        leftElement: this.props.leftElement,
        leftIcon: this.props.leftIcon,
        onFocus: this.handleInputFocus,
        onBlur: this.handleInputBlur,
        onChange: this.handleInputChange,
        onCompositionEnd: this.handleCompositionEnd,
        onCompositionUpdate: this.handleCompositionUpdate,
        onKeyDown: this.handleInputKeyDown,
        onKeyPress: this.handleInputKeyPress,
        onPaste: this.handleInputPaste,
        rightElement: this.props.rightElement,
        value: this.state.value
      }));
    };
    NumericInput.prototype.getButtonEventHandlers = function (direction) {
      var _this = this;
      return {
        onKeyDown: function (evt) {
          if (!_this.props.disabled && isKeyboardClick(evt.keyCode)) {
            _this.handleButtonClick(evt, direction);
          }
        },
        onMouseDown: function (evt) {
          if (!_this.props.disabled) {
            _this.handleButtonClick(evt, direction);
            _this.startContinuousChange();
          }
        }
      };
    };
    NumericInput.prototype.startContinuousChange = function () {
      var _this = this;
      document.addEventListener("mouseup", this.stopContinuousChange);
      this.setTimeout(function () {
        _this.intervalId = window.setInterval(_this.handleContinuousChange, NumericInput.CONTINUOUS_CHANGE_INTERVAL);
      }, NumericInput.CONTINUOUS_CHANGE_DELAY);
    };
    NumericInput.prototype.handleNextValue = function (valueAsString) {
      var _a, _b;
      if (this.props.value == null) {
        this.setState({
          value: valueAsString
        });
      }
      (_b = (_a = this.props).onValueChange) === null || _b === void 0 ? void 0 : _b.call(_a, Number(parseStringToStringNumber(valueAsString, this.props.locale)), valueAsString, this.inputElement);
    };
    NumericInput.prototype.incrementValue = function (delta) {
      var currValue = this.state.value === NumericInput.VALUE_EMPTY ? NumericInput.VALUE_ZERO : this.state.value;
      var nextValue = this.roundAndClampValue(currValue, delta);
      if (nextValue !== this.state.value) {
        this.handleNextValue(nextValue);
        this.setState({
          shouldSelectAfterUpdate: this.props.selectAllOnIncrement
        });
      }
      return nextValue;
    };
    NumericInput.prototype.getIncrementDelta = function (direction, isShiftKeyPressed, isAltKeyPressed) {
      var _a = this.props, majorStepSize = _a.majorStepSize, minorStepSize = _a.minorStepSize, stepSize = _a.stepSize;
      if (isShiftKeyPressed && majorStepSize != null) {
        return direction * majorStepSize;
      } else if (isAltKeyPressed && minorStepSize != null) {
        return direction * minorStepSize;
      } else {
        return direction * stepSize;
      }
    };
    NumericInput.prototype.roundAndClampValue = function (value, delta) {
      if (delta === void 0) {
        delta = 0;
      }
      return NumericInput.roundAndClampValue(value, this.state.stepMaxPrecision, this.props.min, this.props.max, delta, this.props.locale);
    };
    NumericInput.prototype.updateDelta = function (direction, e) {
      this.delta = this.getIncrementDelta(direction, e.shiftKey, e.altKey);
      return this.delta;
    };
    NumericInput.displayName = ("").concat(DISPLAYNAME_PREFIX, ".NumericInput");
    NumericInput.VALUE_EMPTY = "";
    NumericInput.VALUE_ZERO = "0";
    NumericInput.defaultProps = {
      allowNumericCharactersOnly: true,
      buttonPosition: Position.RIGHT,
      clampValueOnBlur: false,
      defaultValue: NumericInput.VALUE_EMPTY,
      large: false,
      majorStepSize: 10,
      minorStepSize: 0.1,
      selectAllOnFocus: false,
      selectAllOnIncrement: false,
      stepSize: 1
    };
    NumericInput.CONTINUOUS_CHANGE_DELAY = 300;
    NumericInput.CONTINUOUS_CHANGE_INTERVAL = 100;
    return NumericInput;
  })(AbstractPureComponent2);
  var counter = 0;
  function nextName() {
    return ("").concat(RadioGroup.displayName, "-").concat(counter++);
  }
  var RadioGroup = (function (_super) {
    __extends(RadioGroup, _super);
    function RadioGroup() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.autoGroupName = nextName();
      return _this;
    }
    RadioGroup.prototype.render = function () {
      var label = this.props.label;
      return React__namespace.createElement("div", {
        className: this.props.className
      }, label == null ? null : React__namespace.createElement("label", {
        className: LABEL
      }, label), Array.isArray(this.props.options) ? this.renderOptions() : this.renderChildren());
    };
    RadioGroup.prototype.validateProps = function () {
      if (this.props.children != null && this.props.options != null) {
        console.warn(RADIOGROUP_WARN_CHILDREN_OPTIONS_MUTEX);
      }
    };
    RadioGroup.prototype.renderChildren = function () {
      var _this = this;
      return React__namespace.Children.map(this.props.children, function (child) {
        if (isElementOfType(child, Radio)) {
          return React__namespace.cloneElement(child, _this.getRadioProps(child.props));
        } else {
          return child;
        }
      });
    };
    RadioGroup.prototype.renderOptions = function () {
      var _this = this;
      var _a;
      return (_a = this.props.options) === null || _a === void 0 ? void 0 : _a.map(function (option) {
        return React__namespace.createElement(Radio, __assign({}, _this.getRadioProps(option), {
          key: option.value,
          labelElement: option.label || option.value
        }));
      });
    };
    RadioGroup.prototype.getRadioProps = function (optionProps) {
      var name = this.props.name;
      var className = optionProps.className, disabled = optionProps.disabled, value = optionProps.value;
      return {
        checked: value === this.props.selectedValue,
        className: className,
        disabled: disabled || this.props.disabled,
        inline: this.props.inline,
        name: name == null ? this.autoGroupName : name,
        onChange: this.props.onChange,
        value: value
      };
    };
    RadioGroup.displayName = ("").concat(DISPLAYNAME_PREFIX, ".RadioGroup");
    return RadioGroup;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(TextArea, _super);
    function TextArea() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {};
      _this.textareaElement = null;
      _this.handleRef = refHandler(_this, "textareaElement", _this.props.inputRef);
      _this.handleChange = function (e) {
        if (_this.props.growVertically) {
          _this.setState({
            height: e.target.scrollHeight
          });
        }
        if (_this.props.onChange != null) {
          _this.props.onChange(e);
        }
      };
      return _this;
    }
    TextArea.prototype.componentDidMount = function () {
      var _a;
      if (this.props.growVertically && this.textareaElement !== null) {
        this.setState({
          height: (_a = this.textareaElement) === null || _a === void 0 ? void 0 : _a.scrollHeight
        });
      }
    };
    TextArea.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.inputRef !== this.props.inputRef) {
        setRef$1(prevProps.inputRef, null);
        this.handleRef = refHandler(this, "textareaElement", this.props.inputRef);
        setRef$1(this.props.inputRef, this.textareaElement);
      }
    };
    TextArea.prototype.render = function () {
      var _a;
      var _b = this.props, className = _b.className, fill = _b.fill;
      _b.inputRef;
      var intent = _b.intent, large = _b.large, small = _b.small, growVertically = _b.growVertically, htmlProps = __rest(_b, ["className", "fill", "inputRef", "intent", "large", "small", "growVertically"]);
      var rootClasses = classNames(INPUT, intentClass(intent), (_a = {}, _a[FILL] = fill, _a[LARGE] = large, _a[SMALL] = small, _a), className);
      var _c = htmlProps.style, style = _c === void 0 ? {} : _c;
      if (growVertically && this.state.height != null) {
        style = __assign(__assign({}, style), {
          height: ("").concat(this.state.height, "px")
        });
      }
      return React__namespace.createElement("textarea", __assign({}, htmlProps, {
        className: rootClasses,
        onChange: this.handleChange,
        ref: this.handleRef,
        style: style
      }));
    };
    TextArea.displayName = ("").concat(DISPLAYNAME_PREFIX, ".TextArea");
    return TextArea;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(HTMLSelect, _super);
    function HTMLSelect() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    HTMLSelect.prototype.render = function () {
      var _a;
      var _b = this.props, className = _b.className, disabled = _b.disabled, elementRef = _b.elementRef, fill = _b.fill, iconProps = _b.iconProps, large = _b.large, minimal = _b.minimal, _c = _b.options, options = _c === void 0 ? [] : _c, htmlProps = __rest(_b, ["className", "disabled", "elementRef", "fill", "iconProps", "large", "minimal", "options"]);
      var classes = classNames(HTML_SELECT, (_a = {}, _a[DISABLED] = disabled, _a[FILL] = fill, _a[LARGE] = large, _a[MINIMAL] = minimal, _a), className);
      var optionChildren = options.map(function (option) {
        var props = typeof option === "object" ? option : {
          value: option
        };
        return React__namespace.createElement("option", __assign({}, props, {
          key: props.value,
          children: props.label || props.value
        }));
      });
      return React__namespace.createElement("div", {
        className: classes
      }, React__namespace.createElement("select", __assign({
        disabled: disabled,
        ref: elementRef,
        value: this.props.value
      }, htmlProps, {
        multiple: false
      }), optionChildren, htmlProps.children), React__namespace.createElement(Icon, __assign({
        icon: "double-caret-vertical",
        title: "Open dropdown"
      }, iconProps)));
    };
    return HTMLSelect;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(HTMLTable, _super);
    function HTMLTable() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    HTMLTable.prototype.render = function () {
      var _a;
      var _b = this.props, bordered = _b.bordered, className = _b.className, condensed = _b.condensed, elementRef = _b.elementRef, interactive = _b.interactive, striped = _b.striped, htmlProps = __rest(_b, ["bordered", "className", "condensed", "elementRef", "interactive", "striped"]);
      var classes = classNames(HTML_TABLE, (_a = {}, _a[HTML_TABLE_BORDERED] = bordered, _a[HTML_TABLE_CONDENSED] = condensed, _a[HTML_TABLE_STRIPED] = striped, _a[INTERACTIVE] = interactive, _a), className);
      return React__namespace.createElement("table", __assign({}, htmlProps, {
        ref: elementRef,
        className: classes
      }));
    };
    return HTMLTable;
  })(AbstractPureComponent2);
  var Aliases = {
    cmd: "meta",
    command: "meta",
    escape: "esc",
    minus: "-",
    mod: isMac() ? "meta" : "ctrl",
    option: "alt",
    plus: "+",
    return: "enter",
    win: "meta"
  };
  for (var i = 1; i <= 12; ++i) {}
  for (var i = 0; i <= 9; ++i) {
    "num" + i.toString();
  }
  var normalizeKeyCombo = function (combo, platformOverride) {
    var keys = combo.replace(/\s/g, "").split("+");
    return keys.map(function (key) {
      var keyName = Aliases[key] != null ? Aliases[key] : key;
      return keyName === "meta" ? isMac(platformOverride) ? "cmd" : "ctrl" : keyName;
    });
  };
  function isMac(platformOverride) {
    var platform = platformOverride !== null && platformOverride !== void 0 ? platformOverride : typeof navigator !== "undefined" ? navigator.platform : undefined;
    return platform === undefined ? false : (/Mac|iPod|iPhone|iPad/).test(platform);
  }
  var KeyIcons = {
    alt: {
      icon: "key-option",
      iconTitle: "Alt/Option key"
    },
    cmd: {
      icon: "key-command",
      iconTitle: "Command key"
    },
    ctrl: {
      icon: "key-control",
      iconTitle: "Control key"
    },
    delete: {
      icon: "key-delete",
      iconTitle: "Delete key"
    },
    down: {
      icon: "arrow-down",
      iconTitle: "Down key"
    },
    enter: {
      icon: "key-enter",
      iconTitle: "Enter key"
    },
    left: {
      icon: "arrow-left",
      iconTitle: "Left key"
    },
    meta: {
      icon: "key-command",
      iconTitle: "Command key"
    },
    right: {
      icon: "arrow-right",
      iconTitle: "Right key"
    },
    shift: {
      icon: "key-shift",
      iconTitle: "Shift key"
    },
    up: {
      icon: "arrow-up",
      iconTitle: "Up key"
    }
  };
  var KeyCombo = (function (_super) {
    __extends(KeyCombo, _super);
    function KeyCombo() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.renderKey = function (key, index) {
        var _a;
        var icon = KeyIcons[key];
        var reactKey = ("key-").concat(index);
        return React__namespace.createElement("kbd", {
          className: classNames(KEY, (_a = {}, _a[MODIFIER_KEY] = icon != null, _a)),
          key: reactKey
        }, icon != null && React__namespace.createElement(Icon, {
          icon: icon.icon,
          title: icon.iconTitle
        }), key);
      };
      _this.renderMinimalKey = function (key, index) {
        var icon = KeyIcons[key];
        return icon == null ? key : React__namespace.createElement(Icon, {
          icon: icon.icon,
          title: icon.iconTitle,
          key: ("key-").concat(index)
        });
      };
      return _this;
    }
    KeyCombo.prototype.render = function () {
      var _a = this.props, className = _a.className, combo = _a.combo, minimal = _a.minimal;
      var keys = normalizeKeyCombo(combo).map(function (key) {
        return key.length === 1 ? key.toUpperCase() : key;
      }).map(minimal ? this.renderMinimalKey : this.renderKey);
      return React__namespace.createElement("span", {
        className: classNames(KEY_COMBO, className)
      }, keys);
    };
    KeyCombo.displayName = ("").concat(DISPLAYNAME_PREFIX, ".KeyCombo");
    return KeyCombo;
  })(AbstractPureComponent2);
  var Hotkey = (function (_super) {
    __extends(Hotkey, _super);
    function Hotkey() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Hotkey.prototype.render = function () {
      var _a = this.props, label = _a.label, className = _a.className, spreadableProps = __rest(_a, ["label", "className"]);
      var rootClasses = classNames(HOTKEY, className);
      return React__namespace.createElement("div", {
        className: rootClasses
      }, React__namespace.createElement("div", {
        className: HOTKEY_LABEL
      }, label), React__namespace.createElement(KeyCombo, __assign({}, spreadableProps)));
    };
    Hotkey.prototype.validateProps = function (props) {
      if (props.global !== true && props.group == null) {
        console.error("non-global <Hotkey>s must define a group");
      }
    };
    Hotkey.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Hotkey");
    Hotkey.defaultProps = {
      allowInInput: false,
      disabled: false,
      global: false,
      preventDefault: false,
      stopPropagation: false
    };
    return Hotkey;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(Hotkeys, _super);
    function Hotkeys() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Hotkeys.prototype.render = function () {
      if (!isReactChildrenElementOrElements(this.props.children)) {
        return null;
      }
      var hotkeys = React__namespace.Children.map(this.props.children, function (child) {
        return child.props;
      });
      hotkeys.sort(function (a, b) {
        if (a.global === b.global && a.group && b.group) {
          return a.group.localeCompare(b.group);
        }
        return a.global ? -1 : 1;
      });
      var lastGroup;
      var elems = [];
      for (var _i = 0, hotkeys_1 = hotkeys; _i < hotkeys_1.length; _i++) {
        var hotkey = hotkeys_1[_i];
        var groupLabel = hotkey.group;
        if (groupLabel !== lastGroup) {
          elems.push(React__namespace.createElement(H4, {
            key: ("group-").concat(elems.length)
          }, groupLabel));
          lastGroup = groupLabel;
        }
        elems.push(React__namespace.createElement(Hotkey, __assign({
          key: elems.length
        }, hotkey)));
      }
      var rootClasses = classNames(HOTKEY_COLUMN, this.props.className);
      return React__namespace.createElement("div", {
        className: rootClasses
      }, elems);
    };
    Hotkeys.prototype.validateProps = function (props) {
      if (!isReactChildrenElementOrElements(props.children)) {
        return;
      }
      React__namespace.Children.forEach(props.children, function (child) {
        if (!isElementOfType(child, Hotkey)) {
          throw new Error(HOTKEYS_HOTKEY_CHILDREN);
        }
      });
    };
    Hotkeys.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Hotkeys");
    Hotkeys.defaultProps = {
      tabIndex: 0
    };
    return Hotkeys;
  })(AbstractPureComponent2);
  var HotkeyScope;
  (function (HotkeyScope) {
    HotkeyScope["LOCAL"] = "local";
    HotkeyScope["GLOBAL"] = "global";
  })(HotkeyScope || (HotkeyScope = {}));
  var initialHotkeysState = {
    hasProvider: false,
    hotkeys: [],
    isDialogOpen: false
  };
  var noOpDispatch = function () {
    return null;
  };
  React__namespace.createContext([initialHotkeysState, noOpDispatch]);
  (function (_super) {
    __extends(MenuDivider, _super);
    function MenuDivider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuDivider.prototype.render = function () {
      var _a = this.props, className = _a.className, title = _a.title;
      if (title == null) {
        return React__namespace.createElement("li", {
          className: classNames(MENU_DIVIDER, className),
          role: "none"
        });
      } else {
        return React__namespace.createElement("li", {
          className: classNames(MENU_HEADER, className),
          role: "none"
        }, React__namespace.createElement(H6, null, title));
      }
    };
    MenuDivider.displayName = ("").concat(DISPLAYNAME_PREFIX, ".MenuDivider");
    return MenuDivider;
  })(React__namespace.Component);
  var NavbarDivider = (function (_super) {
    __extends(NavbarDivider, _super);
    function NavbarDivider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    NavbarDivider.prototype.render = function () {
      var _a = this.props, className = _a.className, htmlProps = __rest(_a, ["className"]);
      return React__namespace.createElement("div", __assign({
        className: classNames(NAVBAR_DIVIDER, className)
      }, htmlProps));
    };
    NavbarDivider.displayName = ("").concat(DISPLAYNAME_PREFIX, ".NavbarDivider");
    return NavbarDivider;
  })(AbstractPureComponent2);
  var NavbarGroup = (function (_super) {
    __extends(NavbarGroup, _super);
    function NavbarGroup() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    NavbarGroup.prototype.render = function () {
      var _a = this.props, align = _a.align, children = _a.children, className = _a.className, htmlProps = __rest(_a, ["align", "children", "className"]);
      var classes = classNames(NAVBAR_GROUP, alignmentClass(align), className);
      return React__namespace.createElement("div", __assign({
        className: classes
      }, htmlProps), children);
    };
    NavbarGroup.displayName = ("").concat(DISPLAYNAME_PREFIX, ".NavbarGroup");
    NavbarGroup.defaultProps = {
      align: Alignment.LEFT
    };
    return NavbarGroup;
  })(AbstractPureComponent2);
  var NavbarHeading = (function (_super) {
    __extends(NavbarHeading, _super);
    function NavbarHeading() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    NavbarHeading.prototype.render = function () {
      var _a = this.props, children = _a.children, className = _a.className, htmlProps = __rest(_a, ["children", "className"]);
      return React__namespace.createElement("div", __assign({
        className: classNames(NAVBAR_HEADING, className)
      }, htmlProps), children);
    };
    NavbarHeading.displayName = ("").concat(DISPLAYNAME_PREFIX, ".NavbarHeading");
    return NavbarHeading;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(Navbar, _super);
    function Navbar() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Navbar.prototype.render = function () {
      var _a;
      var _b = this.props, children = _b.children, className = _b.className, fixedToTop = _b.fixedToTop, htmlProps = __rest(_b, ["children", "className", "fixedToTop"]);
      var classes = classNames(NAVBAR, (_a = {}, _a[FIXED_TOP] = fixedToTop, _a), className);
      return React__namespace.createElement("div", __assign({
        className: classes
      }, htmlProps), children);
    };
    Navbar.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Navbar");
    Navbar.Divider = NavbarDivider;
    Navbar.Group = NavbarGroup;
    Navbar.Heading = NavbarHeading;
    return Navbar;
  })(AbstractPureComponent2);
  var NonIdealStateIconSize;
  (function (NonIdealStateIconSize) {
    NonIdealStateIconSize[NonIdealStateIconSize["STANDARD"] = 48] = "STANDARD";
    NonIdealStateIconSize[NonIdealStateIconSize["SMALL"] = 32] = "SMALL";
    NonIdealStateIconSize[NonIdealStateIconSize["EXTRA_SMALL"] = 20] = "EXTRA_SMALL";
  })(NonIdealStateIconSize || (NonIdealStateIconSize = {}));
  (function (_super) {
    __extends(NonIdealState, _super);
    function NonIdealState() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    NonIdealState.prototype.render = function () {
      var _a = this.props, action = _a.action, children = _a.children, className = _a.className, layout = _a.layout;
      return React__namespace.createElement("div", {
        className: classNames(NON_IDEAL_STATE, ("").concat(NON_IDEAL_STATE, "-").concat(layout), className)
      }, this.maybeRenderVisual(), this.maybeRenderText(), action, children);
    };
    NonIdealState.prototype.maybeRenderVisual = function () {
      var _a = this.props, icon = _a.icon, iconSize = _a.iconSize;
      if (icon == null) {
        return undefined;
      } else {
        return React__namespace.createElement("div", {
          className: NON_IDEAL_STATE_VISUAL,
          style: {
            fontSize: ("").concat(iconSize, "px"),
            lineHeight: ("").concat(iconSize, "px")
          }
        }, React__namespace.createElement(Icon, {
          icon: icon,
          size: iconSize,
          "aria-hidden": true,
          tabIndex: -1
        }));
      }
    };
    NonIdealState.prototype.maybeRenderText = function () {
      var _a = this.props, description = _a.description, title = _a.title;
      if (title == null && description == null) {
        return undefined;
      } else {
        return React__namespace.createElement("div", {
          className: NON_IDEAL_STATE_TEXT
        }, title && React__namespace.createElement(H4, null, title), description && ensureElement(description, "div"));
      }
    };
    NonIdealState.displayName = ("").concat(DISPLAYNAME_PREFIX, ".NonIdealState");
    NonIdealState.defaultProps = {
      iconSize: NonIdealStateIconSize.STANDARD,
      layout: "vertical"
    };
    return NonIdealState;
  })(AbstractPureComponent2);
  var PanelView = (function (_super) {
    __extends(PanelView, _super);
    function PanelView() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleClose = function () {
        return _this.props.onClose(_this.props.panel);
      };
      return _this;
    }
    PanelView.prototype.render = function () {
      var _a = this.props, panel = _a.panel, onOpen = _a.onOpen;
      return React__namespace.createElement("div", {
        className: PANEL_STACK_VIEW
      }, this.maybeRenderHeader(), React__namespace.createElement(panel.component, __assign({
        openPanel: onOpen,
        closePanel: this.handleClose
      }, panel.props)));
    };
    PanelView.prototype.maybeRenderHeader = function () {
      if (!this.props.showHeader) {
        return null;
      }
      return React__namespace.createElement("div", {
        className: PANEL_STACK_HEADER
      }, React__namespace.createElement("span", null, this.maybeRenderBack()), React__namespace.createElement(Text, {
        className: HEADING,
        ellipsize: true,
        title: this.props.panel.htmlTitle
      }, this.props.panel.title), React__namespace.createElement("span", null));
    };
    PanelView.prototype.maybeRenderBack = function () {
      if (this.props.previousPanel === undefined) {
        return null;
      }
      return React__namespace.createElement(Button, {
        "aria-label": "Back",
        className: PANEL_STACK_HEADER_BACK,
        icon: "chevron-left",
        minimal: true,
        onClick: this.handleClose,
        small: true,
        text: this.props.previousPanel.title,
        title: this.props.previousPanel.htmlTitle
      });
    };
    return PanelView;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(PanelStack, _super);
    function PanelStack() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        direction: "push",
        stack: _this.props.stack != null ? _this.props.stack.slice().reverse() : _this.props.initialPanel !== undefined ? [_this.props.initialPanel] : []
      };
      _this.renderPanel = function (panel, index) {
        var _a = _this.props, renderActivePanelOnly = _a.renderActivePanelOnly, _b = _a.showPanelHeader, showPanelHeader = _b === void 0 ? true : _b;
        var stack = _this.state.stack;
        var layer = stack.length - index;
        var key = renderActivePanelOnly ? stack.length : layer;
        return React__namespace.createElement(CSSTransition, {
          classNames: PANEL_STACK,
          key: key,
          timeout: 400
        }, React__namespace.createElement(PanelView, {
          onClose: _this.handlePanelClose,
          onOpen: _this.handlePanelOpen,
          panel: panel,
          previousPanel: stack[index + 1],
          showHeader: showPanelHeader
        }));
      };
      _this.handlePanelClose = function (panel) {
        var _a, _b;
        var stack = _this.state.stack;
        if (stack[0] !== panel || stack.length <= 1) {
          return;
        }
        (_b = (_a = _this.props).onClose) === null || _b === void 0 ? void 0 : _b.call(_a, panel);
        if (_this.props.stack == null) {
          _this.setState(function (state) {
            return {
              direction: "pop",
              stack: state.stack.slice(1)
            };
          });
        }
      };
      _this.handlePanelOpen = function (panel) {
        var _a, _b;
        (_b = (_a = _this.props).onOpen) === null || _b === void 0 ? void 0 : _b.call(_a, panel);
        if (_this.props.stack == null) {
          _this.setState(function (state) {
            return {
              direction: "push",
              stack: __spreadArray([panel], state.stack, true)
            };
          });
        }
      };
      return _this;
    }
    PanelStack.prototype.componentDidUpdate = function (prevProps, prevState) {
      _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
      if (this.props.stack !== prevProps.stack && prevProps.stack != null) {
        this.setState({
          stack: this.props.stack.slice().reverse()
        });
      }
      var stackLength = this.props.stack != null ? this.props.stack.length : 0;
      var prevStackLength = prevProps.stack != null ? prevProps.stack.length : 0;
      if (stackLength !== prevStackLength && prevProps.stack != null) {
        this.setState({
          direction: prevProps.stack.length - this.props.stack.length < 0 ? "push" : "pop"
        });
      }
    };
    PanelStack.prototype.render = function () {
      var classes = classNames(PANEL_STACK, ("").concat(PANEL_STACK, "-").concat(this.state.direction), this.props.className);
      return React__namespace.createElement(TransitionGroup, {
        className: classes,
        component: "div"
      }, this.renderPanels());
    };
    PanelStack.prototype.validateProps = function (props) {
      if (props.initialPanel == null && props.stack == null || props.initialPanel != null && props.stack != null) {
        console.error(PANEL_STACK_INITIAL_PANEL_STACK_MUTEX);
      }
      if (props.stack != null && props.stack.length === 0) {
        console.error(PANEL_STACK_REQUIRES_PANEL);
      }
    };
    PanelStack.prototype.renderPanels = function () {
      var _a = this.props.renderActivePanelOnly, renderActivePanelOnly = _a === void 0 ? true : _a;
      var stack = this.state.stack;
      if (stack.length === 0) {
        return null;
      }
      var panelsToRender = renderActivePanelOnly ? [stack[0]] : stack;
      var panelViews = panelsToRender.map(this.renderPanel).reverse();
      return panelViews;
    };
    return PanelStack;
  })(AbstractPureComponent2);
  __assign(__assign({}, Position), {
    AUTO: "auto",
    AUTO_END: "auto-end",
    AUTO_START: "auto-start"
  });
  (function (_super) {
    __extends(ProgressBar, _super);
    function ProgressBar() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ProgressBar.prototype.render = function () {
      var _a;
      var _b = this.props, _c = _b.animate, animate = _c === void 0 ? true : _c, className = _b.className, intent = _b.intent, _d = _b.stripes, stripes = _d === void 0 ? true : _d, value = _b.value;
      var classes = classNames(PROGRESS_BAR, intentClass(intent), (_a = {}, _a[PROGRESS_NO_ANIMATION] = !animate, _a[PROGRESS_NO_STRIPES] = !stripes, _a), className);
      var percent = value == null ? undefined : 100 * clamp(value, 0, 1);
      var width = percent == null ? undefined : percent + "%";
      return React__namespace.createElement("div", {
        "aria-valuemax": 100,
        "aria-valuemin": 0,
        "aria-valuenow": percent == null ? undefined : Math.round(percent),
        className: classes,
        role: "progressbar"
      }, React__namespace.createElement("div", {
        className: PROGRESS_METER,
        style: {
          width: width
        }
      }));
    };
    ProgressBar.displayName = ("").concat(DISPLAYNAME_PREFIX, ".ProgressBar");
    return ProgressBar;
  })(AbstractPureComponent2);
  var HandleType = {
    FULL: "full",
    START: "start",
    END: "end"
  };
  var HandleInteractionKind = {
    LOCK: "lock",
    PUSH: "push",
    NONE: "none"
  };
  function formatPercentage(ratio) {
    return ("").concat((ratio * 100).toFixed(2), "%");
  }
  function fillValues(values, startIndex, endIndex, fillValue) {
    var inc = startIndex < endIndex ? 1 : -1;
    for (var index = startIndex; index !== endIndex + inc; index += inc) {
      values[index] = fillValue;
    }
  }
  function argMin(values, argFn) {
    if (values.length === 0) {
      return undefined;
    }
    var minValue = values[0];
    var minArg = argFn(minValue);
    for (var index = 1; index < values.length; index++) {
      var value = values[index];
      var arg = argFn(value);
      if (arg < minArg) {
        minValue = value;
        minArg = arg;
      }
    }
    return minValue;
  }
  var NUMBER_PROPS = ["max", "min", "stepSize", "tickSize", "value"];
  var Handle = (function (_super) {
    __extends(Handle, _super);
    function Handle() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        isMoving: false
      };
      _this.handleElement = null;
      _this.refHandlers = {
        handle: function (el) {
          return _this.handleElement = el;
        }
      };
      _this.beginHandleMovement = function (event) {
        document.addEventListener("mousemove", _this.handleHandleMovement);
        document.addEventListener("mouseup", _this.endHandleMovement);
        _this.setState({
          isMoving: true
        });
        _this.changeValue(_this.clientToValue(_this.mouseEventClientOffset(event)));
      };
      _this.beginHandleTouchMovement = function (event) {
        document.addEventListener("touchmove", _this.handleHandleTouchMovement);
        document.addEventListener("touchend", _this.endHandleTouchMovement);
        document.addEventListener("touchcancel", _this.endHandleTouchMovement);
        _this.setState({
          isMoving: true
        });
        _this.changeValue(_this.clientToValue(_this.touchEventClientOffset(event)));
      };
      _this.getStyleProperties = function () {
        if (_this.handleElement == null) {
          return {};
        }
        var _a = _this.props, _b = _a.min, min = _b === void 0 ? 0 : _b, tickSizeRatio = _a.tickSizeRatio, value = _a.value, vertical = _a.vertical;
        var handleMidpoint = _this.getHandleMidpointAndOffset(_this.handleElement, true).handleMidpoint;
        var offsetRatio = (value - min) * tickSizeRatio;
        var offsetCalc = ("calc(").concat(formatPercentage(offsetRatio), " - ").concat(handleMidpoint, "px)");
        return vertical ? {
          bottom: offsetCalc
        } : {
          left: offsetCalc
        };
      };
      _this.endHandleMovement = function (event) {
        _this.handleMoveEndedAt(_this.mouseEventClientOffset(event));
      };
      _this.endHandleTouchMovement = function (event) {
        _this.handleMoveEndedAt(_this.touchEventClientOffset(event));
      };
      _this.handleMoveEndedAt = function (clientPixel) {
        var _a, _b;
        _this.removeDocumentEventListeners();
        _this.setState({
          isMoving: false
        });
        var finalValue = _this.changeValue(_this.clientToValue(clientPixel));
        (_b = (_a = _this.props).onRelease) === null || _b === void 0 ? void 0 : _b.call(_a, finalValue);
      };
      _this.handleHandleMovement = function (event) {
        _this.handleMovedTo(_this.mouseEventClientOffset(event));
      };
      _this.handleHandleTouchMovement = function (event) {
        _this.handleMovedTo(_this.touchEventClientOffset(event));
      };
      _this.handleMovedTo = function (clientPixel) {
        if (_this.state.isMoving && !_this.props.disabled) {
          _this.changeValue(_this.clientToValue(clientPixel));
        }
      };
      _this.handleKeyDown = function (event) {
        var _a = _this.props, stepSize = _a.stepSize, value = _a.value;
        var which = event.which;
        if (which === ARROW_DOWN || which === ARROW_LEFT) {
          _this.changeValue(value - stepSize);
          event.preventDefault();
        } else if (which === ARROW_UP || which === ARROW_RIGHT) {
          _this.changeValue(value + stepSize);
          event.preventDefault();
        }
      };
      _this.handleKeyUp = function (event) {
        var _a, _b;
        if ([ARROW_UP, ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT].indexOf(event.which) >= 0) {
          (_b = (_a = _this.props).onRelease) === null || _b === void 0 ? void 0 : _b.call(_a, _this.props.value);
        }
      };
      return _this;
    }
    Handle.prototype.componentDidMount = function () {
      this.forceUpdate();
    };
    Handle.prototype.render = function () {
      var _a;
      var _b = this.props, className = _b.className, disabled = _b.disabled, label = _b.label, min = _b.min, max = _b.max, value = _b.value, vertical = _b.vertical, htmlProps = _b.htmlProps;
      var isMoving = this.state.isMoving;
      return React__namespace.createElement("span", __assign({
        role: "slider",
        tabIndex: 0
      }, htmlProps, {
        className: classNames(SLIDER_HANDLE, (_a = {}, _a[ACTIVE] = isMoving, _a), className),
        onKeyDown: disabled ? undefined : this.handleKeyDown,
        onKeyUp: disabled ? undefined : this.handleKeyUp,
        onMouseDown: disabled ? undefined : this.beginHandleMovement,
        onTouchStart: disabled ? undefined : this.beginHandleTouchMovement,
        ref: this.refHandlers.handle,
        style: this.getStyleProperties(),
        "aria-valuemin": min,
        "aria-valuemax": max,
        "aria-valuenow": value,
        "aria-orientation": vertical ? "vertical" : "horizontal"
      }), label == null ? null : React__namespace.createElement("span", {
        className: SLIDER_LABEL
      }, label));
    };
    Handle.prototype.componentWillUnmount = function () {
      this.removeDocumentEventListeners();
    };
    Handle.prototype.clientToValue = function (clientPixel) {
      var _a = this.props, stepSize = _a.stepSize, tickSize = _a.tickSize, value = _a.value, vertical = _a.vertical;
      if (this.handleElement == null) {
        return value;
      }
      var clientPixelNormalized = vertical ? window.innerHeight - clientPixel : clientPixel;
      var handleCenterPixel = this.getHandleElementCenterPixel(this.handleElement);
      var pixelDelta = clientPixelNormalized - handleCenterPixel;
      if (isNaN(pixelDelta)) {
        return value;
      }
      return value + Math.round(pixelDelta / (tickSize * stepSize)) * stepSize;
    };
    Handle.prototype.mouseEventClientOffset = function (event) {
      return this.props.vertical ? event.clientY : event.clientX;
    };
    Handle.prototype.touchEventClientOffset = function (event) {
      var touch = event.changedTouches[0];
      return this.props.vertical ? touch.clientY : touch.clientX;
    };
    Handle.prototype.validateProps = function (props) {
      for (var _i = 0, NUMBER_PROPS_1 = NUMBER_PROPS; _i < NUMBER_PROPS_1.length; _i++) {
        var prop = NUMBER_PROPS_1[_i];
        if (typeof props[prop] !== "number") {
          throw new Error(("[Blueprint] <Handle> requires number value for ").concat(prop, " prop"));
        }
      }
    };
    Handle.prototype.changeValue = function (newValue, callback) {
      if (callback === void 0) {
        callback = this.props.onChange;
      }
      newValue = this.clamp(newValue);
      if (!isNaN(newValue) && this.props.value !== newValue) {
        callback === null || callback === void 0 ? void 0 : callback(newValue);
      }
      return newValue;
    };
    Handle.prototype.clamp = function (value) {
      return clamp(value, this.props.min, this.props.max);
    };
    Handle.prototype.getHandleElementCenterPixel = function (handleElement) {
      var _a = this.getHandleMidpointAndOffset(handleElement), handleMidpoint = _a.handleMidpoint, handleOffset = _a.handleOffset;
      return handleOffset + handleMidpoint;
    };
    Handle.prototype.getHandleMidpointAndOffset = function (handleElement, useOppositeDimension) {
      if (useOppositeDimension === void 0) {
        useOppositeDimension = false;
      }
      if (handleElement == null) {
        return {
          handleMidpoint: 0,
          handleOffset: 0
        };
      }
      var vertical = this.props.vertical;
      var handleRect = handleElement.getBoundingClientRect();
      var sizeKey = vertical ? useOppositeDimension ? "width" : "height" : useOppositeDimension ? "height" : "width";
      var handleOffset = vertical ? window.innerHeight - (handleRect.top + handleRect[sizeKey]) : handleRect.left;
      return {
        handleMidpoint: handleRect[sizeKey] / 2,
        handleOffset: handleOffset
      };
    };
    Handle.prototype.removeDocumentEventListeners = function () {
      document.removeEventListener("mousemove", this.handleHandleMovement);
      document.removeEventListener("mouseup", this.endHandleMovement);
      document.removeEventListener("touchmove", this.handleHandleTouchMovement);
      document.removeEventListener("touchend", this.endHandleTouchMovement);
      document.removeEventListener("touchcancel", this.endHandleTouchMovement);
    };
    Handle.displayName = ("").concat(DISPLAYNAME_PREFIX, ".SliderHandle");
    return Handle;
  })(AbstractPureComponent2);
  var MultiSliderHandle = function () {
    return null;
  };
  MultiSliderHandle.displayName = ("").concat(DISPLAYNAME_PREFIX, ".MultiSliderHandle");
  var MultiSlider = (function (_super) {
    __extends(MultiSlider, _super);
    function MultiSlider() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        labelPrecision: getLabelPrecision(_this.props),
        tickSize: 0,
        tickSizeRatio: 0
      };
      _this.handleElements = [];
      _this.trackElement = null;
      _this.addHandleRef = function (ref) {
        if (ref != null) {
          _this.handleElements.push(ref);
        }
      };
      _this.maybeHandleTrackClick = function (event) {
        if (_this.canHandleTrackEvent(event)) {
          var foundHandle = _this.nearestHandleForValue(_this.handleElements, function (handle) {
            return handle.mouseEventClientOffset(event);
          });
          if (foundHandle) {
            foundHandle.beginHandleMovement(event);
          }
        }
      };
      _this.maybeHandleTrackTouch = function (event) {
        if (_this.canHandleTrackEvent(event)) {
          var foundHandle = _this.nearestHandleForValue(_this.handleElements, function (handle) {
            return handle.touchEventClientOffset(event);
          });
          if (foundHandle) {
            foundHandle.beginHandleTouchMovement(event);
          }
        }
      };
      _this.canHandleTrackEvent = function (event) {
        var target = event.target;
        return !_this.props.disabled && target.closest((".").concat(SLIDER_HANDLE)) == null;
      };
      _this.getHandlerForIndex = function (index, callback) {
        return function (newValue) {
          callback === null || callback === void 0 ? void 0 : callback(_this.getNewHandleValues(newValue, index));
        };
      };
      _this.handleChange = function (newValues) {
        var _a, _b;
        var handleProps = getSortedInteractiveHandleProps(_this.props);
        var oldValues = handleProps.map(function (handle) {
          return handle.value;
        });
        if (!arraysEqual(newValues, oldValues)) {
          (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, newValues);
          handleProps.forEach(function (handle, index) {
            var _a;
            if (oldValues[index] !== newValues[index]) {
              (_a = handle.onChange) === null || _a === void 0 ? void 0 : _a.call(handle, newValues[index]);
            }
          });
        }
      };
      _this.handleRelease = function (newValues) {
        var _a, _b;
        var handleProps = getSortedInteractiveHandleProps(_this.props);
        (_b = (_a = _this.props).onRelease) === null || _b === void 0 ? void 0 : _b.call(_a, newValues);
        handleProps.forEach(function (handle, index) {
          var _a;
          (_a = handle.onRelease) === null || _a === void 0 ? void 0 : _a.call(handle, newValues[index]);
        });
      };
      return _this;
    }
    MultiSlider.getDerivedStateFromProps = function (props) {
      return {
        labelPrecision: MultiSlider.getLabelPrecision(props)
      };
    };
    MultiSlider.getLabelPrecision = function (_a) {
      var labelPrecision = _a.labelPrecision, stepSize = _a.stepSize;
      return labelPrecision == null ? countDecimalPlaces(stepSize) : labelPrecision;
    };
    MultiSlider.prototype.getSnapshotBeforeUpdate = function (prevProps) {
      var prevHandleProps = getSortedInteractiveHandleProps(prevProps);
      var newHandleProps = getSortedInteractiveHandleProps(this.props);
      if (newHandleProps.length !== prevHandleProps.length) {
        this.handleElements = [];
      }
      return null;
    };
    MultiSlider.prototype.render = function () {
      var _a;
      var _this = this;
      var classes = classNames(SLIDER, (_a = {}, _a[DISABLED] = this.props.disabled, _a[("").concat(SLIDER, "-unlabeled")] = this.props.labelRenderer === false, _a[VERTICAL] = this.props.vertical, _a), this.props.className);
      return React__namespace.createElement("div", {
        className: classes,
        onMouseDown: this.maybeHandleTrackClick,
        onTouchStart: this.maybeHandleTrackTouch
      }, React__namespace.createElement("div", {
        className: SLIDER_TRACK,
        ref: function (ref) {
          return _this.trackElement = ref;
        }
      }, this.renderTracks()), React__namespace.createElement("div", {
        className: SLIDER_AXIS
      }, this.renderLabels()), this.renderHandles());
    };
    MultiSlider.prototype.componentDidMount = function () {
      this.updateTickSize();
    };
    MultiSlider.prototype.componentDidUpdate = function (prevProps, prevState) {
      _super.prototype.componentDidUpdate.call(this, prevProps, prevState);
      this.updateTickSize();
    };
    MultiSlider.prototype.validateProps = function (props) {
      if (props.stepSize <= 0) {
        throw new Error(SLIDER_ZERO_STEP);
      }
      if (props.labelStepSize !== undefined && props.labelValues !== undefined) {
        throw new Error(MULTISLIDER_WARN_LABEL_STEP_SIZE_LABEL_VALUES_MUTEX);
      }
      if (props.labelStepSize !== undefined && props.labelStepSize <= 0) {
        throw new Error(SLIDER_ZERO_LABEL_STEP);
      }
      var anyInvalidChildren = false;
      React__namespace.Children.forEach(props.children, function (child) {
        if (child && !isElementOfType(child, MultiSlider.Handle)) {
          anyInvalidChildren = true;
        }
      });
      if (anyInvalidChildren) {
        throw new Error(MULTISLIDER_INVALID_CHILD);
      }
    };
    MultiSlider.prototype.formatLabel = function (value, isHandleTooltip) {
      if (isHandleTooltip === void 0) {
        isHandleTooltip = false;
      }
      var labelRenderer = this.props.labelRenderer;
      if (labelRenderer === false) {
        return undefined;
      } else if (isFunction$2(labelRenderer)) {
        return labelRenderer(value, {
          isHandleTooltip: isHandleTooltip
        });
      } else {
        return value.toFixed(this.state.labelPrecision);
      }
    };
    MultiSlider.prototype.renderLabels = function () {
      var _this = this;
      if (this.props.labelRenderer === false) {
        return null;
      }
      var values = this.getLabelValues();
      var _a = this.props, max = _a.max, min = _a.min;
      var labels = values.map(function (step, i) {
        var offsetPercentage = formatPercentage((step - min) / (max - min));
        var style = _this.props.vertical ? {
          bottom: offsetPercentage
        } : {
          left: offsetPercentage
        };
        return React__namespace.createElement("div", {
          className: SLIDER_LABEL,
          key: i,
          style: style
        }, _this.formatLabel(step));
      });
      return labels;
    };
    MultiSlider.prototype.renderTracks = function () {
      var trackStops = getSortedHandleProps(this.props);
      trackStops.push({
        value: this.props.max
      });
      var previous = {
        value: this.props.min
      };
      var handles = [];
      for (var index = 0; index < trackStops.length; index++) {
        var current = trackStops[index];
        handles.push(this.renderTrackFill(index, previous, current));
        previous = current;
      }
      return handles;
    };
    MultiSlider.prototype.renderTrackFill = function (index, start, end) {
      var _a = [this.getOffsetRatio(start.value), this.getOffsetRatio(end.value)].sort(function (left, right) {
        return left - right;
      }), startRatio = _a[0], endRatio = _a[1];
      var startOffset = formatPercentage(startRatio);
      var endOffset = formatPercentage(1 - endRatio);
      var orientationStyle = this.props.vertical ? {
        bottom: startOffset,
        top: endOffset,
        left: 0
      } : {
        left: startOffset,
        right: endOffset,
        top: 0
      };
      var style = __assign(__assign({}, orientationStyle), start.trackStyleAfter || end.trackStyleBefore || ({}));
      var classes = classNames(SLIDER_PROGRESS, intentClass(this.getTrackIntent(start, end)));
      return React__namespace.createElement("div", {
        key: ("track-").concat(index),
        className: classes,
        style: style
      });
    };
    MultiSlider.prototype.renderHandles = function () {
      var _this = this;
      var _a = this.props, disabled = _a.disabled, max = _a.max, min = _a.min, stepSize = _a.stepSize, vertical = _a.vertical;
      var handleProps = getSortedInteractiveHandleProps(this.props);
      if (handleProps.length === 0) {
        return null;
      }
      return handleProps.map(function (_a, index) {
        var _b;
        var value = _a.value, type = _a.type, className = _a.className, htmlProps = _a.htmlProps;
        return React__namespace.createElement(Handle, {
          htmlProps: htmlProps,
          className: classNames((_b = {}, _b[START] = type === HandleType.START, _b[END] = type === HandleType.END, _b), className),
          disabled: disabled,
          key: ("").concat(index, "-").concat(handleProps.length),
          label: _this.formatLabel(value, true),
          max: max,
          min: min,
          onChange: _this.getHandlerForIndex(index, _this.handleChange),
          onRelease: _this.getHandlerForIndex(index, _this.handleRelease),
          ref: _this.addHandleRef,
          stepSize: stepSize,
          tickSize: _this.state.tickSize,
          tickSizeRatio: _this.state.tickSizeRatio,
          value: value,
          vertical: vertical
        });
      });
    };
    MultiSlider.prototype.nearestHandleForValue = function (handles, getOffset) {
      return argMin(handles, function (handle) {
        var offset = getOffset(handle);
        var offsetValue = handle.clientToValue(offset);
        var handleValue = handle.props.value;
        return Math.abs(offsetValue - handleValue);
      });
    };
    MultiSlider.prototype.getNewHandleValues = function (newValue, oldIndex) {
      var handleProps = getSortedInteractiveHandleProps(this.props);
      var oldValues = handleProps.map(function (handle) {
        return handle.value;
      });
      var newValues = oldValues.slice();
      newValues[oldIndex] = newValue;
      newValues.sort(function (left, right) {
        return left - right;
      });
      var newIndex = newValues.indexOf(newValue);
      var lockIndex = this.findFirstLockedHandleIndex(oldIndex, newIndex);
      if (lockIndex === -1) {
        fillValues(newValues, oldIndex, newIndex, newValue);
      } else {
        var lockValue = oldValues[lockIndex];
        fillValues(oldValues, oldIndex, lockIndex, lockValue);
        return oldValues;
      }
      return newValues;
    };
    MultiSlider.prototype.findFirstLockedHandleIndex = function (startIndex, endIndex) {
      var inc = startIndex < endIndex ? 1 : -1;
      var handleProps = getSortedInteractiveHandleProps(this.props);
      for (var index = startIndex + inc; index !== endIndex + inc; index += inc) {
        if (handleProps[index].interactionKind !== HandleInteractionKind.PUSH) {
          return index;
        }
      }
      return -1;
    };
    MultiSlider.prototype.getLabelValues = function () {
      var _a = this.props, labelStepSize = _a.labelStepSize, labelValues = _a.labelValues, min = _a.min, max = _a.max;
      var values = [];
      if (labelValues !== undefined) {
        values = labelValues.slice();
      } else {
        for (var i = min; i < max || approxEqual(i, max); i += labelStepSize !== null && labelStepSize !== void 0 ? labelStepSize : 1) {
          values.push(i);
        }
      }
      return values;
    };
    MultiSlider.prototype.getOffsetRatio = function (value) {
      return clamp((value - this.props.min) * this.state.tickSizeRatio, 0, 1);
    };
    MultiSlider.prototype.getTrackIntent = function (start, end) {
      if (!this.props.showTrackFill) {
        return Intent.NONE;
      }
      if (start.intentAfter !== undefined) {
        return start.intentAfter;
      } else if (end !== undefined && end.intentBefore !== undefined) {
        return end.intentBefore;
      }
      return this.props.defaultTrackIntent;
    };
    MultiSlider.prototype.updateTickSize = function () {
      if (this.trackElement != null) {
        var trackSize = this.props.vertical ? this.trackElement.clientHeight : this.trackElement.clientWidth;
        var tickSizeRatio = 1 / (this.props.max - this.props.min);
        var tickSize = trackSize * tickSizeRatio;
        this.setState({
          tickSize: tickSize,
          tickSizeRatio: tickSizeRatio
        });
      }
    };
    MultiSlider.defaultSliderProps = {
      disabled: false,
      max: 10,
      min: 0,
      showTrackFill: true,
      stepSize: 1,
      vertical: false
    };
    MultiSlider.defaultProps = __assign(__assign({}, MultiSlider.defaultSliderProps), {
      defaultTrackIntent: Intent.NONE
    });
    MultiSlider.displayName = ("").concat(DISPLAYNAME_PREFIX, ".MultiSlider");
    MultiSlider.Handle = MultiSliderHandle;
    return MultiSlider;
  })(AbstractPureComponent2);
  function getLabelPrecision(_a) {
    var labelPrecision = _a.labelPrecision, _b = _a.stepSize, stepSize = _b === void 0 ? MultiSlider.defaultSliderProps.stepSize : _b;
    return labelPrecision == null ? countDecimalPlaces(stepSize) : labelPrecision;
  }
  function getSortedInteractiveHandleProps(props) {
    return getSortedHandleProps(props, function (childProps) {
      return childProps.interactionKind !== HandleInteractionKind.NONE;
    });
  }
  function getSortedHandleProps(_a, predicate) {
    var children = _a.children;
    if (predicate === void 0) {
      predicate = function () {
        return true;
      };
    }
    var maybeHandles = React__namespace.Children.map(children, function (child) {
      return isElementOfType(child, MultiSlider.Handle) && predicate(child.props) ? child.props : null;
    });
    var handles = maybeHandles != null ? maybeHandles : [];
    handles = handles.filter(function (handle) {
      return handle !== null;
    });
    handles.sort(function (left, right) {
      return left.value - right.value;
    });
    return handles;
  }
  var RangeIndex;
  (function (RangeIndex) {
    RangeIndex[RangeIndex["START"] = 0] = "START";
    RangeIndex[RangeIndex["END"] = 1] = "END";
  })(RangeIndex || (RangeIndex = {}));
  (function (_super) {
    __extends(RangeSlider, _super);
    function RangeSlider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    RangeSlider.prototype.render = function () {
      var _a = this.props, value = _a.value, handleHtmlProps = _a.handleHtmlProps, props = __rest(_a, ["value", "handleHtmlProps"]);
      return React__namespace.createElement(MultiSlider, __assign({}, props), React__namespace.createElement(MultiSlider.Handle, {
        value: value[RangeIndex.START],
        type: "start",
        intentAfter: props.intent,
        htmlProps: handleHtmlProps === null || handleHtmlProps === void 0 ? void 0 : handleHtmlProps.start
      }), React__namespace.createElement(MultiSlider.Handle, {
        value: value[RangeIndex.END],
        type: "end",
        htmlProps: handleHtmlProps === null || handleHtmlProps === void 0 ? void 0 : handleHtmlProps.end
      }));
    };
    RangeSlider.prototype.validateProps = function (props) {
      var value = props.value;
      if (value == null || value[RangeIndex.START] == null || value[RangeIndex.END] == null) {
        throw new Error(RANGESLIDER_NULL_VALUE);
      }
    };
    RangeSlider.defaultProps = __assign(__assign({}, MultiSlider.defaultSliderProps), {
      intent: Intent.PRIMARY,
      value: [0, 10]
    });
    RangeSlider.displayName = ("").concat(DISPLAYNAME_PREFIX, ".RangeSlider");
    return RangeSlider;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(Slider, _super);
    function Slider() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Slider.prototype.render = function () {
      var _a = this.props, initialValue = _a.initialValue, intent = _a.intent, value = _a.value, onChange = _a.onChange, onRelease = _a.onRelease, handleHtmlProps = _a.handleHtmlProps, props = __rest(_a, ["initialValue", "intent", "value", "onChange", "onRelease", "handleHtmlProps"]);
      return React__namespace.createElement(MultiSlider, __assign({}, props), React__namespace.createElement(MultiSlider.Handle, {
        value: value,
        intentAfter: value < initialValue ? intent : undefined,
        intentBefore: value >= initialValue ? intent : undefined,
        onChange: onChange,
        onRelease: onRelease,
        htmlProps: handleHtmlProps
      }), React__namespace.createElement(MultiSlider.Handle, {
        value: initialValue,
        interactionKind: "none"
      }));
    };
    Slider.defaultProps = __assign(__assign({}, MultiSlider.defaultSliderProps), {
      initialValue: 0,
      intent: Intent.PRIMARY,
      value: 0
    });
    Slider.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Slider");
    return Slider;
  })(AbstractPureComponent2);
  var Tab = (function (_super) {
    __extends(Tab, _super);
    function Tab() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Tab.prototype.render = function () {
      var _a = this.props, className = _a.className, panel = _a.panel;
      return React__namespace.createElement("div", {
        className: classNames(TAB_PANEL, className),
        role: "tablist"
      }, panel);
    };
    Tab.defaultProps = {
      disabled: false
    };
    Tab.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Tab");
    return Tab;
  })(AbstractPureComponent2);
  var TabTitle = (function (_super) {
    __extends(TabTitle, _super);
    function TabTitle() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleClick = function (e) {
        return _this.props.onClick(_this.props.id, e);
      };
      return _this;
    }
    TabTitle.prototype.render = function () {
      var _a = this.props, className = _a.className, children = _a.children, disabled = _a.disabled, id = _a.id, parentId = _a.parentId, selected = _a.selected, title = _a.title, htmlProps = __rest(_a, ["className", "children", "disabled", "id", "parentId", "selected", "title"]);
      return React__namespace.createElement("div", __assign({}, removeNonHTMLProps(htmlProps), {
        "aria-controls": generateTabPanelId(parentId, id),
        "aria-disabled": disabled,
        "aria-expanded": selected,
        "aria-selected": selected,
        className: classNames(TAB$1, className),
        "data-tab-id": id,
        id: generateTabTitleId(parentId, id),
        onClick: disabled ? undefined : this.handleClick,
        role: "tab",
        tabIndex: disabled ? undefined : selected ? 0 : -1
      }), title, children);
    };
    TabTitle.displayName = ("").concat(DISPLAYNAME_PREFIX, ".TabTitle");
    return TabTitle;
  })(AbstractPureComponent2);
  function generateTabPanelId(parentId, tabId) {
    return ("").concat(TAB_PANEL, "_").concat(parentId, "_").concat(tabId);
  }
  function generateTabTitleId(parentId, tabId) {
    return ("").concat(TAB$1, "-title_").concat(parentId, "_").concat(tabId);
  }
  var Expander = function () {
    return React__namespace.createElement("div", {
      className: FLEX_EXPANDER
    });
  };
  var TAB_SELECTOR = (".").concat(TAB$1);
  (function (_super) {
    __extends(Tabs, _super);
    function Tabs(props) {
      var _this = _super.call(this, props) || this;
      _this.tablistElement = null;
      _this.refHandlers = {
        tablist: function (tabElement) {
          return _this.tablistElement = tabElement;
        }
      };
      _this.handleKeyDown = function (e) {
        var _a;
        var focusedElement = (_a = getActiveElement(_this.tablistElement)) === null || _a === void 0 ? void 0 : _a.closest(TAB_SELECTOR);
        if (focusedElement == null) {
          return;
        }
        var enabledTabElements = _this.getTabElements().filter(function (el) {
          return el.getAttribute("aria-disabled") === "false";
        });
        var focusedIndex = enabledTabElements.indexOf(focusedElement);
        var direction = _this.getKeyCodeDirection(e);
        if (focusedIndex >= 0 && direction !== undefined) {
          e.preventDefault();
          var length_1 = enabledTabElements.length;
          var nextFocusedIndex = (focusedIndex + direction + length_1) % length_1;
          enabledTabElements[nextFocusedIndex].focus();
        }
      };
      _this.handleKeyPress = function (e) {
        var targetTabElement = e.target.closest(TAB_SELECTOR);
        if (targetTabElement != null && isKeyboardClick(e.which)) {
          e.preventDefault();
          targetTabElement.click();
        }
      };
      _this.handleTabClick = function (newTabId, event) {
        var _a, _b;
        (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, newTabId, _this.state.selectedTabId, event);
        if (_this.props.selectedTabId === undefined) {
          _this.setState({
            selectedTabId: newTabId
          });
        }
      };
      _this.renderTabPanel = function (tab) {
        var _a = tab.props, className = _a.className, panel = _a.panel, id = _a.id, panelClassName = _a.panelClassName;
        if (panel === undefined) {
          return undefined;
        }
        return React__namespace.createElement("div", {
          "aria-labelledby": generateTabTitleId(_this.props.id, id),
          "aria-hidden": id !== _this.state.selectedTabId,
          className: classNames(TAB_PANEL, className, panelClassName),
          id: generateTabPanelId(_this.props.id, id),
          key: id,
          role: "tabpanel"
        }, panel);
      };
      _this.renderTabTitle = function (child) {
        if (isTabElement(child)) {
          var id = child.props.id;
          return React__namespace.createElement(TabTitle, __assign({}, child.props, {
            parentId: _this.props.id,
            onClick: _this.handleTabClick,
            selected: id === _this.state.selectedTabId
          }));
        }
        return child;
      };
      var selectedTabId = _this.getInitialSelectedTabId();
      _this.state = {
        selectedTabId: selectedTabId
      };
      return _this;
    }
    Tabs.getDerivedStateFromProps = function (_a) {
      var selectedTabId = _a.selectedTabId;
      if (selectedTabId !== undefined) {
        return {
          selectedTabId: selectedTabId
        };
      }
      return null;
    };
    Tabs.prototype.render = function () {
      var _a, _b;
      var _c = this.state, indicatorWrapperStyle = _c.indicatorWrapperStyle, selectedTabId = _c.selectedTabId;
      var tabTitles = React__namespace.Children.map(this.props.children, this.renderTabTitle);
      var tabPanels = this.getTabChildren().filter(this.props.renderActiveTabPanelOnly ? function (tab) {
        return tab.props.id === selectedTabId;
      } : function () {
        return true;
      }).map(this.renderTabPanel);
      var tabIndicator = this.props.animate ? React__namespace.createElement("div", {
        className: TAB_INDICATOR_WRAPPER,
        style: indicatorWrapperStyle
      }, React__namespace.createElement("div", {
        className: TAB_INDICATOR
      })) : null;
      var classes = classNames(TABS, (_a = {}, _a[VERTICAL] = this.props.vertical, _a), this.props.className);
      var tabListClasses = classNames(TAB_LIST, (_b = {}, _b[LARGE] = this.props.large, _b));
      return React__namespace.createElement("div", {
        className: classes
      }, React__namespace.createElement("div", {
        className: tabListClasses,
        onKeyDown: this.handleKeyDown,
        onKeyPress: this.handleKeyPress,
        ref: this.refHandlers.tablist,
        role: "tablist"
      }, tabIndicator, tabTitles), tabPanels);
    };
    Tabs.prototype.componentDidMount = function () {
      this.moveSelectionIndicator(false);
    };
    Tabs.prototype.componentDidUpdate = function (prevProps, prevState) {
      if (this.state.selectedTabId !== prevState.selectedTabId) {
        this.moveSelectionIndicator();
      } else if (prevState.selectedTabId != null) {
        var didChildrenChange = !arraysEqual(this.getTabChildrenProps(prevProps), this.getTabChildrenProps(), shallowCompareKeys);
        if (didChildrenChange) {
          this.moveSelectionIndicator();
        }
      }
    };
    Tabs.prototype.getInitialSelectedTabId = function () {
      var _a = this.props, defaultSelectedTabId = _a.defaultSelectedTabId, selectedTabId = _a.selectedTabId;
      if (selectedTabId !== undefined) {
        return selectedTabId;
      } else if (defaultSelectedTabId !== undefined) {
        return defaultSelectedTabId;
      } else {
        var tabs = this.getTabChildren();
        return tabs.length === 0 ? undefined : tabs[0].props.id;
      }
    };
    Tabs.prototype.getKeyCodeDirection = function (e) {
      if (isEventKeyCode(e, ARROW_LEFT, ARROW_UP)) {
        return -1;
      } else if (isEventKeyCode(e, ARROW_RIGHT, ARROW_DOWN)) {
        return 1;
      }
      return undefined;
    };
    Tabs.prototype.getTabChildrenProps = function (props) {
      if (props === void 0) {
        props = this.props;
      }
      return this.getTabChildren(props).map(function (child) {
        return child.props;
      });
    };
    Tabs.prototype.getTabChildren = function (props) {
      if (props === void 0) {
        props = this.props;
      }
      return React__namespace.Children.toArray(props.children).filter(isTabElement);
    };
    Tabs.prototype.getTabElements = function (subselector) {
      if (subselector === void 0) {
        subselector = "";
      }
      if (this.tablistElement == null) {
        return [];
      }
      return Array.from(this.tablistElement.querySelectorAll(TAB_SELECTOR + subselector));
    };
    Tabs.prototype.moveSelectionIndicator = function (animate) {
      if (animate === void 0) {
        animate = true;
      }
      if (this.tablistElement == null || !this.props.animate) {
        return;
      }
      var tabIdSelector = ("").concat(TAB_SELECTOR, "[data-tab-id=\"").concat(this.state.selectedTabId, "\"]");
      var selectedTabElement = this.tablistElement.querySelector(tabIdSelector);
      var indicatorWrapperStyle = {
        display: "none"
      };
      if (selectedTabElement != null) {
        var clientHeight = selectedTabElement.clientHeight, clientWidth = selectedTabElement.clientWidth, offsetLeft = selectedTabElement.offsetLeft, offsetTop = selectedTabElement.offsetTop;
        indicatorWrapperStyle = {
          height: clientHeight,
          transform: ("translateX(").concat(Math.floor(offsetLeft), "px) translateY(").concat(Math.floor(offsetTop), "px)"),
          width: clientWidth
        };
        if (!animate) {
          indicatorWrapperStyle.transition = "none";
        }
      }
      this.setState({
        indicatorWrapperStyle: indicatorWrapperStyle
      });
    };
    Tabs.Expander = Expander;
    Tabs.Tab = Tab;
    Tabs.defaultProps = {
      animate: true,
      large: false,
      renderActiveTabPanelOnly: false,
      vertical: false
    };
    Tabs.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Tabs");
    return Tabs;
  })(AbstractPureComponent2);
  function isEventKeyCode(e) {
    var codes = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      codes[_i - 1] = arguments[_i];
    }
    return codes.indexOf(e.which) >= 0;
  }
  function isTabElement(child) {
    return isElementOfType(child, Tab);
  }
  var Tag = (function (_super) {
    __extends(Tag, _super);
    function Tag() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.onRemoveClick = function (e) {
        var _a, _b;
        (_b = (_a = _this.props).onRemove) === null || _b === void 0 ? void 0 : _b.call(_a, e, _this.props);
      };
      return _this;
    }
    Tag.prototype.render = function () {
      var _a;
      var _b = this.props, active = _b.active, children = _b.children, className = _b.className, fill = _b.fill, icon = _b.icon, intent = _b.intent, interactive = _b.interactive, large = _b.large, minimal = _b.minimal, multiline = _b.multiline, onRemove = _b.onRemove, rightIcon = _b.rightIcon, round = _b.round, _c = _b.tabIndex, tabIndex = _c === void 0 ? 0 : _c, htmlTitle = _b.htmlTitle, elementRef = _b.elementRef, htmlProps = __rest(_b, ["active", "children", "className", "fill", "icon", "intent", "interactive", "large", "minimal", "multiline", "onRemove", "rightIcon", "round", "tabIndex", "htmlTitle", "elementRef"]);
      var isRemovable = isFunction$2(onRemove);
      var tagClasses = classNames(TAG, intentClass(intent), (_a = {}, _a[ACTIVE] = active, _a[FILL] = fill, _a[INTERACTIVE] = interactive, _a[LARGE] = large, _a[MINIMAL] = minimal, _a[ROUND] = round, _a), className);
      var isLarge = large || tagClasses.indexOf(LARGE) >= 0;
      var removeButton = isRemovable ? React__namespace.createElement("button", {
        "aria-label": "Remove Tag",
        type: "button",
        className: TAG_REMOVE,
        onClick: this.onRemoveClick,
        tabIndex: interactive ? tabIndex : undefined
      }, React__namespace.createElement(Icon, {
        icon: "small-cross",
        size: isLarge ? IconSize.LARGE : IconSize.STANDARD
      })) : null;
      return React__namespace.createElement("span", __assign({}, htmlProps, {
        className: tagClasses,
        tabIndex: interactive ? tabIndex : undefined,
        ref: elementRef
      }), React__namespace.createElement(Icon, {
        icon: icon
      }), !isReactNodeEmpty(children) && React__namespace.createElement(Text, {
        className: FILL,
        ellipsize: !multiline,
        tagName: "span",
        title: htmlTitle
      }, children), React__namespace.createElement(Icon, {
        icon: rightIcon
      }), removeButton);
    };
    Tag.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Tag");
    return Tag;
  })(AbstractPureComponent2);
  var NONE = -1;
  (function (_super) {
    __extends(TagInput, _super);
    function TagInput() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        activeIndex: NONE,
        inputValue: _this.props.inputValue || "",
        isInputFocused: false
      };
      _this.inputElement = null;
      _this.handleRef = refHandler(_this, "inputElement", _this.props.inputRef);
      _this.addTags = function (value, method) {
        if (method === void 0) {
          method = "default";
        }
        var _a = _this.props, inputValue = _a.inputValue, onAdd = _a.onAdd, onChange = _a.onChange, values = _a.values;
        var newValues = _this.getValues(value);
        var shouldClearInput = (onAdd === null || onAdd === void 0 ? void 0 : onAdd(newValues, method)) !== false && inputValue === undefined;
        if (isFunction$2(onChange)) {
          shouldClearInput = onChange(__spreadArray(__spreadArray([], values, true), newValues, true)) !== false && shouldClearInput;
        }
        if (shouldClearInput) {
          _this.setState({
            inputValue: ""
          });
        }
      };
      _this.maybeRenderTag = function (tag, index) {
        if (!tag) {
          return null;
        }
        var _a = _this.props, large = _a.large, tagProps = _a.tagProps;
        var props = isFunction$2(tagProps) ? tagProps(tag, index) : tagProps;
        return React__namespace.createElement(Tag, __assign({
          active: index === _this.state.activeIndex,
          "data-tag-index": index,
          key: tag + "__" + index,
          large: large,
          onRemove: _this.props.disabled ? undefined : _this.handleRemoveTag
        }, props), tag);
      };
      _this.handleContainerClick = function () {
        var _a;
        (_a = _this.inputElement) === null || _a === void 0 ? void 0 : _a.focus();
      };
      _this.handleContainerBlur = function (_a) {
        var currentTarget = _a.currentTarget;
        _this.requestAnimationFrame(function () {
          var isFocusInsideContainer = currentTarget.contains(getActiveElement(_this.inputElement));
          if (!isFocusInsideContainer) {
            if (_this.props.addOnBlur && _this.state.inputValue !== undefined && _this.state.inputValue.length > 0) {
              _this.addTags(_this.state.inputValue, "blur");
            }
            _this.setState({
              activeIndex: NONE,
              isInputFocused: false
            });
          }
        });
      };
      _this.handleInputFocus = function (event) {
        var _a, _b;
        _this.setState({
          isInputFocused: true
        });
        (_b = (_a = _this.props.inputProps) === null || _a === void 0 ? void 0 : _a.onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, event);
      };
      _this.handleInputChange = function (event) {
        var _a, _b, _c, _d;
        _this.setState({
          activeIndex: NONE,
          inputValue: event.currentTarget.value
        });
        (_b = (_a = _this.props).onInputChange) === null || _b === void 0 ? void 0 : _b.call(_a, event);
        (_d = (_c = _this.props.inputProps) === null || _c === void 0 ? void 0 : _c.onChange) === null || _d === void 0 ? void 0 : _d.call(_c, event);
      };
      _this.handleInputKeyDown = function (event) {
        var _a = event.currentTarget, selectionEnd = _a.selectionEnd, value = _a.value;
        var activeIndex = _this.state.activeIndex;
        var activeIndexToEmit = activeIndex;
        if (event.which === ENTER && value.length > 0) {
          _this.addTags(value, "default");
        } else if (selectionEnd === 0 && _this.props.values.length > 0) {
          if (event.which === ARROW_LEFT || event.which === ARROW_RIGHT) {
            var nextActiveIndex = _this.getNextActiveIndex(event.which === ARROW_RIGHT ? 1 : -1);
            if (nextActiveIndex !== activeIndex) {
              event.stopPropagation();
              activeIndexToEmit = nextActiveIndex;
              _this.setState({
                activeIndex: nextActiveIndex
              });
            }
          } else if (event.which === BACKSPACE) {
            _this.handleBackspaceToRemove(event);
          } else if (event.which === DELETE) {
            _this.handleDeleteToRemove(event);
          }
        }
        _this.invokeKeyPressCallback("onKeyDown", event, activeIndexToEmit);
      };
      _this.handleInputKeyUp = function (event) {
        _this.invokeKeyPressCallback("onKeyUp", event, _this.state.activeIndex);
      };
      _this.handleInputPaste = function (event) {
        var separator = _this.props.separator;
        var value = event.clipboardData.getData("text");
        if (!_this.props.addOnPaste || value.length === 0) {
          return;
        }
        if (separator === false || value.split(separator).length === 1) {
          return;
        }
        event.preventDefault();
        _this.addTags(value, "paste");
      };
      _this.handleRemoveTag = function (event) {
        var index = +event.currentTarget.parentElement.getAttribute("data-tag-index");
        _this.removeIndexFromValues(index);
      };
      return _this;
    }
    TagInput.getDerivedStateFromProps = function (props, state) {
      if (props.inputValue !== state.prevInputValueProp) {
        return {
          inputValue: props.inputValue,
          prevInputValueProp: props.inputValue
        };
      }
      return null;
    };
    TagInput.prototype.render = function () {
      var _a;
      var _b = this.props, className = _b.className, disabled = _b.disabled, fill = _b.fill, inputProps = _b.inputProps, intent = _b.intent, large = _b.large, leftIcon = _b.leftIcon, placeholder = _b.placeholder, values = _b.values;
      var classes = classNames(INPUT, TAG_INPUT, (_a = {}, _a[ACTIVE] = this.state.isInputFocused, _a[DISABLED] = disabled, _a[FILL] = fill, _a[LARGE] = large, _a), intentClass(intent), className);
      var isLarge = classes.indexOf(LARGE) > NONE;
      var isSomeValueDefined = values.some(function (val) {
        return !!val;
      });
      var resolvedPlaceholder = placeholder == null || isSomeValueDefined ? inputProps === null || inputProps === void 0 ? void 0 : inputProps.placeholder : placeholder;
      return React__namespace.createElement("div", {
        className: classes,
        onBlur: this.handleContainerBlur,
        onClick: this.handleContainerClick
      }, React__namespace.createElement(Icon, {
        className: TAG_INPUT_ICON,
        icon: leftIcon,
        size: isLarge ? IconSize.LARGE : IconSize.STANDARD
      }), React__namespace.createElement("div", {
        className: TAG_INPUT_VALUES
      }, values.map(this.maybeRenderTag), this.props.children, React__namespace.createElement("input", __assign({
        value: this.state.inputValue
      }, inputProps, {
        onFocus: this.handleInputFocus,
        onChange: this.handleInputChange,
        onKeyDown: this.handleInputKeyDown,
        onKeyUp: this.handleInputKeyUp,
        onPaste: this.handleInputPaste,
        placeholder: resolvedPlaceholder,
        ref: this.handleRef,
        className: classNames(INPUT_GHOST, inputProps === null || inputProps === void 0 ? void 0 : inputProps.className),
        disabled: disabled
      }))), this.props.rightElement);
    };
    TagInput.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.inputRef !== this.props.inputRef) {
        setRef$1(prevProps.inputRef, null);
        this.handleRef = refHandler(this, "inputElement", this.props.inputRef);
        setRef$1(this.props.inputRef, this.inputElement);
      }
    };
    TagInput.prototype.getNextActiveIndex = function (direction) {
      var activeIndex = this.state.activeIndex;
      if (activeIndex === NONE) {
        return direction < 0 ? this.findNextIndex(this.props.values.length, -1) : NONE;
      } else {
        return this.findNextIndex(activeIndex, direction);
      }
    };
    TagInput.prototype.findNextIndex = function (startIndex, direction) {
      var values = this.props.values;
      var index = startIndex + direction;
      while (index > 0 && index < values.length && !values[index]) {
        index += direction;
      }
      return clamp(index, 0, values.length);
    };
    TagInput.prototype.getValues = function (inputValue) {
      var separator = this.props.separator;
      return (separator === false ? [inputValue] : inputValue.split(separator)).map(function (val) {
        return val.trim();
      }).filter(function (val) {
        return val.length > 0;
      });
    };
    TagInput.prototype.handleBackspaceToRemove = function (event) {
      var previousActiveIndex = this.state.activeIndex;
      this.setState({
        activeIndex: this.getNextActiveIndex(-1)
      });
      if (this.isValidIndex(previousActiveIndex)) {
        event.stopPropagation();
        this.removeIndexFromValues(previousActiveIndex);
      }
    };
    TagInput.prototype.handleDeleteToRemove = function (event) {
      var activeIndex = this.state.activeIndex;
      if (this.isValidIndex(activeIndex)) {
        event.stopPropagation();
        this.removeIndexFromValues(activeIndex);
      }
    };
    TagInput.prototype.removeIndexFromValues = function (index) {
      var _a = this.props, onChange = _a.onChange, onRemove = _a.onRemove, values = _a.values;
      onRemove === null || onRemove === void 0 ? void 0 : onRemove(values[index], index);
      onChange === null || onChange === void 0 ? void 0 : onChange(values.filter(function (_, i) {
        return i !== index;
      }));
    };
    TagInput.prototype.invokeKeyPressCallback = function (propCallbackName, event, activeIndex) {
      var _a, _b, _c, _d;
      (_b = (_a = this.props)[propCallbackName]) === null || _b === void 0 ? void 0 : _b.call(_a, event, activeIndex === NONE ? undefined : activeIndex);
      (_d = (_c = this.props.inputProps)[propCallbackName]) === null || _d === void 0 ? void 0 : _d.call(_c, event);
    };
    TagInput.prototype.isValidIndex = function (index) {
      return index !== NONE && index < this.props.values.length;
    };
    TagInput.displayName = ("").concat(DISPLAYNAME_PREFIX, ".TagInput");
    TagInput.defaultProps = {
      addOnBlur: false,
      addOnPaste: true,
      inputProps: {},
      separator: /[,\n\r]/,
      tagProps: {}
    };
    return TagInput;
  })(AbstractPureComponent2);
  var Toast = (function (_super) {
    __extends(Toast, _super);
    function Toast() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleActionClick = function (e) {
        var _a, _b;
        (_b = (_a = _this.props.action) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e);
        _this.triggerDismiss(false);
      };
      _this.handleCloseClick = function () {
        return _this.triggerDismiss(false);
      };
      _this.startTimeout = function () {
        _this.clearTimeouts();
        if (_this.props.timeout > 0) {
          _this.setTimeout(function () {
            return _this.triggerDismiss(true);
          }, _this.props.timeout);
        }
      };
      return _this;
    }
    Toast.prototype.render = function () {
      var _a = this.props, className = _a.className, icon = _a.icon, intent = _a.intent, message = _a.message;
      return React__namespace.createElement("div", {
        className: classNames(TOAST, intentClass(intent), className),
        onBlur: this.startTimeout,
        onFocus: this.clearTimeouts,
        onMouseEnter: this.clearTimeouts,
        onMouseLeave: this.startTimeout,
        tabIndex: 0
      }, React__namespace.createElement(Icon, {
        icon: icon
      }), React__namespace.createElement("span", {
        className: TOAST_MESSAGE,
        role: "alert"
      }, message), React__namespace.createElement(ButtonGroup, {
        minimal: true
      }, this.maybeRenderActionButton(), React__namespace.createElement(Button, {
        "aria-label": "Close",
        icon: "cross",
        onClick: this.handleCloseClick
      })));
    };
    Toast.prototype.componentDidMount = function () {
      this.startTimeout();
    };
    Toast.prototype.componentDidUpdate = function (prevProps) {
      if (prevProps.timeout !== this.props.timeout) {
        if (this.props.timeout > 0) {
          this.startTimeout();
        } else {
          this.clearTimeouts();
        }
      }
    };
    Toast.prototype.componentWillUnmount = function () {
      this.clearTimeouts();
    };
    Toast.prototype.maybeRenderActionButton = function () {
      var action = this.props.action;
      if (action == null) {
        return undefined;
      } else {
        return React__namespace.createElement(AnchorButton, __assign({}, action, {
          intent: undefined,
          onClick: this.handleActionClick
        }));
      }
    };
    Toast.prototype.triggerDismiss = function (didTimeoutExpire) {
      var _a, _b;
      this.clearTimeouts();
      (_b = (_a = this.props).onDismiss) === null || _b === void 0 ? void 0 : _b.call(_a, didTimeoutExpire);
    };
    Toast.defaultProps = {
      className: "",
      message: "",
      timeout: 5000
    };
    Toast.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Toast");
    return Toast;
  })(AbstractPureComponent2);
  (function (_super) {
    __extends(Toaster, _super);
    function Toaster() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.state = {
        toasts: []
      };
      _this.toastId = 0;
      _this.renderToast = function (toast) {
        return React__namespace.createElement(Toast, __assign({}, toast, {
          onDismiss: _this.getDismissHandler(toast)
        }));
      };
      _this.getDismissHandler = function (toast) {
        return function (timeoutExpired) {
          _this.dismiss(toast.key, timeoutExpired);
        };
      };
      _this.handleClose = function (e) {
        if (e.which === ESCAPE) {
          _this.clear();
        }
      };
      return _this;
    }
    Toaster.create = function (props, container) {
      if (container === void 0) {
        container = document.body;
      }
      if (props != null && props.usePortal != null && !isNodeEnv("production")) {
        console.warn(TOASTER_WARN_INLINE);
      }
      var containerElement = document.createElement("div");
      container.appendChild(containerElement);
      var toaster = ReactDOM__namespace.render(React__namespace.createElement(Toaster, __assign({}, props, {
        usePortal: false
      })), containerElement);
      if (toaster == null) {
        throw new Error(TOASTER_CREATE_NULL);
      }
      return toaster;
    };
    Toaster.prototype.show = function (props, key) {
      if (this.props.maxToasts) {
        this.dismissIfAtLimit();
      }
      var options = this.createToastOptions(props, key);
      if (key === undefined || this.isNewToastKey(key)) {
        this.setState(function (prevState) {
          return {
            toasts: __spreadArray([options], prevState.toasts, true)
          };
        });
      } else {
        this.setState(function (prevState) {
          return {
            toasts: prevState.toasts.map(function (t) {
              return t.key === key ? options : t;
            })
          };
        });
      }
      return options.key;
    };
    Toaster.prototype.dismiss = function (key, timeoutExpired) {
      if (timeoutExpired === void 0) {
        timeoutExpired = false;
      }
      this.setState(function (_a) {
        var toasts = _a.toasts;
        return {
          toasts: toasts.filter(function (t) {
            var _a;
            var matchesKey = t.key === key;
            if (matchesKey) {
              (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, timeoutExpired);
            }
            return !matchesKey;
          })
        };
      });
    };
    Toaster.prototype.clear = function () {
      this.state.toasts.forEach(function (t) {
        var _a;
        return (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, false);
      });
      this.setState({
        toasts: []
      });
    };
    Toaster.prototype.getToasts = function () {
      return this.state.toasts;
    };
    Toaster.prototype.render = function () {
      var classes = classNames(TOAST_CONTAINER, this.getPositionClasses(), this.props.className);
      return React__namespace.createElement(Overlay, {
        autoFocus: this.props.autoFocus,
        canEscapeKeyClose: this.props.canEscapeKeyClear,
        canOutsideClickClose: false,
        className: classes,
        enforceFocus: false,
        hasBackdrop: false,
        isOpen: this.state.toasts.length > 0 || this.props.children != null,
        onClose: this.handleClose,
        shouldReturnFocusOnClose: false,
        transitionDuration: 350,
        transitionName: TOAST,
        usePortal: this.props.usePortal
      }, this.state.toasts.map(this.renderToast, this), this.props.children);
    };
    Toaster.prototype.validateProps = function (_a) {
      var maxToasts = _a.maxToasts;
      if (maxToasts !== undefined && maxToasts < 1) {
        throw new Error(TOASTER_MAX_TOASTS_INVALID);
      }
    };
    Toaster.prototype.isNewToastKey = function (key) {
      return this.state.toasts.every(function (toast) {
        return toast.key !== key;
      });
    };
    Toaster.prototype.dismissIfAtLimit = function () {
      if (this.state.toasts.length === this.props.maxToasts) {
        this.dismiss(this.state.toasts[this.state.toasts.length - 1].key);
      }
    };
    Toaster.prototype.createToastOptions = function (props, key) {
      if (key === void 0) {
        key = ("toast-").concat(this.toastId++);
      }
      return __assign(__assign({}, props), {
        key: key
      });
    };
    Toaster.prototype.getPositionClasses = function () {
      var positions = this.props.position.split("-");
      return __spreadArray(__spreadArray([], positions.map(function (p) {
        return ("").concat(TOAST_CONTAINER, "-").concat(p.toLowerCase());
      }), true), [("").concat(TOAST_CONTAINER, "-").concat(this.props.usePortal ? "in-portal" : "inline")], false);
    };
    Toaster.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Toaster");
    Toaster.defaultProps = {
      autoFocus: false,
      canEscapeKeyClear: true,
      position: Position.TOP,
      usePortal: true
    };
    return Toaster;
  })(AbstractPureComponent2);
  var TreeNode = (function (_super) {
    __extends(TreeNode, _super);
    function TreeNode() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.handleCaretClick = function (e) {
        var _a;
        e.stopPropagation();
        var _b = _this.props, isExpanded = _b.isExpanded, onCollapse = _b.onCollapse, onExpand = _b.onExpand;
        (_a = isExpanded ? onCollapse : onExpand) === null || _a === void 0 ? void 0 : _a(_this, e);
      };
      _this.handleClick = function (e) {
        var _a, _b;
        (_b = (_a = _this.props).onClick) === null || _b === void 0 ? void 0 : _b.call(_a, _this, e);
      };
      _this.handleContentRef = function (element) {
        var _a, _b;
        (_b = (_a = _this.props).contentRef) === null || _b === void 0 ? void 0 : _b.call(_a, _this, element);
      };
      _this.handleContextMenu = function (e) {
        var _a, _b;
        (_b = (_a = _this.props).onContextMenu) === null || _b === void 0 ? void 0 : _b.call(_a, _this, e);
      };
      _this.handleDoubleClick = function (e) {
        var _a, _b;
        (_b = (_a = _this.props).onDoubleClick) === null || _b === void 0 ? void 0 : _b.call(_a, _this, e);
      };
      _this.handleMouseEnter = function (e) {
        var _a, _b;
        (_b = (_a = _this.props).onMouseEnter) === null || _b === void 0 ? void 0 : _b.call(_a, _this, e);
      };
      _this.handleMouseLeave = function (e) {
        var _a, _b;
        (_b = (_a = _this.props).onMouseLeave) === null || _b === void 0 ? void 0 : _b.call(_a, _this, e);
      };
      return _this;
    }
    TreeNode.ofType = function () {
      return TreeNode;
    };
    TreeNode.prototype.render = function () {
      var _a;
      var _b = this.props, children = _b.children, className = _b.className, disabled = _b.disabled, icon = _b.icon, isExpanded = _b.isExpanded, isSelected = _b.isSelected, label = _b.label;
      var classes = classNames(TREE_NODE, (_a = {}, _a[DISABLED] = disabled, _a[TREE_NODE_SELECTED] = isSelected, _a[TREE_NODE_EXPANDED] = isExpanded, _a), className);
      var contentClasses = classNames(TREE_NODE_CONTENT, ("").concat(TREE_NODE_CONTENT, "-").concat(this.props.depth));
      var eventHandlers = disabled === true ? {} : {
        onClick: this.handleClick,
        onContextMenu: this.handleContextMenu,
        onDoubleClick: this.handleDoubleClick,
        onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave
      };
      return React__namespace.createElement("li", {
        className: classes
      }, React__namespace.createElement("div", __assign({
        className: contentClasses,
        ref: this.handleContentRef
      }, eventHandlers), this.maybeRenderCaret(), React__namespace.createElement(Icon, {
        className: TREE_NODE_ICON,
        icon: icon,
        "aria-hidden": true,
        tabIndex: -1
      }), React__namespace.createElement("span", {
        className: TREE_NODE_LABEL
      }, label), this.maybeRenderSecondaryLabel()), React__namespace.createElement(Collapse, {
        isOpen: isExpanded
      }, children));
    };
    TreeNode.prototype.maybeRenderCaret = function () {
      var _a = this.props, children = _a.children, isExpanded = _a.isExpanded, disabled = _a.disabled, _b = _a.hasCaret, hasCaret = _b === void 0 ? React__namespace.Children.count(children) > 0 : _b;
      if (hasCaret) {
        var caretClasses = classNames(TREE_NODE_CARET, isExpanded ? TREE_NODE_CARET_OPEN : TREE_NODE_CARET_CLOSED);
        var onClick = disabled === true ? undefined : this.handleCaretClick;
        return React__namespace.createElement(Icon, {
          title: isExpanded ? "Collapse group" : "Expand group",
          className: caretClasses,
          onClick: onClick,
          icon: "chevron-right"
        });
      }
      return React__namespace.createElement("span", {
        className: TREE_NODE_CARET_NONE
      });
    };
    TreeNode.prototype.maybeRenderSecondaryLabel = function () {
      if (this.props.secondaryLabel != null) {
        return React__namespace.createElement("span", {
          className: TREE_NODE_SECONDARY_LABEL
        }, this.props.secondaryLabel);
      } else {
        return undefined;
      }
    };
    TreeNode.displayName = ("").concat(DISPLAYNAME_PREFIX, ".TreeNode");
    return TreeNode;
  })(React__namespace.Component);
  (function (_super) {
    __extends(Tree, _super);
    function Tree() {
      var _this = _super !== null && _super.apply(this, arguments) || this;
      _this.nodeRefs = {};
      _this.handleNodeCollapse = function (node, e) {
        _this.handlerHelper(_this.props.onNodeCollapse, node, e);
      };
      _this.handleNodeClick = function (node, e) {
        _this.handlerHelper(_this.props.onNodeClick, node, e);
      };
      _this.handleContentRef = function (node, element) {
        if (element != null) {
          _this.nodeRefs[node.props.id] = element;
        } else {
          delete _this.nodeRefs[node.props.id];
        }
      };
      _this.handleNodeContextMenu = function (node, e) {
        _this.handlerHelper(_this.props.onNodeContextMenu, node, e);
      };
      _this.handleNodeDoubleClick = function (node, e) {
        _this.handlerHelper(_this.props.onNodeDoubleClick, node, e);
      };
      _this.handleNodeExpand = function (node, e) {
        _this.handlerHelper(_this.props.onNodeExpand, node, e);
      };
      _this.handleNodeMouseEnter = function (node, e) {
        _this.handlerHelper(_this.props.onNodeMouseEnter, node, e);
      };
      _this.handleNodeMouseLeave = function (node, e) {
        _this.handlerHelper(_this.props.onNodeMouseLeave, node, e);
      };
      return _this;
    }
    Tree.ofType = function () {
      return Tree;
    };
    Tree.nodeFromPath = function (path, treeNodes) {
      if (path.length === 1) {
        return treeNodes[path[0]];
      } else {
        return Tree.nodeFromPath(path.slice(1), treeNodes[path[0]].childNodes);
      }
    };
    Tree.prototype.render = function () {
      return React__namespace.createElement("div", {
        className: classNames(TREE, this.props.className)
      }, this.renderNodes(this.props.contents, [], TREE_ROOT));
    };
    Tree.prototype.getNodeContentElement = function (nodeId) {
      return this.nodeRefs[nodeId];
    };
    Tree.prototype.renderNodes = function (treeNodes, currentPath, className) {
      var _this = this;
      if (treeNodes == null) {
        return null;
      }
      var nodeItems = treeNodes.map(function (node, i) {
        var elementPath = currentPath.concat(i);
        var TypedTreeNode = TreeNode.ofType();
        return React__namespace.createElement(TypedTreeNode, __assign({}, node, {
          key: node.id,
          contentRef: _this.handleContentRef,
          depth: elementPath.length - 1,
          onClick: _this.handleNodeClick,
          onContextMenu: _this.handleNodeContextMenu,
          onCollapse: _this.handleNodeCollapse,
          onDoubleClick: _this.handleNodeDoubleClick,
          onExpand: _this.handleNodeExpand,
          onMouseEnter: _this.handleNodeMouseEnter,
          onMouseLeave: _this.handleNodeMouseLeave,
          path: elementPath
        }), _this.renderNodes(node.childNodes, elementPath));
      });
      return React__namespace.createElement("ul", {
        className: classNames(TREE_NODE_LIST, className)
      }, nodeItems);
    };
    Tree.prototype.handlerHelper = function (handlerFromProps, node, e) {
      if (isFunction$2(handlerFromProps)) {
        var nodeData = Tree.nodeFromPath(node.props.path, this.props.contents);
        handlerFromProps(nodeData, node.props.path, e);
      }
    };
    Tree.displayName = ("").concat(DISPLAYNAME_PREFIX, ".Tree");
    return Tree;
  })(React__namespace.Component);
  var SILVER = "#AAAAAA";
  var DEFAULT_COLOR = SILVER;
  var SA_TAB_BUTTON_WIDTH = "40px";
  var SA_TAB_ICON_SIZE = IconSize.LARGE;
  var BP_TOOLTIP_PADDING = "10px 12px";
  var BP_TAB_BUTTON_MARGIN = "20px";
  var BP_TAB_PANEL_MARGIN = "20px";
  var BP_BORDER_RADIUS = "3px";
  var STANDARD_MARGIN = "10px";
  var BP_TEXT_COLOR = "#F5F8FA";
  var BP_TOOLTIP_BACKGROUND_COLOR = "#E1E8ED";
  var BP_ICON_COLOR = "#A7B6C2";
  var ACE_GUTTER_TEXT_COLOR = "#8091A0";
  var ACE_GUTTER_BACKGROUND_COLOR = "#34495E";
  var BP_TOOLTIP_TEXT_COLOR = "#394B59";
  var MAIN_TICKS = 1;
  var SUB_TICKS = MAIN_TICKS / 4;
  var GRID_PADDING = MAIN_TICKS;
  var ROUND_UP_INTERVAL = MAIN_TICKS;
  var ZOOM_TICK_SCALE = 0.1;
  var ROTATION_SPEED = 0.0015;
  var X_FACTOR = 1;
  var Y_FACTOR = 0.75;
  const flatten$4 = arr => arr.reduce((acc, val) => Array.isArray(val) ? acc.concat(flatten$4(val)) : acc.concat(val), []);
  var flatten_1$1 = flatten$4;
  const abs = (out, vector) => {
    out[0] = Math.abs(vector[0]);
    out[1] = Math.abs(vector[1]);
    return out;
  };
  var abs_1 = abs;
  const add$1 = (out, a, b) => {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    return out;
  };
  var add_1$1 = add$1;
  var angle$1 = {
    exports: {}
  };
  const angleRadians$1 = vector => Math.atan2(vector[1], vector[0]);
  var angleRadians_1 = angleRadians$1;
  (function (module) {
    module.exports = angleRadians_1;
  })(angle$1);
  const angleRadians = angleRadians_1;
  const angleDegrees = vector => angleRadians(vector) * 57.29577951308232;
  var angleDegrees_1 = angleDegrees;
  const create$d = () => [0, 0];
  var create_1$4 = create$d;
  const create$c = create_1$4;
  const clone$6 = vector => {
    const out = create$c();
    out[0] = vector[0];
    out[1] = vector[1];
    return out;
  };
  var clone_1$4 = clone$6;
  const copy$2 = (out, vector) => {
    out[0] = vector[0];
    out[1] = vector[1];
    return out;
  };
  var copy_1$2 = copy$2;
  const cross$1 = (out, a, b) => {
    out[0] = 0;
    out[1] = 0;
    out[2] = a[0] * b[1] - a[1] * b[0];
    return out;
  };
  var cross_1$1 = cross$1;
  const distance$1 = (a, b) => {
    const x = b[0] - a[0];
    const y = b[1] - a[1];
    return Math.sqrt(x * x + y * y);
  };
  var distance_1$1 = distance$1;
  const divide$1 = (out, a, b) => {
    out[0] = a[0] / b[0];
    out[1] = a[1] / b[1];
    return out;
  };
  var divide_1$1 = divide$1;
  const dot$2 = (a, b) => a[0] * b[0] + a[1] * b[1];
  var dot_1$1 = dot$2;
  const equals$3 = (a, b) => a[0] === b[0] && a[1] === b[1];
  var equals_1$2 = equals$3;
  const {sin: sin$1, cos: cos$1} = trigonometry;
  const fromAngleRadians$1 = (out, radians) => {
    out[0] = cos$1(radians);
    out[1] = sin$1(radians);
    return out;
  };
  var fromAngleRadians_1 = fromAngleRadians$1;
  const fromAngleRadians = fromAngleRadians_1;
  const fromAngleDegrees = (out, degrees) => fromAngleRadians(out, Math.PI * degrees / 180);
  var fromAngleDegrees_1 = fromAngleDegrees;
  const fromScalar = (out, scalar) => {
    out[0] = scalar;
    out[1] = scalar;
    return out;
  };
  var fromScalar_1 = fromScalar;
  const create$b = create_1$4;
  const fromValues$2 = (x, y) => {
    const out = create$b();
    out[0] = x;
    out[1] = y;
    return out;
  };
  var fromValues_1$1 = fromValues$2;
  const length$1 = vector => Math.sqrt(vector[0] * vector[0] + vector[1] * vector[1]);
  var length_1$1 = length$1;
  const lerp$1 = (out, a, b, t) => {
    const ax = a[0];
    const ay = a[1];
    out[0] = ax + t * (b[0] - ax);
    out[1] = ay + t * (b[1] - ay);
    return out;
  };
  var lerp_1$1 = lerp$1;
  const max$2 = (out, a, b) => {
    out[0] = Math.max(a[0], b[0]);
    out[1] = Math.max(a[1], b[1]);
    return out;
  };
  var max_1$1 = max$2;
  const min$2 = (out, a, b) => {
    out[0] = Math.min(a[0], b[0]);
    out[1] = Math.min(a[1], b[1]);
    return out;
  };
  var min_1$1 = min$2;
  const multiply$2 = (out, a, b) => {
    out[0] = a[0] * b[0];
    out[1] = a[1] * b[1];
    return out;
  };
  var multiply_1$2 = multiply$2;
  const negate$1 = (out, vector) => {
    out[0] = -vector[0];
    out[1] = -vector[1];
    return out;
  };
  var negate_1$1 = negate$1;
  const rotate$4 = (out, vector, origin, radians) => {
    const x = vector[0] - origin[0];
    const y = vector[1] - origin[1];
    const c = Math.cos(radians);
    const s = Math.sin(radians);
    out[0] = x * c - y * s + origin[0];
    out[1] = x * s + y * c + origin[1];
    return out;
  };
  var rotate_1$1 = rotate$4;
  const create$a = create_1$4;
  const rotate$3 = rotate_1$1;
  const normal = (out, vector) => rotate$3(out, vector, create$a(), Math.PI / 2);
  var normal_1 = normal;
  const normalize$2 = (out, vector) => {
    const x = vector[0];
    const y = vector[1];
    let len = x * x + y * y;
    if (len > 0) {
      len = 1 / Math.sqrt(len);
    }
    out[0] = x * len;
    out[1] = y * len;
    return out;
  };
  var normalize_1$1 = normalize$2;
  const scale$2 = (out, vector, amount) => {
    out[0] = vector[0] * amount;
    out[1] = vector[1] * amount;
    return out;
  };
  var scale_1$2 = scale$2;
  const snap = (out, vector, epsilon) => {
    out[0] = Math.round(vector[0] / epsilon) * epsilon + 0;
    out[1] = Math.round(vector[1] / epsilon) * epsilon + 0;
    return out;
  };
  var snap_1 = snap;
  const squaredDistance$1 = (a, b) => {
    const x = b[0] - a[0];
    const y = b[1] - a[1];
    return x * x + y * y;
  };
  var squaredDistance_1$1 = squaredDistance$1;
  const squaredLength$1 = vector => {
    const x = vector[0];
    const y = vector[1];
    return x * x + y * y;
  };
  var squaredLength_1$1 = squaredLength$1;
  const subtract$1 = (out, a, b) => {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    return out;
  };
  var subtract_1$1 = subtract$1;
  const toString$2 = vector => `[${vector[0].toFixed(7)}, ${vector[1].toFixed(7)}]`;
  var toString_1$2 = toString$2;
  const transform$2 = (out, vector, matrix) => {
    const x = vector[0];
    const y = vector[1];
    out[0] = matrix[0] * x + matrix[4] * y + matrix[12];
    out[1] = matrix[1] * x + matrix[5] * y + matrix[13];
    return out;
  };
  var transform_1$2 = transform$2;
  var vec2$g = {
    abs: abs_1,
    add: add_1$1,
    angle: angle$1.exports,
    angleDegrees: angleDegrees_1,
    angleRadians: angleRadians_1,
    clone: clone_1$4,
    copy: copy_1$2,
    create: create_1$4,
    cross: cross_1$1,
    distance: distance_1$1,
    divide: divide_1$1,
    dot: dot_1$1,
    equals: equals_1$2,
    fromAngleDegrees: fromAngleDegrees_1,
    fromAngleRadians: fromAngleRadians_1,
    fromScalar: fromScalar_1,
    fromValues: fromValues_1$1,
    length: length_1$1,
    lerp: lerp_1$1,
    max: max_1$1,
    min: min_1$1,
    multiply: multiply_1$2,
    negate: negate_1$1,
    normal: normal_1,
    normalize: normalize_1$1,
    rotate: rotate_1$1,
    scale: scale_1$2,
    snap: snap_1,
    squaredDistance: squaredDistance_1$1,
    squaredLength: squaredLength_1$1,
    subtract: subtract_1$1,
    toString: toString_1$2,
    transform: transform_1$2
  };
  const clone$5 = geometry => Object.assign({}, geometry);
  var clone_1$3 = clone$5;
  const mat4$i = mat4$p;
  const create$9 = sides => {
    if (sides === undefined) {
      sides = [];
    }
    return {
      sides: sides,
      transforms: mat4$i.create()
    };
  };
  var create_1$3 = create$9;
  const vec2$f = vec2$g;
  const create$8 = create_1$3;
  const fromPoints$3 = points => {
    if (!Array.isArray(points)) {
      throw new Error('the given points must be an array');
    }
    let length = points.length;
    if (length < 3) {
      throw new Error('the given points must define a closed geometry with three or more points');
    }
    if (vec2$f.equals(points[0], points[length - 1])) --length;
    const sides = [];
    let prevpoint = points[length - 1];
    for (let i = 0; i < length; i++) {
      const point = points[i];
      sides.push([vec2$f.clone(prevpoint), vec2$f.clone(point)]);
      prevpoint = point;
    }
    return create$8(sides);
  };
  var fromPoints_1$1 = fromPoints$3;
  const mat4$h = mat4$p;
  const vec2$e = vec2$g;
  const create$7 = create_1$3;
  const fromCompactBinary$1 = data => {
    if (data[0] !== 0) throw new Error('invalid compact binary data');
    const created = create$7();
    created.transforms = mat4$h.clone(data.slice(1, 17));
    for (let i = 21; i < data.length; i += 4) {
      const point0 = vec2$e.fromValues(data[i + 0], data[i + 1]);
      const point1 = vec2$e.fromValues(data[i + 2], data[i + 3]);
      created.sides.push([point0, point1]);
    }
    if (data[17] >= 0) {
      created.color = [data[17], data[18], data[19], data[20]];
    }
    return created;
  };
  var fromCompactBinary_1$1 = fromCompactBinary$1;
  const isA$3 = object => {
    if (object && typeof object === 'object') {
      if (('sides' in object) && ('transforms' in object)) {
        if (Array.isArray(object.sides) && ('length' in object.transforms)) {
          return true;
        }
      }
    }
    return false;
  };
  var isA_1$1 = isA$3;
  const mat4$g = mat4$p;
  const vec2$d = vec2$g;
  const applyTransforms$3 = geometry => {
    if (mat4$g.isIdentity(geometry.transforms)) return geometry;
    geometry.sides = geometry.sides.map(side => {
      const p0 = vec2$d.transform(vec2$d.create(), side[0], geometry.transforms);
      const p1 = vec2$d.transform(vec2$d.create(), side[1], geometry.transforms);
      return [p0, p1];
    });
    geometry.transforms = mat4$g.create();
    return geometry;
  };
  var applyTransforms_1$1 = applyTransforms$3;
  const applyTransforms$2 = applyTransforms_1$1;
  const toSides$4 = geometry => applyTransforms$2(geometry).sides;
  var toSides_1 = toSides$4;
  const create$6 = create_1$3;
  const toSides$3 = toSides_1;
  const reverse$1 = geometry => {
    const oldsides = toSides$3(geometry);
    const newsides = oldsides.map(side => [side[1], side[0]]);
    newsides.reverse();
    return create$6(newsides);
  };
  var reverse_1$1 = reverse$1;
  const vec2$c = vec2$g;
  const toSides$2 = toSides_1;
  const toSharedVertices = sides => {
    const unique = new Map();
    const getUniqueVertex = vertex => {
      const key = vertex.toString();
      if (unique.has(key)) {
        return unique.get(key);
      } else {
        unique.set(key, vertex);
        return vertex;
      }
    };
    return sides.map(side => side.map(getUniqueVertex));
  };
  const toVertexMap = sides => {
    const vertexMap = new Map();
    const edges = toSharedVertices(sides);
    edges.forEach(edge => {
      if (vertexMap.has(edge[0])) {
        vertexMap.get(edge[0]).push(edge);
      } else {
        vertexMap.set(edge[0], [edge]);
      }
    });
    return vertexMap;
  };
  const toOutlines$1 = geometry => {
    const vertexMap = toVertexMap(toSides$2(geometry));
    const outlines = [];
    while (true) {
      let startSide;
      for (const [vertex, edges] of vertexMap) {
        startSide = edges.shift();
        if (!startSide) {
          vertexMap.delete(vertex);
          continue;
        }
        break;
      }
      if (startSide === undefined) break;
      const connectedVertexPoints = [];
      const startVertex = startSide[0];
      while (true) {
        connectedVertexPoints.push(startSide[0]);
        const nextVertex = startSide[1];
        if (nextVertex === startVertex) break;
        const nextPossibleSides = vertexMap.get(nextVertex);
        if (!nextPossibleSides) {
          throw new Error(`geometry is not closed at vertex ${nextVertex}`);
        }
        const nextSide = popNextSide(startSide, nextPossibleSides);
        if (nextPossibleSides.length === 0) {
          vertexMap.delete(nextVertex);
        }
        startSide = nextSide;
      }
      if (connectedVertexPoints.length > 0) {
        connectedVertexPoints.push(connectedVertexPoints.shift());
      }
      outlines.push(connectedVertexPoints);
    }
    vertexMap.clear();
    return outlines;
  };
  const popNextSide = (startSide, nextSides) => {
    if (nextSides.length === 1) {
      return nextSides.pop();
    }
    const v0 = vec2$c.create();
    const startAngle = vec2$c.angleDegrees(vec2$c.subtract(v0, startSide[1], startSide[0]));
    let bestAngle;
    let bestIndex;
    nextSides.forEach((nextSide, index) => {
      const nextAngle = vec2$c.angleDegrees(vec2$c.subtract(v0, nextSide[1], nextSide[0]));
      let angle = nextAngle - startAngle;
      if (angle < -180) angle += 360;
      if (angle >= 180) angle -= 360;
      if (bestIndex === undefined || angle > bestAngle) {
        bestIndex = index;
        bestAngle = angle;
      }
    });
    const nextSide = nextSides[bestIndex];
    nextSides.splice(bestIndex, 1);
    return nextSide;
  };
  var toOutlines_1 = toOutlines$1;
  const toSides$1 = toSides_1;
  const toPoints$6 = geometry => {
    const sides = toSides$1(geometry);
    const points = sides.map(side => side[0]);
    if (points.length > 0) {
      points.push(points.shift());
    }
    return points;
  };
  var toPoints_1$1 = toPoints$6;
  const vec2$b = vec2$g;
  const toSides = toSides_1;
  const toString$1 = geometry => {
    const sides = toSides(geometry);
    let result = 'geom2 (' + sides.length + ' sides):\n[\n';
    sides.forEach(side => {
      result += '  [' + vec2$b.toString(side[0]) + ', ' + vec2$b.toString(side[1]) + ']\n';
    });
    result += ']\n';
    return result;
  };
  var toString_1$1 = toString$1;
  const toCompactBinary$1 = geometry => {
    const sides = geometry.sides;
    const transforms = geometry.transforms;
    let color = [-1, -1, -1, -1];
    if (geometry.color) color = geometry.color;
    const compacted = new Float32Array(1 + 16 + 4 + sides.length * 4);
    compacted[0] = 0;
    compacted[1] = transforms[0];
    compacted[2] = transforms[1];
    compacted[3] = transforms[2];
    compacted[4] = transforms[3];
    compacted[5] = transforms[4];
    compacted[6] = transforms[5];
    compacted[7] = transforms[6];
    compacted[8] = transforms[7];
    compacted[9] = transforms[8];
    compacted[10] = transforms[9];
    compacted[11] = transforms[10];
    compacted[12] = transforms[11];
    compacted[13] = transforms[12];
    compacted[14] = transforms[13];
    compacted[15] = transforms[14];
    compacted[16] = transforms[15];
    compacted[17] = color[0];
    compacted[18] = color[1];
    compacted[19] = color[2];
    compacted[20] = color[3];
    for (let i = 0; i < sides.length; i++) {
      const ci = i * 4 + 21;
      const point0 = sides[i][0];
      const point1 = sides[i][1];
      compacted[ci + 0] = point0[0];
      compacted[ci + 1] = point0[1];
      compacted[ci + 2] = point1[0];
      compacted[ci + 3] = point1[1];
    }
    return compacted;
  };
  var toCompactBinary_1$1 = toCompactBinary$1;
  const mat4$f = mat4$p;
  const transform$1 = (matrix, geometry) => {
    const transforms = mat4$f.multiply(mat4$f.create(), matrix, geometry.transforms);
    return Object.assign({}, geometry, {
      transforms
    });
  };
  var transform_1$1 = transform$1;
  const vec2$a = vec2$g;
  const isA$2 = isA_1$1;
  const toOutlines = toOutlines_1;
  const validate$1 = object => {
    if (!isA$2(object)) {
      throw new Error('invalid geom2 structure');
    }
    toOutlines(object);
    object.sides.forEach(side => {
      if (vec2$a.equals(side[0], side[1])) {
        throw new Error(`geom2 self-edge ${side[0]}`);
      }
    });
    if (!object.transforms.every(Number.isFinite)) {
      throw new Error(`geom2 invalid transforms ${object.transforms}`);
    }
  };
  var validate_1$1 = validate$1;
  var geom2$1 = {
    clone: clone_1$3,
    create: create_1$3,
    fromPoints: fromPoints_1$1,
    fromCompactBinary: fromCompactBinary_1$1,
    isA: isA_1$1,
    reverse: reverse_1$1,
    toOutlines: toOutlines_1,
    toPoints: toPoints_1$1,
    toSides: toSides_1,
    toString: toString_1$1,
    toCompactBinary: toCompactBinary_1$1,
    transform: transform_1$1,
    validate: validate_1$1
  };
  const clone$4 = geometry => Object.assign({}, geometry);
  var clone_1$2 = clone$4;
  const {EPS: EPS$1} = constants;
  const vec2$9 = vec2$g;
  const clone$3 = clone_1$2;
  const close$1 = geometry => {
    if (geometry.isClosed) return geometry;
    const cloned = clone$3(geometry);
    cloned.isClosed = true;
    if (cloned.points.length > 1) {
      const points = cloned.points;
      const p0 = points[0];
      let pn = points[points.length - 1];
      while (vec2$9.distance(p0, pn) < EPS$1 * EPS$1) {
        points.pop();
        if (points.length === 1) break;
        pn = points[points.length - 1];
      }
    }
    return cloned;
  };
  var close_1 = close$1;
  const mat4$e = mat4$p;
  const create$5 = points => {
    if (points === undefined) {
      points = [];
    }
    return {
      points: points,
      isClosed: false,
      transforms: mat4$e.create()
    };
  };
  var create_1$2 = create$5;
  const {EPS} = constants;
  const vec2$8 = vec2$g;
  const close = close_1;
  const create$4 = create_1$2;
  const fromPoints$2 = (options, points) => {
    const defaults = {
      closed: false
    };
    let {closed} = Object.assign({}, defaults, options);
    let created = create$4();
    created.points = points.map(point => vec2$8.clone(point));
    if (created.points.length > 1) {
      const p0 = created.points[0];
      const pn = created.points[created.points.length - 1];
      if (vec2$8.distance(p0, pn) < EPS * EPS) {
        closed = true;
      }
    }
    if (closed === true) created = close(created);
    return created;
  };
  var fromPoints_1 = fromPoints$2;
  const mat4$d = mat4$p;
  const vec2$7 = vec2$g;
  const applyTransforms$1 = geometry => {
    if (mat4$d.isIdentity(geometry.transforms)) return geometry;
    geometry.points = geometry.points.map(point => vec2$7.transform(vec2$7.create(), point, geometry.transforms));
    geometry.transforms = mat4$d.create();
    return geometry;
  };
  var applyTransforms_1 = applyTransforms$1;
  const applyTransforms = applyTransforms_1;
  const toPoints$5 = geometry => applyTransforms(geometry).points;
  var toPoints_1 = toPoints$5;
  const vec2$6 = vec2$g;
  const fromPoints$1 = fromPoints_1;
  const toPoints$4 = toPoints_1;
  const appendArc = (options, geometry) => {
    const defaults = {
      radius: [0, 0],
      xaxisrotation: 0,
      clockwise: false,
      large: false,
      segments: 16
    };
    let {endpoint, radius, xaxisrotation, clockwise, large, segments} = Object.assign({}, defaults, options);
    if (!Array.isArray(endpoint)) throw new Error('endpoint must be an array of X and Y values');
    if (endpoint.length < 2) throw new Error('endpoint must contain X and Y values');
    endpoint = vec2$6.clone(endpoint);
    if (!Array.isArray(radius)) throw new Error('radius must be an array of X and Y values');
    if (radius.length < 2) throw new Error('radius must contain X and Y values');
    if (segments < 4) throw new Error('segments must be four or more');
    const decimals = 100000;
    if (geometry.isClosed) {
      throw new Error('the given path cannot be closed');
    }
    const points = toPoints$4(geometry);
    if (points.length < 1) {
      throw new Error('the given path must contain one or more points (as the starting point for the arc)');
    }
    let xradius = radius[0];
    let yradius = radius[1];
    const startpoint = points[points.length - 1];
    xradius = Math.round(xradius * decimals) / decimals;
    yradius = Math.round(yradius * decimals) / decimals;
    endpoint = vec2$6.fromValues(Math.round(endpoint[0] * decimals) / decimals, Math.round(endpoint[1] * decimals) / decimals);
    const sweepFlag = !clockwise;
    let newpoints = [];
    if (xradius === 0 || yradius === 0) {
      newpoints.push(endpoint);
    } else {
      xradius = Math.abs(xradius);
      yradius = Math.abs(yradius);
      const phi = xaxisrotation;
      const cosphi = Math.cos(phi);
      const sinphi = Math.sin(phi);
      const minushalfdistance = vec2$6.subtract(vec2$6.create(), startpoint, endpoint);
      vec2$6.scale(minushalfdistance, minushalfdistance, 0.5);
      const x = Math.round((cosphi * minushalfdistance[0] + sinphi * minushalfdistance[1]) * decimals) / decimals;
      const y = Math.round((-sinphi * minushalfdistance[0] + cosphi * minushalfdistance[1]) * decimals) / decimals;
      const startTranslated = vec2$6.fromValues(x, y);
      const biglambda = startTranslated[0] * startTranslated[0] / (xradius * xradius) + startTranslated[1] * startTranslated[1] / (yradius * yradius);
      if (biglambda > 1.0) {
        const sqrtbiglambda = Math.sqrt(biglambda);
        xradius *= sqrtbiglambda;
        yradius *= sqrtbiglambda;
        xradius = Math.round(xradius * decimals) / decimals;
        yradius = Math.round(yradius * decimals) / decimals;
      }
      let multiplier1 = Math.sqrt((xradius * xradius * yradius * yradius - xradius * xradius * startTranslated[1] * startTranslated[1] - yradius * yradius * startTranslated[0] * startTranslated[0]) / (xradius * xradius * startTranslated[1] * startTranslated[1] + yradius * yradius * startTranslated[0] * startTranslated[0]));
      if (sweepFlag === large) multiplier1 = -multiplier1;
      const centerTranslated = vec2$6.fromValues(xradius * startTranslated[1] / yradius, -yradius * startTranslated[0] / xradius);
      vec2$6.scale(centerTranslated, centerTranslated, multiplier1);
      let center = vec2$6.fromValues(cosphi * centerTranslated[0] - sinphi * centerTranslated[1], sinphi * centerTranslated[0] + cosphi * centerTranslated[1]);
      center = vec2$6.add(center, center, vec2$6.scale(vec2$6.create(), vec2$6.add(vec2$6.create(), startpoint, endpoint), 0.5));
      const vector1 = vec2$6.fromValues((startTranslated[0] - centerTranslated[0]) / xradius, (startTranslated[1] - centerTranslated[1]) / yradius);
      const vector2 = vec2$6.fromValues((-startTranslated[0] - centerTranslated[0]) / xradius, (-startTranslated[1] - centerTranslated[1]) / yradius);
      const theta1 = vec2$6.angleRadians(vector1);
      const theta2 = vec2$6.angleRadians(vector2);
      let deltatheta = theta2 - theta1;
      deltatheta = deltatheta % (2 * Math.PI);
      if (!sweepFlag && deltatheta > 0) {
        deltatheta -= 2 * Math.PI;
      } else if (sweepFlag && deltatheta < 0) {
        deltatheta += 2 * Math.PI;
      }
      let numsteps = Math.ceil(Math.abs(deltatheta) / (2 * Math.PI) * segments) + 1;
      if (numsteps < 1) numsteps = 1;
      for (let step = 1; step < numsteps; step++) {
        const theta = theta1 + step / numsteps * deltatheta;
        const costheta = Math.cos(theta);
        const sintheta = Math.sin(theta);
        const point = vec2$6.fromValues(cosphi * xradius * costheta - sinphi * yradius * sintheta, sinphi * xradius * costheta + cosphi * yradius * sintheta);
        vec2$6.add(point, point, center);
        newpoints.push(point);
      }
      if (numsteps) newpoints.push(options.endpoint);
    }
    newpoints = points.concat(newpoints);
    const result = fromPoints$1({}, newpoints);
    return result;
  };
  var appendArc_1 = appendArc;
  const fromPoints = fromPoints_1;
  const toPoints$3 = toPoints_1;
  const {equals: equals$2} = vec2$g;
  const concat$1 = (...paths) => {
    let isClosed = false;
    let newpoints = [];
    paths.forEach((path, i) => {
      const tmp = toPoints$3(path).slice();
      if (newpoints.length > 0 && tmp.length > 0 && equals$2(tmp[0], newpoints[newpoints.length - 1])) tmp.shift();
      if (tmp.length > 0 && isClosed) {
        throw new Error(`Cannot concatenate to a closed path; check the ${i}th path`);
      }
      isClosed = path.isClosed;
      newpoints = newpoints.concat(tmp);
    });
    return fromPoints({
      closed: isClosed
    }, newpoints);
  };
  var concat_1 = concat$1;
  const concat = concat_1;
  const create$3 = create_1$2;
  const appendPoints$1 = (points, geometry) => concat(geometry, create$3(points));
  var appendPoints_1 = appendPoints$1;
  const vec2$5 = vec2$g;
  const vec3$6 = vec2$g;
  const appendPoints = appendPoints_1;
  const toPoints$2 = toPoints_1;
  const appendBezier = (options, geometry) => {
    const defaults = {
      segments: 16
    };
    let {controlPoints, segments} = Object.assign({}, defaults, options);
    if (!Array.isArray(controlPoints)) throw new Error('controlPoints must be an array of one or more points');
    if (controlPoints.length < 1) throw new Error('controlPoints must be an array of one or more points');
    if (segments < 4) throw new Error('segments must be four or more');
    if (geometry.isClosed) {
      throw new Error('the given geometry cannot be closed');
    }
    const points = toPoints$2(geometry);
    if (points.length < 1) {
      throw new Error('the given path must contain one or more points (as the starting point for the bezier curve)');
    }
    controlPoints = controlPoints.slice();
    const firstControlPoint = controlPoints[0];
    if (firstControlPoint === null) {
      if (controlPoints.length < 2) {
        throw new Error('a null control point must be passed with one more control points');
      }
      let lastBezierControlPoint = points[points.length - 2];
      if (('lastBezierControlPoint' in geometry)) {
        lastBezierControlPoint = geometry.lastBezierControlPoint;
      }
      if (!Array.isArray(lastBezierControlPoint)) {
        throw new Error('the given path must contain TWO or more points if given a null control point');
      }
      const controlpoint = vec2$5.scale(vec2$5.create(), points[points.length - 1], 2);
      vec2$5.subtract(controlpoint, controlpoint, lastBezierControlPoint);
      controlPoints[0] = controlpoint;
    }
    controlPoints.unshift(points[points.length - 1]);
    const bezierOrder = controlPoints.length - 1;
    const factorials = [];
    let fact = 1;
    for (let i = 0; i <= bezierOrder; ++i) {
      if (i > 0) fact *= i;
      factorials.push(fact);
    }
    const binomials = [];
    for (let i = 0; i <= bezierOrder; ++i) {
      const binomial = factorials[bezierOrder] / (factorials[i] * factorials[bezierOrder - i]);
      binomials.push(binomial);
    }
    const v0 = vec2$5.create();
    const v1 = vec2$5.create();
    const v3 = vec3$6.create();
    const getPointForT = t => {
      let tk = 1;
      let oneMinusTNMinusK = Math.pow(1 - t, bezierOrder);
      const invOneMinusT = t !== 1 ? 1 / (1 - t) : 1;
      const point = vec2$5.create();
      for (let k = 0; k <= bezierOrder; ++k) {
        if (k === bezierOrder) oneMinusTNMinusK = 1;
        const bernsteinCoefficient = binomials[k] * tk * oneMinusTNMinusK;
        const derivativePoint = vec2$5.scale(v0, controlPoints[k], bernsteinCoefficient);
        vec2$5.add(point, point, derivativePoint);
        tk *= t;
        oneMinusTNMinusK *= invOneMinusT;
      }
      return point;
    };
    const newpoints = [];
    const newpointsT = [];
    const numsteps = bezierOrder + 1;
    for (let i = 0; i < numsteps; ++i) {
      const t = i / (numsteps - 1);
      const point = getPointForT(t);
      newpoints.push(point);
      newpointsT.push(t);
    }
    let subdivideBase = 1;
    const maxangle = Math.PI * 2 / segments;
    const maxsinangle = Math.sin(maxangle);
    while (subdivideBase < newpoints.length - 1) {
      const dir1 = vec2$5.subtract(v0, newpoints[subdivideBase], newpoints[subdivideBase - 1]);
      vec2$5.normalize(dir1, dir1);
      const dir2 = vec2$5.subtract(v1, newpoints[subdivideBase + 1], newpoints[subdivideBase]);
      vec2$5.normalize(dir2, dir2);
      const sinangle = vec2$5.cross(v3, dir1, dir2);
      if (Math.abs(sinangle[2]) > maxsinangle) {
        const t0 = newpointsT[subdivideBase - 1];
        const t1 = newpointsT[subdivideBase + 1];
        const newt0 = t0 + (t1 - t0) * 1 / 3;
        const newt1 = t0 + (t1 - t0) * 2 / 3;
        const point0 = getPointForT(newt0);
        const point1 = getPointForT(newt1);
        newpoints.splice(subdivideBase, 1, point0, point1);
        newpointsT.splice(subdivideBase, 1, newt0, newt1);
        subdivideBase--;
        if (subdivideBase < 1) subdivideBase = 1;
      } else {
        ++subdivideBase;
      }
    }
    newpoints.shift();
    const result = appendPoints(newpoints, geometry);
    result.lastBezierControlPoint = controlPoints[controlPoints.length - 2];
    return result;
  };
  var appendBezier_1 = appendBezier;
  const vec2$4 = vec2$g;
  const toPoints$1 = toPoints_1;
  const equals$1 = (a, b) => {
    if (a.isClosed !== b.isClosed) {
      return false;
    }
    if (a.points.length !== b.points.length) {
      return false;
    }
    const apoints = toPoints$1(a);
    const bpoints = toPoints$1(b);
    const length = apoints.length;
    let offset = 0;
    do {
      let unequal = false;
      for (let i = 0; i < length; i++) {
        if (!vec2$4.equals(apoints[i], bpoints[(i + offset) % length])) {
          unequal = true;
          break;
        }
      }
      if (unequal === false) {
        return true;
      }
      if (!a.isClosed) {
        return false;
      }
    } while (++offset < length);
    return false;
  };
  var equals_1$1 = equals$1;
  const mat4$c = mat4$p;
  const vec2$3 = vec2$g;
  const create$2 = create_1$2;
  const fromCompactBinary = data => {
    if (data[0] !== 2) throw new Error('invalid compact binary data');
    const created = create$2();
    created.transforms = mat4$c.clone(data.slice(1, 17));
    created.isClosed = !!data[17];
    for (let i = 22; i < data.length; i += 2) {
      const point = vec2$3.fromValues(data[i], data[i + 1]);
      created.points.push(point);
    }
    if (data[18] >= 0) {
      created.color = [data[18], data[19], data[20], data[21]];
    }
    return created;
  };
  var fromCompactBinary_1 = fromCompactBinary;
  const isA$1 = object => {
    if (object && typeof object === 'object') {
      if (('points' in object) && ('transforms' in object) && ('isClosed' in object)) {
        if (Array.isArray(object.points) && ('length' in object.transforms)) {
          return true;
        }
      }
    }
    return false;
  };
  var isA_1 = isA$1;
  const clone$2 = clone_1$2;
  const reverse = geometry => {
    const cloned = clone$2(geometry);
    cloned.points = geometry.points.slice().reverse();
    return cloned;
  };
  var reverse_1 = reverse;
  const vec2$2 = vec2$g;
  const toPoints = toPoints_1;
  const toString = geometry => {
    const points = toPoints(geometry);
    let result = 'path (' + points.length + ' points, ' + geometry.isClosed + '):\n[\n';
    points.forEach(point => {
      result += '  ' + vec2$2.toString(point) + ',\n';
    });
    result += ']\n';
    return result;
  };
  var toString_1 = toString;
  const toCompactBinary = geometry => {
    const points = geometry.points;
    const transforms = geometry.transforms;
    let color = [-1, -1, -1, -1];
    if (geometry.color) color = geometry.color;
    const compacted = new Float32Array(1 + 16 + 1 + 4 + points.length * 2);
    compacted[0] = 2;
    compacted[1] = transforms[0];
    compacted[2] = transforms[1];
    compacted[3] = transforms[2];
    compacted[4] = transforms[3];
    compacted[5] = transforms[4];
    compacted[6] = transforms[5];
    compacted[7] = transforms[6];
    compacted[8] = transforms[7];
    compacted[9] = transforms[8];
    compacted[10] = transforms[9];
    compacted[11] = transforms[10];
    compacted[12] = transforms[11];
    compacted[13] = transforms[12];
    compacted[14] = transforms[13];
    compacted[15] = transforms[14];
    compacted[16] = transforms[15];
    compacted[17] = geometry.isClosed ? 1 : 0;
    compacted[18] = color[0];
    compacted[19] = color[1];
    compacted[20] = color[2];
    compacted[21] = color[3];
    for (let j = 0; j < points.length; j++) {
      const ci = j * 2 + 22;
      const point = points[j];
      compacted[ci] = point[0];
      compacted[ci + 1] = point[1];
    }
    return compacted;
  };
  var toCompactBinary_1 = toCompactBinary;
  const mat4$b = mat4$p;
  const transform = (matrix, geometry) => {
    const transforms = mat4$b.multiply(mat4$b.create(), matrix, geometry.transforms);
    return Object.assign({}, geometry, {
      transforms
    });
  };
  var transform_1 = transform;
  const vec2$1 = vec2$g;
  const isA = isA_1;
  const validate = object => {
    if (!isA(object)) {
      throw new Error('invalid path2 structure');
    }
    if (object.points.length > 1) {
      for (let i = 0; i < object.points.length; i++) {
        if (vec2$1.equals(object.points[i], object.points[(i + 1) % object.points.length])) {
          throw new Error(`path2 duplicate points ${object.points[i]}`);
        }
      }
    }
    object.points.forEach(point => {
      if (!point.every(Number.isFinite)) {
        throw new Error(`path2 invalid point ${point}`);
      }
    });
    if (!object.transforms.every(Number.isFinite)) {
      throw new Error(`path2 invalid transforms ${object.transforms}`);
    }
  };
  var validate_1 = validate;
  var path2$1 = {
    appendArc: appendArc_1,
    appendBezier: appendBezier_1,
    appendPoints: appendPoints_1,
    clone: clone_1$2,
    close: close_1,
    concat: concat_1,
    create: create_1$2,
    equals: equals_1$1,
    fromPoints: fromPoints_1,
    fromCompactBinary: fromCompactBinary_1,
    isA: isA_1,
    reverse: reverse_1,
    toPoints: toPoints_1,
    toString: toString_1,
    toCompactBinary: toCompactBinary_1,
    transform: transform_1,
    validate: validate_1
  };
  const flatten$3 = flatten_1$1;
  const vec2 = vec2$g;
  const vec3$5 = vec3$n;
  const geom2 = geom2$1;
  const geom3 = geom3$1;
  const path2 = path2$1;
  const poly3 = poly3$9;
  const cache = new WeakMap();
  const measureBoundingBoxOfPath2 = geometry => {
    let boundingBox = cache.get(geometry);
    if (boundingBox) return boundingBox;
    const points = path2.toPoints(geometry);
    let minpoint;
    if (points.length === 0) {
      minpoint = vec2.create();
    } else {
      minpoint = vec2.clone(points[0]);
    }
    let maxpoint = vec2.clone(minpoint);
    points.forEach(point => {
      vec2.min(minpoint, minpoint, point);
      vec2.max(maxpoint, maxpoint, point);
    });
    minpoint = [minpoint[0], minpoint[1], 0];
    maxpoint = [maxpoint[0], maxpoint[1], 0];
    boundingBox = [minpoint, maxpoint];
    cache.set(geometry, boundingBox);
    return boundingBox;
  };
  const measureBoundingBoxOfGeom2 = geometry => {
    let boundingBox = cache.get(geometry);
    if (boundingBox) return boundingBox;
    const points = geom2.toPoints(geometry);
    let minpoint;
    if (points.length === 0) {
      minpoint = vec2.create();
    } else {
      minpoint = vec2.clone(points[0]);
    }
    let maxpoint = vec2.clone(minpoint);
    points.forEach(point => {
      vec2.min(minpoint, minpoint, point);
      vec2.max(maxpoint, maxpoint, point);
    });
    minpoint = [minpoint[0], minpoint[1], 0];
    maxpoint = [maxpoint[0], maxpoint[1], 0];
    boundingBox = [minpoint, maxpoint];
    cache.set(geometry, boundingBox);
    return boundingBox;
  };
  const measureBoundingBoxOfGeom3 = geometry => {
    let boundingBox = cache.get(geometry);
    if (boundingBox) return boundingBox;
    const polygons = geom3.toPolygons(geometry);
    let minpoint = vec3$5.create();
    if (polygons.length > 0) {
      const points = poly3.toPoints(polygons[0]);
      vec3$5.copy(minpoint, points[0]);
    }
    let maxpoint = vec3$5.clone(minpoint);
    polygons.forEach(polygon => {
      poly3.toPoints(polygon).forEach(point => {
        vec3$5.min(minpoint, minpoint, point);
        vec3$5.max(maxpoint, maxpoint, point);
      });
    });
    minpoint = [minpoint[0], minpoint[1], minpoint[2]];
    maxpoint = [maxpoint[0], maxpoint[1], maxpoint[2]];
    boundingBox = [minpoint, maxpoint];
    cache.set(geometry, boundingBox);
    return boundingBox;
  };
  const measureBoundingBox = (...geometries) => {
    geometries = flatten$3(geometries);
    if (geometries.length === 0) throw new Error('wrong number of arguments');
    const results = geometries.map(geometry => {
      if (path2.isA(geometry)) return measureBoundingBoxOfPath2(geometry);
      if (geom2.isA(geometry)) return measureBoundingBoxOfGeom2(geometry);
      if (geom3.isA(geometry)) return measureBoundingBoxOfGeom3(geometry);
      return [[0, 0, 0], [0, 0, 0]];
    });
    return results.length === 1 ? results[0] : results;
  };
  var measureBoundingBox_1 = measureBoundingBox;
  var create_1$1 = create$1;
  function create$1() {
    var out = new Float32Array(16);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  }
  var clone_1$1 = clone$1;
  function clone$1(a) {
    var out = new Float32Array(16);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    out[9] = a[9];
    out[10] = a[10];
    out[11] = a[11];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
  }
  var copy_1$1 = copy$1;
  function copy$1(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[8] = a[8];
    out[9] = a[9];
    out[10] = a[10];
    out[11] = a[11];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
  }
  var identity_1 = identity$1;
  function identity$1(out) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  }
  var transpose_1 = transpose;
  function transpose(out, a) {
    if (out === a) {
      var a01 = a[1], a02 = a[2], a03 = a[3], a12 = a[6], a13 = a[7], a23 = a[11];
      out[1] = a[4];
      out[2] = a[8];
      out[3] = a[12];
      out[4] = a01;
      out[6] = a[9];
      out[7] = a[13];
      out[8] = a02;
      out[9] = a12;
      out[11] = a[14];
      out[12] = a03;
      out[13] = a13;
      out[14] = a23;
    } else {
      out[0] = a[0];
      out[1] = a[4];
      out[2] = a[8];
      out[3] = a[12];
      out[4] = a[1];
      out[5] = a[5];
      out[6] = a[9];
      out[7] = a[13];
      out[8] = a[2];
      out[9] = a[6];
      out[10] = a[10];
      out[11] = a[14];
      out[12] = a[3];
      out[13] = a[7];
      out[14] = a[11];
      out[15] = a[15];
    }
    return out;
  }
  var invert_1 = invert;
  function invert(out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3], a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7], a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11], a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15], b00 = a00 * a11 - a01 * a10, b01 = a00 * a12 - a02 * a10, b02 = a00 * a13 - a03 * a10, b03 = a01 * a12 - a02 * a11, b04 = a01 * a13 - a03 * a11, b05 = a02 * a13 - a03 * a12, b06 = a20 * a31 - a21 * a30, b07 = a20 * a32 - a22 * a30, b08 = a20 * a33 - a23 * a30, b09 = a21 * a32 - a22 * a31, b10 = a21 * a33 - a23 * a31, b11 = a22 * a33 - a23 * a32, det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
    if (!det) {
      return null;
    }
    det = 1.0 / det;
    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;
    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;
    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;
    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;
    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;
    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;
    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;
    return out;
  }
  var adjoint_1 = adjoint;
  function adjoint(out, a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3], a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7], a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11], a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];
    out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);
    out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));
    out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);
    out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));
    out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));
    out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);
    out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));
    out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);
    out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);
    out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));
    out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);
    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));
    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));
    out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);
    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));
    out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);
    return out;
  }
  var determinant_1 = determinant;
  function determinant(a) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3], a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7], a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11], a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15], b00 = a00 * a11 - a01 * a10, b01 = a00 * a12 - a02 * a10, b02 = a00 * a13 - a03 * a10, b03 = a01 * a12 - a02 * a11, b04 = a01 * a13 - a03 * a11, b05 = a02 * a13 - a03 * a12, b06 = a20 * a31 - a21 * a30, b07 = a20 * a32 - a22 * a30, b08 = a20 * a33 - a23 * a30, b09 = a21 * a32 - a22 * a31, b10 = a21 * a33 - a23 * a31, b11 = a22 * a33 - a23 * a32;
    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
  }
  var multiply_1$1 = multiply$1;
  function multiply$1(out, a, b) {
    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3], a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7], a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11], a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];
    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    b0 = b[4];
    b1 = b[5];
    b2 = b[6];
    b3 = b[7];
    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    b0 = b[8];
    b1 = b[9];
    b2 = b[10];
    b3 = b[11];
    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    b0 = b[12];
    b1 = b[13];
    b2 = b[14];
    b3 = b[15];
    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
    return out;
  }
  var translate_1 = translate;
  function translate(out, a, v) {
    var x = v[0], y = v[1], z = v[2], a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23;
    if (a === out) {
      out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];
      out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];
      out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];
      out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];
    } else {
      a00 = a[0];
      a01 = a[1];
      a02 = a[2];
      a03 = a[3];
      a10 = a[4];
      a11 = a[5];
      a12 = a[6];
      a13 = a[7];
      a20 = a[8];
      a21 = a[9];
      a22 = a[10];
      a23 = a[11];
      out[0] = a00;
      out[1] = a01;
      out[2] = a02;
      out[3] = a03;
      out[4] = a10;
      out[5] = a11;
      out[6] = a12;
      out[7] = a13;
      out[8] = a20;
      out[9] = a21;
      out[10] = a22;
      out[11] = a23;
      out[12] = a00 * x + a10 * y + a20 * z + a[12];
      out[13] = a01 * x + a11 * y + a21 * z + a[13];
      out[14] = a02 * x + a12 * y + a22 * z + a[14];
      out[15] = a03 * x + a13 * y + a23 * z + a[15];
    }
    return out;
  }
  var scale_1$1 = scale$1;
  function scale$1(out, a, v) {
    var x = v[0], y = v[1], z = v[2];
    out[0] = a[0] * x;
    out[1] = a[1] * x;
    out[2] = a[2] * x;
    out[3] = a[3] * x;
    out[4] = a[4] * y;
    out[5] = a[5] * y;
    out[6] = a[6] * y;
    out[7] = a[7] * y;
    out[8] = a[8] * z;
    out[9] = a[9] * z;
    out[10] = a[10] * z;
    out[11] = a[11] * z;
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
    return out;
  }
  var rotate_1 = rotate$2;
  function rotate$2(out, a, rad, axis) {
    var x = axis[0], y = axis[1], z = axis[2], len = Math.sqrt(x * x + y * y + z * z), s, c, t, a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, b00, b01, b02, b10, b11, b12, b20, b21, b22;
    if (Math.abs(len) < 0.000001) {
      return null;
    }
    len = 1 / len;
    x *= len;
    y *= len;
    z *= len;
    s = Math.sin(rad);
    c = Math.cos(rad);
    t = 1 - c;
    a00 = a[0];
    a01 = a[1];
    a02 = a[2];
    a03 = a[3];
    a10 = a[4];
    a11 = a[5];
    a12 = a[6];
    a13 = a[7];
    a20 = a[8];
    a21 = a[9];
    a22 = a[10];
    a23 = a[11];
    b00 = x * x * t + c;
    b01 = y * x * t + z * s;
    b02 = z * x * t - y * s;
    b10 = x * y * t - z * s;
    b11 = y * y * t + c;
    b12 = z * y * t + x * s;
    b20 = x * z * t + y * s;
    b21 = y * z * t - x * s;
    b22 = z * z * t + c;
    out[0] = a00 * b00 + a10 * b01 + a20 * b02;
    out[1] = a01 * b00 + a11 * b01 + a21 * b02;
    out[2] = a02 * b00 + a12 * b01 + a22 * b02;
    out[3] = a03 * b00 + a13 * b01 + a23 * b02;
    out[4] = a00 * b10 + a10 * b11 + a20 * b12;
    out[5] = a01 * b10 + a11 * b11 + a21 * b12;
    out[6] = a02 * b10 + a12 * b11 + a22 * b12;
    out[7] = a03 * b10 + a13 * b11 + a23 * b12;
    out[8] = a00 * b20 + a10 * b21 + a20 * b22;
    out[9] = a01 * b20 + a11 * b21 + a21 * b22;
    out[10] = a02 * b20 + a12 * b21 + a22 * b22;
    out[11] = a03 * b20 + a13 * b21 + a23 * b22;
    if (a !== out) {
      out[12] = a[12];
      out[13] = a[13];
      out[14] = a[14];
      out[15] = a[15];
    }
    return out;
  }
  var rotateX_1$1 = rotateX$1;
  function rotateX$1(out, a, rad) {
    var s = Math.sin(rad), c = Math.cos(rad), a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7], a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];
    if (a !== out) {
      out[0] = a[0];
      out[1] = a[1];
      out[2] = a[2];
      out[3] = a[3];
      out[12] = a[12];
      out[13] = a[13];
      out[14] = a[14];
      out[15] = a[15];
    }
    out[4] = a10 * c + a20 * s;
    out[5] = a11 * c + a21 * s;
    out[6] = a12 * c + a22 * s;
    out[7] = a13 * c + a23 * s;
    out[8] = a20 * c - a10 * s;
    out[9] = a21 * c - a11 * s;
    out[10] = a22 * c - a12 * s;
    out[11] = a23 * c - a13 * s;
    return out;
  }
  var rotateY_1$1 = rotateY$1;
  function rotateY$1(out, a, rad) {
    var s = Math.sin(rad), c = Math.cos(rad), a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3], a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11];
    if (a !== out) {
      out[4] = a[4];
      out[5] = a[5];
      out[6] = a[6];
      out[7] = a[7];
      out[12] = a[12];
      out[13] = a[13];
      out[14] = a[14];
      out[15] = a[15];
    }
    out[0] = a00 * c - a20 * s;
    out[1] = a01 * c - a21 * s;
    out[2] = a02 * c - a22 * s;
    out[3] = a03 * c - a23 * s;
    out[8] = a00 * s + a20 * c;
    out[9] = a01 * s + a21 * c;
    out[10] = a02 * s + a22 * c;
    out[11] = a03 * s + a23 * c;
    return out;
  }
  var rotateZ_1$1 = rotateZ$1;
  function rotateZ$1(out, a, rad) {
    var s = Math.sin(rad), c = Math.cos(rad), a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3], a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7];
    if (a !== out) {
      out[8] = a[8];
      out[9] = a[9];
      out[10] = a[10];
      out[11] = a[11];
      out[12] = a[12];
      out[13] = a[13];
      out[14] = a[14];
      out[15] = a[15];
    }
    out[0] = a00 * c + a10 * s;
    out[1] = a01 * c + a11 * s;
    out[2] = a02 * c + a12 * s;
    out[3] = a03 * c + a13 * s;
    out[4] = a10 * c - a00 * s;
    out[5] = a11 * c - a01 * s;
    out[6] = a12 * c - a02 * s;
    out[7] = a13 * c - a03 * s;
    return out;
  }
  var fromRotation_1 = fromRotation;
  function fromRotation(out, rad, axis) {
    var s, c, t;
    var x = axis[0];
    var y = axis[1];
    var z = axis[2];
    var len = Math.sqrt(x * x + y * y + z * z);
    if (Math.abs(len) < 0.000001) {
      return null;
    }
    len = 1 / len;
    x *= len;
    y *= len;
    z *= len;
    s = Math.sin(rad);
    c = Math.cos(rad);
    t = 1 - c;
    out[0] = x * x * t + c;
    out[1] = y * x * t + z * s;
    out[2] = z * x * t - y * s;
    out[3] = 0;
    out[4] = x * y * t - z * s;
    out[5] = y * y * t + c;
    out[6] = z * y * t + x * s;
    out[7] = 0;
    out[8] = x * z * t + y * s;
    out[9] = y * z * t - x * s;
    out[10] = z * z * t + c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  }
  var fromRotationTranslation_1 = fromRotationTranslation;
  function fromRotationTranslation(out, q, v) {
    var x = q[0], y = q[1], z = q[2], w = q[3], x2 = x + x, y2 = y + y, z2 = z + z, xx = x * x2, xy = x * y2, xz = x * z2, yy = y * y2, yz = y * z2, zz = z * z2, wx = w * x2, wy = w * y2, wz = w * z2;
    out[0] = 1 - (yy + zz);
    out[1] = xy + wz;
    out[2] = xz - wy;
    out[3] = 0;
    out[4] = xy - wz;
    out[5] = 1 - (xx + zz);
    out[6] = yz + wx;
    out[7] = 0;
    out[8] = xz + wy;
    out[9] = yz - wx;
    out[10] = 1 - (xx + yy);
    out[11] = 0;
    out[12] = v[0];
    out[13] = v[1];
    out[14] = v[2];
    out[15] = 1;
    return out;
  }
  var fromScaling_1 = fromScaling;
  function fromScaling(out, v) {
    out[0] = v[0];
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = v[1];
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = v[2];
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  }
  var fromTranslation_1 = fromTranslation;
  function fromTranslation(out, v) {
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = v[0];
    out[13] = v[1];
    out[14] = v[2];
    out[15] = 1;
    return out;
  }
  var fromXRotation_1 = fromXRotation;
  function fromXRotation(out, rad) {
    var s = Math.sin(rad), c = Math.cos(rad);
    out[0] = 1;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = c;
    out[6] = s;
    out[7] = 0;
    out[8] = 0;
    out[9] = -s;
    out[10] = c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  }
  var fromYRotation_1 = fromYRotation;
  function fromYRotation(out, rad) {
    var s = Math.sin(rad), c = Math.cos(rad);
    out[0] = c;
    out[1] = 0;
    out[2] = -s;
    out[3] = 0;
    out[4] = 0;
    out[5] = 1;
    out[6] = 0;
    out[7] = 0;
    out[8] = s;
    out[9] = 0;
    out[10] = c;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  }
  var fromZRotation_1 = fromZRotation;
  function fromZRotation(out, rad) {
    var s = Math.sin(rad), c = Math.cos(rad);
    out[0] = c;
    out[1] = s;
    out[2] = 0;
    out[3] = 0;
    out[4] = -s;
    out[5] = c;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 1;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  }
  var fromQuat_1 = fromQuat;
  function fromQuat(out, q) {
    var x = q[0], y = q[1], z = q[2], w = q[3], x2 = x + x, y2 = y + y, z2 = z + z, xx = x * x2, yx = y * x2, yy = y * y2, zx = z * x2, zy = z * y2, zz = z * z2, wx = w * x2, wy = w * y2, wz = w * z2;
    out[0] = 1 - yy - zz;
    out[1] = yx + wz;
    out[2] = zx - wy;
    out[3] = 0;
    out[4] = yx - wz;
    out[5] = 1 - xx - zz;
    out[6] = zy + wx;
    out[7] = 0;
    out[8] = zx + wy;
    out[9] = zy - wx;
    out[10] = 1 - xx - yy;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
    out[15] = 1;
    return out;
  }
  var frustum_1 = frustum;
  function frustum(out, left, right, bottom, top, near, far) {
    var rl = 1 / (right - left), tb = 1 / (top - bottom), nf = 1 / (near - far);
    out[0] = near * 2 * rl;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = near * 2 * tb;
    out[6] = 0;
    out[7] = 0;
    out[8] = (right + left) * rl;
    out[9] = (top + bottom) * tb;
    out[10] = (far + near) * nf;
    out[11] = -1;
    out[12] = 0;
    out[13] = 0;
    out[14] = far * near * 2 * nf;
    out[15] = 0;
    return out;
  }
  var perspective_1 = perspective;
  function perspective(out, fovy, aspect, near, far) {
    var f = 1.0 / Math.tan(fovy / 2), nf = 1 / (near - far);
    out[0] = f / aspect;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = f;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = (far + near) * nf;
    out[11] = -1;
    out[12] = 0;
    out[13] = 0;
    out[14] = 2 * far * near * nf;
    out[15] = 0;
    return out;
  }
  var perspectiveFromFieldOfView_1 = perspectiveFromFieldOfView;
  function perspectiveFromFieldOfView(out, fov, near, far) {
    var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0), downTan = Math.tan(fov.downDegrees * Math.PI / 180.0), leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0), rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0), xScale = 2.0 / (leftTan + rightTan), yScale = 2.0 / (upTan + downTan);
    out[0] = xScale;
    out[1] = 0.0;
    out[2] = 0.0;
    out[3] = 0.0;
    out[4] = 0.0;
    out[5] = yScale;
    out[6] = 0.0;
    out[7] = 0.0;
    out[8] = -((leftTan - rightTan) * xScale * 0.5);
    out[9] = (upTan - downTan) * yScale * 0.5;
    out[10] = far / (near - far);
    out[11] = -1.0;
    out[12] = 0.0;
    out[13] = 0.0;
    out[14] = far * near / (near - far);
    out[15] = 0.0;
    return out;
  }
  var ortho_1 = ortho;
  function ortho(out, left, right, bottom, top, near, far) {
    var lr = 1 / (left - right), bt = 1 / (bottom - top), nf = 1 / (near - far);
    out[0] = -2 * lr;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[5] = -2 * bt;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[10] = 2 * nf;
    out[11] = 0;
    out[12] = (left + right) * lr;
    out[13] = (top + bottom) * bt;
    out[14] = (far + near) * nf;
    out[15] = 1;
    return out;
  }
  var identity = identity_1;
  var lookAt_1 = lookAt;
  function lookAt(out, eye, center, up) {
    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len, eyex = eye[0], eyey = eye[1], eyez = eye[2], upx = up[0], upy = up[1], upz = up[2], centerx = center[0], centery = center[1], centerz = center[2];
    if (Math.abs(eyex - centerx) < 0.000001 && Math.abs(eyey - centery) < 0.000001 && Math.abs(eyez - centerz) < 0.000001) {
      return identity(out);
    }
    z0 = eyex - centerx;
    z1 = eyey - centery;
    z2 = eyez - centerz;
    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);
    z0 *= len;
    z1 *= len;
    z2 *= len;
    x0 = upy * z2 - upz * z1;
    x1 = upz * z0 - upx * z2;
    x2 = upx * z1 - upy * z0;
    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);
    if (!len) {
      x0 = 0;
      x1 = 0;
      x2 = 0;
    } else {
      len = 1 / len;
      x0 *= len;
      x1 *= len;
      x2 *= len;
    }
    y0 = z1 * x2 - z2 * x1;
    y1 = z2 * x0 - z0 * x2;
    y2 = z0 * x1 - z1 * x0;
    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);
    if (!len) {
      y0 = 0;
      y1 = 0;
      y2 = 0;
    } else {
      len = 1 / len;
      y0 *= len;
      y1 *= len;
      y2 *= len;
    }
    out[0] = x0;
    out[1] = y0;
    out[2] = z0;
    out[3] = 0;
    out[4] = x1;
    out[5] = y1;
    out[6] = z1;
    out[7] = 0;
    out[8] = x2;
    out[9] = y2;
    out[10] = z2;
    out[11] = 0;
    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
    out[15] = 1;
    return out;
  }
  var str_1 = str;
  function str(a) {
    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';
  }
  var glMat4 = {
    create: create_1$1,
    clone: clone_1$1,
    copy: copy_1$1,
    identity: identity_1,
    transpose: transpose_1,
    invert: invert_1,
    adjoint: adjoint_1,
    determinant: determinant_1,
    multiply: multiply_1$1,
    translate: translate_1,
    scale: scale_1$1,
    rotate: rotate_1,
    rotateX: rotateX_1$1,
    rotateY: rotateY_1$1,
    rotateZ: rotateZ_1$1,
    fromRotation: fromRotation_1,
    fromRotationTranslation: fromRotationTranslation_1,
    fromScaling: fromScaling_1,
    fromTranslation: fromTranslation_1,
    fromXRotation: fromXRotation_1,
    fromYRotation: fromYRotation_1,
    fromZRotation: fromZRotation_1,
    fromQuat: fromQuat_1,
    frustum: frustum_1,
    perspective: perspective_1,
    perspectiveFromFieldOfView: perspectiveFromFieldOfView_1,
    ortho: ortho_1,
    lookAt: lookAt_1,
    str: str_1
  };
  const mat4$a = glMat4;
  const renderWrapper = (regl, params = {}) => {
    const {fbo} = params;
    const commandParams = {
      cull: {
        enable: true
      },
      context: {
        lightDirection: [0.2, 0.2, 1]
      },
      uniforms: {
        view: (context, props) => props.camera.view,
        eye: (context, props) => props.camera.position,
        projection: (context, props) => props.camera.projection,
        camNear: (context, props) => props.camera.near,
        camFar: (context, props) => props.camera.far,
        invertedView: (context, props) => mat4$a.invert([], props.camera.view),
        lightPosition: (context, props) => props && props.rendering && props.rendering.lightPosition ? props.rendering.lightPosition : [100, 200, 100],
        lightDirection: (context, props) => props && props.rendering && props.rendering.lightDirection ? props.rendering.lightDirection : context.lightDirection || [0, 0, 0],
        lightView: context => mat4$a.lookAt([], context.lightDirection, [0.0, 0.0, 0.0], [0.0, 0.0, 1.0]),
        lightProjection: mat4$a.ortho([], -25, -25, -20, 20, -25, 25),
        lightColor: (context, props) => props && props.rendering && props.rendering.lightColor ? props.rendering.lightColor : [1, 0.8, 0],
        ambientLightAmount: (context, props) => props && props.rendering && props.rendering.ambientLightAmount ? props.rendering.ambientLightAmount : 0.3,
        diffuseLightAmount: (context, props) => props && props.rendering && props.rendering.diffuseLightAmount ? props && props.rendering && props.rendering.diffuseLightAmount : 0.89,
        specularLightAmount: (context, props) => props && props.rendering && props.rendering.specularLightAmount ? props.rendering.specularLightAmount : 0.16,
        uMaterialShininess: (context, props) => props && props.rendering && props.rendering.materialShininess ? props.rendering.materialShininess : 8.0,
        materialAmbient: [0.5, 0.8, 0.3],
        materialDiffuse: [0.5, 0.8, 0.3],
        materialSpecular: [0.5, 0.8, 0.3]
      },
      framebuffer: fbo
    };
    return regl(Object.assign({}, commandParams, params.extras));
  };
  var renderContext$1 = renderWrapper;
  var renderDefaults$1 = {
    background: [1, 1, 1, 1],
    meshColor: [0, 0.6, 1, 1],
    lightColor: [1, 1, 1, 1],
    lightDirection: [0.2, 0.2, 1],
    lightPosition: [100, 200, 100],
    ambientLightAmount: 0.3,
    diffuseLightAmount: 0.89,
    specularLightAmount: 0.16,
    materialShininess: 8.0
  };
  var regl = {
    exports: {}
  };
  var hasRequiredRegl;
  function requireRegl() {
    if (hasRequiredRegl) return regl.exports;
    hasRequiredRegl = 1;
    (function (module, exports) {
      (function (global, factory) {
        module.exports = factory();
      })(commonjsGlobal, function () {
        var isTypedArray = function (x) {
          return x instanceof Uint8Array || x instanceof Uint16Array || x instanceof Uint32Array || x instanceof Int8Array || x instanceof Int16Array || x instanceof Int32Array || x instanceof Float32Array || x instanceof Float64Array || x instanceof Uint8ClampedArray;
        };
        var extend = function (base, opts) {
          var keys = Object.keys(opts);
          for (var i = 0; i < keys.length; ++i) {
            base[keys[i]] = opts[keys[i]];
          }
          return base;
        };
        var endl = '\n';
        function decodeB64(str) {
          if (typeof atob !== 'undefined') {
            return atob(str);
          }
          return 'base64:' + str;
        }
        function raise(message) {
          var error = new Error('(regl) ' + message);
          console.error(error);
          throw error;
        }
        function check(pred, message) {
          if (!pred) {
            raise(message);
          }
        }
        function encolon(message) {
          if (message) {
            return ': ' + message;
          }
          return '';
        }
        function checkParameter(param, possibilities, message) {
          if (!((param in possibilities))) {
            raise('unknown parameter (' + param + ')' + encolon(message) + '. possible values: ' + Object.keys(possibilities).join());
          }
        }
        function checkIsTypedArray(data, message) {
          if (!isTypedArray(data)) {
            raise('invalid parameter type' + encolon(message) + '. must be a typed array');
          }
        }
        function standardTypeEh(value, type) {
          switch (type) {
            case 'number':
              return typeof value === 'number';
            case 'object':
              return typeof value === 'object';
            case 'string':
              return typeof value === 'string';
            case 'boolean':
              return typeof value === 'boolean';
            case 'function':
              return typeof value === 'function';
            case 'undefined':
              return typeof value === 'undefined';
            case 'symbol':
              return typeof value === 'symbol';
          }
        }
        function checkTypeOf(value, type, message) {
          if (!standardTypeEh(value, type)) {
            raise('invalid parameter type' + encolon(message) + '. expected ' + type + ', got ' + typeof value);
          }
        }
        function checkNonNegativeInt(value, message) {
          if (!(value >= 0 && (value | 0) === value)) {
            raise('invalid parameter type, (' + value + ')' + encolon(message) + '. must be a nonnegative integer');
          }
        }
        function checkOneOf(value, list, message) {
          if (list.indexOf(value) < 0) {
            raise('invalid value' + encolon(message) + '. must be one of: ' + list);
          }
        }
        var constructorKeys = ['gl', 'canvas', 'container', 'attributes', 'pixelRatio', 'extensions', 'optionalExtensions', 'profile', 'onDone'];
        function checkConstructor(obj) {
          Object.keys(obj).forEach(function (key) {
            if (constructorKeys.indexOf(key) < 0) {
              raise('invalid regl constructor argument "' + key + '". must be one of ' + constructorKeys);
            }
          });
        }
        function leftPad(str, n) {
          str = str + '';
          while (str.length < n) {
            str = ' ' + str;
          }
          return str;
        }
        function ShaderFile() {
          this.name = 'unknown';
          this.lines = [];
          this.index = {};
          this.hasErrors = false;
        }
        function ShaderLine(number, line) {
          this.number = number;
          this.line = line;
          this.errors = [];
        }
        function ShaderError(fileNumber, lineNumber, message) {
          this.file = fileNumber;
          this.line = lineNumber;
          this.message = message;
        }
        function guessCommand() {
          var error = new Error();
          var stack = (error.stack || error).toString();
          var pat = (/compileProcedure.*\n\s*at.*\((.*)\)/).exec(stack);
          if (pat) {
            return pat[1];
          }
          var pat2 = (/compileProcedure.*\n\s*at\s+(.*)(\n|$)/).exec(stack);
          if (pat2) {
            return pat2[1];
          }
          return 'unknown';
        }
        function guessCallSite() {
          var error = new Error();
          var stack = (error.stack || error).toString();
          var pat = (/at REGLCommand.*\n\s+at.*\((.*)\)/).exec(stack);
          if (pat) {
            return pat[1];
          }
          var pat2 = (/at REGLCommand.*\n\s+at\s+(.*)\n/).exec(stack);
          if (pat2) {
            return pat2[1];
          }
          return 'unknown';
        }
        function parseSource(source, command) {
          var lines = source.split('\n');
          var lineNumber = 1;
          var fileNumber = 0;
          var files = {
            unknown: new ShaderFile(),
            0: new ShaderFile()
          };
          files.unknown.name = files[0].name = command || guessCommand();
          files.unknown.lines.push(new ShaderLine(0, ''));
          for (var i = 0; i < lines.length; ++i) {
            var line = lines[i];
            var parts = (/^\s*#\s*(\w+)\s+(.+)\s*$/).exec(line);
            if (parts) {
              switch (parts[1]) {
                case 'line':
                  var lineNumberInfo = (/(\d+)(\s+\d+)?/).exec(parts[2]);
                  if (lineNumberInfo) {
                    lineNumber = lineNumberInfo[1] | 0;
                    if (lineNumberInfo[2]) {
                      fileNumber = lineNumberInfo[2] | 0;
                      if (!((fileNumber in files))) {
                        files[fileNumber] = new ShaderFile();
                      }
                    }
                  }
                  break;
                case 'define':
                  var nameInfo = (/SHADER_NAME(_B64)?\s+(.*)$/).exec(parts[2]);
                  if (nameInfo) {
                    files[fileNumber].name = nameInfo[1] ? decodeB64(nameInfo[2]) : nameInfo[2];
                  }
                  break;
              }
            }
            files[fileNumber].lines.push(new ShaderLine(lineNumber++, line));
          }
          Object.keys(files).forEach(function (fileNumber) {
            var file = files[fileNumber];
            file.lines.forEach(function (line) {
              file.index[line.number] = line;
            });
          });
          return files;
        }
        function parseErrorLog(errLog) {
          var result = [];
          errLog.split('\n').forEach(function (errMsg) {
            if (errMsg.length < 5) {
              return;
            }
            var parts = (/^ERROR:\s+(\d+):(\d+):\s*(.*)$/).exec(errMsg);
            if (parts) {
              result.push(new ShaderError(parts[1] | 0, parts[2] | 0, parts[3].trim()));
            } else if (errMsg.length > 0) {
              result.push(new ShaderError('unknown', 0, errMsg));
            }
          });
          return result;
        }
        function annotateFiles(files, errors) {
          errors.forEach(function (error) {
            var file = files[error.file];
            if (file) {
              var line = file.index[error.line];
              if (line) {
                line.errors.push(error);
                file.hasErrors = true;
                return;
              }
            }
            files.unknown.hasErrors = true;
            files.unknown.lines[0].errors.push(error);
          });
        }
        function checkShaderError(gl, shader, source, type, command) {
          if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {
            var errLog = gl.getShaderInfoLog(shader);
            var typeName = type === gl.FRAGMENT_SHADER ? 'fragment' : 'vertex';
            checkCommandType(source, 'string', typeName + ' shader source must be a string', command);
            var files = parseSource(source, command);
            var errors = parseErrorLog(errLog);
            annotateFiles(files, errors);
            Object.keys(files).forEach(function (fileNumber) {
              var file = files[fileNumber];
              if (!file.hasErrors) {
                return;
              }
              var strings = [''];
              var styles = [''];
              function push(str, style) {
                strings.push(str);
                styles.push(style || '');
              }
              push('file number ' + fileNumber + ': ' + file.name + '\n', 'color:red;text-decoration:underline;font-weight:bold');
              file.lines.forEach(function (line) {
                if (line.errors.length > 0) {
                  push(leftPad(line.number, 4) + '|  ', 'background-color:yellow; font-weight:bold');
                  push(line.line + endl, 'color:red; background-color:yellow; font-weight:bold');
                  var offset = 0;
                  line.errors.forEach(function (error) {
                    var message = error.message;
                    var token = (/^\s*'(.*)'\s*:\s*(.*)$/).exec(message);
                    if (token) {
                      var tokenPat = token[1];
                      message = token[2];
                      switch (tokenPat) {
                        case 'assign':
                          tokenPat = '=';
                          break;
                      }
                      offset = Math.max(line.line.indexOf(tokenPat, offset), 0);
                    } else {
                      offset = 0;
                    }
                    push(leftPad('| ', 6));
                    push(leftPad('^^^', offset + 3) + endl, 'font-weight:bold');
                    push(leftPad('| ', 6));
                    push(message + endl, 'font-weight:bold');
                  });
                  push(leftPad('| ', 6) + endl);
                } else {
                  push(leftPad(line.number, 4) + '|  ');
                  push(line.line + endl, 'color:red');
                }
              });
              if (typeof document !== 'undefined' && !window.chrome) {
                styles[0] = strings.join('%c');
                console.log.apply(console, styles);
              } else {
                console.log(strings.join(''));
              }
            });
            check.raise('Error compiling ' + typeName + ' shader, ' + files[0].name);
          }
        }
        function checkLinkError(gl, program, fragShader, vertShader, command) {
          if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
            var errLog = gl.getProgramInfoLog(program);
            var fragParse = parseSource(fragShader, command);
            var vertParse = parseSource(vertShader, command);
            var header = 'Error linking program with vertex shader, "' + vertParse[0].name + '", and fragment shader "' + fragParse[0].name + '"';
            if (typeof document !== 'undefined') {
              console.log('%c' + header + endl + '%c' + errLog, 'color:red;text-decoration:underline;font-weight:bold', 'color:red');
            } else {
              console.log(header + endl + errLog);
            }
            check.raise(header);
          }
        }
        function saveCommandRef(object) {
          object._commandRef = guessCommand();
        }
        function saveDrawCommandInfo(opts, uniforms, attributes, stringStore) {
          saveCommandRef(opts);
          function id(str) {
            if (str) {
              return stringStore.id(str);
            }
            return 0;
          }
          opts._fragId = id(opts.static.frag);
          opts._vertId = id(opts.static.vert);
          function addProps(dict, set) {
            Object.keys(set).forEach(function (u) {
              dict[stringStore.id(u)] = true;
            });
          }
          var uniformSet = opts._uniformSet = {};
          addProps(uniformSet, uniforms.static);
          addProps(uniformSet, uniforms.dynamic);
          var attributeSet = opts._attributeSet = {};
          addProps(attributeSet, attributes.static);
          addProps(attributeSet, attributes.dynamic);
          opts._hasCount = ('count' in opts.static) || ('count' in opts.dynamic) || ('elements' in opts.static) || ('elements' in opts.dynamic);
        }
        function commandRaise(message, command) {
          var callSite = guessCallSite();
          raise(message + ' in command ' + (command || guessCommand()) + (callSite === 'unknown' ? '' : ' called from ' + callSite));
        }
        function checkCommand(pred, message, command) {
          if (!pred) {
            commandRaise(message, command || guessCommand());
          }
        }
        function checkParameterCommand(param, possibilities, message, command) {
          if (!((param in possibilities))) {
            commandRaise('unknown parameter (' + param + ')' + encolon(message) + '. possible values: ' + Object.keys(possibilities).join(), command || guessCommand());
          }
        }
        function checkCommandType(value, type, message, command) {
          if (!standardTypeEh(value, type)) {
            commandRaise('invalid parameter type' + encolon(message) + '. expected ' + type + ', got ' + typeof value, command || guessCommand());
          }
        }
        function checkOptional(block) {
          block();
        }
        function checkFramebufferFormat(attachment, texFormats, rbFormats) {
          if (attachment.texture) {
            checkOneOf(attachment.texture._texture.internalformat, texFormats, 'unsupported texture format for attachment');
          } else {
            checkOneOf(attachment.renderbuffer._renderbuffer.format, rbFormats, 'unsupported renderbuffer format for attachment');
          }
        }
        var GL_CLAMP_TO_EDGE = 0x812F;
        var GL_NEAREST = 0x2600;
        var GL_NEAREST_MIPMAP_NEAREST = 0x2700;
        var GL_LINEAR_MIPMAP_NEAREST = 0x2701;
        var GL_NEAREST_MIPMAP_LINEAR = 0x2702;
        var GL_LINEAR_MIPMAP_LINEAR = 0x2703;
        var GL_BYTE = 5120;
        var GL_UNSIGNED_BYTE = 5121;
        var GL_SHORT = 5122;
        var GL_UNSIGNED_SHORT = 5123;
        var GL_INT = 5124;
        var GL_UNSIGNED_INT = 5125;
        var GL_FLOAT = 5126;
        var GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;
        var GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;
        var GL_UNSIGNED_SHORT_5_6_5 = 0x8363;
        var GL_UNSIGNED_INT_24_8_WEBGL = 0x84FA;
        var GL_HALF_FLOAT_OES = 0x8D61;
        var TYPE_SIZE = {};
        TYPE_SIZE[GL_BYTE] = TYPE_SIZE[GL_UNSIGNED_BYTE] = 1;
        TYPE_SIZE[GL_SHORT] = TYPE_SIZE[GL_UNSIGNED_SHORT] = TYPE_SIZE[GL_HALF_FLOAT_OES] = TYPE_SIZE[GL_UNSIGNED_SHORT_5_6_5] = TYPE_SIZE[GL_UNSIGNED_SHORT_4_4_4_4] = TYPE_SIZE[GL_UNSIGNED_SHORT_5_5_5_1] = 2;
        TYPE_SIZE[GL_INT] = TYPE_SIZE[GL_UNSIGNED_INT] = TYPE_SIZE[GL_FLOAT] = TYPE_SIZE[GL_UNSIGNED_INT_24_8_WEBGL] = 4;
        function pixelSize(type, channels) {
          if (type === GL_UNSIGNED_SHORT_5_5_5_1 || type === GL_UNSIGNED_SHORT_4_4_4_4 || type === GL_UNSIGNED_SHORT_5_6_5) {
            return 2;
          } else if (type === GL_UNSIGNED_INT_24_8_WEBGL) {
            return 4;
          } else {
            return TYPE_SIZE[type] * channels;
          }
        }
        function isPow2(v) {
          return !(v & v - 1) && !!v;
        }
        function checkTexture2D(info, mipData, limits) {
          var i;
          var w = mipData.width;
          var h = mipData.height;
          var c = mipData.channels;
          check(w > 0 && w <= limits.maxTextureSize && h > 0 && h <= limits.maxTextureSize, 'invalid texture shape');
          if (info.wrapS !== GL_CLAMP_TO_EDGE || info.wrapT !== GL_CLAMP_TO_EDGE) {
            check(isPow2(w) && isPow2(h), 'incompatible wrap mode for texture, both width and height must be power of 2');
          }
          if (mipData.mipmask === 1) {
            if (w !== 1 && h !== 1) {
              check(info.minFilter !== GL_NEAREST_MIPMAP_NEAREST && info.minFilter !== GL_NEAREST_MIPMAP_LINEAR && info.minFilter !== GL_LINEAR_MIPMAP_NEAREST && info.minFilter !== GL_LINEAR_MIPMAP_LINEAR, 'min filter requires mipmap');
            }
          } else {
            check(isPow2(w) && isPow2(h), 'texture must be a square power of 2 to support mipmapping');
            check(mipData.mipmask === (w << 1) - 1, 'missing or incomplete mipmap data');
          }
          if (mipData.type === GL_FLOAT) {
            if (limits.extensions.indexOf('oes_texture_float_linear') < 0) {
              check(info.minFilter === GL_NEAREST && info.magFilter === GL_NEAREST, 'filter not supported, must enable oes_texture_float_linear');
            }
            check(!info.genMipmaps, 'mipmap generation not supported with float textures');
          }
          var mipimages = mipData.images;
          for (i = 0; i < 16; ++i) {
            if (mipimages[i]) {
              var mw = w >> i;
              var mh = h >> i;
              check(mipData.mipmask & 1 << i, 'missing mipmap data');
              var img = mipimages[i];
              check(img.width === mw && img.height === mh, 'invalid shape for mip images');
              check(img.format === mipData.format && img.internalformat === mipData.internalformat && img.type === mipData.type, 'incompatible type for mip image');
              if (img.compressed) ; else if (img.data) {
                var rowSize = Math.ceil(pixelSize(img.type, c) * mw / img.unpackAlignment) * img.unpackAlignment;
                check(img.data.byteLength === rowSize * mh, 'invalid data for image, buffer size is inconsistent with image format');
              } else if (img.element) ; else if (img.copy) ;
            } else if (!info.genMipmaps) {
              check((mipData.mipmask & 1 << i) === 0, 'extra mipmap data');
            }
          }
          if (mipData.compressed) {
            check(!info.genMipmaps, 'mipmap generation for compressed images not supported');
          }
        }
        function checkTextureCube(texture, info, faces, limits) {
          var w = texture.width;
          var h = texture.height;
          var c = texture.channels;
          check(w > 0 && w <= limits.maxTextureSize && h > 0 && h <= limits.maxTextureSize, 'invalid texture shape');
          check(w === h, 'cube map must be square');
          check(info.wrapS === GL_CLAMP_TO_EDGE && info.wrapT === GL_CLAMP_TO_EDGE, 'wrap mode not supported by cube map');
          for (var i = 0; i < faces.length; ++i) {
            var face = faces[i];
            check(face.width === w && face.height === h, 'inconsistent cube map face shape');
            if (info.genMipmaps) {
              check(!face.compressed, 'can not generate mipmap for compressed textures');
              check(face.mipmask === 1, 'can not specify mipmaps and generate mipmaps');
            }
            var mipmaps = face.images;
            for (var j = 0; j < 16; ++j) {
              var img = mipmaps[j];
              if (img) {
                var mw = w >> j;
                var mh = h >> j;
                check(face.mipmask & 1 << j, 'missing mipmap data');
                check(img.width === mw && img.height === mh, 'invalid shape for mip images');
                check(img.format === texture.format && img.internalformat === texture.internalformat && img.type === texture.type, 'incompatible type for mip image');
                if (img.compressed) ; else if (img.data) {
                  check(img.data.byteLength === mw * mh * Math.max(pixelSize(img.type, c), img.unpackAlignment), 'invalid data for image, buffer size is inconsistent with image format');
                } else if (img.element) ; else if (img.copy) ;
              }
            }
          }
        }
        var check$1 = extend(check, {
          optional: checkOptional,
          raise: raise,
          commandRaise: commandRaise,
          command: checkCommand,
          parameter: checkParameter,
          commandParameter: checkParameterCommand,
          constructor: checkConstructor,
          type: checkTypeOf,
          commandType: checkCommandType,
          isTypedArray: checkIsTypedArray,
          nni: checkNonNegativeInt,
          oneOf: checkOneOf,
          shaderError: checkShaderError,
          linkError: checkLinkError,
          callSite: guessCallSite,
          saveCommandRef: saveCommandRef,
          saveDrawInfo: saveDrawCommandInfo,
          framebufferFormat: checkFramebufferFormat,
          guessCommand: guessCommand,
          texture2D: checkTexture2D,
          textureCube: checkTextureCube
        });
        var VARIABLE_COUNTER = 0;
        var DYN_FUNC = 0;
        var DYN_CONSTANT = 5;
        var DYN_ARRAY = 6;
        function DynamicVariable(type, data) {
          this.id = VARIABLE_COUNTER++;
          this.type = type;
          this.data = data;
        }
        function escapeStr(str) {
          return str.replace(/\\/g, '\\\\').replace(/"/g, '\\"');
        }
        function splitParts(str) {
          if (str.length === 0) {
            return [];
          }
          var firstChar = str.charAt(0);
          var lastChar = str.charAt(str.length - 1);
          if (str.length > 1 && firstChar === lastChar && (firstChar === '"' || firstChar === "'")) {
            return ['"' + escapeStr(str.substr(1, str.length - 2)) + '"'];
          }
          var parts = (/\[(false|true|null|\d+|'[^']*'|"[^"]*")\]/).exec(str);
          if (parts) {
            return splitParts(str.substr(0, parts.index)).concat(splitParts(parts[1])).concat(splitParts(str.substr(parts.index + parts[0].length)));
          }
          var subparts = str.split('.');
          if (subparts.length === 1) {
            return ['"' + escapeStr(str) + '"'];
          }
          var result = [];
          for (var i = 0; i < subparts.length; ++i) {
            result = result.concat(splitParts(subparts[i]));
          }
          return result;
        }
        function toAccessorString(str) {
          return '[' + splitParts(str).join('][') + ']';
        }
        function defineDynamic(type, data) {
          return new DynamicVariable(type, toAccessorString(data + ''));
        }
        function isDynamic(x) {
          return typeof x === 'function' && !x._reglType || x instanceof DynamicVariable;
        }
        function unbox(x, path) {
          if (typeof x === 'function') {
            return new DynamicVariable(DYN_FUNC, x);
          } else if (typeof x === 'number' || typeof x === 'boolean') {
            return new DynamicVariable(DYN_CONSTANT, x);
          } else if (Array.isArray(x)) {
            return new DynamicVariable(DYN_ARRAY, x.map(function (y, i) {
              return unbox(y, path + '[' + i + ']');
            }));
          } else if (x instanceof DynamicVariable) {
            return x;
          }
          check$1(false, 'invalid option type in uniform ' + path);
        }
        var dynamic = {
          DynamicVariable: DynamicVariable,
          define: defineDynamic,
          isDynamic: isDynamic,
          unbox: unbox,
          accessor: toAccessorString
        };
        var raf = {
          next: typeof requestAnimationFrame === 'function' ? function (cb) {
            return requestAnimationFrame(cb);
          } : function (cb) {
            return setTimeout(cb, 16);
          },
          cancel: typeof cancelAnimationFrame === 'function' ? function (raf) {
            return cancelAnimationFrame(raf);
          } : clearTimeout
        };
        var clock = typeof performance !== 'undefined' && performance.now ? function () {
          return performance.now();
        } : function () {
          return +new Date();
        };
        function createStringStore() {
          var stringIds = {
            '': 0
          };
          var stringValues = [''];
          return {
            id: function (str) {
              var result = stringIds[str];
              if (result) {
                return result;
              }
              result = stringIds[str] = stringValues.length;
              stringValues.push(str);
              return result;
            },
            str: function (id) {
              return stringValues[id];
            }
          };
        }
        function createCanvas(element, onDone, pixelRatio) {
          var canvas = document.createElement('canvas');
          extend(canvas.style, {
            border: 0,
            margin: 0,
            padding: 0,
            top: 0,
            left: 0,
            width: '100%',
            height: '100%'
          });
          element.appendChild(canvas);
          if (element === document.body) {
            canvas.style.position = 'absolute';
            extend(element.style, {
              margin: 0,
              padding: 0
            });
          }
          function resize() {
            var w = window.innerWidth;
            var h = window.innerHeight;
            if (element !== document.body) {
              var bounds = canvas.getBoundingClientRect();
              w = bounds.right - bounds.left;
              h = bounds.bottom - bounds.top;
            }
            canvas.width = pixelRatio * w;
            canvas.height = pixelRatio * h;
          }
          var resizeObserver;
          if (element !== document.body && typeof ResizeObserver === 'function') {
            resizeObserver = new ResizeObserver(function () {
              setTimeout(resize);
            });
            resizeObserver.observe(element);
          } else {
            window.addEventListener('resize', resize, false);
          }
          function onDestroy() {
            if (resizeObserver) {
              resizeObserver.disconnect();
            } else {
              window.removeEventListener('resize', resize);
            }
            element.removeChild(canvas);
          }
          resize();
          return {
            canvas: canvas,
            onDestroy: onDestroy
          };
        }
        function createContext(canvas, contextAttributes) {
          function get(name) {
            try {
              return canvas.getContext(name, contextAttributes);
            } catch (e) {
              return null;
            }
          }
          return get('webgl') || get('experimental-webgl') || get('webgl-experimental');
        }
        function isHTMLElement(obj) {
          return typeof obj.nodeName === 'string' && typeof obj.appendChild === 'function' && typeof obj.getBoundingClientRect === 'function';
        }
        function isWebGLContext(obj) {
          return typeof obj.drawArrays === 'function' || typeof obj.drawElements === 'function';
        }
        function parseExtensions(input) {
          if (typeof input === 'string') {
            return input.split();
          }
          check$1(Array.isArray(input), 'invalid extension array');
          return input;
        }
        function getElement(desc) {
          if (typeof desc === 'string') {
            check$1(typeof document !== 'undefined', 'not supported outside of DOM');
            return document.querySelector(desc);
          }
          return desc;
        }
        function parseArgs(args_) {
          var args = args_ || ({});
          var element, container, canvas, gl;
          var contextAttributes = {};
          var extensions = [];
          var optionalExtensions = [];
          var pixelRatio = typeof window === 'undefined' ? 1 : window.devicePixelRatio;
          var profile = false;
          var onDone = function (err) {
            if (err) {
              check$1.raise(err);
            }
          };
          var onDestroy = function () {};
          if (typeof args === 'string') {
            check$1(typeof document !== 'undefined', 'selector queries only supported in DOM enviroments');
            element = document.querySelector(args);
            check$1(element, 'invalid query string for element');
          } else if (typeof args === 'object') {
            if (isHTMLElement(args)) {
              element = args;
            } else if (isWebGLContext(args)) {
              gl = args;
              canvas = gl.canvas;
            } else {
              check$1.constructor(args);
              if (('gl' in args)) {
                gl = args.gl;
              } else if (('canvas' in args)) {
                canvas = getElement(args.canvas);
              } else if (('container' in args)) {
                container = getElement(args.container);
              }
              if (('attributes' in args)) {
                contextAttributes = args.attributes;
                check$1.type(contextAttributes, 'object', 'invalid context attributes');
              }
              if (('extensions' in args)) {
                extensions = parseExtensions(args.extensions);
              }
              if (('optionalExtensions' in args)) {
                optionalExtensions = parseExtensions(args.optionalExtensions);
              }
              if (('onDone' in args)) {
                check$1.type(args.onDone, 'function', 'invalid or missing onDone callback');
                onDone = args.onDone;
              }
              if (('profile' in args)) {
                profile = !!args.profile;
              }
              if (('pixelRatio' in args)) {
                pixelRatio = +args.pixelRatio;
                check$1(pixelRatio > 0, 'invalid pixel ratio');
              }
            }
          } else {
            check$1.raise('invalid arguments to regl');
          }
          if (element) {
            if (element.nodeName.toLowerCase() === 'canvas') {
              canvas = element;
            } else {
              container = element;
            }
          }
          if (!gl) {
            if (!canvas) {
              check$1(typeof document !== 'undefined', 'must manually specify webgl context outside of DOM environments');
              var result = createCanvas(container || document.body, onDone, pixelRatio);
              if (!result) {
                return null;
              }
              canvas = result.canvas;
              onDestroy = result.onDestroy;
            }
            if (contextAttributes.premultipliedAlpha === undefined) contextAttributes.premultipliedAlpha = true;
            gl = createContext(canvas, contextAttributes);
          }
          if (!gl) {
            onDestroy();
            onDone('webgl not supported, try upgrading your browser or graphics drivers http://get.webgl.org');
            return null;
          }
          return {
            gl: gl,
            canvas: canvas,
            container: container,
            extensions: extensions,
            optionalExtensions: optionalExtensions,
            pixelRatio: pixelRatio,
            profile: profile,
            onDone: onDone,
            onDestroy: onDestroy
          };
        }
        function createExtensionCache(gl, config) {
          var extensions = {};
          function tryLoadExtension(name_) {
            check$1.type(name_, 'string', 'extension name must be string');
            var name = name_.toLowerCase();
            var ext;
            try {
              ext = extensions[name] = gl.getExtension(name);
            } catch (e) {}
            return !!ext;
          }
          for (var i = 0; i < config.extensions.length; ++i) {
            var name = config.extensions[i];
            if (!tryLoadExtension(name)) {
              config.onDestroy();
              config.onDone('"' + name + '" extension is not supported by the current WebGL context, try upgrading your system or a different browser');
              return null;
            }
          }
          config.optionalExtensions.forEach(tryLoadExtension);
          return {
            extensions: extensions,
            restore: function () {
              Object.keys(extensions).forEach(function (name) {
                if (extensions[name] && !tryLoadExtension(name)) {
                  throw new Error('(regl): error restoring extension ' + name);
                }
              });
            }
          };
        }
        function loop(n, f) {
          var result = Array(n);
          for (var i = 0; i < n; ++i) {
            result[i] = f(i);
          }
          return result;
        }
        var GL_BYTE$1 = 5120;
        var GL_UNSIGNED_BYTE$2 = 5121;
        var GL_SHORT$1 = 5122;
        var GL_UNSIGNED_SHORT$1 = 5123;
        var GL_INT$1 = 5124;
        var GL_UNSIGNED_INT$1 = 5125;
        var GL_FLOAT$2 = 5126;
        function nextPow16(v) {
          for (var i = 16; i <= 1 << 28; i *= 16) {
            if (v <= i) {
              return i;
            }
          }
          return 0;
        }
        function log2(v) {
          var r, shift;
          r = (v > 0xFFFF) << 4;
          v >>>= r;
          shift = (v > 0xFF) << 3;
          v >>>= shift;
          r |= shift;
          shift = (v > 0xF) << 2;
          v >>>= shift;
          r |= shift;
          shift = (v > 0x3) << 1;
          v >>>= shift;
          r |= shift;
          return r | v >> 1;
        }
        function createPool() {
          var bufferPool = loop(8, function () {
            return [];
          });
          function alloc(n) {
            var sz = nextPow16(n);
            var bin = bufferPool[log2(sz) >> 2];
            if (bin.length > 0) {
              return bin.pop();
            }
            return new ArrayBuffer(sz);
          }
          function free(buf) {
            bufferPool[log2(buf.byteLength) >> 2].push(buf);
          }
          function allocType(type, n) {
            var result = null;
            switch (type) {
              case GL_BYTE$1:
                result = new Int8Array(alloc(n), 0, n);
                break;
              case GL_UNSIGNED_BYTE$2:
                result = new Uint8Array(alloc(n), 0, n);
                break;
              case GL_SHORT$1:
                result = new Int16Array(alloc(2 * n), 0, n);
                break;
              case GL_UNSIGNED_SHORT$1:
                result = new Uint16Array(alloc(2 * n), 0, n);
                break;
              case GL_INT$1:
                result = new Int32Array(alloc(4 * n), 0, n);
                break;
              case GL_UNSIGNED_INT$1:
                result = new Uint32Array(alloc(4 * n), 0, n);
                break;
              case GL_FLOAT$2:
                result = new Float32Array(alloc(4 * n), 0, n);
                break;
              default:
                return null;
            }
            if (result.length !== n) {
              return result.subarray(0, n);
            }
            return result;
          }
          function freeType(array) {
            free(array.buffer);
          }
          return {
            alloc: alloc,
            free: free,
            allocType: allocType,
            freeType: freeType
          };
        }
        var pool = createPool();
        pool.zero = createPool();
        var GL_SUBPIXEL_BITS = 0x0D50;
        var GL_RED_BITS = 0x0D52;
        var GL_GREEN_BITS = 0x0D53;
        var GL_BLUE_BITS = 0x0D54;
        var GL_ALPHA_BITS = 0x0D55;
        var GL_DEPTH_BITS = 0x0D56;
        var GL_STENCIL_BITS = 0x0D57;
        var GL_ALIASED_POINT_SIZE_RANGE = 0x846D;
        var GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;
        var GL_MAX_TEXTURE_SIZE = 0x0D33;
        var GL_MAX_VIEWPORT_DIMS = 0x0D3A;
        var GL_MAX_VERTEX_ATTRIBS = 0x8869;
        var GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;
        var GL_MAX_VARYING_VECTORS = 0x8DFC;
        var GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
        var GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
        var GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;
        var GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;
        var GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;
        var GL_MAX_RENDERBUFFER_SIZE = 0x84E8;
        var GL_VENDOR = 0x1F00;
        var GL_RENDERER = 0x1F01;
        var GL_VERSION = 0x1F02;
        var GL_SHADING_LANGUAGE_VERSION = 0x8B8C;
        var GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;
        var GL_MAX_COLOR_ATTACHMENTS_WEBGL = 0x8CDF;
        var GL_MAX_DRAW_BUFFERS_WEBGL = 0x8824;
        var GL_TEXTURE_2D = 0x0DE1;
        var GL_TEXTURE_CUBE_MAP = 0x8513;
        var GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;
        var GL_TEXTURE0 = 0x84C0;
        var GL_RGBA = 0x1908;
        var GL_FLOAT$1 = 0x1406;
        var GL_UNSIGNED_BYTE$1 = 0x1401;
        var GL_FRAMEBUFFER = 0x8D40;
        var GL_FRAMEBUFFER_COMPLETE = 0x8CD5;
        var GL_COLOR_ATTACHMENT0 = 0x8CE0;
        var GL_COLOR_BUFFER_BIT$1 = 0x4000;
        var wrapLimits = function (gl, extensions) {
          var maxAnisotropic = 1;
          if (extensions.ext_texture_filter_anisotropic) {
            maxAnisotropic = gl.getParameter(GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT);
          }
          var maxDrawbuffers = 1;
          var maxColorAttachments = 1;
          if (extensions.webgl_draw_buffers) {
            maxDrawbuffers = gl.getParameter(GL_MAX_DRAW_BUFFERS_WEBGL);
            maxColorAttachments = gl.getParameter(GL_MAX_COLOR_ATTACHMENTS_WEBGL);
          }
          var readFloat = !!extensions.oes_texture_float;
          if (readFloat) {
            var readFloatTexture = gl.createTexture();
            gl.bindTexture(GL_TEXTURE_2D, readFloatTexture);
            gl.texImage2D(GL_TEXTURE_2D, 0, GL_RGBA, 1, 1, 0, GL_RGBA, GL_FLOAT$1, null);
            var fbo = gl.createFramebuffer();
            gl.bindFramebuffer(GL_FRAMEBUFFER, fbo);
            gl.framebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, readFloatTexture, 0);
            gl.bindTexture(GL_TEXTURE_2D, null);
            if (gl.checkFramebufferStatus(GL_FRAMEBUFFER) !== GL_FRAMEBUFFER_COMPLETE) readFloat = false; else {
              gl.viewport(0, 0, 1, 1);
              gl.clearColor(1.0, 0.0, 0.0, 1.0);
              gl.clear(GL_COLOR_BUFFER_BIT$1);
              var pixels = pool.allocType(GL_FLOAT$1, 4);
              gl.readPixels(0, 0, 1, 1, GL_RGBA, GL_FLOAT$1, pixels);
              if (gl.getError()) readFloat = false; else {
                gl.deleteFramebuffer(fbo);
                gl.deleteTexture(readFloatTexture);
                readFloat = pixels[0] === 1.0;
              }
              pool.freeType(pixels);
            }
          }
          var isIE = typeof navigator !== 'undefined' && ((/MSIE/).test(navigator.userAgent) || (/Trident\//).test(navigator.appVersion) || (/Edge/).test(navigator.userAgent));
          var npotTextureCube = true;
          if (!isIE) {
            var cubeTexture = gl.createTexture();
            var data = pool.allocType(GL_UNSIGNED_BYTE$1, 36);
            gl.activeTexture(GL_TEXTURE0);
            gl.bindTexture(GL_TEXTURE_CUBE_MAP, cubeTexture);
            gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X, 0, GL_RGBA, 3, 3, 0, GL_RGBA, GL_UNSIGNED_BYTE$1, data);
            pool.freeType(data);
            gl.bindTexture(GL_TEXTURE_CUBE_MAP, null);
            gl.deleteTexture(cubeTexture);
            npotTextureCube = !gl.getError();
          }
          return {
            colorBits: [gl.getParameter(GL_RED_BITS), gl.getParameter(GL_GREEN_BITS), gl.getParameter(GL_BLUE_BITS), gl.getParameter(GL_ALPHA_BITS)],
            depthBits: gl.getParameter(GL_DEPTH_BITS),
            stencilBits: gl.getParameter(GL_STENCIL_BITS),
            subpixelBits: gl.getParameter(GL_SUBPIXEL_BITS),
            extensions: Object.keys(extensions).filter(function (ext) {
              return !!extensions[ext];
            }),
            maxAnisotropic: maxAnisotropic,
            maxDrawbuffers: maxDrawbuffers,
            maxColorAttachments: maxColorAttachments,
            pointSizeDims: gl.getParameter(GL_ALIASED_POINT_SIZE_RANGE),
            lineWidthDims: gl.getParameter(GL_ALIASED_LINE_WIDTH_RANGE),
            maxViewportDims: gl.getParameter(GL_MAX_VIEWPORT_DIMS),
            maxCombinedTextureUnits: gl.getParameter(GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS),
            maxCubeMapSize: gl.getParameter(GL_MAX_CUBE_MAP_TEXTURE_SIZE),
            maxRenderbufferSize: gl.getParameter(GL_MAX_RENDERBUFFER_SIZE),
            maxTextureUnits: gl.getParameter(GL_MAX_TEXTURE_IMAGE_UNITS),
            maxTextureSize: gl.getParameter(GL_MAX_TEXTURE_SIZE),
            maxAttributes: gl.getParameter(GL_MAX_VERTEX_ATTRIBS),
            maxVertexUniforms: gl.getParameter(GL_MAX_VERTEX_UNIFORM_VECTORS),
            maxVertexTextureUnits: gl.getParameter(GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS),
            maxVaryingVectors: gl.getParameter(GL_MAX_VARYING_VECTORS),
            maxFragmentUniforms: gl.getParameter(GL_MAX_FRAGMENT_UNIFORM_VECTORS),
            glsl: gl.getParameter(GL_SHADING_LANGUAGE_VERSION),
            renderer: gl.getParameter(GL_RENDERER),
            vendor: gl.getParameter(GL_VENDOR),
            version: gl.getParameter(GL_VERSION),
            readFloat: readFloat,
            npotTextureCube: npotTextureCube
          };
        };
        function isNDArrayLike(obj) {
          return !!obj && typeof obj === 'object' && Array.isArray(obj.shape) && Array.isArray(obj.stride) && typeof obj.offset === 'number' && obj.shape.length === obj.stride.length && (Array.isArray(obj.data) || isTypedArray(obj.data));
        }
        var values = function (obj) {
          return Object.keys(obj).map(function (key) {
            return obj[key];
          });
        };
        var flattenUtils = {
          shape: arrayShape$1,
          flatten: flattenArray
        };
        function flatten1D(array, nx, out) {
          for (var i = 0; i < nx; ++i) {
            out[i] = array[i];
          }
        }
        function flatten2D(array, nx, ny, out) {
          var ptr = 0;
          for (var i = 0; i < nx; ++i) {
            var row = array[i];
            for (var j = 0; j < ny; ++j) {
              out[ptr++] = row[j];
            }
          }
        }
        function flatten3D(array, nx, ny, nz, out, ptr_) {
          var ptr = ptr_;
          for (var i = 0; i < nx; ++i) {
            var row = array[i];
            for (var j = 0; j < ny; ++j) {
              var col = row[j];
              for (var k = 0; k < nz; ++k) {
                out[ptr++] = col[k];
              }
            }
          }
        }
        function flattenRec(array, shape, level, out, ptr) {
          var stride = 1;
          for (var i = level + 1; i < shape.length; ++i) {
            stride *= shape[i];
          }
          var n = shape[level];
          if (shape.length - level === 4) {
            var nx = shape[level + 1];
            var ny = shape[level + 2];
            var nz = shape[level + 3];
            for (i = 0; i < n; ++i) {
              flatten3D(array[i], nx, ny, nz, out, ptr);
              ptr += stride;
            }
          } else {
            for (i = 0; i < n; ++i) {
              flattenRec(array[i], shape, level + 1, out, ptr);
              ptr += stride;
            }
          }
        }
        function flattenArray(array, shape, type, out_) {
          var sz = 1;
          if (shape.length) {
            for (var i = 0; i < shape.length; ++i) {
              sz *= shape[i];
            }
          } else {
            sz = 0;
          }
          var out = out_ || pool.allocType(type, sz);
          switch (shape.length) {
            case 0:
              break;
            case 1:
              flatten1D(array, shape[0], out);
              break;
            case 2:
              flatten2D(array, shape[0], shape[1], out);
              break;
            case 3:
              flatten3D(array, shape[0], shape[1], shape[2], out, 0);
              break;
            default:
              flattenRec(array, shape, 0, out, 0);
          }
          return out;
        }
        function arrayShape$1(array_) {
          var shape = [];
          for (var array = array_; array.length; array = array[0]) {
            shape.push(array.length);
          }
          return shape;
        }
        var arrayTypes = {
          "[object Int8Array]": 5120,
          "[object Int16Array]": 5122,
          "[object Int32Array]": 5124,
          "[object Uint8Array]": 5121,
          "[object Uint8ClampedArray]": 5121,
          "[object Uint16Array]": 5123,
          "[object Uint32Array]": 5125,
          "[object Float32Array]": 5126,
          "[object Float64Array]": 5121,
          "[object ArrayBuffer]": 5121
        };
        var int8 = 5120;
        var int16 = 5122;
        var int32 = 5124;
        var uint8 = 5121;
        var uint16 = 5123;
        var uint32 = 5125;
        var float = 5126;
        var float32 = 5126;
        var glTypes = {
          int8: int8,
          int16: int16,
          int32: int32,
          uint8: uint8,
          uint16: uint16,
          uint32: uint32,
          float: float,
          float32: float32
        };
        var dynamic$1 = 35048;
        var stream = 35040;
        var usageTypes = {
          dynamic: dynamic$1,
          stream: stream,
          "static": 35044
        };
        var arrayFlatten = flattenUtils.flatten;
        var arrayShape = flattenUtils.shape;
        var GL_STATIC_DRAW = 0x88E4;
        var GL_STREAM_DRAW = 0x88E0;
        var GL_UNSIGNED_BYTE$3 = 5121;
        var GL_FLOAT$3 = 5126;
        var DTYPES_SIZES = [];
        DTYPES_SIZES[5120] = 1;
        DTYPES_SIZES[5122] = 2;
        DTYPES_SIZES[5124] = 4;
        DTYPES_SIZES[5121] = 1;
        DTYPES_SIZES[5123] = 2;
        DTYPES_SIZES[5125] = 4;
        DTYPES_SIZES[5126] = 4;
        function typedArrayCode(data) {
          return arrayTypes[Object.prototype.toString.call(data)] | 0;
        }
        function copyArray(out, inp) {
          for (var i = 0; i < inp.length; ++i) {
            out[i] = inp[i];
          }
        }
        function transpose(result, data, shapeX, shapeY, strideX, strideY, offset) {
          var ptr = 0;
          for (var i = 0; i < shapeX; ++i) {
            for (var j = 0; j < shapeY; ++j) {
              result[ptr++] = data[strideX * i + strideY * j + offset];
            }
          }
        }
        function wrapBufferState(gl, stats, config, destroyBuffer) {
          var bufferCount = 0;
          var bufferSet = {};
          function REGLBuffer(type) {
            this.id = bufferCount++;
            this.buffer = gl.createBuffer();
            this.type = type;
            this.usage = GL_STATIC_DRAW;
            this.byteLength = 0;
            this.dimension = 1;
            this.dtype = GL_UNSIGNED_BYTE$3;
            this.persistentData = null;
            if (config.profile) {
              this.stats = {
                size: 0
              };
            }
          }
          REGLBuffer.prototype.bind = function () {
            gl.bindBuffer(this.type, this.buffer);
          };
          REGLBuffer.prototype.destroy = function () {
            destroy(this);
          };
          var streamPool = [];
          function createStream(type, data) {
            var buffer = streamPool.pop();
            if (!buffer) {
              buffer = new REGLBuffer(type);
            }
            buffer.bind();
            initBufferFromData(buffer, data, GL_STREAM_DRAW, 0, 1, false);
            return buffer;
          }
          function destroyStream(stream$$1) {
            streamPool.push(stream$$1);
          }
          function initBufferFromTypedArray(buffer, data, usage) {
            buffer.byteLength = data.byteLength;
            gl.bufferData(buffer.type, data, usage);
          }
          function initBufferFromData(buffer, data, usage, dtype, dimension, persist) {
            var shape;
            buffer.usage = usage;
            if (Array.isArray(data)) {
              buffer.dtype = dtype || GL_FLOAT$3;
              if (data.length > 0) {
                var flatData;
                if (Array.isArray(data[0])) {
                  shape = arrayShape(data);
                  var dim = 1;
                  for (var i = 1; i < shape.length; ++i) {
                    dim *= shape[i];
                  }
                  buffer.dimension = dim;
                  flatData = arrayFlatten(data, shape, buffer.dtype);
                  initBufferFromTypedArray(buffer, flatData, usage);
                  if (persist) {
                    buffer.persistentData = flatData;
                  } else {
                    pool.freeType(flatData);
                  }
                } else if (typeof data[0] === 'number') {
                  buffer.dimension = dimension;
                  var typedData = pool.allocType(buffer.dtype, data.length);
                  copyArray(typedData, data);
                  initBufferFromTypedArray(buffer, typedData, usage);
                  if (persist) {
                    buffer.persistentData = typedData;
                  } else {
                    pool.freeType(typedData);
                  }
                } else if (isTypedArray(data[0])) {
                  buffer.dimension = data[0].length;
                  buffer.dtype = dtype || typedArrayCode(data[0]) || GL_FLOAT$3;
                  flatData = arrayFlatten(data, [data.length, data[0].length], buffer.dtype);
                  initBufferFromTypedArray(buffer, flatData, usage);
                  if (persist) {
                    buffer.persistentData = flatData;
                  } else {
                    pool.freeType(flatData);
                  }
                } else {
                  check$1.raise('invalid buffer data');
                }
              }
            } else if (isTypedArray(data)) {
              buffer.dtype = dtype || typedArrayCode(data);
              buffer.dimension = dimension;
              initBufferFromTypedArray(buffer, data, usage);
              if (persist) {
                buffer.persistentData = new Uint8Array(new Uint8Array(data.buffer));
              }
            } else if (isNDArrayLike(data)) {
              shape = data.shape;
              var stride = data.stride;
              var offset = data.offset;
              var shapeX = 0;
              var shapeY = 0;
              var strideX = 0;
              var strideY = 0;
              if (shape.length === 1) {
                shapeX = shape[0];
                shapeY = 1;
                strideX = stride[0];
                strideY = 0;
              } else if (shape.length === 2) {
                shapeX = shape[0];
                shapeY = shape[1];
                strideX = stride[0];
                strideY = stride[1];
              } else {
                check$1.raise('invalid shape');
              }
              buffer.dtype = dtype || typedArrayCode(data.data) || GL_FLOAT$3;
              buffer.dimension = shapeY;
              var transposeData = pool.allocType(buffer.dtype, shapeX * shapeY);
              transpose(transposeData, data.data, shapeX, shapeY, strideX, strideY, offset);
              initBufferFromTypedArray(buffer, transposeData, usage);
              if (persist) {
                buffer.persistentData = transposeData;
              } else {
                pool.freeType(transposeData);
              }
            } else if (data instanceof ArrayBuffer) {
              buffer.dtype = GL_UNSIGNED_BYTE$3;
              buffer.dimension = dimension;
              initBufferFromTypedArray(buffer, data, usage);
              if (persist) {
                buffer.persistentData = new Uint8Array(new Uint8Array(data));
              }
            } else {
              check$1.raise('invalid buffer data');
            }
          }
          function destroy(buffer) {
            stats.bufferCount--;
            destroyBuffer(buffer);
            var handle = buffer.buffer;
            check$1(handle, 'buffer must not be deleted already');
            gl.deleteBuffer(handle);
            buffer.buffer = null;
            delete bufferSet[buffer.id];
          }
          function createBuffer(options, type, deferInit, persistent) {
            stats.bufferCount++;
            var buffer = new REGLBuffer(type);
            bufferSet[buffer.id] = buffer;
            function reglBuffer(options) {
              var usage = GL_STATIC_DRAW;
              var data = null;
              var byteLength = 0;
              var dtype = 0;
              var dimension = 1;
              if (Array.isArray(options) || isTypedArray(options) || isNDArrayLike(options) || options instanceof ArrayBuffer) {
                data = options;
              } else if (typeof options === 'number') {
                byteLength = options | 0;
              } else if (options) {
                check$1.type(options, 'object', 'buffer arguments must be an object, a number or an array');
                if (('data' in options)) {
                  check$1(data === null || Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data), 'invalid data for buffer');
                  data = options.data;
                }
                if (('usage' in options)) {
                  check$1.parameter(options.usage, usageTypes, 'invalid buffer usage');
                  usage = usageTypes[options.usage];
                }
                if (('type' in options)) {
                  check$1.parameter(options.type, glTypes, 'invalid buffer type');
                  dtype = glTypes[options.type];
                }
                if (('dimension' in options)) {
                  check$1.type(options.dimension, 'number', 'invalid dimension');
                  dimension = options.dimension | 0;
                }
                if (('length' in options)) {
                  check$1.nni(byteLength, 'buffer length must be a nonnegative integer');
                  byteLength = options.length | 0;
                }
              }
              buffer.bind();
              if (!data) {
                if (byteLength) gl.bufferData(buffer.type, byteLength, usage);
                buffer.dtype = dtype || GL_UNSIGNED_BYTE$3;
                buffer.usage = usage;
                buffer.dimension = dimension;
                buffer.byteLength = byteLength;
              } else {
                initBufferFromData(buffer, data, usage, dtype, dimension, persistent);
              }
              if (config.profile) {
                buffer.stats.size = buffer.byteLength * DTYPES_SIZES[buffer.dtype];
              }
              return reglBuffer;
            }
            function setSubData(data, offset) {
              check$1(offset + data.byteLength <= buffer.byteLength, 'invalid buffer subdata call, buffer is too small. ' + ' Can\'t write data of size ' + data.byteLength + ' starting from offset ' + offset + ' to a buffer of size ' + buffer.byteLength);
              gl.bufferSubData(buffer.type, offset, data);
            }
            function subdata(data, offset_) {
              var offset = (offset_ || 0) | 0;
              var shape;
              buffer.bind();
              if (isTypedArray(data) || data instanceof ArrayBuffer) {
                setSubData(data, offset);
              } else if (Array.isArray(data)) {
                if (data.length > 0) {
                  if (typeof data[0] === 'number') {
                    var converted = pool.allocType(buffer.dtype, data.length);
                    copyArray(converted, data);
                    setSubData(converted, offset);
                    pool.freeType(converted);
                  } else if (Array.isArray(data[0]) || isTypedArray(data[0])) {
                    shape = arrayShape(data);
                    var flatData = arrayFlatten(data, shape, buffer.dtype);
                    setSubData(flatData, offset);
                    pool.freeType(flatData);
                  } else {
                    check$1.raise('invalid buffer data');
                  }
                }
              } else if (isNDArrayLike(data)) {
                shape = data.shape;
                var stride = data.stride;
                var shapeX = 0;
                var shapeY = 0;
                var strideX = 0;
                var strideY = 0;
                if (shape.length === 1) {
                  shapeX = shape[0];
                  shapeY = 1;
                  strideX = stride[0];
                  strideY = 0;
                } else if (shape.length === 2) {
                  shapeX = shape[0];
                  shapeY = shape[1];
                  strideX = stride[0];
                  strideY = stride[1];
                } else {
                  check$1.raise('invalid shape');
                }
                var dtype = Array.isArray(data.data) ? buffer.dtype : typedArrayCode(data.data);
                var transposeData = pool.allocType(dtype, shapeX * shapeY);
                transpose(transposeData, data.data, shapeX, shapeY, strideX, strideY, data.offset);
                setSubData(transposeData, offset);
                pool.freeType(transposeData);
              } else {
                check$1.raise('invalid data for buffer subdata');
              }
              return reglBuffer;
            }
            if (!deferInit) {
              reglBuffer(options);
            }
            reglBuffer._reglType = 'buffer';
            reglBuffer._buffer = buffer;
            reglBuffer.subdata = subdata;
            if (config.profile) {
              reglBuffer.stats = buffer.stats;
            }
            reglBuffer.destroy = function () {
              destroy(buffer);
            };
            return reglBuffer;
          }
          function restoreBuffers() {
            values(bufferSet).forEach(function (buffer) {
              buffer.buffer = gl.createBuffer();
              gl.bindBuffer(buffer.type, buffer.buffer);
              gl.bufferData(buffer.type, buffer.persistentData || buffer.byteLength, buffer.usage);
            });
          }
          if (config.profile) {
            stats.getTotalBufferSize = function () {
              var total = 0;
              Object.keys(bufferSet).forEach(function (key) {
                total += bufferSet[key].stats.size;
              });
              return total;
            };
          }
          return {
            create: createBuffer,
            createStream: createStream,
            destroyStream: destroyStream,
            clear: function () {
              values(bufferSet).forEach(destroy);
              streamPool.forEach(destroy);
            },
            getBuffer: function (wrapper) {
              if (wrapper && wrapper._buffer instanceof REGLBuffer) {
                return wrapper._buffer;
              }
              return null;
            },
            restore: restoreBuffers,
            _initBuffer: initBufferFromData
          };
        }
        var points = 0;
        var point = 0;
        var lines = 1;
        var line = 1;
        var triangles = 4;
        var triangle = 4;
        var primTypes = {
          points: points,
          point: point,
          lines: lines,
          line: line,
          triangles: triangles,
          triangle: triangle,
          "line loop": 2,
          "line strip": 3,
          "triangle strip": 5,
          "triangle fan": 6
        };
        var GL_POINTS = 0;
        var GL_LINES = 1;
        var GL_TRIANGLES = 4;
        var GL_BYTE$2 = 5120;
        var GL_UNSIGNED_BYTE$4 = 5121;
        var GL_SHORT$2 = 5122;
        var GL_UNSIGNED_SHORT$2 = 5123;
        var GL_INT$2 = 5124;
        var GL_UNSIGNED_INT$2 = 5125;
        var GL_ELEMENT_ARRAY_BUFFER = 34963;
        var GL_STREAM_DRAW$1 = 0x88E0;
        var GL_STATIC_DRAW$1 = 0x88E4;
        function wrapElementsState(gl, extensions, bufferState, stats) {
          var elementSet = {};
          var elementCount = 0;
          var elementTypes = {
            'uint8': GL_UNSIGNED_BYTE$4,
            'uint16': GL_UNSIGNED_SHORT$2
          };
          if (extensions.oes_element_index_uint) {
            elementTypes.uint32 = GL_UNSIGNED_INT$2;
          }
          function REGLElementBuffer(buffer) {
            this.id = elementCount++;
            elementSet[this.id] = this;
            this.buffer = buffer;
            this.primType = GL_TRIANGLES;
            this.vertCount = 0;
            this.type = 0;
          }
          REGLElementBuffer.prototype.bind = function () {
            this.buffer.bind();
          };
          var bufferPool = [];
          function createElementStream(data) {
            var result = bufferPool.pop();
            if (!result) {
              result = new REGLElementBuffer(bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true, false)._buffer);
            }
            initElements(result, data, GL_STREAM_DRAW$1, -1, -1, 0, 0);
            return result;
          }
          function destroyElementStream(elements) {
            bufferPool.push(elements);
          }
          function initElements(elements, data, usage, prim, count, byteLength, type) {
            elements.buffer.bind();
            var dtype;
            if (data) {
              var predictedType = type;
              if (!type && (!isTypedArray(data) || isNDArrayLike(data) && !isTypedArray(data.data))) {
                predictedType = extensions.oes_element_index_uint ? GL_UNSIGNED_INT$2 : GL_UNSIGNED_SHORT$2;
              }
              bufferState._initBuffer(elements.buffer, data, usage, predictedType, 3);
            } else {
              gl.bufferData(GL_ELEMENT_ARRAY_BUFFER, byteLength, usage);
              elements.buffer.dtype = dtype || GL_UNSIGNED_BYTE$4;
              elements.buffer.usage = usage;
              elements.buffer.dimension = 3;
              elements.buffer.byteLength = byteLength;
            }
            dtype = type;
            if (!type) {
              switch (elements.buffer.dtype) {
                case GL_UNSIGNED_BYTE$4:
                case GL_BYTE$2:
                  dtype = GL_UNSIGNED_BYTE$4;
                  break;
                case GL_UNSIGNED_SHORT$2:
                case GL_SHORT$2:
                  dtype = GL_UNSIGNED_SHORT$2;
                  break;
                case GL_UNSIGNED_INT$2:
                case GL_INT$2:
                  dtype = GL_UNSIGNED_INT$2;
                  break;
                default:
                  check$1.raise('unsupported type for element array');
              }
              elements.buffer.dtype = dtype;
            }
            elements.type = dtype;
            check$1(dtype !== GL_UNSIGNED_INT$2 || !!extensions.oes_element_index_uint, '32 bit element buffers not supported, enable oes_element_index_uint first');
            var vertCount = count;
            if (vertCount < 0) {
              vertCount = elements.buffer.byteLength;
              if (dtype === GL_UNSIGNED_SHORT$2) {
                vertCount >>= 1;
              } else if (dtype === GL_UNSIGNED_INT$2) {
                vertCount >>= 2;
              }
            }
            elements.vertCount = vertCount;
            var primType = prim;
            if (prim < 0) {
              primType = GL_TRIANGLES;
              var dimension = elements.buffer.dimension;
              if (dimension === 1) primType = GL_POINTS;
              if (dimension === 2) primType = GL_LINES;
              if (dimension === 3) primType = GL_TRIANGLES;
            }
            elements.primType = primType;
          }
          function destroyElements(elements) {
            stats.elementsCount--;
            check$1(elements.buffer !== null, 'must not double destroy elements');
            delete elementSet[elements.id];
            elements.buffer.destroy();
            elements.buffer = null;
          }
          function createElements(options, persistent) {
            var buffer = bufferState.create(null, GL_ELEMENT_ARRAY_BUFFER, true);
            var elements = new REGLElementBuffer(buffer._buffer);
            stats.elementsCount++;
            function reglElements(options) {
              if (!options) {
                buffer();
                elements.primType = GL_TRIANGLES;
                elements.vertCount = 0;
                elements.type = GL_UNSIGNED_BYTE$4;
              } else if (typeof options === 'number') {
                buffer(options);
                elements.primType = GL_TRIANGLES;
                elements.vertCount = options | 0;
                elements.type = GL_UNSIGNED_BYTE$4;
              } else {
                var data = null;
                var usage = GL_STATIC_DRAW$1;
                var primType = -1;
                var vertCount = -1;
                var byteLength = 0;
                var dtype = 0;
                if (Array.isArray(options) || isTypedArray(options) || isNDArrayLike(options)) {
                  data = options;
                } else {
                  check$1.type(options, 'object', 'invalid arguments for elements');
                  if (('data' in options)) {
                    data = options.data;
                    check$1(Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data), 'invalid data for element buffer');
                  }
                  if (('usage' in options)) {
                    check$1.parameter(options.usage, usageTypes, 'invalid element buffer usage');
                    usage = usageTypes[options.usage];
                  }
                  if (('primitive' in options)) {
                    check$1.parameter(options.primitive, primTypes, 'invalid element buffer primitive');
                    primType = primTypes[options.primitive];
                  }
                  if (('count' in options)) {
                    check$1(typeof options.count === 'number' && options.count >= 0, 'invalid vertex count for elements');
                    vertCount = options.count | 0;
                  }
                  if (('type' in options)) {
                    check$1.parameter(options.type, elementTypes, 'invalid buffer type');
                    dtype = elementTypes[options.type];
                  }
                  if (('length' in options)) {
                    byteLength = options.length | 0;
                  } else {
                    byteLength = vertCount;
                    if (dtype === GL_UNSIGNED_SHORT$2 || dtype === GL_SHORT$2) {
                      byteLength *= 2;
                    } else if (dtype === GL_UNSIGNED_INT$2 || dtype === GL_INT$2) {
                      byteLength *= 4;
                    }
                  }
                }
                initElements(elements, data, usage, primType, vertCount, byteLength, dtype);
              }
              return reglElements;
            }
            reglElements(options);
            reglElements._reglType = 'elements';
            reglElements._elements = elements;
            reglElements.subdata = function (data, offset) {
              buffer.subdata(data, offset);
              return reglElements;
            };
            reglElements.destroy = function () {
              destroyElements(elements);
            };
            return reglElements;
          }
          return {
            create: createElements,
            createStream: createElementStream,
            destroyStream: destroyElementStream,
            getElements: function (elements) {
              if (typeof elements === 'function' && elements._elements instanceof REGLElementBuffer) {
                return elements._elements;
              }
              return null;
            },
            clear: function () {
              values(elementSet).forEach(destroyElements);
            }
          };
        }
        var FLOAT = new Float32Array(1);
        var INT = new Uint32Array(FLOAT.buffer);
        var GL_UNSIGNED_SHORT$4 = 5123;
        function convertToHalfFloat(array) {
          var ushorts = pool.allocType(GL_UNSIGNED_SHORT$4, array.length);
          for (var i = 0; i < array.length; ++i) {
            if (isNaN(array[i])) {
              ushorts[i] = 0xffff;
            } else if (array[i] === Infinity) {
              ushorts[i] = 0x7c00;
            } else if (array[i] === -Infinity) {
              ushorts[i] = 0xfc00;
            } else {
              FLOAT[0] = array[i];
              var x = INT[0];
              var sgn = x >>> 31 << 15;
              var exp = (x << 1 >>> 24) - 127;
              var frac = x >> 13 & (1 << 10) - 1;
              if (exp < -24) {
                ushorts[i] = sgn;
              } else if (exp < -14) {
                var s = -14 - exp;
                ushorts[i] = sgn + (frac + (1 << 10) >> s);
              } else if (exp > 15) {
                ushorts[i] = sgn + 0x7c00;
              } else {
                ushorts[i] = sgn + (exp + 15 << 10) + frac;
              }
            }
          }
          return ushorts;
        }
        function isArrayLike(s) {
          return Array.isArray(s) || isTypedArray(s);
        }
        var isPow2$1 = function (v) {
          return !(v & v - 1) && !!v;
        };
        var GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;
        var GL_TEXTURE_2D$1 = 0x0DE1;
        var GL_TEXTURE_CUBE_MAP$1 = 0x8513;
        var GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 = 0x8515;
        var GL_RGBA$1 = 0x1908;
        var GL_ALPHA = 0x1906;
        var GL_RGB = 0x1907;
        var GL_LUMINANCE = 0x1909;
        var GL_LUMINANCE_ALPHA = 0x190A;
        var GL_RGBA4 = 0x8056;
        var GL_RGB5_A1 = 0x8057;
        var GL_RGB565 = 0x8D62;
        var GL_UNSIGNED_SHORT_4_4_4_4$1 = 0x8033;
        var GL_UNSIGNED_SHORT_5_5_5_1$1 = 0x8034;
        var GL_UNSIGNED_SHORT_5_6_5$1 = 0x8363;
        var GL_UNSIGNED_INT_24_8_WEBGL$1 = 0x84FA;
        var GL_DEPTH_COMPONENT = 0x1902;
        var GL_DEPTH_STENCIL = 0x84F9;
        var GL_SRGB_EXT = 0x8C40;
        var GL_SRGB_ALPHA_EXT = 0x8C42;
        var GL_HALF_FLOAT_OES$1 = 0x8D61;
        var GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0;
        var GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1;
        var GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2;
        var GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3;
        var GL_COMPRESSED_RGB_ATC_WEBGL = 0x8C92;
        var GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8C93;
        var GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87EE;
        var GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00;
        var GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01;
        var GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02;
        var GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03;
        var GL_COMPRESSED_RGB_ETC1_WEBGL = 0x8D64;
        var GL_UNSIGNED_BYTE$5 = 0x1401;
        var GL_UNSIGNED_SHORT$3 = 0x1403;
        var GL_UNSIGNED_INT$3 = 0x1405;
        var GL_FLOAT$4 = 0x1406;
        var GL_TEXTURE_WRAP_S = 0x2802;
        var GL_TEXTURE_WRAP_T = 0x2803;
        var GL_REPEAT = 0x2901;
        var GL_CLAMP_TO_EDGE$1 = 0x812F;
        var GL_MIRRORED_REPEAT = 0x8370;
        var GL_TEXTURE_MAG_FILTER = 0x2800;
        var GL_TEXTURE_MIN_FILTER = 0x2801;
        var GL_NEAREST$1 = 0x2600;
        var GL_LINEAR = 0x2601;
        var GL_NEAREST_MIPMAP_NEAREST$1 = 0x2700;
        var GL_LINEAR_MIPMAP_NEAREST$1 = 0x2701;
        var GL_NEAREST_MIPMAP_LINEAR$1 = 0x2702;
        var GL_LINEAR_MIPMAP_LINEAR$1 = 0x2703;
        var GL_GENERATE_MIPMAP_HINT = 0x8192;
        var GL_DONT_CARE = 0x1100;
        var GL_FASTEST = 0x1101;
        var GL_NICEST = 0x1102;
        var GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;
        var GL_UNPACK_ALIGNMENT = 0x0CF5;
        var GL_UNPACK_FLIP_Y_WEBGL = 0x9240;
        var GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;
        var GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;
        var GL_BROWSER_DEFAULT_WEBGL = 0x9244;
        var GL_TEXTURE0$1 = 0x84C0;
        var MIPMAP_FILTERS = [GL_NEAREST_MIPMAP_NEAREST$1, GL_NEAREST_MIPMAP_LINEAR$1, GL_LINEAR_MIPMAP_NEAREST$1, GL_LINEAR_MIPMAP_LINEAR$1];
        var CHANNELS_FORMAT = [0, GL_LUMINANCE, GL_LUMINANCE_ALPHA, GL_RGB, GL_RGBA$1];
        var FORMAT_CHANNELS = {};
        FORMAT_CHANNELS[GL_LUMINANCE] = FORMAT_CHANNELS[GL_ALPHA] = FORMAT_CHANNELS[GL_DEPTH_COMPONENT] = 1;
        FORMAT_CHANNELS[GL_DEPTH_STENCIL] = FORMAT_CHANNELS[GL_LUMINANCE_ALPHA] = 2;
        FORMAT_CHANNELS[GL_RGB] = FORMAT_CHANNELS[GL_SRGB_EXT] = 3;
        FORMAT_CHANNELS[GL_RGBA$1] = FORMAT_CHANNELS[GL_SRGB_ALPHA_EXT] = 4;
        function objectName(str) {
          return '[object ' + str + ']';
        }
        var CANVAS_CLASS = objectName('HTMLCanvasElement');
        var OFFSCREENCANVAS_CLASS = objectName('OffscreenCanvas');
        var CONTEXT2D_CLASS = objectName('CanvasRenderingContext2D');
        var BITMAP_CLASS = objectName('ImageBitmap');
        var IMAGE_CLASS = objectName('HTMLImageElement');
        var VIDEO_CLASS = objectName('HTMLVideoElement');
        var PIXEL_CLASSES = Object.keys(arrayTypes).concat([CANVAS_CLASS, OFFSCREENCANVAS_CLASS, CONTEXT2D_CLASS, BITMAP_CLASS, IMAGE_CLASS, VIDEO_CLASS]);
        var TYPE_SIZES = [];
        TYPE_SIZES[GL_UNSIGNED_BYTE$5] = 1;
        TYPE_SIZES[GL_FLOAT$4] = 4;
        TYPE_SIZES[GL_HALF_FLOAT_OES$1] = 2;
        TYPE_SIZES[GL_UNSIGNED_SHORT$3] = 2;
        TYPE_SIZES[GL_UNSIGNED_INT$3] = 4;
        var FORMAT_SIZES_SPECIAL = [];
        FORMAT_SIZES_SPECIAL[GL_RGBA4] = 2;
        FORMAT_SIZES_SPECIAL[GL_RGB5_A1] = 2;
        FORMAT_SIZES_SPECIAL[GL_RGB565] = 2;
        FORMAT_SIZES_SPECIAL[GL_DEPTH_STENCIL] = 4;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_S3TC_DXT1_EXT] = 0.5;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT1_EXT] = 0.5;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT3_EXT] = 1;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_S3TC_DXT5_EXT] = 1;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ATC_WEBGL] = 0.5;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL] = 1;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL] = 1;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG] = 0.5;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG] = 0.25;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG] = 0.5;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG] = 0.25;
        FORMAT_SIZES_SPECIAL[GL_COMPRESSED_RGB_ETC1_WEBGL] = 0.5;
        function isNumericArray(arr) {
          return Array.isArray(arr) && (arr.length === 0 || typeof arr[0] === 'number');
        }
        function isRectArray(arr) {
          if (!Array.isArray(arr)) {
            return false;
          }
          var width = arr.length;
          if (width === 0 || !isArrayLike(arr[0])) {
            return false;
          }
          return true;
        }
        function classString(x) {
          return Object.prototype.toString.call(x);
        }
        function isCanvasElement(object) {
          return classString(object) === CANVAS_CLASS;
        }
        function isOffscreenCanvas(object) {
          return classString(object) === OFFSCREENCANVAS_CLASS;
        }
        function isContext2D(object) {
          return classString(object) === CONTEXT2D_CLASS;
        }
        function isBitmap(object) {
          return classString(object) === BITMAP_CLASS;
        }
        function isImageElement(object) {
          return classString(object) === IMAGE_CLASS;
        }
        function isVideoElement(object) {
          return classString(object) === VIDEO_CLASS;
        }
        function isPixelData(object) {
          if (!object) {
            return false;
          }
          var className = classString(object);
          if (PIXEL_CLASSES.indexOf(className) >= 0) {
            return true;
          }
          return isNumericArray(object) || isRectArray(object) || isNDArrayLike(object);
        }
        function typedArrayCode$1(data) {
          return arrayTypes[Object.prototype.toString.call(data)] | 0;
        }
        function convertData(result, data) {
          var n = data.length;
          switch (result.type) {
            case GL_UNSIGNED_BYTE$5:
            case GL_UNSIGNED_SHORT$3:
            case GL_UNSIGNED_INT$3:
            case GL_FLOAT$4:
              var converted = pool.allocType(result.type, n);
              converted.set(data);
              result.data = converted;
              break;
            case GL_HALF_FLOAT_OES$1:
              result.data = convertToHalfFloat(data);
              break;
            default:
              check$1.raise('unsupported texture type, must specify a typed array');
          }
        }
        function preConvert(image, n) {
          return pool.allocType(image.type === GL_HALF_FLOAT_OES$1 ? GL_FLOAT$4 : image.type, n);
        }
        function postConvert(image, data) {
          if (image.type === GL_HALF_FLOAT_OES$1) {
            image.data = convertToHalfFloat(data);
            pool.freeType(data);
          } else {
            image.data = data;
          }
        }
        function transposeData(image, array, strideX, strideY, strideC, offset) {
          var w = image.width;
          var h = image.height;
          var c = image.channels;
          var n = w * h * c;
          var data = preConvert(image, n);
          var p = 0;
          for (var i = 0; i < h; ++i) {
            for (var j = 0; j < w; ++j) {
              for (var k = 0; k < c; ++k) {
                data[p++] = array[strideX * j + strideY * i + strideC * k + offset];
              }
            }
          }
          postConvert(image, data);
        }
        function getTextureSize(format, type, width, height, isMipmap, isCube) {
          var s;
          if (typeof FORMAT_SIZES_SPECIAL[format] !== 'undefined') {
            s = FORMAT_SIZES_SPECIAL[format];
          } else {
            s = FORMAT_CHANNELS[format] * TYPE_SIZES[type];
          }
          if (isCube) {
            s *= 6;
          }
          if (isMipmap) {
            var total = 0;
            var w = width;
            while (w >= 1) {
              total += s * w * w;
              w /= 2;
            }
            return total;
          } else {
            return s * width * height;
          }
        }
        function createTextureSet(gl, extensions, limits, reglPoll, contextState, stats, config) {
          var mipmapHint = {
            "don't care": GL_DONT_CARE,
            'dont care': GL_DONT_CARE,
            'nice': GL_NICEST,
            'fast': GL_FASTEST
          };
          var wrapModes = {
            'repeat': GL_REPEAT,
            'clamp': GL_CLAMP_TO_EDGE$1,
            'mirror': GL_MIRRORED_REPEAT
          };
          var magFilters = {
            'nearest': GL_NEAREST$1,
            'linear': GL_LINEAR
          };
          var minFilters = extend({
            'mipmap': GL_LINEAR_MIPMAP_LINEAR$1,
            'nearest mipmap nearest': GL_NEAREST_MIPMAP_NEAREST$1,
            'linear mipmap nearest': GL_LINEAR_MIPMAP_NEAREST$1,
            'nearest mipmap linear': GL_NEAREST_MIPMAP_LINEAR$1,
            'linear mipmap linear': GL_LINEAR_MIPMAP_LINEAR$1
          }, magFilters);
          var colorSpace = {
            'none': 0,
            'browser': GL_BROWSER_DEFAULT_WEBGL
          };
          var textureTypes = {
            'uint8': GL_UNSIGNED_BYTE$5,
            'rgba4': GL_UNSIGNED_SHORT_4_4_4_4$1,
            'rgb565': GL_UNSIGNED_SHORT_5_6_5$1,
            'rgb5 a1': GL_UNSIGNED_SHORT_5_5_5_1$1
          };
          var textureFormats = {
            'alpha': GL_ALPHA,
            'luminance': GL_LUMINANCE,
            'luminance alpha': GL_LUMINANCE_ALPHA,
            'rgb': GL_RGB,
            'rgba': GL_RGBA$1,
            'rgba4': GL_RGBA4,
            'rgb5 a1': GL_RGB5_A1,
            'rgb565': GL_RGB565
          };
          var compressedTextureFormats = {};
          if (extensions.ext_srgb) {
            textureFormats.srgb = GL_SRGB_EXT;
            textureFormats.srgba = GL_SRGB_ALPHA_EXT;
          }
          if (extensions.oes_texture_float) {
            textureTypes.float32 = textureTypes.float = GL_FLOAT$4;
          }
          if (extensions.oes_texture_half_float) {
            textureTypes['float16'] = textureTypes['half float'] = GL_HALF_FLOAT_OES$1;
          }
          if (extensions.webgl_depth_texture) {
            extend(textureFormats, {
              'depth': GL_DEPTH_COMPONENT,
              'depth stencil': GL_DEPTH_STENCIL
            });
            extend(textureTypes, {
              'uint16': GL_UNSIGNED_SHORT$3,
              'uint32': GL_UNSIGNED_INT$3,
              'depth stencil': GL_UNSIGNED_INT_24_8_WEBGL$1
            });
          }
          if (extensions.webgl_compressed_texture_s3tc) {
            extend(compressedTextureFormats, {
              'rgb s3tc dxt1': GL_COMPRESSED_RGB_S3TC_DXT1_EXT,
              'rgba s3tc dxt1': GL_COMPRESSED_RGBA_S3TC_DXT1_EXT,
              'rgba s3tc dxt3': GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,
              'rgba s3tc dxt5': GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
            });
          }
          if (extensions.webgl_compressed_texture_atc) {
            extend(compressedTextureFormats, {
              'rgb atc': GL_COMPRESSED_RGB_ATC_WEBGL,
              'rgba atc explicit alpha': GL_COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL,
              'rgba atc interpolated alpha': GL_COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL
            });
          }
          if (extensions.webgl_compressed_texture_pvrtc) {
            extend(compressedTextureFormats, {
              'rgb pvrtc 4bppv1': GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG,
              'rgb pvrtc 2bppv1': GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG,
              'rgba pvrtc 4bppv1': GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,
              'rgba pvrtc 2bppv1': GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
            });
          }
          if (extensions.webgl_compressed_texture_etc1) {
            compressedTextureFormats['rgb etc1'] = GL_COMPRESSED_RGB_ETC1_WEBGL;
          }
          var supportedCompressedFormats = Array.prototype.slice.call(gl.getParameter(GL_COMPRESSED_TEXTURE_FORMATS));
          Object.keys(compressedTextureFormats).forEach(function (name) {
            var format = compressedTextureFormats[name];
            if (supportedCompressedFormats.indexOf(format) >= 0) {
              textureFormats[name] = format;
            }
          });
          var supportedFormats = Object.keys(textureFormats);
          limits.textureFormats = supportedFormats;
          var textureFormatsInvert = [];
          Object.keys(textureFormats).forEach(function (key) {
            var val = textureFormats[key];
            textureFormatsInvert[val] = key;
          });
          var textureTypesInvert = [];
          Object.keys(textureTypes).forEach(function (key) {
            var val = textureTypes[key];
            textureTypesInvert[val] = key;
          });
          var magFiltersInvert = [];
          Object.keys(magFilters).forEach(function (key) {
            var val = magFilters[key];
            magFiltersInvert[val] = key;
          });
          var minFiltersInvert = [];
          Object.keys(minFilters).forEach(function (key) {
            var val = minFilters[key];
            minFiltersInvert[val] = key;
          });
          var wrapModesInvert = [];
          Object.keys(wrapModes).forEach(function (key) {
            var val = wrapModes[key];
            wrapModesInvert[val] = key;
          });
          var colorFormats = supportedFormats.reduce(function (color, key) {
            var glenum = textureFormats[key];
            if (glenum === GL_LUMINANCE || glenum === GL_ALPHA || glenum === GL_LUMINANCE || glenum === GL_LUMINANCE_ALPHA || glenum === GL_DEPTH_COMPONENT || glenum === GL_DEPTH_STENCIL || extensions.ext_srgb && (glenum === GL_SRGB_EXT || glenum === GL_SRGB_ALPHA_EXT)) {
              color[glenum] = glenum;
            } else if (glenum === GL_RGB5_A1 || key.indexOf('rgba') >= 0) {
              color[glenum] = GL_RGBA$1;
            } else {
              color[glenum] = GL_RGB;
            }
            return color;
          }, {});
          function TexFlags() {
            this.internalformat = GL_RGBA$1;
            this.format = GL_RGBA$1;
            this.type = GL_UNSIGNED_BYTE$5;
            this.compressed = false;
            this.premultiplyAlpha = false;
            this.flipY = false;
            this.unpackAlignment = 1;
            this.colorSpace = GL_BROWSER_DEFAULT_WEBGL;
            this.width = 0;
            this.height = 0;
            this.channels = 0;
          }
          function copyFlags(result, other) {
            result.internalformat = other.internalformat;
            result.format = other.format;
            result.type = other.type;
            result.compressed = other.compressed;
            result.premultiplyAlpha = other.premultiplyAlpha;
            result.flipY = other.flipY;
            result.unpackAlignment = other.unpackAlignment;
            result.colorSpace = other.colorSpace;
            result.width = other.width;
            result.height = other.height;
            result.channels = other.channels;
          }
          function parseFlags(flags, options) {
            if (typeof options !== 'object' || !options) {
              return;
            }
            if (('premultiplyAlpha' in options)) {
              check$1.type(options.premultiplyAlpha, 'boolean', 'invalid premultiplyAlpha');
              flags.premultiplyAlpha = options.premultiplyAlpha;
            }
            if (('flipY' in options)) {
              check$1.type(options.flipY, 'boolean', 'invalid texture flip');
              flags.flipY = options.flipY;
            }
            if (('alignment' in options)) {
              check$1.oneOf(options.alignment, [1, 2, 4, 8], 'invalid texture unpack alignment');
              flags.unpackAlignment = options.alignment;
            }
            if (('colorSpace' in options)) {
              check$1.parameter(options.colorSpace, colorSpace, 'invalid colorSpace');
              flags.colorSpace = colorSpace[options.colorSpace];
            }
            if (('type' in options)) {
              var type = options.type;
              check$1(extensions.oes_texture_float || !(type === 'float' || type === 'float32'), 'you must enable the OES_texture_float extension in order to use floating point textures.');
              check$1(extensions.oes_texture_half_float || !(type === 'half float' || type === 'float16'), 'you must enable the OES_texture_half_float extension in order to use 16-bit floating point textures.');
              check$1(extensions.webgl_depth_texture || !(type === 'uint16' || type === 'uint32' || type === 'depth stencil'), 'you must enable the WEBGL_depth_texture extension in order to use depth/stencil textures.');
              check$1.parameter(type, textureTypes, 'invalid texture type');
              flags.type = textureTypes[type];
            }
            var w = flags.width;
            var h = flags.height;
            var c = flags.channels;
            var hasChannels = false;
            if (('shape' in options)) {
              check$1(Array.isArray(options.shape) && options.shape.length >= 2, 'shape must be an array');
              w = options.shape[0];
              h = options.shape[1];
              if (options.shape.length === 3) {
                c = options.shape[2];
                check$1(c > 0 && c <= 4, 'invalid number of channels');
                hasChannels = true;
              }
              check$1(w >= 0 && w <= limits.maxTextureSize, 'invalid width');
              check$1(h >= 0 && h <= limits.maxTextureSize, 'invalid height');
            } else {
              if (('radius' in options)) {
                w = h = options.radius;
                check$1(w >= 0 && w <= limits.maxTextureSize, 'invalid radius');
              }
              if (('width' in options)) {
                w = options.width;
                check$1(w >= 0 && w <= limits.maxTextureSize, 'invalid width');
              }
              if (('height' in options)) {
                h = options.height;
                check$1(h >= 0 && h <= limits.maxTextureSize, 'invalid height');
              }
              if (('channels' in options)) {
                c = options.channels;
                check$1(c > 0 && c <= 4, 'invalid number of channels');
                hasChannels = true;
              }
            }
            flags.width = w | 0;
            flags.height = h | 0;
            flags.channels = c | 0;
            var hasFormat = false;
            if (('format' in options)) {
              var formatStr = options.format;
              check$1(extensions.webgl_depth_texture || !(formatStr === 'depth' || formatStr === 'depth stencil'), 'you must enable the WEBGL_depth_texture extension in order to use depth/stencil textures.');
              check$1.parameter(formatStr, textureFormats, 'invalid texture format');
              var internalformat = flags.internalformat = textureFormats[formatStr];
              flags.format = colorFormats[internalformat];
              if ((formatStr in textureTypes)) {
                if (!(('type' in options))) {
                  flags.type = textureTypes[formatStr];
                }
              }
              if ((formatStr in compressedTextureFormats)) {
                flags.compressed = true;
              }
              hasFormat = true;
            }
            if (!hasChannels && hasFormat) {
              flags.channels = FORMAT_CHANNELS[flags.format];
            } else if (hasChannels && !hasFormat) {
              if (flags.channels !== CHANNELS_FORMAT[flags.format]) {
                flags.format = flags.internalformat = CHANNELS_FORMAT[flags.channels];
              }
            } else if (hasFormat && hasChannels) {
              check$1(flags.channels === FORMAT_CHANNELS[flags.format], 'number of channels inconsistent with specified format');
            }
          }
          function setFlags(flags) {
            gl.pixelStorei(GL_UNPACK_FLIP_Y_WEBGL, flags.flipY);
            gl.pixelStorei(GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL, flags.premultiplyAlpha);
            gl.pixelStorei(GL_UNPACK_COLORSPACE_CONVERSION_WEBGL, flags.colorSpace);
            gl.pixelStorei(GL_UNPACK_ALIGNMENT, flags.unpackAlignment);
          }
          function TexImage() {
            TexFlags.call(this);
            this.xOffset = 0;
            this.yOffset = 0;
            this.data = null;
            this.needsFree = false;
            this.element = null;
            this.needsCopy = false;
          }
          function parseImage(image, options) {
            var data = null;
            if (isPixelData(options)) {
              data = options;
            } else if (options) {
              check$1.type(options, 'object', 'invalid pixel data type');
              parseFlags(image, options);
              if (('x' in options)) {
                image.xOffset = options.x | 0;
              }
              if (('y' in options)) {
                image.yOffset = options.y | 0;
              }
              if (isPixelData(options.data)) {
                data = options.data;
              }
            }
            check$1(!image.compressed || data instanceof Uint8Array, 'compressed texture data must be stored in a uint8array');
            if (options.copy) {
              check$1(!data, 'can not specify copy and data field for the same texture');
              var viewW = contextState.viewportWidth;
              var viewH = contextState.viewportHeight;
              image.width = image.width || viewW - image.xOffset;
              image.height = image.height || viewH - image.yOffset;
              image.needsCopy = true;
              check$1(image.xOffset >= 0 && image.xOffset < viewW && image.yOffset >= 0 && image.yOffset < viewH && image.width > 0 && image.width <= viewW && image.height > 0 && image.height <= viewH, 'copy texture read out of bounds');
            } else if (!data) {
              image.width = image.width || 1;
              image.height = image.height || 1;
              image.channels = image.channels || 4;
            } else if (isTypedArray(data)) {
              image.channels = image.channels || 4;
              image.data = data;
              if (!(('type' in options)) && image.type === GL_UNSIGNED_BYTE$5) {
                image.type = typedArrayCode$1(data);
              }
            } else if (isNumericArray(data)) {
              image.channels = image.channels || 4;
              convertData(image, data);
              image.alignment = 1;
              image.needsFree = true;
            } else if (isNDArrayLike(data)) {
              var array = data.data;
              if (!Array.isArray(array) && image.type === GL_UNSIGNED_BYTE$5) {
                image.type = typedArrayCode$1(array);
              }
              var shape = data.shape;
              var stride = data.stride;
              var shapeX, shapeY, shapeC, strideX, strideY, strideC;
              if (shape.length === 3) {
                shapeC = shape[2];
                strideC = stride[2];
              } else {
                check$1(shape.length === 2, 'invalid ndarray pixel data, must be 2 or 3D');
                shapeC = 1;
                strideC = 1;
              }
              shapeX = shape[0];
              shapeY = shape[1];
              strideX = stride[0];
              strideY = stride[1];
              image.alignment = 1;
              image.width = shapeX;
              image.height = shapeY;
              image.channels = shapeC;
              image.format = image.internalformat = CHANNELS_FORMAT[shapeC];
              image.needsFree = true;
              transposeData(image, array, strideX, strideY, strideC, data.offset);
            } else if (isCanvasElement(data) || isOffscreenCanvas(data) || isContext2D(data)) {
              if (isCanvasElement(data) || isOffscreenCanvas(data)) {
                image.element = data;
              } else {
                image.element = data.canvas;
              }
              image.width = image.element.width;
              image.height = image.element.height;
              image.channels = 4;
            } else if (isBitmap(data)) {
              image.element = data;
              image.width = data.width;
              image.height = data.height;
              image.channels = 4;
            } else if (isImageElement(data)) {
              image.element = data;
              image.width = data.naturalWidth;
              image.height = data.naturalHeight;
              image.channels = 4;
            } else if (isVideoElement(data)) {
              image.element = data;
              image.width = data.videoWidth;
              image.height = data.videoHeight;
              image.channels = 4;
            } else if (isRectArray(data)) {
              var w = image.width || data[0].length;
              var h = image.height || data.length;
              var c = image.channels;
              if (isArrayLike(data[0][0])) {
                c = c || data[0][0].length;
              } else {
                c = c || 1;
              }
              var arrayShape = flattenUtils.shape(data);
              var n = 1;
              for (var dd = 0; dd < arrayShape.length; ++dd) {
                n *= arrayShape[dd];
              }
              var allocData = preConvert(image, n);
              flattenUtils.flatten(data, arrayShape, '', allocData);
              postConvert(image, allocData);
              image.alignment = 1;
              image.width = w;
              image.height = h;
              image.channels = c;
              image.format = image.internalformat = CHANNELS_FORMAT[c];
              image.needsFree = true;
            }
            if (image.type === GL_FLOAT$4) {
              check$1(limits.extensions.indexOf('oes_texture_float') >= 0, 'oes_texture_float extension not enabled');
            } else if (image.type === GL_HALF_FLOAT_OES$1) {
              check$1(limits.extensions.indexOf('oes_texture_half_float') >= 0, 'oes_texture_half_float extension not enabled');
            }
          }
          function setImage(info, target, miplevel) {
            var element = info.element;
            var data = info.data;
            var internalformat = info.internalformat;
            var format = info.format;
            var type = info.type;
            var width = info.width;
            var height = info.height;
            setFlags(info);
            if (element) {
              gl.texImage2D(target, miplevel, format, format, type, element);
            } else if (info.compressed) {
              gl.compressedTexImage2D(target, miplevel, internalformat, width, height, 0, data);
            } else if (info.needsCopy) {
              reglPoll();
              gl.copyTexImage2D(target, miplevel, format, info.xOffset, info.yOffset, width, height, 0);
            } else {
              gl.texImage2D(target, miplevel, format, width, height, 0, format, type, data || null);
            }
          }
          function setSubImage(info, target, x, y, miplevel) {
            var element = info.element;
            var data = info.data;
            var internalformat = info.internalformat;
            var format = info.format;
            var type = info.type;
            var width = info.width;
            var height = info.height;
            setFlags(info);
            if (element) {
              gl.texSubImage2D(target, miplevel, x, y, format, type, element);
            } else if (info.compressed) {
              gl.compressedTexSubImage2D(target, miplevel, x, y, internalformat, width, height, data);
            } else if (info.needsCopy) {
              reglPoll();
              gl.copyTexSubImage2D(target, miplevel, x, y, info.xOffset, info.yOffset, width, height);
            } else {
              gl.texSubImage2D(target, miplevel, x, y, width, height, format, type, data);
            }
          }
          var imagePool = [];
          function allocImage() {
            return imagePool.pop() || new TexImage();
          }
          function freeImage(image) {
            if (image.needsFree) {
              pool.freeType(image.data);
            }
            TexImage.call(image);
            imagePool.push(image);
          }
          function MipMap() {
            TexFlags.call(this);
            this.genMipmaps = false;
            this.mipmapHint = GL_DONT_CARE;
            this.mipmask = 0;
            this.images = Array(16);
          }
          function parseMipMapFromShape(mipmap, width, height) {
            var img = mipmap.images[0] = allocImage();
            mipmap.mipmask = 1;
            img.width = mipmap.width = width;
            img.height = mipmap.height = height;
            img.channels = mipmap.channels = 4;
          }
          function parseMipMapFromObject(mipmap, options) {
            var imgData = null;
            if (isPixelData(options)) {
              imgData = mipmap.images[0] = allocImage();
              copyFlags(imgData, mipmap);
              parseImage(imgData, options);
              mipmap.mipmask = 1;
            } else {
              parseFlags(mipmap, options);
              if (Array.isArray(options.mipmap)) {
                var mipData = options.mipmap;
                for (var i = 0; i < mipData.length; ++i) {
                  imgData = mipmap.images[i] = allocImage();
                  copyFlags(imgData, mipmap);
                  imgData.width >>= i;
                  imgData.height >>= i;
                  parseImage(imgData, mipData[i]);
                  mipmap.mipmask |= 1 << i;
                }
              } else {
                imgData = mipmap.images[0] = allocImage();
                copyFlags(imgData, mipmap);
                parseImage(imgData, options);
                mipmap.mipmask = 1;
              }
            }
            copyFlags(mipmap, mipmap.images[0]);
            if (mipmap.compressed && (mipmap.internalformat === GL_COMPRESSED_RGB_S3TC_DXT1_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT1_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT3_EXT || mipmap.internalformat === GL_COMPRESSED_RGBA_S3TC_DXT5_EXT)) {
              check$1(mipmap.width % 4 === 0 && mipmap.height % 4 === 0, 'for compressed texture formats, mipmap level 0 must have width and height that are a multiple of 4');
            }
          }
          function setMipMap(mipmap, target) {
            var images = mipmap.images;
            for (var i = 0; i < images.length; ++i) {
              if (!images[i]) {
                return;
              }
              setImage(images[i], target, i);
            }
          }
          var mipPool = [];
          function allocMipMap() {
            var result = mipPool.pop() || new MipMap();
            TexFlags.call(result);
            result.mipmask = 0;
            for (var i = 0; i < 16; ++i) {
              result.images[i] = null;
            }
            return result;
          }
          function freeMipMap(mipmap) {
            var images = mipmap.images;
            for (var i = 0; i < images.length; ++i) {
              if (images[i]) {
                freeImage(images[i]);
              }
              images[i] = null;
            }
            mipPool.push(mipmap);
          }
          function TexInfo() {
            this.minFilter = GL_NEAREST$1;
            this.magFilter = GL_NEAREST$1;
            this.wrapS = GL_CLAMP_TO_EDGE$1;
            this.wrapT = GL_CLAMP_TO_EDGE$1;
            this.anisotropic = 1;
            this.genMipmaps = false;
            this.mipmapHint = GL_DONT_CARE;
          }
          function parseTexInfo(info, options) {
            if (('min' in options)) {
              var minFilter = options.min;
              check$1.parameter(minFilter, minFilters);
              info.minFilter = minFilters[minFilter];
              if (MIPMAP_FILTERS.indexOf(info.minFilter) >= 0 && !(('faces' in options))) {
                info.genMipmaps = true;
              }
            }
            if (('mag' in options)) {
              var magFilter = options.mag;
              check$1.parameter(magFilter, magFilters);
              info.magFilter = magFilters[magFilter];
            }
            var wrapS = info.wrapS;
            var wrapT = info.wrapT;
            if (('wrap' in options)) {
              var wrap = options.wrap;
              if (typeof wrap === 'string') {
                check$1.parameter(wrap, wrapModes);
                wrapS = wrapT = wrapModes[wrap];
              } else if (Array.isArray(wrap)) {
                check$1.parameter(wrap[0], wrapModes);
                check$1.parameter(wrap[1], wrapModes);
                wrapS = wrapModes[wrap[0]];
                wrapT = wrapModes[wrap[1]];
              }
            } else {
              if (('wrapS' in options)) {
                var optWrapS = options.wrapS;
                check$1.parameter(optWrapS, wrapModes);
                wrapS = wrapModes[optWrapS];
              }
              if (('wrapT' in options)) {
                var optWrapT = options.wrapT;
                check$1.parameter(optWrapT, wrapModes);
                wrapT = wrapModes[optWrapT];
              }
            }
            info.wrapS = wrapS;
            info.wrapT = wrapT;
            if (('anisotropic' in options)) {
              var anisotropic = options.anisotropic;
              check$1(typeof anisotropic === 'number' && anisotropic >= 1 && anisotropic <= limits.maxAnisotropic, 'aniso samples must be between 1 and ');
              info.anisotropic = options.anisotropic;
            }
            if (('mipmap' in options)) {
              var hasMipMap = false;
              switch (typeof options.mipmap) {
                case 'string':
                  check$1.parameter(options.mipmap, mipmapHint, 'invalid mipmap hint');
                  info.mipmapHint = mipmapHint[options.mipmap];
                  info.genMipmaps = true;
                  hasMipMap = true;
                  break;
                case 'boolean':
                  hasMipMap = info.genMipmaps = options.mipmap;
                  break;
                case 'object':
                  check$1(Array.isArray(options.mipmap), 'invalid mipmap type');
                  info.genMipmaps = false;
                  hasMipMap = true;
                  break;
                default:
                  check$1.raise('invalid mipmap type');
              }
              if (hasMipMap && !(('min' in options))) {
                info.minFilter = GL_NEAREST_MIPMAP_NEAREST$1;
              }
            }
          }
          function setTexInfo(info, target) {
            gl.texParameteri(target, GL_TEXTURE_MIN_FILTER, info.minFilter);
            gl.texParameteri(target, GL_TEXTURE_MAG_FILTER, info.magFilter);
            gl.texParameteri(target, GL_TEXTURE_WRAP_S, info.wrapS);
            gl.texParameteri(target, GL_TEXTURE_WRAP_T, info.wrapT);
            if (extensions.ext_texture_filter_anisotropic) {
              gl.texParameteri(target, GL_TEXTURE_MAX_ANISOTROPY_EXT, info.anisotropic);
            }
            if (info.genMipmaps) {
              gl.hint(GL_GENERATE_MIPMAP_HINT, info.mipmapHint);
              gl.generateMipmap(target);
            }
          }
          var textureCount = 0;
          var textureSet = {};
          var numTexUnits = limits.maxTextureUnits;
          var textureUnits = Array(numTexUnits).map(function () {
            return null;
          });
          function REGLTexture(target) {
            TexFlags.call(this);
            this.mipmask = 0;
            this.internalformat = GL_RGBA$1;
            this.id = textureCount++;
            this.refCount = 1;
            this.target = target;
            this.texture = gl.createTexture();
            this.unit = -1;
            this.bindCount = 0;
            this.texInfo = new TexInfo();
            if (config.profile) {
              this.stats = {
                size: 0
              };
            }
          }
          function tempBind(texture) {
            gl.activeTexture(GL_TEXTURE0$1);
            gl.bindTexture(texture.target, texture.texture);
          }
          function tempRestore() {
            var prev = textureUnits[0];
            if (prev) {
              gl.bindTexture(prev.target, prev.texture);
            } else {
              gl.bindTexture(GL_TEXTURE_2D$1, null);
            }
          }
          function destroy(texture) {
            var handle = texture.texture;
            check$1(handle, 'must not double destroy texture');
            var unit = texture.unit;
            var target = texture.target;
            if (unit >= 0) {
              gl.activeTexture(GL_TEXTURE0$1 + unit);
              gl.bindTexture(target, null);
              textureUnits[unit] = null;
            }
            gl.deleteTexture(handle);
            texture.texture = null;
            texture.params = null;
            texture.pixels = null;
            texture.refCount = 0;
            delete textureSet[texture.id];
            stats.textureCount--;
          }
          extend(REGLTexture.prototype, {
            bind: function () {
              var texture = this;
              texture.bindCount += 1;
              var unit = texture.unit;
              if (unit < 0) {
                for (var i = 0; i < numTexUnits; ++i) {
                  var other = textureUnits[i];
                  if (other) {
                    if (other.bindCount > 0) {
                      continue;
                    }
                    other.unit = -1;
                  }
                  textureUnits[i] = texture;
                  unit = i;
                  break;
                }
                if (unit >= numTexUnits) {
                  check$1.raise('insufficient number of texture units');
                }
                if (config.profile && stats.maxTextureUnits < unit + 1) {
                  stats.maxTextureUnits = unit + 1;
                }
                texture.unit = unit;
                gl.activeTexture(GL_TEXTURE0$1 + unit);
                gl.bindTexture(texture.target, texture.texture);
              }
              return unit;
            },
            unbind: function () {
              this.bindCount -= 1;
            },
            decRef: function () {
              if (--this.refCount <= 0) {
                destroy(this);
              }
            }
          });
          function createTexture2D(a, b) {
            var texture = new REGLTexture(GL_TEXTURE_2D$1);
            textureSet[texture.id] = texture;
            stats.textureCount++;
            function reglTexture2D(a, b) {
              var texInfo = texture.texInfo;
              TexInfo.call(texInfo);
              var mipData = allocMipMap();
              if (typeof a === 'number') {
                if (typeof b === 'number') {
                  parseMipMapFromShape(mipData, a | 0, b | 0);
                } else {
                  parseMipMapFromShape(mipData, a | 0, a | 0);
                }
              } else if (a) {
                check$1.type(a, 'object', 'invalid arguments to regl.texture');
                parseTexInfo(texInfo, a);
                parseMipMapFromObject(mipData, a);
              } else {
                parseMipMapFromShape(mipData, 1, 1);
              }
              if (texInfo.genMipmaps) {
                mipData.mipmask = (mipData.width << 1) - 1;
              }
              texture.mipmask = mipData.mipmask;
              copyFlags(texture, mipData);
              check$1.texture2D(texInfo, mipData, limits);
              texture.internalformat = mipData.internalformat;
              reglTexture2D.width = mipData.width;
              reglTexture2D.height = mipData.height;
              tempBind(texture);
              setMipMap(mipData, GL_TEXTURE_2D$1);
              setTexInfo(texInfo, GL_TEXTURE_2D$1);
              tempRestore();
              freeMipMap(mipData);
              if (config.profile) {
                texture.stats.size = getTextureSize(texture.internalformat, texture.type, mipData.width, mipData.height, texInfo.genMipmaps, false);
              }
              reglTexture2D.format = textureFormatsInvert[texture.internalformat];
              reglTexture2D.type = textureTypesInvert[texture.type];
              reglTexture2D.mag = magFiltersInvert[texInfo.magFilter];
              reglTexture2D.min = minFiltersInvert[texInfo.minFilter];
              reglTexture2D.wrapS = wrapModesInvert[texInfo.wrapS];
              reglTexture2D.wrapT = wrapModesInvert[texInfo.wrapT];
              return reglTexture2D;
            }
            function subimage(image, x_, y_, level_) {
              check$1(!!image, 'must specify image data');
              var x = x_ | 0;
              var y = y_ | 0;
              var level = level_ | 0;
              var imageData = allocImage();
              copyFlags(imageData, texture);
              imageData.width = 0;
              imageData.height = 0;
              parseImage(imageData, image);
              imageData.width = imageData.width || (texture.width >> level) - x;
              imageData.height = imageData.height || (texture.height >> level) - y;
              check$1(texture.type === imageData.type && texture.format === imageData.format && texture.internalformat === imageData.internalformat, 'incompatible format for texture.subimage');
              check$1(x >= 0 && y >= 0 && x + imageData.width <= texture.width && y + imageData.height <= texture.height, 'texture.subimage write out of bounds');
              check$1(texture.mipmask & 1 << level, 'missing mipmap data');
              check$1(imageData.data || imageData.element || imageData.needsCopy, 'missing image data');
              tempBind(texture);
              setSubImage(imageData, GL_TEXTURE_2D$1, x, y, level);
              tempRestore();
              freeImage(imageData);
              return reglTexture2D;
            }
            function resize(w_, h_) {
              var w = w_ | 0;
              var h = h_ | 0 || w;
              if (w === texture.width && h === texture.height) {
                return reglTexture2D;
              }
              reglTexture2D.width = texture.width = w;
              reglTexture2D.height = texture.height = h;
              tempBind(texture);
              for (var i = 0; texture.mipmask >> i; ++i) {
                var _w = w >> i;
                var _h = h >> i;
                if (!_w || !_h) break;
                gl.texImage2D(GL_TEXTURE_2D$1, i, texture.format, _w, _h, 0, texture.format, texture.type, null);
              }
              tempRestore();
              if (config.profile) {
                texture.stats.size = getTextureSize(texture.internalformat, texture.type, w, h, false, false);
              }
              return reglTexture2D;
            }
            reglTexture2D(a, b);
            reglTexture2D.subimage = subimage;
            reglTexture2D.resize = resize;
            reglTexture2D._reglType = 'texture2d';
            reglTexture2D._texture = texture;
            if (config.profile) {
              reglTexture2D.stats = texture.stats;
            }
            reglTexture2D.destroy = function () {
              texture.decRef();
            };
            return reglTexture2D;
          }
          function createTextureCube(a0, a1, a2, a3, a4, a5) {
            var texture = new REGLTexture(GL_TEXTURE_CUBE_MAP$1);
            textureSet[texture.id] = texture;
            stats.cubeCount++;
            var faces = new Array(6);
            function reglTextureCube(a0, a1, a2, a3, a4, a5) {
              var i;
              var texInfo = texture.texInfo;
              TexInfo.call(texInfo);
              for (i = 0; i < 6; ++i) {
                faces[i] = allocMipMap();
              }
              if (typeof a0 === 'number' || !a0) {
                var s = a0 | 0 || 1;
                for (i = 0; i < 6; ++i) {
                  parseMipMapFromShape(faces[i], s, s);
                }
              } else if (typeof a0 === 'object') {
                if (a1) {
                  parseMipMapFromObject(faces[0], a0);
                  parseMipMapFromObject(faces[1], a1);
                  parseMipMapFromObject(faces[2], a2);
                  parseMipMapFromObject(faces[3], a3);
                  parseMipMapFromObject(faces[4], a4);
                  parseMipMapFromObject(faces[5], a5);
                } else {
                  parseTexInfo(texInfo, a0);
                  parseFlags(texture, a0);
                  if (('faces' in a0)) {
                    var faceInput = a0.faces;
                    check$1(Array.isArray(faceInput) && faceInput.length === 6, 'cube faces must be a length 6 array');
                    for (i = 0; i < 6; ++i) {
                      check$1(typeof faceInput[i] === 'object' && !!faceInput[i], 'invalid input for cube map face');
                      copyFlags(faces[i], texture);
                      parseMipMapFromObject(faces[i], faceInput[i]);
                    }
                  } else {
                    for (i = 0; i < 6; ++i) {
                      parseMipMapFromObject(faces[i], a0);
                    }
                  }
                }
              } else {
                check$1.raise('invalid arguments to cube map');
              }
              copyFlags(texture, faces[0]);
              check$1.optional(function () {
                if (!limits.npotTextureCube) {
                  check$1(isPow2$1(texture.width) && isPow2$1(texture.height), 'your browser does not support non power or two texture dimensions');
                }
              });
              if (texInfo.genMipmaps) {
                texture.mipmask = (faces[0].width << 1) - 1;
              } else {
                texture.mipmask = faces[0].mipmask;
              }
              check$1.textureCube(texture, texInfo, faces, limits);
              texture.internalformat = faces[0].internalformat;
              reglTextureCube.width = faces[0].width;
              reglTextureCube.height = faces[0].height;
              tempBind(texture);
              for (i = 0; i < 6; ++i) {
                setMipMap(faces[i], GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i);
              }
              setTexInfo(texInfo, GL_TEXTURE_CUBE_MAP$1);
              tempRestore();
              if (config.profile) {
                texture.stats.size = getTextureSize(texture.internalformat, texture.type, reglTextureCube.width, reglTextureCube.height, texInfo.genMipmaps, true);
              }
              reglTextureCube.format = textureFormatsInvert[texture.internalformat];
              reglTextureCube.type = textureTypesInvert[texture.type];
              reglTextureCube.mag = magFiltersInvert[texInfo.magFilter];
              reglTextureCube.min = minFiltersInvert[texInfo.minFilter];
              reglTextureCube.wrapS = wrapModesInvert[texInfo.wrapS];
              reglTextureCube.wrapT = wrapModesInvert[texInfo.wrapT];
              for (i = 0; i < 6; ++i) {
                freeMipMap(faces[i]);
              }
              return reglTextureCube;
            }
            function subimage(face, image, x_, y_, level_) {
              check$1(!!image, 'must specify image data');
              check$1(typeof face === 'number' && face === (face | 0) && face >= 0 && face < 6, 'invalid face');
              var x = x_ | 0;
              var y = y_ | 0;
              var level = level_ | 0;
              var imageData = allocImage();
              copyFlags(imageData, texture);
              imageData.width = 0;
              imageData.height = 0;
              parseImage(imageData, image);
              imageData.width = imageData.width || (texture.width >> level) - x;
              imageData.height = imageData.height || (texture.height >> level) - y;
              check$1(texture.type === imageData.type && texture.format === imageData.format && texture.internalformat === imageData.internalformat, 'incompatible format for texture.subimage');
              check$1(x >= 0 && y >= 0 && x + imageData.width <= texture.width && y + imageData.height <= texture.height, 'texture.subimage write out of bounds');
              check$1(texture.mipmask & 1 << level, 'missing mipmap data');
              check$1(imageData.data || imageData.element || imageData.needsCopy, 'missing image data');
              tempBind(texture);
              setSubImage(imageData, GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + face, x, y, level);
              tempRestore();
              freeImage(imageData);
              return reglTextureCube;
            }
            function resize(radius_) {
              var radius = radius_ | 0;
              if (radius === texture.width) {
                return;
              }
              reglTextureCube.width = texture.width = radius;
              reglTextureCube.height = texture.height = radius;
              tempBind(texture);
              for (var i = 0; i < 6; ++i) {
                for (var j = 0; texture.mipmask >> j; ++j) {
                  gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + i, j, texture.format, radius >> j, radius >> j, 0, texture.format, texture.type, null);
                }
              }
              tempRestore();
              if (config.profile) {
                texture.stats.size = getTextureSize(texture.internalformat, texture.type, reglTextureCube.width, reglTextureCube.height, false, true);
              }
              return reglTextureCube;
            }
            reglTextureCube(a0, a1, a2, a3, a4, a5);
            reglTextureCube.subimage = subimage;
            reglTextureCube.resize = resize;
            reglTextureCube._reglType = 'textureCube';
            reglTextureCube._texture = texture;
            if (config.profile) {
              reglTextureCube.stats = texture.stats;
            }
            reglTextureCube.destroy = function () {
              texture.decRef();
            };
            return reglTextureCube;
          }
          function destroyTextures() {
            for (var i = 0; i < numTexUnits; ++i) {
              gl.activeTexture(GL_TEXTURE0$1 + i);
              gl.bindTexture(GL_TEXTURE_2D$1, null);
              textureUnits[i] = null;
            }
            values(textureSet).forEach(destroy);
            stats.cubeCount = 0;
            stats.textureCount = 0;
          }
          if (config.profile) {
            stats.getTotalTextureSize = function () {
              var total = 0;
              Object.keys(textureSet).forEach(function (key) {
                total += textureSet[key].stats.size;
              });
              return total;
            };
          }
          function restoreTextures() {
            for (var i = 0; i < numTexUnits; ++i) {
              var tex = textureUnits[i];
              if (tex) {
                tex.bindCount = 0;
                tex.unit = -1;
                textureUnits[i] = null;
              }
            }
            values(textureSet).forEach(function (texture) {
              texture.texture = gl.createTexture();
              gl.bindTexture(texture.target, texture.texture);
              for (var i = 0; i < 32; ++i) {
                if ((texture.mipmask & 1 << i) === 0) {
                  continue;
                }
                if (texture.target === GL_TEXTURE_2D$1) {
                  gl.texImage2D(GL_TEXTURE_2D$1, i, texture.internalformat, texture.width >> i, texture.height >> i, 0, texture.internalformat, texture.type, null);
                } else {
                  for (var j = 0; j < 6; ++j) {
                    gl.texImage2D(GL_TEXTURE_CUBE_MAP_POSITIVE_X$1 + j, i, texture.internalformat, texture.width >> i, texture.height >> i, 0, texture.internalformat, texture.type, null);
                  }
                }
              }
              setTexInfo(texture.texInfo, texture.target);
            });
          }
          function refreshTextures() {
            for (var i = 0; i < numTexUnits; ++i) {
              var tex = textureUnits[i];
              if (tex) {
                tex.bindCount = 0;
                tex.unit = -1;
                textureUnits[i] = null;
              }
              gl.activeTexture(GL_TEXTURE0$1 + i);
              gl.bindTexture(GL_TEXTURE_2D$1, null);
              gl.bindTexture(GL_TEXTURE_CUBE_MAP$1, null);
            }
          }
          return {
            create2D: createTexture2D,
            createCube: createTextureCube,
            clear: destroyTextures,
            getTexture: function (wrapper) {
              return null;
            },
            restore: restoreTextures,
            refresh: refreshTextures
          };
        }
        var GL_RENDERBUFFER = 0x8D41;
        var GL_RGBA4$1 = 0x8056;
        var GL_RGB5_A1$1 = 0x8057;
        var GL_RGB565$1 = 0x8D62;
        var GL_DEPTH_COMPONENT16 = 0x81A5;
        var GL_STENCIL_INDEX8 = 0x8D48;
        var GL_DEPTH_STENCIL$1 = 0x84F9;
        var GL_SRGB8_ALPHA8_EXT = 0x8C43;
        var GL_RGBA32F_EXT = 0x8814;
        var GL_RGBA16F_EXT = 0x881A;
        var GL_RGB16F_EXT = 0x881B;
        var FORMAT_SIZES = [];
        FORMAT_SIZES[GL_RGBA4$1] = 2;
        FORMAT_SIZES[GL_RGB5_A1$1] = 2;
        FORMAT_SIZES[GL_RGB565$1] = 2;
        FORMAT_SIZES[GL_DEPTH_COMPONENT16] = 2;
        FORMAT_SIZES[GL_STENCIL_INDEX8] = 1;
        FORMAT_SIZES[GL_DEPTH_STENCIL$1] = 4;
        FORMAT_SIZES[GL_SRGB8_ALPHA8_EXT] = 4;
        FORMAT_SIZES[GL_RGBA32F_EXT] = 16;
        FORMAT_SIZES[GL_RGBA16F_EXT] = 8;
        FORMAT_SIZES[GL_RGB16F_EXT] = 6;
        function getRenderbufferSize(format, width, height) {
          return FORMAT_SIZES[format] * width * height;
        }
        var wrapRenderbuffers = function (gl, extensions, limits, stats, config) {
          var formatTypes = {
            'rgba4': GL_RGBA4$1,
            'rgb565': GL_RGB565$1,
            'rgb5 a1': GL_RGB5_A1$1,
            'depth': GL_DEPTH_COMPONENT16,
            'stencil': GL_STENCIL_INDEX8,
            'depth stencil': GL_DEPTH_STENCIL$1
          };
          if (extensions.ext_srgb) {
            formatTypes['srgba'] = GL_SRGB8_ALPHA8_EXT;
          }
          if (extensions.ext_color_buffer_half_float) {
            formatTypes['rgba16f'] = GL_RGBA16F_EXT;
            formatTypes['rgb16f'] = GL_RGB16F_EXT;
          }
          if (extensions.webgl_color_buffer_float) {
            formatTypes['rgba32f'] = GL_RGBA32F_EXT;
          }
          var formatTypesInvert = [];
          Object.keys(formatTypes).forEach(function (key) {
            var val = formatTypes[key];
            formatTypesInvert[val] = key;
          });
          var renderbufferCount = 0;
          var renderbufferSet = {};
          function REGLRenderbuffer(renderbuffer) {
            this.id = renderbufferCount++;
            this.refCount = 1;
            this.renderbuffer = renderbuffer;
            this.format = GL_RGBA4$1;
            this.width = 0;
            this.height = 0;
            if (config.profile) {
              this.stats = {
                size: 0
              };
            }
          }
          REGLRenderbuffer.prototype.decRef = function () {
            if (--this.refCount <= 0) {
              destroy(this);
            }
          };
          function destroy(rb) {
            var handle = rb.renderbuffer;
            check$1(handle, 'must not double destroy renderbuffer');
            gl.bindRenderbuffer(GL_RENDERBUFFER, null);
            gl.deleteRenderbuffer(handle);
            rb.renderbuffer = null;
            rb.refCount = 0;
            delete renderbufferSet[rb.id];
            stats.renderbufferCount--;
          }
          function createRenderbuffer(a, b) {
            var renderbuffer = new REGLRenderbuffer(gl.createRenderbuffer());
            renderbufferSet[renderbuffer.id] = renderbuffer;
            stats.renderbufferCount++;
            function reglRenderbuffer(a, b) {
              var w = 0;
              var h = 0;
              var format = GL_RGBA4$1;
              if (typeof a === 'object' && a) {
                var options = a;
                if (('shape' in options)) {
                  var shape = options.shape;
                  check$1(Array.isArray(shape) && shape.length >= 2, 'invalid renderbuffer shape');
                  w = shape[0] | 0;
                  h = shape[1] | 0;
                } else {
                  if (('radius' in options)) {
                    w = h = options.radius | 0;
                  }
                  if (('width' in options)) {
                    w = options.width | 0;
                  }
                  if (('height' in options)) {
                    h = options.height | 0;
                  }
                }
                if (('format' in options)) {
                  check$1.parameter(options.format, formatTypes, 'invalid renderbuffer format');
                  format = formatTypes[options.format];
                }
              } else if (typeof a === 'number') {
                w = a | 0;
                if (typeof b === 'number') {
                  h = b | 0;
                } else {
                  h = w;
                }
              } else if (!a) {
                w = h = 1;
              } else {
                check$1.raise('invalid arguments to renderbuffer constructor');
              }
              check$1(w > 0 && h > 0 && w <= limits.maxRenderbufferSize && h <= limits.maxRenderbufferSize, 'invalid renderbuffer size');
              if (w === renderbuffer.width && h === renderbuffer.height && format === renderbuffer.format) {
                return;
              }
              reglRenderbuffer.width = renderbuffer.width = w;
              reglRenderbuffer.height = renderbuffer.height = h;
              renderbuffer.format = format;
              gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer);
              gl.renderbufferStorage(GL_RENDERBUFFER, format, w, h);
              check$1(gl.getError() === 0, 'invalid render buffer format');
              if (config.profile) {
                renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height);
              }
              reglRenderbuffer.format = formatTypesInvert[renderbuffer.format];
              return reglRenderbuffer;
            }
            function resize(w_, h_) {
              var w = w_ | 0;
              var h = h_ | 0 || w;
              if (w === renderbuffer.width && h === renderbuffer.height) {
                return reglRenderbuffer;
              }
              check$1(w > 0 && h > 0 && w <= limits.maxRenderbufferSize && h <= limits.maxRenderbufferSize, 'invalid renderbuffer size');
              reglRenderbuffer.width = renderbuffer.width = w;
              reglRenderbuffer.height = renderbuffer.height = h;
              gl.bindRenderbuffer(GL_RENDERBUFFER, renderbuffer.renderbuffer);
              gl.renderbufferStorage(GL_RENDERBUFFER, renderbuffer.format, w, h);
              check$1(gl.getError() === 0, 'invalid render buffer format');
              if (config.profile) {
                renderbuffer.stats.size = getRenderbufferSize(renderbuffer.format, renderbuffer.width, renderbuffer.height);
              }
              return reglRenderbuffer;
            }
            reglRenderbuffer(a, b);
            reglRenderbuffer.resize = resize;
            reglRenderbuffer._reglType = 'renderbuffer';
            reglRenderbuffer._renderbuffer = renderbuffer;
            if (config.profile) {
              reglRenderbuffer.stats = renderbuffer.stats;
            }
            reglRenderbuffer.destroy = function () {
              renderbuffer.decRef();
            };
            return reglRenderbuffer;
          }
          if (config.profile) {
            stats.getTotalRenderbufferSize = function () {
              var total = 0;
              Object.keys(renderbufferSet).forEach(function (key) {
                total += renderbufferSet[key].stats.size;
              });
              return total;
            };
          }
          function restoreRenderbuffers() {
            values(renderbufferSet).forEach(function (rb) {
              rb.renderbuffer = gl.createRenderbuffer();
              gl.bindRenderbuffer(GL_RENDERBUFFER, rb.renderbuffer);
              gl.renderbufferStorage(GL_RENDERBUFFER, rb.format, rb.width, rb.height);
            });
            gl.bindRenderbuffer(GL_RENDERBUFFER, null);
          }
          return {
            create: createRenderbuffer,
            clear: function () {
              values(renderbufferSet).forEach(destroy);
            },
            restore: restoreRenderbuffers
          };
        };
        var GL_FRAMEBUFFER$1 = 0x8D40;
        var GL_RENDERBUFFER$1 = 0x8D41;
        var GL_TEXTURE_2D$2 = 0x0DE1;
        var GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 = 0x8515;
        var GL_COLOR_ATTACHMENT0$1 = 0x8CE0;
        var GL_DEPTH_ATTACHMENT = 0x8D00;
        var GL_STENCIL_ATTACHMENT = 0x8D20;
        var GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;
        var GL_FRAMEBUFFER_COMPLETE$1 = 0x8CD5;
        var GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;
        var GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;
        var GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;
        var GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD;
        var GL_HALF_FLOAT_OES$2 = 0x8D61;
        var GL_UNSIGNED_BYTE$6 = 0x1401;
        var GL_FLOAT$5 = 0x1406;
        var GL_RGB$1 = 0x1907;
        var GL_RGBA$2 = 0x1908;
        var GL_DEPTH_COMPONENT$1 = 0x1902;
        var colorTextureFormatEnums = [GL_RGB$1, GL_RGBA$2];
        var textureFormatChannels = [];
        textureFormatChannels[GL_RGBA$2] = 4;
        textureFormatChannels[GL_RGB$1] = 3;
        var textureTypeSizes = [];
        textureTypeSizes[GL_UNSIGNED_BYTE$6] = 1;
        textureTypeSizes[GL_FLOAT$5] = 4;
        textureTypeSizes[GL_HALF_FLOAT_OES$2] = 2;
        var GL_RGBA4$2 = 0x8056;
        var GL_RGB5_A1$2 = 0x8057;
        var GL_RGB565$2 = 0x8D62;
        var GL_DEPTH_COMPONENT16$1 = 0x81A5;
        var GL_STENCIL_INDEX8$1 = 0x8D48;
        var GL_DEPTH_STENCIL$2 = 0x84F9;
        var GL_SRGB8_ALPHA8_EXT$1 = 0x8C43;
        var GL_RGBA32F_EXT$1 = 0x8814;
        var GL_RGBA16F_EXT$1 = 0x881A;
        var GL_RGB16F_EXT$1 = 0x881B;
        var colorRenderbufferFormatEnums = [GL_RGBA4$2, GL_RGB5_A1$2, GL_RGB565$2, GL_SRGB8_ALPHA8_EXT$1, GL_RGBA16F_EXT$1, GL_RGB16F_EXT$1, GL_RGBA32F_EXT$1];
        var statusCode = {};
        statusCode[GL_FRAMEBUFFER_COMPLETE$1] = 'complete';
        statusCode[GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT] = 'incomplete attachment';
        statusCode[GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS] = 'incomplete dimensions';
        statusCode[GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT] = 'incomplete, missing attachment';
        statusCode[GL_FRAMEBUFFER_UNSUPPORTED] = 'unsupported';
        function wrapFBOState(gl, extensions, limits, textureState, renderbufferState, stats) {
          var framebufferState = {
            cur: null,
            next: null,
            dirty: false,
            setFBO: null
          };
          var colorTextureFormats = ['rgba'];
          var colorRenderbufferFormats = ['rgba4', 'rgb565', 'rgb5 a1'];
          if (extensions.ext_srgb) {
            colorRenderbufferFormats.push('srgba');
          }
          if (extensions.ext_color_buffer_half_float) {
            colorRenderbufferFormats.push('rgba16f', 'rgb16f');
          }
          if (extensions.webgl_color_buffer_float) {
            colorRenderbufferFormats.push('rgba32f');
          }
          var colorTypes = ['uint8'];
          if (extensions.oes_texture_half_float) {
            colorTypes.push('half float', 'float16');
          }
          if (extensions.oes_texture_float) {
            colorTypes.push('float', 'float32');
          }
          function FramebufferAttachment(target, texture, renderbuffer) {
            this.target = target;
            this.texture = texture;
            this.renderbuffer = renderbuffer;
            var w = 0;
            var h = 0;
            if (texture) {
              w = texture.width;
              h = texture.height;
            } else if (renderbuffer) {
              w = renderbuffer.width;
              h = renderbuffer.height;
            }
            this.width = w;
            this.height = h;
          }
          function decRef(attachment) {
            if (attachment) {
              if (attachment.texture) {
                attachment.texture._texture.decRef();
              }
              if (attachment.renderbuffer) {
                attachment.renderbuffer._renderbuffer.decRef();
              }
            }
          }
          function incRefAndCheckShape(attachment, width, height) {
            if (!attachment) {
              return;
            }
            if (attachment.texture) {
              var texture = attachment.texture._texture;
              var tw = Math.max(1, texture.width);
              var th = Math.max(1, texture.height);
              check$1(tw === width && th === height, 'inconsistent width/height for supplied texture');
              texture.refCount += 1;
            } else {
              var renderbuffer = attachment.renderbuffer._renderbuffer;
              check$1(renderbuffer.width === width && renderbuffer.height === height, 'inconsistent width/height for renderbuffer');
              renderbuffer.refCount += 1;
            }
          }
          function attach(location, attachment) {
            if (attachment) {
              if (attachment.texture) {
                gl.framebufferTexture2D(GL_FRAMEBUFFER$1, location, attachment.target, attachment.texture._texture.texture, 0);
              } else {
                gl.framebufferRenderbuffer(GL_FRAMEBUFFER$1, location, GL_RENDERBUFFER$1, attachment.renderbuffer._renderbuffer.renderbuffer);
              }
            }
          }
          function parseAttachment(attachment) {
            var target = GL_TEXTURE_2D$2;
            var texture = null;
            var renderbuffer = null;
            var data = attachment;
            if (typeof attachment === 'object') {
              data = attachment.data;
              if (('target' in attachment)) {
                target = attachment.target | 0;
              }
            }
            check$1.type(data, 'function', 'invalid attachment data');
            var type = data._reglType;
            if (type === 'texture2d') {
              texture = data;
              check$1(target === GL_TEXTURE_2D$2);
            } else if (type === 'textureCube') {
              texture = data;
              check$1(target >= GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 && target < GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + 6, 'invalid cube map target');
            } else if (type === 'renderbuffer') {
              renderbuffer = data;
              target = GL_RENDERBUFFER$1;
            } else {
              check$1.raise('invalid regl object for attachment');
            }
            return new FramebufferAttachment(target, texture, renderbuffer);
          }
          function allocAttachment(width, height, isTexture, format, type) {
            if (isTexture) {
              var texture = textureState.create2D({
                width: width,
                height: height,
                format: format,
                type: type
              });
              texture._texture.refCount = 0;
              return new FramebufferAttachment(GL_TEXTURE_2D$2, texture, null);
            } else {
              var rb = renderbufferState.create({
                width: width,
                height: height,
                format: format
              });
              rb._renderbuffer.refCount = 0;
              return new FramebufferAttachment(GL_RENDERBUFFER$1, null, rb);
            }
          }
          function unwrapAttachment(attachment) {
            return attachment && (attachment.texture || attachment.renderbuffer);
          }
          function resizeAttachment(attachment, w, h) {
            if (attachment) {
              if (attachment.texture) {
                attachment.texture.resize(w, h);
              } else if (attachment.renderbuffer) {
                attachment.renderbuffer.resize(w, h);
              }
              attachment.width = w;
              attachment.height = h;
            }
          }
          var framebufferCount = 0;
          var framebufferSet = {};
          function REGLFramebuffer() {
            this.id = framebufferCount++;
            framebufferSet[this.id] = this;
            this.framebuffer = gl.createFramebuffer();
            this.width = 0;
            this.height = 0;
            this.colorAttachments = [];
            this.depthAttachment = null;
            this.stencilAttachment = null;
            this.depthStencilAttachment = null;
          }
          function decFBORefs(framebuffer) {
            framebuffer.colorAttachments.forEach(decRef);
            decRef(framebuffer.depthAttachment);
            decRef(framebuffer.stencilAttachment);
            decRef(framebuffer.depthStencilAttachment);
          }
          function destroy(framebuffer) {
            var handle = framebuffer.framebuffer;
            check$1(handle, 'must not double destroy framebuffer');
            gl.deleteFramebuffer(handle);
            framebuffer.framebuffer = null;
            stats.framebufferCount--;
            delete framebufferSet[framebuffer.id];
          }
          function updateFramebuffer(framebuffer) {
            var i;
            gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebuffer.framebuffer);
            var colorAttachments = framebuffer.colorAttachments;
            for (i = 0; i < colorAttachments.length; ++i) {
              attach(GL_COLOR_ATTACHMENT0$1 + i, colorAttachments[i]);
            }
            for (i = colorAttachments.length; i < limits.maxColorAttachments; ++i) {
              gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_COLOR_ATTACHMENT0$1 + i, GL_TEXTURE_2D$2, null, 0);
            }
            gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_DEPTH_STENCIL_ATTACHMENT, GL_TEXTURE_2D$2, null, 0);
            gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_DEPTH_ATTACHMENT, GL_TEXTURE_2D$2, null, 0);
            gl.framebufferTexture2D(GL_FRAMEBUFFER$1, GL_STENCIL_ATTACHMENT, GL_TEXTURE_2D$2, null, 0);
            attach(GL_DEPTH_ATTACHMENT, framebuffer.depthAttachment);
            attach(GL_STENCIL_ATTACHMENT, framebuffer.stencilAttachment);
            attach(GL_DEPTH_STENCIL_ATTACHMENT, framebuffer.depthStencilAttachment);
            var status = gl.checkFramebufferStatus(GL_FRAMEBUFFER$1);
            if (!gl.isContextLost() && status !== GL_FRAMEBUFFER_COMPLETE$1) {
              check$1.raise('framebuffer configuration not supported, status = ' + statusCode[status]);
            }
            gl.bindFramebuffer(GL_FRAMEBUFFER$1, framebufferState.next ? framebufferState.next.framebuffer : null);
            framebufferState.cur = framebufferState.next;
            gl.getError();
          }
          function createFBO(a0, a1) {
            var framebuffer = new REGLFramebuffer();
            stats.framebufferCount++;
            function reglFramebuffer(a, b) {
              var i;
              check$1(framebufferState.next !== framebuffer, 'can not update framebuffer which is currently in use');
              var width = 0;
              var height = 0;
              var needsDepth = true;
              var needsStencil = true;
              var colorBuffer = null;
              var colorTexture = true;
              var colorFormat = 'rgba';
              var colorType = 'uint8';
              var colorCount = 1;
              var depthBuffer = null;
              var stencilBuffer = null;
              var depthStencilBuffer = null;
              var depthStencilTexture = false;
              if (typeof a === 'number') {
                width = a | 0;
                height = b | 0 || width;
              } else if (!a) {
                width = height = 1;
              } else {
                check$1.type(a, 'object', 'invalid arguments for framebuffer');
                var options = a;
                if (('shape' in options)) {
                  var shape = options.shape;
                  check$1(Array.isArray(shape) && shape.length >= 2, 'invalid shape for framebuffer');
                  width = shape[0];
                  height = shape[1];
                } else {
                  if (('radius' in options)) {
                    width = height = options.radius;
                  }
                  if (('width' in options)) {
                    width = options.width;
                  }
                  if (('height' in options)) {
                    height = options.height;
                  }
                }
                if (('color' in options) || ('colors' in options)) {
                  colorBuffer = options.color || options.colors;
                  if (Array.isArray(colorBuffer)) {
                    check$1(colorBuffer.length === 1 || extensions.webgl_draw_buffers, 'multiple render targets not supported');
                  }
                }
                if (!colorBuffer) {
                  if (('colorCount' in options)) {
                    colorCount = options.colorCount | 0;
                    check$1(colorCount > 0, 'invalid color buffer count');
                  }
                  if (('colorTexture' in options)) {
                    colorTexture = !!options.colorTexture;
                    colorFormat = 'rgba4';
                  }
                  if (('colorType' in options)) {
                    colorType = options.colorType;
                    if (!colorTexture) {
                      if (colorType === 'half float' || colorType === 'float16') {
                        check$1(extensions.ext_color_buffer_half_float, 'you must enable EXT_color_buffer_half_float to use 16-bit render buffers');
                        colorFormat = 'rgba16f';
                      } else if (colorType === 'float' || colorType === 'float32') {
                        check$1(extensions.webgl_color_buffer_float, 'you must enable WEBGL_color_buffer_float in order to use 32-bit floating point renderbuffers');
                        colorFormat = 'rgba32f';
                      }
                    } else {
                      check$1(extensions.oes_texture_float || !(colorType === 'float' || colorType === 'float32'), 'you must enable OES_texture_float in order to use floating point framebuffer objects');
                      check$1(extensions.oes_texture_half_float || !(colorType === 'half float' || colorType === 'float16'), 'you must enable OES_texture_half_float in order to use 16-bit floating point framebuffer objects');
                    }
                    check$1.oneOf(colorType, colorTypes, 'invalid color type');
                  }
                  if (('colorFormat' in options)) {
                    colorFormat = options.colorFormat;
                    if (colorTextureFormats.indexOf(colorFormat) >= 0) {
                      colorTexture = true;
                    } else if (colorRenderbufferFormats.indexOf(colorFormat) >= 0) {
                      colorTexture = false;
                    } else {
                      check$1.optional(function () {
                        if (colorTexture) {
                          check$1.oneOf(options.colorFormat, colorTextureFormats, 'invalid color format for texture');
                        } else {
                          check$1.oneOf(options.colorFormat, colorRenderbufferFormats, 'invalid color format for renderbuffer');
                        }
                      });
                    }
                  }
                }
                if (('depthTexture' in options) || ('depthStencilTexture' in options)) {
                  depthStencilTexture = !!(options.depthTexture || options.depthStencilTexture);
                  check$1(!depthStencilTexture || extensions.webgl_depth_texture, 'webgl_depth_texture extension not supported');
                }
                if (('depth' in options)) {
                  if (typeof options.depth === 'boolean') {
                    needsDepth = options.depth;
                  } else {
                    depthBuffer = options.depth;
                    needsStencil = false;
                  }
                }
                if (('stencil' in options)) {
                  if (typeof options.stencil === 'boolean') {
                    needsStencil = options.stencil;
                  } else {
                    stencilBuffer = options.stencil;
                    needsDepth = false;
                  }
                }
                if (('depthStencil' in options)) {
                  if (typeof options.depthStencil === 'boolean') {
                    needsDepth = needsStencil = options.depthStencil;
                  } else {
                    depthStencilBuffer = options.depthStencil;
                    needsDepth = false;
                    needsStencil = false;
                  }
                }
              }
              var colorAttachments = null;
              var depthAttachment = null;
              var stencilAttachment = null;
              var depthStencilAttachment = null;
              if (Array.isArray(colorBuffer)) {
                colorAttachments = colorBuffer.map(parseAttachment);
              } else if (colorBuffer) {
                colorAttachments = [parseAttachment(colorBuffer)];
              } else {
                colorAttachments = new Array(colorCount);
                for (i = 0; i < colorCount; ++i) {
                  colorAttachments[i] = allocAttachment(width, height, colorTexture, colorFormat, colorType);
                }
              }
              check$1(extensions.webgl_draw_buffers || colorAttachments.length <= 1, 'you must enable the WEBGL_draw_buffers extension in order to use multiple color buffers.');
              check$1(colorAttachments.length <= limits.maxColorAttachments, 'too many color attachments, not supported');
              width = width || colorAttachments[0].width;
              height = height || colorAttachments[0].height;
              if (depthBuffer) {
                depthAttachment = parseAttachment(depthBuffer);
              } else if (needsDepth && !needsStencil) {
                depthAttachment = allocAttachment(width, height, depthStencilTexture, 'depth', 'uint32');
              }
              if (stencilBuffer) {
                stencilAttachment = parseAttachment(stencilBuffer);
              } else if (needsStencil && !needsDepth) {
                stencilAttachment = allocAttachment(width, height, false, 'stencil', 'uint8');
              }
              if (depthStencilBuffer) {
                depthStencilAttachment = parseAttachment(depthStencilBuffer);
              } else if (!depthBuffer && !stencilBuffer && needsStencil && needsDepth) {
                depthStencilAttachment = allocAttachment(width, height, depthStencilTexture, 'depth stencil', 'depth stencil');
              }
              check$1(!!depthBuffer + !!stencilBuffer + !!depthStencilBuffer <= 1, 'invalid framebuffer configuration, can specify exactly one depth/stencil attachment');
              var commonColorAttachmentSize = null;
              for (i = 0; i < colorAttachments.length; ++i) {
                incRefAndCheckShape(colorAttachments[i], width, height);
                check$1(!colorAttachments[i] || colorAttachments[i].texture && colorTextureFormatEnums.indexOf(colorAttachments[i].texture._texture.format) >= 0 || colorAttachments[i].renderbuffer && colorRenderbufferFormatEnums.indexOf(colorAttachments[i].renderbuffer._renderbuffer.format) >= 0, 'framebuffer color attachment ' + i + ' is invalid');
                if (colorAttachments[i] && colorAttachments[i].texture) {
                  var colorAttachmentSize = textureFormatChannels[colorAttachments[i].texture._texture.format] * textureTypeSizes[colorAttachments[i].texture._texture.type];
                  if (commonColorAttachmentSize === null) {
                    commonColorAttachmentSize = colorAttachmentSize;
                  } else {
                    check$1(commonColorAttachmentSize === colorAttachmentSize, 'all color attachments much have the same number of bits per pixel.');
                  }
                }
              }
              incRefAndCheckShape(depthAttachment, width, height);
              check$1(!depthAttachment || depthAttachment.texture && depthAttachment.texture._texture.format === GL_DEPTH_COMPONENT$1 || depthAttachment.renderbuffer && depthAttachment.renderbuffer._renderbuffer.format === GL_DEPTH_COMPONENT16$1, 'invalid depth attachment for framebuffer object');
              incRefAndCheckShape(stencilAttachment, width, height);
              check$1(!stencilAttachment || stencilAttachment.renderbuffer && stencilAttachment.renderbuffer._renderbuffer.format === GL_STENCIL_INDEX8$1, 'invalid stencil attachment for framebuffer object');
              incRefAndCheckShape(depthStencilAttachment, width, height);
              check$1(!depthStencilAttachment || depthStencilAttachment.texture && depthStencilAttachment.texture._texture.format === GL_DEPTH_STENCIL$2 || depthStencilAttachment.renderbuffer && depthStencilAttachment.renderbuffer._renderbuffer.format === GL_DEPTH_STENCIL$2, 'invalid depth-stencil attachment for framebuffer object');
              decFBORefs(framebuffer);
              framebuffer.width = width;
              framebuffer.height = height;
              framebuffer.colorAttachments = colorAttachments;
              framebuffer.depthAttachment = depthAttachment;
              framebuffer.stencilAttachment = stencilAttachment;
              framebuffer.depthStencilAttachment = depthStencilAttachment;
              reglFramebuffer.color = colorAttachments.map(unwrapAttachment);
              reglFramebuffer.depth = unwrapAttachment(depthAttachment);
              reglFramebuffer.stencil = unwrapAttachment(stencilAttachment);
              reglFramebuffer.depthStencil = unwrapAttachment(depthStencilAttachment);
              reglFramebuffer.width = framebuffer.width;
              reglFramebuffer.height = framebuffer.height;
              updateFramebuffer(framebuffer);
              return reglFramebuffer;
            }
            function resize(w_, h_) {
              check$1(framebufferState.next !== framebuffer, 'can not resize a framebuffer which is currently in use');
              var w = Math.max(w_ | 0, 1);
              var h = Math.max(h_ | 0 || w, 1);
              if (w === framebuffer.width && h === framebuffer.height) {
                return reglFramebuffer;
              }
              var colorAttachments = framebuffer.colorAttachments;
              for (var i = 0; i < colorAttachments.length; ++i) {
                resizeAttachment(colorAttachments[i], w, h);
              }
              resizeAttachment(framebuffer.depthAttachment, w, h);
              resizeAttachment(framebuffer.stencilAttachment, w, h);
              resizeAttachment(framebuffer.depthStencilAttachment, w, h);
              framebuffer.width = reglFramebuffer.width = w;
              framebuffer.height = reglFramebuffer.height = h;
              updateFramebuffer(framebuffer);
              return reglFramebuffer;
            }
            reglFramebuffer(a0, a1);
            return extend(reglFramebuffer, {
              resize: resize,
              _reglType: 'framebuffer',
              _framebuffer: framebuffer,
              destroy: function () {
                destroy(framebuffer);
                decFBORefs(framebuffer);
              },
              use: function (block) {
                framebufferState.setFBO({
                  framebuffer: reglFramebuffer
                }, block);
              }
            });
          }
          function createCubeFBO(options) {
            var faces = Array(6);
            function reglFramebufferCube(a) {
              var i;
              check$1(faces.indexOf(framebufferState.next) < 0, 'can not update framebuffer which is currently in use');
              var params = {
                color: null
              };
              var radius = 0;
              var colorBuffer = null;
              var colorFormat = 'rgba';
              var colorType = 'uint8';
              var colorCount = 1;
              if (typeof a === 'number') {
                radius = a | 0;
              } else if (!a) {
                radius = 1;
              } else {
                check$1.type(a, 'object', 'invalid arguments for framebuffer');
                var options = a;
                if (('shape' in options)) {
                  var shape = options.shape;
                  check$1(Array.isArray(shape) && shape.length >= 2, 'invalid shape for framebuffer');
                  check$1(shape[0] === shape[1], 'cube framebuffer must be square');
                  radius = shape[0];
                } else {
                  if (('radius' in options)) {
                    radius = options.radius | 0;
                  }
                  if (('width' in options)) {
                    radius = options.width | 0;
                    if (('height' in options)) {
                      check$1(options.height === radius, 'must be square');
                    }
                  } else if (('height' in options)) {
                    radius = options.height | 0;
                  }
                }
                if (('color' in options) || ('colors' in options)) {
                  colorBuffer = options.color || options.colors;
                  if (Array.isArray(colorBuffer)) {
                    check$1(colorBuffer.length === 1 || extensions.webgl_draw_buffers, 'multiple render targets not supported');
                  }
                }
                if (!colorBuffer) {
                  if (('colorCount' in options)) {
                    colorCount = options.colorCount | 0;
                    check$1(colorCount > 0, 'invalid color buffer count');
                  }
                  if (('colorType' in options)) {
                    check$1.oneOf(options.colorType, colorTypes, 'invalid color type');
                    colorType = options.colorType;
                  }
                  if (('colorFormat' in options)) {
                    colorFormat = options.colorFormat;
                    check$1.oneOf(options.colorFormat, colorTextureFormats, 'invalid color format for texture');
                  }
                }
                if (('depth' in options)) {
                  params.depth = options.depth;
                }
                if (('stencil' in options)) {
                  params.stencil = options.stencil;
                }
                if (('depthStencil' in options)) {
                  params.depthStencil = options.depthStencil;
                }
              }
              var colorCubes;
              if (colorBuffer) {
                if (Array.isArray(colorBuffer)) {
                  colorCubes = [];
                  for (i = 0; i < colorBuffer.length; ++i) {
                    colorCubes[i] = colorBuffer[i];
                  }
                } else {
                  colorCubes = [colorBuffer];
                }
              } else {
                colorCubes = Array(colorCount);
                var cubeMapParams = {
                  radius: radius,
                  format: colorFormat,
                  type: colorType
                };
                for (i = 0; i < colorCount; ++i) {
                  colorCubes[i] = textureState.createCube(cubeMapParams);
                }
              }
              params.color = Array(colorCubes.length);
              for (i = 0; i < colorCubes.length; ++i) {
                var cube = colorCubes[i];
                check$1(typeof cube === 'function' && cube._reglType === 'textureCube', 'invalid cube map');
                radius = radius || cube.width;
                check$1(cube.width === radius && cube.height === radius, 'invalid cube map shape');
                params.color[i] = {
                  target: GL_TEXTURE_CUBE_MAP_POSITIVE_X$2,
                  data: colorCubes[i]
                };
              }
              for (i = 0; i < 6; ++i) {
                for (var j = 0; j < colorCubes.length; ++j) {
                  params.color[j].target = GL_TEXTURE_CUBE_MAP_POSITIVE_X$2 + i;
                }
                if (i > 0) {
                  params.depth = faces[0].depth;
                  params.stencil = faces[0].stencil;
                  params.depthStencil = faces[0].depthStencil;
                }
                if (faces[i]) {
                  faces[i](params);
                } else {
                  faces[i] = createFBO(params);
                }
              }
              return extend(reglFramebufferCube, {
                width: radius,
                height: radius,
                color: colorCubes
              });
            }
            function resize(radius_) {
              var i;
              var radius = radius_ | 0;
              check$1(radius > 0 && radius <= limits.maxCubeMapSize, 'invalid radius for cube fbo');
              if (radius === reglFramebufferCube.width) {
                return reglFramebufferCube;
              }
              var colors = reglFramebufferCube.color;
              for (i = 0; i < colors.length; ++i) {
                colors[i].resize(radius);
              }
              for (i = 0; i < 6; ++i) {
                faces[i].resize(radius);
              }
              reglFramebufferCube.width = reglFramebufferCube.height = radius;
              return reglFramebufferCube;
            }
            reglFramebufferCube(options);
            return extend(reglFramebufferCube, {
              faces: faces,
              resize: resize,
              _reglType: 'framebufferCube',
              destroy: function () {
                faces.forEach(function (f) {
                  f.destroy();
                });
              }
            });
          }
          function restoreFramebuffers() {
            framebufferState.cur = null;
            framebufferState.next = null;
            framebufferState.dirty = true;
            values(framebufferSet).forEach(function (fb) {
              fb.framebuffer = gl.createFramebuffer();
              updateFramebuffer(fb);
            });
          }
          return extend(framebufferState, {
            getFramebuffer: function (object) {
              if (typeof object === 'function' && object._reglType === 'framebuffer') {
                var fbo = object._framebuffer;
                if (fbo instanceof REGLFramebuffer) {
                  return fbo;
                }
              }
              return null;
            },
            create: createFBO,
            createCube: createCubeFBO,
            clear: function () {
              values(framebufferSet).forEach(destroy);
            },
            restore: restoreFramebuffers
          });
        }
        var GL_FLOAT$6 = 5126;
        var GL_ARRAY_BUFFER$1 = 34962;
        var GL_ELEMENT_ARRAY_BUFFER$1 = 34963;
        var VAO_OPTIONS = ['attributes', 'elements', 'offset', 'count', 'primitive', 'instances'];
        function AttributeRecord() {
          this.state = 0;
          this.x = 0.0;
          this.y = 0.0;
          this.z = 0.0;
          this.w = 0.0;
          this.buffer = null;
          this.size = 0;
          this.normalized = false;
          this.type = GL_FLOAT$6;
          this.offset = 0;
          this.stride = 0;
          this.divisor = 0;
        }
        function wrapAttributeState(gl, extensions, limits, stats, bufferState, elementState, drawState) {
          var NUM_ATTRIBUTES = limits.maxAttributes;
          var attributeBindings = new Array(NUM_ATTRIBUTES);
          for (var i = 0; i < NUM_ATTRIBUTES; ++i) {
            attributeBindings[i] = new AttributeRecord();
          }
          var vaoCount = 0;
          var vaoSet = {};
          var state = {
            Record: AttributeRecord,
            scope: {},
            state: attributeBindings,
            currentVAO: null,
            targetVAO: null,
            restore: extVAO() ? restoreVAO : function () {},
            createVAO: createVAO,
            getVAO: getVAO,
            destroyBuffer: destroyBuffer,
            setVAO: extVAO() ? setVAOEXT : setVAOEmulated,
            clear: extVAO() ? destroyVAOEXT : function () {}
          };
          function destroyBuffer(buffer) {
            for (var i = 0; i < attributeBindings.length; ++i) {
              var record = attributeBindings[i];
              if (record.buffer === buffer) {
                gl.disableVertexAttribArray(i);
                record.buffer = null;
              }
            }
          }
          function extVAO() {
            return extensions.oes_vertex_array_object;
          }
          function extInstanced() {
            return extensions.angle_instanced_arrays;
          }
          function getVAO(vao) {
            if (typeof vao === 'function' && vao._vao) {
              return vao._vao;
            }
            return null;
          }
          function setVAOEXT(vao) {
            if (vao === state.currentVAO) {
              return;
            }
            var ext = extVAO();
            if (vao) {
              ext.bindVertexArrayOES(vao.vao);
            } else {
              ext.bindVertexArrayOES(null);
            }
            state.currentVAO = vao;
          }
          function setVAOEmulated(vao) {
            if (vao === state.currentVAO) {
              return;
            }
            if (vao) {
              vao.bindAttrs();
            } else {
              var exti = extInstanced();
              for (var i = 0; i < attributeBindings.length; ++i) {
                var binding = attributeBindings[i];
                if (binding.buffer) {
                  gl.enableVertexAttribArray(i);
                  binding.buffer.bind();
                  gl.vertexAttribPointer(i, binding.size, binding.type, binding.normalized, binding.stride, binding.offfset);
                  if (exti && binding.divisor) {
                    exti.vertexAttribDivisorANGLE(i, binding.divisor);
                  }
                } else {
                  gl.disableVertexAttribArray(i);
                  gl.vertexAttrib4f(i, binding.x, binding.y, binding.z, binding.w);
                }
              }
              if (drawState.elements) {
                gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, drawState.elements.buffer.buffer);
              } else {
                gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null);
              }
            }
            state.currentVAO = vao;
          }
          function destroyVAOEXT() {
            values(vaoSet).forEach(function (vao) {
              vao.destroy();
            });
          }
          function REGLVAO() {
            this.id = ++vaoCount;
            this.attributes = [];
            this.elements = null;
            this.ownsElements = false;
            this.count = 0;
            this.offset = 0;
            this.instances = -1;
            this.primitive = 4;
            var extension = extVAO();
            if (extension) {
              this.vao = extension.createVertexArrayOES();
            } else {
              this.vao = null;
            }
            vaoSet[this.id] = this;
            this.buffers = [];
          }
          REGLVAO.prototype.bindAttrs = function () {
            var exti = extInstanced();
            var attributes = this.attributes;
            for (var i = 0; i < attributes.length; ++i) {
              var attr = attributes[i];
              if (attr.buffer) {
                gl.enableVertexAttribArray(i);
                gl.bindBuffer(GL_ARRAY_BUFFER$1, attr.buffer.buffer);
                gl.vertexAttribPointer(i, attr.size, attr.type, attr.normalized, attr.stride, attr.offset);
                if (exti && attr.divisor) {
                  exti.vertexAttribDivisorANGLE(i, attr.divisor);
                }
              } else {
                gl.disableVertexAttribArray(i);
                gl.vertexAttrib4f(i, attr.x, attr.y, attr.z, attr.w);
              }
            }
            for (var j = attributes.length; j < NUM_ATTRIBUTES; ++j) {
              gl.disableVertexAttribArray(j);
            }
            var elements = elementState.getElements(this.elements);
            if (elements) {
              gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, elements.buffer.buffer);
            } else {
              gl.bindBuffer(GL_ELEMENT_ARRAY_BUFFER$1, null);
            }
          };
          REGLVAO.prototype.refresh = function () {
            var ext = extVAO();
            if (ext) {
              ext.bindVertexArrayOES(this.vao);
              this.bindAttrs();
              state.currentVAO = null;
              ext.bindVertexArrayOES(null);
            }
          };
          REGLVAO.prototype.destroy = function () {
            if (this.vao) {
              var extension = extVAO();
              if (this === state.currentVAO) {
                state.currentVAO = null;
                extension.bindVertexArrayOES(null);
              }
              extension.deleteVertexArrayOES(this.vao);
              this.vao = null;
            }
            if (this.ownsElements) {
              this.elements.destroy();
              this.elements = null;
              this.ownsElements = false;
            }
            if (vaoSet[this.id]) {
              delete vaoSet[this.id];
              stats.vaoCount -= 1;
            }
          };
          function restoreVAO() {
            var ext = extVAO();
            if (ext) {
              values(vaoSet).forEach(function (vao) {
                vao.refresh();
              });
            }
          }
          function createVAO(_attr) {
            var vao = new REGLVAO();
            stats.vaoCount += 1;
            function updateVAO(options) {
              var attributes;
              if (Array.isArray(options)) {
                attributes = options;
                if (vao.elements && vao.ownsElements) {
                  vao.elements.destroy();
                }
                vao.elements = null;
                vao.ownsElements = false;
                vao.offset = 0;
                vao.count = 0;
                vao.instances = -1;
                vao.primitive = 4;
              } else {
                check$1(typeof options === 'object', 'invalid arguments for create vao');
                check$1(('attributes' in options), 'must specify attributes for vao');
                if (options.elements) {
                  var elements = options.elements;
                  if (vao.ownsElements) {
                    if (typeof elements === 'function' && elements._reglType === 'elements') {
                      vao.elements.destroy();
                      vao.ownsElements = false;
                    } else {
                      vao.elements(elements);
                      vao.ownsElements = false;
                    }
                  } else if (elementState.getElements(options.elements)) {
                    vao.elements = options.elements;
                    vao.ownsElements = false;
                  } else {
                    vao.elements = elementState.create(options.elements);
                    vao.ownsElements = true;
                  }
                } else {
                  vao.elements = null;
                  vao.ownsElements = false;
                }
                attributes = options.attributes;
                vao.offset = 0;
                vao.count = -1;
                vao.instances = -1;
                vao.primitive = 4;
                if (vao.elements) {
                  vao.count = vao.elements._elements.vertCount;
                  vao.primitive = vao.elements._elements.primType;
                }
                if (('offset' in options)) {
                  vao.offset = options.offset | 0;
                }
                if (('count' in options)) {
                  vao.count = options.count | 0;
                }
                if (('instances' in options)) {
                  vao.instances = options.instances | 0;
                }
                if (('primitive' in options)) {
                  check$1((options.primitive in primTypes), 'bad primitive type: ' + options.primitive);
                  vao.primitive = primTypes[options.primitive];
                }
                check$1.optional(() => {
                  var keys = Object.keys(options);
                  for (var i = 0; i < keys.length; ++i) {
                    check$1(VAO_OPTIONS.indexOf(keys[i]) >= 0, 'invalid option for vao: "' + keys[i] + '" valid options are ' + VAO_OPTIONS);
                  }
                });
                check$1(Array.isArray(attributes), 'attributes must be an array');
              }
              check$1(attributes.length < NUM_ATTRIBUTES, 'too many attributes');
              check$1(attributes.length > 0, 'must specify at least one attribute');
              var bufUpdated = {};
              var nattributes = vao.attributes;
              nattributes.length = attributes.length;
              for (var i = 0; i < attributes.length; ++i) {
                var spec = attributes[i];
                var rec = nattributes[i] = new AttributeRecord();
                var data = spec.data || spec;
                if (Array.isArray(data) || isTypedArray(data) || isNDArrayLike(data)) {
                  var buf;
                  if (vao.buffers[i]) {
                    buf = vao.buffers[i];
                    if (isTypedArray(data) && buf._buffer.byteLength >= data.byteLength) {
                      buf.subdata(data);
                    } else {
                      buf.destroy();
                      vao.buffers[i] = null;
                    }
                  }
                  if (!vao.buffers[i]) {
                    buf = vao.buffers[i] = bufferState.create(spec, GL_ARRAY_BUFFER$1, false, true);
                  }
                  rec.buffer = bufferState.getBuffer(buf);
                  rec.size = rec.buffer.dimension | 0;
                  rec.normalized = false;
                  rec.type = rec.buffer.dtype;
                  rec.offset = 0;
                  rec.stride = 0;
                  rec.divisor = 0;
                  rec.state = 1;
                  bufUpdated[i] = 1;
                } else if (bufferState.getBuffer(spec)) {
                  rec.buffer = bufferState.getBuffer(spec);
                  rec.size = rec.buffer.dimension | 0;
                  rec.normalized = false;
                  rec.type = rec.buffer.dtype;
                  rec.offset = 0;
                  rec.stride = 0;
                  rec.divisor = 0;
                  rec.state = 1;
                } else if (bufferState.getBuffer(spec.buffer)) {
                  rec.buffer = bufferState.getBuffer(spec.buffer);
                  rec.size = (+spec.size || rec.buffer.dimension) | 0;
                  rec.normalized = !!spec.normalized || false;
                  if (('type' in spec)) {
                    check$1.parameter(spec.type, glTypes, 'invalid buffer type');
                    rec.type = glTypes[spec.type];
                  } else {
                    rec.type = rec.buffer.dtype;
                  }
                  rec.offset = (spec.offset || 0) | 0;
                  rec.stride = (spec.stride || 0) | 0;
                  rec.divisor = (spec.divisor || 0) | 0;
                  rec.state = 1;
                  check$1(rec.size >= 1 && rec.size <= 4, 'size must be between 1 and 4');
                  check$1(rec.offset >= 0, 'invalid offset');
                  check$1(rec.stride >= 0 && rec.stride <= 255, 'stride must be between 0 and 255');
                  check$1(rec.divisor >= 0, 'divisor must be positive');
                  check$1(!rec.divisor || !!extensions.angle_instanced_arrays, 'ANGLE_instanced_arrays must be enabled to use divisor');
                } else if (('x' in spec)) {
                  check$1(i > 0, 'first attribute must not be a constant');
                  rec.x = +spec.x || 0;
                  rec.y = +spec.y || 0;
                  rec.z = +spec.z || 0;
                  rec.w = +spec.w || 0;
                  rec.state = 2;
                } else {
                  check$1(false, 'invalid attribute spec for location ' + i);
                }
              }
              for (var j = 0; j < vao.buffers.length; ++j) {
                if (!bufUpdated[j] && vao.buffers[j]) {
                  vao.buffers[j].destroy();
                  vao.buffers[j] = null;
                }
              }
              vao.refresh();
              return updateVAO;
            }
            updateVAO.destroy = function () {
              for (var j = 0; j < vao.buffers.length; ++j) {
                if (vao.buffers[j]) {
                  vao.buffers[j].destroy();
                }
              }
              vao.buffers.length = 0;
              if (vao.ownsElements) {
                vao.elements.destroy();
                vao.elements = null;
                vao.ownsElements = false;
              }
              vao.destroy();
            };
            updateVAO._vao = vao;
            updateVAO._reglType = 'vao';
            return updateVAO(_attr);
          }
          return state;
        }
        var GL_FRAGMENT_SHADER = 35632;
        var GL_VERTEX_SHADER = 35633;
        var GL_ACTIVE_UNIFORMS = 0x8B86;
        var GL_ACTIVE_ATTRIBUTES = 0x8B89;
        function wrapShaderState(gl, stringStore, stats, config) {
          var fragShaders = {};
          var vertShaders = {};
          function ActiveInfo(name, id, location, info) {
            this.name = name;
            this.id = id;
            this.location = location;
            this.info = info;
          }
          function insertActiveInfo(list, info) {
            for (var i = 0; i < list.length; ++i) {
              if (list[i].id === info.id) {
                list[i].location = info.location;
                return;
              }
            }
            list.push(info);
          }
          function getShader(type, id, command) {
            var cache = type === GL_FRAGMENT_SHADER ? fragShaders : vertShaders;
            var shader = cache[id];
            if (!shader) {
              var source = stringStore.str(id);
              shader = gl.createShader(type);
              gl.shaderSource(shader, source);
              gl.compileShader(shader);
              check$1.shaderError(gl, shader, source, type, command);
              cache[id] = shader;
            }
            return shader;
          }
          var programCache = {};
          var programList = [];
          var PROGRAM_COUNTER = 0;
          function REGLProgram(fragId, vertId) {
            this.id = PROGRAM_COUNTER++;
            this.fragId = fragId;
            this.vertId = vertId;
            this.program = null;
            this.uniforms = [];
            this.attributes = [];
            this.refCount = 1;
            if (config.profile) {
              this.stats = {
                uniformsCount: 0,
                attributesCount: 0
              };
            }
          }
          function linkProgram(desc, command, attributeLocations) {
            var i, info;
            var fragShader = getShader(GL_FRAGMENT_SHADER, desc.fragId);
            var vertShader = getShader(GL_VERTEX_SHADER, desc.vertId);
            var program = desc.program = gl.createProgram();
            gl.attachShader(program, fragShader);
            gl.attachShader(program, vertShader);
            if (attributeLocations) {
              for (i = 0; i < attributeLocations.length; ++i) {
                var binding = attributeLocations[i];
                gl.bindAttribLocation(program, binding[0], binding[1]);
              }
            }
            gl.linkProgram(program);
            check$1.linkError(gl, program, stringStore.str(desc.fragId), stringStore.str(desc.vertId), command);
            var numUniforms = gl.getProgramParameter(program, GL_ACTIVE_UNIFORMS);
            if (config.profile) {
              desc.stats.uniformsCount = numUniforms;
            }
            var uniforms = desc.uniforms;
            for (i = 0; i < numUniforms; ++i) {
              info = gl.getActiveUniform(program, i);
              if (info) {
                if (info.size > 1) {
                  for (var j = 0; j < info.size; ++j) {
                    var name = info.name.replace('[0]', '[' + j + ']');
                    insertActiveInfo(uniforms, new ActiveInfo(name, stringStore.id(name), gl.getUniformLocation(program, name), info));
                  }
                }
                var uniName = info.name;
                if (info.size > 1) {
                  uniName = uniName.replace('[0]', '');
                }
                insertActiveInfo(uniforms, new ActiveInfo(uniName, stringStore.id(uniName), gl.getUniformLocation(program, uniName), info));
              }
            }
            var numAttributes = gl.getProgramParameter(program, GL_ACTIVE_ATTRIBUTES);
            if (config.profile) {
              desc.stats.attributesCount = numAttributes;
            }
            var attributes = desc.attributes;
            for (i = 0; i < numAttributes; ++i) {
              info = gl.getActiveAttrib(program, i);
              if (info) {
                insertActiveInfo(attributes, new ActiveInfo(info.name, stringStore.id(info.name), gl.getAttribLocation(program, info.name), info));
              }
            }
          }
          if (config.profile) {
            stats.getMaxUniformsCount = function () {
              var m = 0;
              programList.forEach(function (desc) {
                if (desc.stats.uniformsCount > m) {
                  m = desc.stats.uniformsCount;
                }
              });
              return m;
            };
            stats.getMaxAttributesCount = function () {
              var m = 0;
              programList.forEach(function (desc) {
                if (desc.stats.attributesCount > m) {
                  m = desc.stats.attributesCount;
                }
              });
              return m;
            };
          }
          function restoreShaders() {
            fragShaders = {};
            vertShaders = {};
            for (var i = 0; i < programList.length; ++i) {
              linkProgram(programList[i], null, programList[i].attributes.map(function (info) {
                return [info.location, info.name];
              }));
            }
          }
          return {
            clear: function () {
              var deleteShader = gl.deleteShader.bind(gl);
              values(fragShaders).forEach(deleteShader);
              fragShaders = {};
              values(vertShaders).forEach(deleteShader);
              vertShaders = {};
              programList.forEach(function (desc) {
                gl.deleteProgram(desc.program);
              });
              programList.length = 0;
              programCache = {};
              stats.shaderCount = 0;
            },
            program: function (vertId, fragId, command, attribLocations) {
              check$1.command(vertId >= 0, 'missing vertex shader', command);
              check$1.command(fragId >= 0, 'missing fragment shader', command);
              var cache = programCache[fragId];
              if (!cache) {
                cache = programCache[fragId] = {};
              }
              var prevProgram = cache[vertId];
              if (prevProgram) {
                prevProgram.refCount++;
                if (!attribLocations) {
                  return prevProgram;
                }
              }
              var program = new REGLProgram(fragId, vertId);
              stats.shaderCount++;
              linkProgram(program, command, attribLocations);
              if (!prevProgram) {
                cache[vertId] = program;
              }
              programList.push(program);
              return extend(program, {
                destroy: function () {
                  program.refCount--;
                  if (program.refCount <= 0) {
                    gl.deleteProgram(program.program);
                    var idx = programList.indexOf(program);
                    programList.splice(idx, 1);
                    stats.shaderCount--;
                  }
                  if (cache[program.vertId].refCount <= 0) {
                    gl.deleteShader(vertShaders[program.vertId]);
                    delete vertShaders[program.vertId];
                    delete programCache[program.fragId][program.vertId];
                  }
                  if (!Object.keys(programCache[program.fragId]).length) {
                    gl.deleteShader(fragShaders[program.fragId]);
                    delete fragShaders[program.fragId];
                    delete programCache[program.fragId];
                  }
                }
              });
            },
            restore: restoreShaders,
            shader: getShader,
            frag: -1,
            vert: -1
          };
        }
        var GL_RGBA$3 = 6408;
        var GL_UNSIGNED_BYTE$7 = 5121;
        var GL_PACK_ALIGNMENT = 0x0D05;
        var GL_FLOAT$7 = 0x1406;
        function wrapReadPixels(gl, framebufferState, reglPoll, context, glAttributes, extensions, limits) {
          function readPixelsImpl(input) {
            var type;
            if (framebufferState.next === null) {
              check$1(glAttributes.preserveDrawingBuffer, 'you must create a webgl context with "preserveDrawingBuffer":true in order to read pixels from the drawing buffer');
              type = GL_UNSIGNED_BYTE$7;
            } else {
              check$1(framebufferState.next.colorAttachments[0].texture !== null, 'You cannot read from a renderbuffer');
              type = framebufferState.next.colorAttachments[0].texture._texture.type;
              check$1.optional(function () {
                if (extensions.oes_texture_float) {
                  check$1(type === GL_UNSIGNED_BYTE$7 || type === GL_FLOAT$7, 'Reading from a framebuffer is only allowed for the types \'uint8\' and \'float\'');
                  if (type === GL_FLOAT$7) {
                    check$1(limits.readFloat, 'Reading \'float\' values is not permitted in your browser. For a fallback, please see: https://www.npmjs.com/package/glsl-read-float');
                  }
                } else {
                  check$1(type === GL_UNSIGNED_BYTE$7, 'Reading from a framebuffer is only allowed for the type \'uint8\'');
                }
              });
            }
            var x = 0;
            var y = 0;
            var width = context.framebufferWidth;
            var height = context.framebufferHeight;
            var data = null;
            if (isTypedArray(input)) {
              data = input;
            } else if (input) {
              check$1.type(input, 'object', 'invalid arguments to regl.read()');
              x = input.x | 0;
              y = input.y | 0;
              check$1(x >= 0 && x < context.framebufferWidth, 'invalid x offset for regl.read');
              check$1(y >= 0 && y < context.framebufferHeight, 'invalid y offset for regl.read');
              width = (input.width || context.framebufferWidth - x) | 0;
              height = (input.height || context.framebufferHeight - y) | 0;
              data = input.data || null;
            }
            if (data) {
              if (type === GL_UNSIGNED_BYTE$7) {
                check$1(data instanceof Uint8Array, 'buffer must be \'Uint8Array\' when reading from a framebuffer of type \'uint8\'');
              } else if (type === GL_FLOAT$7) {
                check$1(data instanceof Float32Array, 'buffer must be \'Float32Array\' when reading from a framebuffer of type \'float\'');
              }
            }
            check$1(width > 0 && width + x <= context.framebufferWidth, 'invalid width for read pixels');
            check$1(height > 0 && height + y <= context.framebufferHeight, 'invalid height for read pixels');
            reglPoll();
            var size = width * height * 4;
            if (!data) {
              if (type === GL_UNSIGNED_BYTE$7) {
                data = new Uint8Array(size);
              } else if (type === GL_FLOAT$7) {
                data = data || new Float32Array(size);
              }
            }
            check$1.isTypedArray(data, 'data buffer for regl.read() must be a typedarray');
            check$1(data.byteLength >= size, 'data buffer for regl.read() too small');
            gl.pixelStorei(GL_PACK_ALIGNMENT, 4);
            gl.readPixels(x, y, width, height, GL_RGBA$3, type, data);
            return data;
          }
          function readPixelsFBO(options) {
            var result;
            framebufferState.setFBO({
              framebuffer: options.framebuffer
            }, function () {
              result = readPixelsImpl(options);
            });
            return result;
          }
          function readPixels(options) {
            if (!options || !(('framebuffer' in options))) {
              return readPixelsImpl(options);
            } else {
              return readPixelsFBO(options);
            }
          }
          return readPixels;
        }
        function slice(x) {
          return Array.prototype.slice.call(x);
        }
        function join(x) {
          return slice(x).join('');
        }
        function createEnvironment() {
          var varCounter = 0;
          var linkedNames = [];
          var linkedValues = [];
          function link(value) {
            for (var i = 0; i < linkedValues.length; ++i) {
              if (linkedValues[i] === value) {
                return linkedNames[i];
              }
            }
            var name = 'g' + varCounter++;
            linkedNames.push(name);
            linkedValues.push(value);
            return name;
          }
          function block() {
            var code = [];
            function push() {
              code.push.apply(code, slice(arguments));
            }
            var vars = [];
            function def() {
              var name = 'v' + varCounter++;
              vars.push(name);
              if (arguments.length > 0) {
                code.push(name, '=');
                code.push.apply(code, slice(arguments));
                code.push(';');
              }
              return name;
            }
            return extend(push, {
              def: def,
              toString: function () {
                return join([vars.length > 0 ? 'var ' + vars.join(',') + ';' : '', join(code)]);
              }
            });
          }
          function scope() {
            var entry = block();
            var exit = block();
            var entryToString = entry.toString;
            var exitToString = exit.toString;
            function save(object, prop) {
              exit(object, prop, '=', entry.def(object, prop), ';');
            }
            return extend(function () {
              entry.apply(entry, slice(arguments));
            }, {
              def: entry.def,
              entry: entry,
              exit: exit,
              save: save,
              set: function (object, prop, value) {
                save(object, prop);
                entry(object, prop, '=', value, ';');
              },
              toString: function () {
                return entryToString() + exitToString();
              }
            });
          }
          function conditional() {
            var pred = join(arguments);
            var thenBlock = scope();
            var elseBlock = scope();
            var thenToString = thenBlock.toString;
            var elseToString = elseBlock.toString;
            return extend(thenBlock, {
              then: function () {
                thenBlock.apply(thenBlock, slice(arguments));
                return this;
              },
              else: function () {
                elseBlock.apply(elseBlock, slice(arguments));
                return this;
              },
              toString: function () {
                var elseClause = elseToString();
                if (elseClause) {
                  elseClause = 'else{' + elseClause + '}';
                }
                return join(['if(', pred, '){', thenToString(), '}', elseClause]);
              }
            });
          }
          var globalBlock = block();
          var procedures = {};
          function proc(name, count) {
            var args = [];
            function arg() {
              var name = 'a' + args.length;
              args.push(name);
              return name;
            }
            count = count || 0;
            for (var i = 0; i < count; ++i) {
              arg();
            }
            var body = scope();
            var bodyToString = body.toString;
            var result = procedures[name] = extend(body, {
              arg: arg,
              toString: function () {
                return join(['function(', args.join(), '){', bodyToString(), '}']);
              }
            });
            return result;
          }
          function compile() {
            var code = ['"use strict";', globalBlock, 'return {'];
            Object.keys(procedures).forEach(function (name) {
              code.push('"', name, '":', procedures[name].toString(), ',');
            });
            code.push('}');
            var src = join(code).replace(/;/g, ';\n').replace(/}/g, '}\n').replace(/{/g, '{\n');
            var proc = Function.apply(null, linkedNames.concat(src));
            return proc.apply(null, linkedValues);
          }
          return {
            global: globalBlock,
            link: link,
            block: block,
            proc: proc,
            scope: scope,
            cond: conditional,
            compile: compile
          };
        }
        var CUTE_COMPONENTS = ('xyzw').split('');
        var GL_UNSIGNED_BYTE$8 = 5121;
        var ATTRIB_STATE_POINTER = 1;
        var ATTRIB_STATE_CONSTANT = 2;
        var DYN_FUNC$1 = 0;
        var DYN_PROP$1 = 1;
        var DYN_CONTEXT$1 = 2;
        var DYN_STATE$1 = 3;
        var DYN_THUNK = 4;
        var DYN_CONSTANT$1 = 5;
        var DYN_ARRAY$1 = 6;
        var S_DITHER = 'dither';
        var S_BLEND_ENABLE = 'blend.enable';
        var S_BLEND_COLOR = 'blend.color';
        var S_BLEND_EQUATION = 'blend.equation';
        var S_BLEND_FUNC = 'blend.func';
        var S_DEPTH_ENABLE = 'depth.enable';
        var S_DEPTH_FUNC = 'depth.func';
        var S_DEPTH_RANGE = 'depth.range';
        var S_DEPTH_MASK = 'depth.mask';
        var S_COLOR_MASK = 'colorMask';
        var S_CULL_ENABLE = 'cull.enable';
        var S_CULL_FACE = 'cull.face';
        var S_FRONT_FACE = 'frontFace';
        var S_LINE_WIDTH = 'lineWidth';
        var S_POLYGON_OFFSET_ENABLE = 'polygonOffset.enable';
        var S_POLYGON_OFFSET_OFFSET = 'polygonOffset.offset';
        var S_SAMPLE_ALPHA = 'sample.alpha';
        var S_SAMPLE_ENABLE = 'sample.enable';
        var S_SAMPLE_COVERAGE = 'sample.coverage';
        var S_STENCIL_ENABLE = 'stencil.enable';
        var S_STENCIL_MASK = 'stencil.mask';
        var S_STENCIL_FUNC = 'stencil.func';
        var S_STENCIL_OPFRONT = 'stencil.opFront';
        var S_STENCIL_OPBACK = 'stencil.opBack';
        var S_SCISSOR_ENABLE = 'scissor.enable';
        var S_SCISSOR_BOX = 'scissor.box';
        var S_VIEWPORT = 'viewport';
        var S_PROFILE = 'profile';
        var S_FRAMEBUFFER = 'framebuffer';
        var S_VERT = 'vert';
        var S_FRAG = 'frag';
        var S_ELEMENTS = 'elements';
        var S_PRIMITIVE = 'primitive';
        var S_COUNT = 'count';
        var S_OFFSET = 'offset';
        var S_INSTANCES = 'instances';
        var S_VAO = 'vao';
        var SUFFIX_WIDTH = 'Width';
        var SUFFIX_HEIGHT = 'Height';
        var S_FRAMEBUFFER_WIDTH = S_FRAMEBUFFER + SUFFIX_WIDTH;
        var S_FRAMEBUFFER_HEIGHT = S_FRAMEBUFFER + SUFFIX_HEIGHT;
        var S_VIEWPORT_WIDTH = S_VIEWPORT + SUFFIX_WIDTH;
        var S_VIEWPORT_HEIGHT = S_VIEWPORT + SUFFIX_HEIGHT;
        var S_DRAWINGBUFFER = 'drawingBuffer';
        var S_DRAWINGBUFFER_WIDTH = S_DRAWINGBUFFER + SUFFIX_WIDTH;
        var S_DRAWINGBUFFER_HEIGHT = S_DRAWINGBUFFER + SUFFIX_HEIGHT;
        var NESTED_OPTIONS = [S_BLEND_FUNC, S_BLEND_EQUATION, S_STENCIL_FUNC, S_STENCIL_OPFRONT, S_STENCIL_OPBACK, S_SAMPLE_COVERAGE, S_VIEWPORT, S_SCISSOR_BOX, S_POLYGON_OFFSET_OFFSET];
        var GL_ARRAY_BUFFER$2 = 34962;
        var GL_ELEMENT_ARRAY_BUFFER$2 = 34963;
        var GL_FRAGMENT_SHADER$1 = 35632;
        var GL_VERTEX_SHADER$1 = 35633;
        var GL_TEXTURE_2D$3 = 0x0DE1;
        var GL_TEXTURE_CUBE_MAP$2 = 0x8513;
        var GL_CULL_FACE = 0x0B44;
        var GL_BLEND = 0x0BE2;
        var GL_DITHER = 0x0BD0;
        var GL_STENCIL_TEST = 0x0B90;
        var GL_DEPTH_TEST = 0x0B71;
        var GL_SCISSOR_TEST = 0x0C11;
        var GL_POLYGON_OFFSET_FILL = 0x8037;
        var GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;
        var GL_SAMPLE_COVERAGE = 0x80A0;
        var GL_FLOAT$8 = 5126;
        var GL_FLOAT_VEC2 = 35664;
        var GL_FLOAT_VEC3 = 35665;
        var GL_FLOAT_VEC4 = 35666;
        var GL_INT$3 = 5124;
        var GL_INT_VEC2 = 35667;
        var GL_INT_VEC3 = 35668;
        var GL_INT_VEC4 = 35669;
        var GL_BOOL = 35670;
        var GL_BOOL_VEC2 = 35671;
        var GL_BOOL_VEC3 = 35672;
        var GL_BOOL_VEC4 = 35673;
        var GL_FLOAT_MAT2 = 35674;
        var GL_FLOAT_MAT3 = 35675;
        var GL_FLOAT_MAT4 = 35676;
        var GL_SAMPLER_2D = 35678;
        var GL_SAMPLER_CUBE = 35680;
        var GL_TRIANGLES$1 = 4;
        var GL_FRONT = 1028;
        var GL_BACK = 1029;
        var GL_CW = 0x0900;
        var GL_CCW = 0x0901;
        var GL_MIN_EXT = 0x8007;
        var GL_MAX_EXT = 0x8008;
        var GL_ALWAYS = 519;
        var GL_KEEP = 7680;
        var GL_ZERO = 0;
        var GL_ONE = 1;
        var GL_FUNC_ADD = 0x8006;
        var GL_LESS = 513;
        var GL_FRAMEBUFFER$2 = 0x8D40;
        var GL_COLOR_ATTACHMENT0$2 = 0x8CE0;
        var blendFuncs = {
          '0': 0,
          '1': 1,
          'zero': 0,
          'one': 1,
          'src color': 768,
          'one minus src color': 769,
          'src alpha': 770,
          'one minus src alpha': 771,
          'dst color': 774,
          'one minus dst color': 775,
          'dst alpha': 772,
          'one minus dst alpha': 773,
          'constant color': 32769,
          'one minus constant color': 32770,
          'constant alpha': 32771,
          'one minus constant alpha': 32772,
          'src alpha saturate': 776
        };
        var invalidBlendCombinations = ['constant color, constant alpha', 'one minus constant color, constant alpha', 'constant color, one minus constant alpha', 'one minus constant color, one minus constant alpha', 'constant alpha, constant color', 'constant alpha, one minus constant color', 'one minus constant alpha, constant color', 'one minus constant alpha, one minus constant color'];
        var compareFuncs = {
          'never': 512,
          'less': 513,
          '<': 513,
          'equal': 514,
          '=': 514,
          '==': 514,
          '===': 514,
          'lequal': 515,
          '<=': 515,
          'greater': 516,
          '>': 516,
          'notequal': 517,
          '!=': 517,
          '!==': 517,
          'gequal': 518,
          '>=': 518,
          'always': 519
        };
        var stencilOps = {
          '0': 0,
          'zero': 0,
          'keep': 7680,
          'replace': 7681,
          'increment': 7682,
          'decrement': 7683,
          'increment wrap': 34055,
          'decrement wrap': 34056,
          'invert': 5386
        };
        var shaderType = {
          'frag': GL_FRAGMENT_SHADER$1,
          'vert': GL_VERTEX_SHADER$1
        };
        var orientationType = {
          'cw': GL_CW,
          'ccw': GL_CCW
        };
        function isBufferArgs(x) {
          return Array.isArray(x) || isTypedArray(x) || isNDArrayLike(x);
        }
        function sortState(state) {
          return state.sort(function (a, b) {
            if (a === S_VIEWPORT) {
              return -1;
            } else if (b === S_VIEWPORT) {
              return 1;
            }
            return a < b ? -1 : 1;
          });
        }
        function Declaration(thisDep, contextDep, propDep, append) {
          this.thisDep = thisDep;
          this.contextDep = contextDep;
          this.propDep = propDep;
          this.append = append;
        }
        function isStatic(decl) {
          return decl && !(decl.thisDep || decl.contextDep || decl.propDep);
        }
        function createStaticDecl(append) {
          return new Declaration(false, false, false, append);
        }
        function createDynamicDecl(dyn, append) {
          var type = dyn.type;
          if (type === DYN_FUNC$1) {
            var numArgs = dyn.data.length;
            return new Declaration(true, numArgs >= 1, numArgs >= 2, append);
          } else if (type === DYN_THUNK) {
            var data = dyn.data;
            return new Declaration(data.thisDep, data.contextDep, data.propDep, append);
          } else if (type === DYN_CONSTANT$1) {
            return new Declaration(false, false, false, append);
          } else if (type === DYN_ARRAY$1) {
            var thisDep = false;
            var contextDep = false;
            var propDep = false;
            for (var i = 0; i < dyn.data.length; ++i) {
              var subDyn = dyn.data[i];
              if (subDyn.type === DYN_PROP$1) {
                propDep = true;
              } else if (subDyn.type === DYN_CONTEXT$1) {
                contextDep = true;
              } else if (subDyn.type === DYN_STATE$1) {
                thisDep = true;
              } else if (subDyn.type === DYN_FUNC$1) {
                thisDep = true;
                var subArgs = subDyn.data;
                if (subArgs >= 1) {
                  contextDep = true;
                }
                if (subArgs >= 2) {
                  propDep = true;
                }
              } else if (subDyn.type === DYN_THUNK) {
                thisDep = thisDep || subDyn.data.thisDep;
                contextDep = contextDep || subDyn.data.contextDep;
                propDep = propDep || subDyn.data.propDep;
              }
            }
            return new Declaration(thisDep, contextDep, propDep, append);
          } else {
            return new Declaration(type === DYN_STATE$1, type === DYN_CONTEXT$1, type === DYN_PROP$1, append);
          }
        }
        var SCOPE_DECL = new Declaration(false, false, false, function () {});
        function reglCore(gl, stringStore, extensions, limits, bufferState, elementState, textureState, framebufferState, uniformState, attributeState, shaderState, drawState, contextState, timer, config) {
          var AttributeRecord = attributeState.Record;
          var blendEquations = {
            'add': 32774,
            'subtract': 32778,
            'reverse subtract': 32779
          };
          if (extensions.ext_blend_minmax) {
            blendEquations.min = GL_MIN_EXT;
            blendEquations.max = GL_MAX_EXT;
          }
          var extInstancing = extensions.angle_instanced_arrays;
          var extDrawBuffers = extensions.webgl_draw_buffers;
          var extVertexArrays = extensions.oes_vertex_array_object;
          var currentState = {
            dirty: true,
            profile: config.profile
          };
          var nextState = {};
          var GL_STATE_NAMES = [];
          var GL_FLAGS = {};
          var GL_VARIABLES = {};
          function propName(name) {
            return name.replace('.', '_');
          }
          function stateFlag(sname, cap, init) {
            var name = propName(sname);
            GL_STATE_NAMES.push(sname);
            nextState[name] = currentState[name] = !!init;
            GL_FLAGS[name] = cap;
          }
          function stateVariable(sname, func, init) {
            var name = propName(sname);
            GL_STATE_NAMES.push(sname);
            if (Array.isArray(init)) {
              currentState[name] = init.slice();
              nextState[name] = init.slice();
            } else {
              currentState[name] = nextState[name] = init;
            }
            GL_VARIABLES[name] = func;
          }
          stateFlag(S_DITHER, GL_DITHER);
          stateFlag(S_BLEND_ENABLE, GL_BLEND);
          stateVariable(S_BLEND_COLOR, 'blendColor', [0, 0, 0, 0]);
          stateVariable(S_BLEND_EQUATION, 'blendEquationSeparate', [GL_FUNC_ADD, GL_FUNC_ADD]);
          stateVariable(S_BLEND_FUNC, 'blendFuncSeparate', [GL_ONE, GL_ZERO, GL_ONE, GL_ZERO]);
          stateFlag(S_DEPTH_ENABLE, GL_DEPTH_TEST, true);
          stateVariable(S_DEPTH_FUNC, 'depthFunc', GL_LESS);
          stateVariable(S_DEPTH_RANGE, 'depthRange', [0, 1]);
          stateVariable(S_DEPTH_MASK, 'depthMask', true);
          stateVariable(S_COLOR_MASK, S_COLOR_MASK, [true, true, true, true]);
          stateFlag(S_CULL_ENABLE, GL_CULL_FACE);
          stateVariable(S_CULL_FACE, 'cullFace', GL_BACK);
          stateVariable(S_FRONT_FACE, S_FRONT_FACE, GL_CCW);
          stateVariable(S_LINE_WIDTH, S_LINE_WIDTH, 1);
          stateFlag(S_POLYGON_OFFSET_ENABLE, GL_POLYGON_OFFSET_FILL);
          stateVariable(S_POLYGON_OFFSET_OFFSET, 'polygonOffset', [0, 0]);
          stateFlag(S_SAMPLE_ALPHA, GL_SAMPLE_ALPHA_TO_COVERAGE);
          stateFlag(S_SAMPLE_ENABLE, GL_SAMPLE_COVERAGE);
          stateVariable(S_SAMPLE_COVERAGE, 'sampleCoverage', [1, false]);
          stateFlag(S_STENCIL_ENABLE, GL_STENCIL_TEST);
          stateVariable(S_STENCIL_MASK, 'stencilMask', -1);
          stateVariable(S_STENCIL_FUNC, 'stencilFunc', [GL_ALWAYS, 0, -1]);
          stateVariable(S_STENCIL_OPFRONT, 'stencilOpSeparate', [GL_FRONT, GL_KEEP, GL_KEEP, GL_KEEP]);
          stateVariable(S_STENCIL_OPBACK, 'stencilOpSeparate', [GL_BACK, GL_KEEP, GL_KEEP, GL_KEEP]);
          stateFlag(S_SCISSOR_ENABLE, GL_SCISSOR_TEST);
          stateVariable(S_SCISSOR_BOX, 'scissor', [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]);
          stateVariable(S_VIEWPORT, S_VIEWPORT, [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]);
          var sharedState = {
            gl: gl,
            context: contextState,
            strings: stringStore,
            next: nextState,
            current: currentState,
            draw: drawState,
            elements: elementState,
            buffer: bufferState,
            shader: shaderState,
            attributes: attributeState.state,
            vao: attributeState,
            uniforms: uniformState,
            framebuffer: framebufferState,
            extensions: extensions,
            timer: timer,
            isBufferArgs: isBufferArgs
          };
          var sharedConstants = {
            primTypes: primTypes,
            compareFuncs: compareFuncs,
            blendFuncs: blendFuncs,
            blendEquations: blendEquations,
            stencilOps: stencilOps,
            glTypes: glTypes,
            orientationType: orientationType
          };
          check$1.optional(function () {
            sharedState.isArrayLike = isArrayLike;
          });
          if (extDrawBuffers) {
            sharedConstants.backBuffer = [GL_BACK];
            sharedConstants.drawBuffer = loop(limits.maxDrawbuffers, function (i) {
              if (i === 0) {
                return [0];
              }
              return loop(i, function (j) {
                return GL_COLOR_ATTACHMENT0$2 + j;
              });
            });
          }
          var drawCallCounter = 0;
          function createREGLEnvironment() {
            var env = createEnvironment();
            var link = env.link;
            var global = env.global;
            env.id = drawCallCounter++;
            env.batchId = '0';
            var SHARED = link(sharedState);
            var shared = env.shared = {
              props: 'a0'
            };
            Object.keys(sharedState).forEach(function (prop) {
              shared[prop] = global.def(SHARED, '.', prop);
            });
            check$1.optional(function () {
              env.CHECK = link(check$1);
              env.commandStr = check$1.guessCommand();
              env.command = link(env.commandStr);
              env.assert = function (block, pred, message) {
                block('if(!(', pred, '))', this.CHECK, '.commandRaise(', link(message), ',', this.command, ');');
              };
              sharedConstants.invalidBlendCombinations = invalidBlendCombinations;
            });
            var nextVars = env.next = {};
            var currentVars = env.current = {};
            Object.keys(GL_VARIABLES).forEach(function (variable) {
              if (Array.isArray(currentState[variable])) {
                nextVars[variable] = global.def(shared.next, '.', variable);
                currentVars[variable] = global.def(shared.current, '.', variable);
              }
            });
            var constants = env.constants = {};
            Object.keys(sharedConstants).forEach(function (name) {
              constants[name] = global.def(JSON.stringify(sharedConstants[name]));
            });
            env.invoke = function (block, x) {
              switch (x.type) {
                case DYN_FUNC$1:
                  var argList = ['this', shared.context, shared.props, env.batchId];
                  return block.def(link(x.data), '.call(', argList.slice(0, Math.max(x.data.length + 1, 4)), ')');
                case DYN_PROP$1:
                  return block.def(shared.props, x.data);
                case DYN_CONTEXT$1:
                  return block.def(shared.context, x.data);
                case DYN_STATE$1:
                  return block.def('this', x.data);
                case DYN_THUNK:
                  x.data.append(env, block);
                  return x.data.ref;
                case DYN_CONSTANT$1:
                  return x.data.toString();
                case DYN_ARRAY$1:
                  return x.data.map(function (y) {
                    return env.invoke(block, y);
                  });
              }
            };
            env.attribCache = {};
            var scopeAttribs = {};
            env.scopeAttrib = function (name) {
              var id = stringStore.id(name);
              if ((id in scopeAttribs)) {
                return scopeAttribs[id];
              }
              var binding = attributeState.scope[id];
              if (!binding) {
                binding = attributeState.scope[id] = new AttributeRecord();
              }
              var result = scopeAttribs[id] = link(binding);
              return result;
            };
            return env;
          }
          function parseProfile(options) {
            var staticOptions = options.static;
            var dynamicOptions = options.dynamic;
            var profileEnable;
            if ((S_PROFILE in staticOptions)) {
              var value = !!staticOptions[S_PROFILE];
              profileEnable = createStaticDecl(function (env, scope) {
                return value;
              });
              profileEnable.enable = value;
            } else if ((S_PROFILE in dynamicOptions)) {
              var dyn = dynamicOptions[S_PROFILE];
              profileEnable = createDynamicDecl(dyn, function (env, scope) {
                return env.invoke(scope, dyn);
              });
            }
            return profileEnable;
          }
          function parseFramebuffer(options, env) {
            var staticOptions = options.static;
            var dynamicOptions = options.dynamic;
            if ((S_FRAMEBUFFER in staticOptions)) {
              var framebuffer = staticOptions[S_FRAMEBUFFER];
              if (framebuffer) {
                framebuffer = framebufferState.getFramebuffer(framebuffer);
                check$1.command(framebuffer, 'invalid framebuffer object');
                return createStaticDecl(function (env, block) {
                  var FRAMEBUFFER = env.link(framebuffer);
                  var shared = env.shared;
                  block.set(shared.framebuffer, '.next', FRAMEBUFFER);
                  var CONTEXT = shared.context;
                  block.set(CONTEXT, '.' + S_FRAMEBUFFER_WIDTH, FRAMEBUFFER + '.width');
                  block.set(CONTEXT, '.' + S_FRAMEBUFFER_HEIGHT, FRAMEBUFFER + '.height');
                  return FRAMEBUFFER;
                });
              } else {
                return createStaticDecl(function (env, scope) {
                  var shared = env.shared;
                  scope.set(shared.framebuffer, '.next', 'null');
                  var CONTEXT = shared.context;
                  scope.set(CONTEXT, '.' + S_FRAMEBUFFER_WIDTH, CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH);
                  scope.set(CONTEXT, '.' + S_FRAMEBUFFER_HEIGHT, CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT);
                  return 'null';
                });
              }
            } else if ((S_FRAMEBUFFER in dynamicOptions)) {
              var dyn = dynamicOptions[S_FRAMEBUFFER];
              return createDynamicDecl(dyn, function (env, scope) {
                var FRAMEBUFFER_FUNC = env.invoke(scope, dyn);
                var shared = env.shared;
                var FRAMEBUFFER_STATE = shared.framebuffer;
                var FRAMEBUFFER = scope.def(FRAMEBUFFER_STATE, '.getFramebuffer(', FRAMEBUFFER_FUNC, ')');
                check$1.optional(function () {
                  env.assert(scope, '!' + FRAMEBUFFER_FUNC + '||' + FRAMEBUFFER, 'invalid framebuffer object');
                });
                scope.set(FRAMEBUFFER_STATE, '.next', FRAMEBUFFER);
                var CONTEXT = shared.context;
                scope.set(CONTEXT, '.' + S_FRAMEBUFFER_WIDTH, FRAMEBUFFER + '?' + FRAMEBUFFER + '.width:' + CONTEXT + '.' + S_DRAWINGBUFFER_WIDTH);
                scope.set(CONTEXT, '.' + S_FRAMEBUFFER_HEIGHT, FRAMEBUFFER + '?' + FRAMEBUFFER + '.height:' + CONTEXT + '.' + S_DRAWINGBUFFER_HEIGHT);
                return FRAMEBUFFER;
              });
            } else {
              return null;
            }
          }
          function parseViewportScissor(options, framebuffer, env) {
            var staticOptions = options.static;
            var dynamicOptions = options.dynamic;
            function parseBox(param) {
              if ((param in staticOptions)) {
                var box = staticOptions[param];
                check$1.commandType(box, 'object', 'invalid ' + param, env.commandStr);
                var isStatic = true;
                var x = box.x | 0;
                var y = box.y | 0;
                var w, h;
                if (('width' in box)) {
                  w = box.width | 0;
                  check$1.command(w >= 0, 'invalid ' + param, env.commandStr);
                } else {
                  isStatic = false;
                }
                if (('height' in box)) {
                  h = box.height | 0;
                  check$1.command(h >= 0, 'invalid ' + param, env.commandStr);
                } else {
                  isStatic = false;
                }
                return new Declaration(!isStatic && framebuffer && framebuffer.thisDep, !isStatic && framebuffer && framebuffer.contextDep, !isStatic && framebuffer && framebuffer.propDep, function (env, scope) {
                  var CONTEXT = env.shared.context;
                  var BOX_W = w;
                  if (!(('width' in box))) {
                    BOX_W = scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', x);
                  }
                  var BOX_H = h;
                  if (!(('height' in box))) {
                    BOX_H = scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', y);
                  }
                  return [x, y, BOX_W, BOX_H];
                });
              } else if ((param in dynamicOptions)) {
                var dynBox = dynamicOptions[param];
                var result = createDynamicDecl(dynBox, function (env, scope) {
                  var BOX = env.invoke(scope, dynBox);
                  check$1.optional(function () {
                    env.assert(scope, BOX + '&&typeof ' + BOX + '==="object"', 'invalid ' + param);
                  });
                  var CONTEXT = env.shared.context;
                  var BOX_X = scope.def(BOX, '.x|0');
                  var BOX_Y = scope.def(BOX, '.y|0');
                  var BOX_W = scope.def('"width" in ', BOX, '?', BOX, '.width|0:', '(', CONTEXT, '.', S_FRAMEBUFFER_WIDTH, '-', BOX_X, ')');
                  var BOX_H = scope.def('"height" in ', BOX, '?', BOX, '.height|0:', '(', CONTEXT, '.', S_FRAMEBUFFER_HEIGHT, '-', BOX_Y, ')');
                  check$1.optional(function () {
                    env.assert(scope, BOX_W + '>=0&&' + BOX_H + '>=0', 'invalid ' + param);
                  });
                  return [BOX_X, BOX_Y, BOX_W, BOX_H];
                });
                if (framebuffer) {
                  result.thisDep = result.thisDep || framebuffer.thisDep;
                  result.contextDep = result.contextDep || framebuffer.contextDep;
                  result.propDep = result.propDep || framebuffer.propDep;
                }
                return result;
              } else if (framebuffer) {
                return new Declaration(framebuffer.thisDep, framebuffer.contextDep, framebuffer.propDep, function (env, scope) {
                  var CONTEXT = env.shared.context;
                  return [0, 0, scope.def(CONTEXT, '.', S_FRAMEBUFFER_WIDTH), scope.def(CONTEXT, '.', S_FRAMEBUFFER_HEIGHT)];
                });
              } else {
                return null;
              }
            }
            var viewport = parseBox(S_VIEWPORT);
            if (viewport) {
              var prevViewport = viewport;
              viewport = new Declaration(viewport.thisDep, viewport.contextDep, viewport.propDep, function (env, scope) {
                var VIEWPORT = prevViewport.append(env, scope);
                var CONTEXT = env.shared.context;
                scope.set(CONTEXT, '.' + S_VIEWPORT_WIDTH, VIEWPORT[2]);
                scope.set(CONTEXT, '.' + S_VIEWPORT_HEIGHT, VIEWPORT[3]);
                return VIEWPORT;
              });
            }
            return {
              viewport: viewport,
              scissor_box: parseBox(S_SCISSOR_BOX)
            };
          }
          function parseAttribLocations(options, attributes) {
            var staticOptions = options.static;
            var staticProgram = typeof staticOptions[S_FRAG] === 'string' && typeof staticOptions[S_VERT] === 'string';
            if (staticProgram) {
              if (Object.keys(attributes.dynamic).length > 0) {
                return null;
              }
              var staticAttributes = attributes.static;
              var sAttributes = Object.keys(staticAttributes);
              if (sAttributes.length > 0 && typeof staticAttributes[sAttributes[0]] === 'number') {
                var bindings = [];
                for (var i = 0; i < sAttributes.length; ++i) {
                  check$1(typeof staticAttributes[sAttributes[i]] === 'number', 'must specify all vertex attribute locations when using vaos');
                  bindings.push([staticAttributes[sAttributes[i]] | 0, sAttributes[i]]);
                }
                return bindings;
              }
            }
            return null;
          }
          function parseProgram(options, env, attribLocations) {
            var staticOptions = options.static;
            var dynamicOptions = options.dynamic;
            function parseShader(name) {
              if ((name in staticOptions)) {
                var id = stringStore.id(staticOptions[name]);
                check$1.optional(function () {
                  shaderState.shader(shaderType[name], id, check$1.guessCommand());
                });
                var result = createStaticDecl(function () {
                  return id;
                });
                result.id = id;
                return result;
              } else if ((name in dynamicOptions)) {
                var dyn = dynamicOptions[name];
                return createDynamicDecl(dyn, function (env, scope) {
                  var str = env.invoke(scope, dyn);
                  var id = scope.def(env.shared.strings, '.id(', str, ')');
                  check$1.optional(function () {
                    scope(env.shared.shader, '.shader(', shaderType[name], ',', id, ',', env.command, ');');
                  });
                  return id;
                });
              }
              return null;
            }
            var frag = parseShader(S_FRAG);
            var vert = parseShader(S_VERT);
            var program = null;
            var progVar;
            if (isStatic(frag) && isStatic(vert)) {
              program = shaderState.program(vert.id, frag.id, null, attribLocations);
              progVar = createStaticDecl(function (env, scope) {
                return env.link(program);
              });
            } else {
              progVar = new Declaration(frag && frag.thisDep || vert && vert.thisDep, frag && frag.contextDep || vert && vert.contextDep, frag && frag.propDep || vert && vert.propDep, function (env, scope) {
                var SHADER_STATE = env.shared.shader;
                var fragId;
                if (frag) {
                  fragId = frag.append(env, scope);
                } else {
                  fragId = scope.def(SHADER_STATE, '.', S_FRAG);
                }
                var vertId;
                if (vert) {
                  vertId = vert.append(env, scope);
                } else {
                  vertId = scope.def(SHADER_STATE, '.', S_VERT);
                }
                var progDef = SHADER_STATE + '.program(' + vertId + ',' + fragId;
                check$1.optional(function () {
                  progDef += ',' + env.command;
                });
                return scope.def(progDef + ')');
              });
            }
            return {
              frag: frag,
              vert: vert,
              progVar: progVar,
              program: program
            };
          }
          function parseDraw(options, env) {
            var staticOptions = options.static;
            var dynamicOptions = options.dynamic;
            var staticDraw = {};
            var vaoActive = false;
            function parseVAO() {
              if ((S_VAO in staticOptions)) {
                var vao = staticOptions[S_VAO];
                if (vao !== null && attributeState.getVAO(vao) === null) {
                  vao = attributeState.createVAO(vao);
                }
                vaoActive = true;
                staticDraw.vao = vao;
                return createStaticDecl(function (env) {
                  var vaoRef = attributeState.getVAO(vao);
                  if (vaoRef) {
                    return env.link(vaoRef);
                  } else {
                    return 'null';
                  }
                });
              } else if ((S_VAO in dynamicOptions)) {
                vaoActive = true;
                var dyn = dynamicOptions[S_VAO];
                return createDynamicDecl(dyn, function (env, scope) {
                  var vaoRef = env.invoke(scope, dyn);
                  return scope.def(env.shared.vao + '.getVAO(' + vaoRef + ')');
                });
              }
              return null;
            }
            var vao = parseVAO();
            var elementsActive = false;
            function parseElements() {
              if ((S_ELEMENTS in staticOptions)) {
                var elements = staticOptions[S_ELEMENTS];
                staticDraw.elements = elements;
                if (isBufferArgs(elements)) {
                  var e = staticDraw.elements = elementState.create(elements, true);
                  elements = elementState.getElements(e);
                  elementsActive = true;
                } else if (elements) {
                  elements = elementState.getElements(elements);
                  elementsActive = true;
                  check$1.command(elements, 'invalid elements', env.commandStr);
                }
                var result = createStaticDecl(function (env, scope) {
                  if (elements) {
                    var result = env.link(elements);
                    env.ELEMENTS = result;
                    return result;
                  }
                  env.ELEMENTS = null;
                  return null;
                });
                result.value = elements;
                return result;
              } else if ((S_ELEMENTS in dynamicOptions)) {
                elementsActive = true;
                var dyn = dynamicOptions[S_ELEMENTS];
                return createDynamicDecl(dyn, function (env, scope) {
                  var shared = env.shared;
                  var IS_BUFFER_ARGS = shared.isBufferArgs;
                  var ELEMENT_STATE = shared.elements;
                  var elementDefn = env.invoke(scope, dyn);
                  var elements = scope.def('null');
                  var elementStream = scope.def(IS_BUFFER_ARGS, '(', elementDefn, ')');
                  var ifte = env.cond(elementStream).then(elements, '=', ELEMENT_STATE, '.createStream(', elementDefn, ');').else(elements, '=', ELEMENT_STATE, '.getElements(', elementDefn, ');');
                  check$1.optional(function () {
                    env.assert(ifte.else, '!' + elementDefn + '||' + elements, 'invalid elements');
                  });
                  scope.entry(ifte);
                  scope.exit(env.cond(elementStream).then(ELEMENT_STATE, '.destroyStream(', elements, ');'));
                  env.ELEMENTS = elements;
                  return elements;
                });
              } else if (vaoActive) {
                return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function (env, scope) {
                  return scope.def(env.shared.vao + '.currentVAO?' + env.shared.elements + '.getElements(' + env.shared.vao + '.currentVAO.elements):null');
                });
              }
              return null;
            }
            var elements = parseElements();
            function parsePrimitive() {
              if ((S_PRIMITIVE in staticOptions)) {
                var primitive = staticOptions[S_PRIMITIVE];
                staticDraw.primitive = primitive;
                check$1.commandParameter(primitive, primTypes, 'invalid primitve', env.commandStr);
                return createStaticDecl(function (env, scope) {
                  return primTypes[primitive];
                });
              } else if ((S_PRIMITIVE in dynamicOptions)) {
                var dynPrimitive = dynamicOptions[S_PRIMITIVE];
                return createDynamicDecl(dynPrimitive, function (env, scope) {
                  var PRIM_TYPES = env.constants.primTypes;
                  var prim = env.invoke(scope, dynPrimitive);
                  check$1.optional(function () {
                    env.assert(scope, prim + ' in ' + PRIM_TYPES, 'invalid primitive, must be one of ' + Object.keys(primTypes));
                  });
                  return scope.def(PRIM_TYPES, '[', prim, ']');
                });
              } else if (elementsActive) {
                if (isStatic(elements)) {
                  if (elements.value) {
                    return createStaticDecl(function (env, scope) {
                      return scope.def(env.ELEMENTS, '.primType');
                    });
                  } else {
                    return createStaticDecl(function () {
                      return GL_TRIANGLES$1;
                    });
                  }
                } else {
                  return new Declaration(elements.thisDep, elements.contextDep, elements.propDep, function (env, scope) {
                    var elements = env.ELEMENTS;
                    return scope.def(elements, '?', elements, '.primType:', GL_TRIANGLES$1);
                  });
                }
              } else if (vaoActive) {
                return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function (env, scope) {
                  return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.primitive:' + GL_TRIANGLES$1);
                });
              }
              return null;
            }
            function parseParam(param, isOffset) {
              if ((param in staticOptions)) {
                var value = staticOptions[param] | 0;
                if (isOffset) {
                  staticDraw.offset = value;
                } else {
                  staticDraw.instances = value;
                }
                check$1.command(!isOffset || value >= 0, 'invalid ' + param, env.commandStr);
                return createStaticDecl(function (env, scope) {
                  if (isOffset) {
                    env.OFFSET = value;
                  }
                  return value;
                });
              } else if ((param in dynamicOptions)) {
                var dynValue = dynamicOptions[param];
                return createDynamicDecl(dynValue, function (env, scope) {
                  var result = env.invoke(scope, dynValue);
                  if (isOffset) {
                    env.OFFSET = result;
                    check$1.optional(function () {
                      env.assert(scope, result + '>=0', 'invalid ' + param);
                    });
                  }
                  return result;
                });
              } else if (isOffset) {
                if (elementsActive) {
                  return createStaticDecl(function (env, scope) {
                    env.OFFSET = 0;
                    return 0;
                  });
                } else if (vaoActive) {
                  return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function (env, scope) {
                    return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.offset:0');
                  });
                }
              } else if (vaoActive) {
                return new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function (env, scope) {
                  return scope.def(env.shared.vao + '.currentVAO?' + env.shared.vao + '.currentVAO.instances:-1');
                });
              }
              return null;
            }
            var OFFSET = parseParam(S_OFFSET, true);
            function parseVertCount() {
              if ((S_COUNT in staticOptions)) {
                var count = staticOptions[S_COUNT] | 0;
                staticDraw.count = count;
                check$1.command(typeof count === 'number' && count >= 0, 'invalid vertex count', env.commandStr);
                return createStaticDecl(function () {
                  return count;
                });
              } else if ((S_COUNT in dynamicOptions)) {
                var dynCount = dynamicOptions[S_COUNT];
                return createDynamicDecl(dynCount, function (env, scope) {
                  var result = env.invoke(scope, dynCount);
                  check$1.optional(function () {
                    env.assert(scope, 'typeof ' + result + '==="number"&&' + result + '>=0&&' + result + '===(' + result + '|0)', 'invalid vertex count');
                  });
                  return result;
                });
              } else if (elementsActive) {
                if (isStatic(elements)) {
                  if (elements) {
                    if (OFFSET) {
                      return new Declaration(OFFSET.thisDep, OFFSET.contextDep, OFFSET.propDep, function (env, scope) {
                        var result = scope.def(env.ELEMENTS, '.vertCount-', env.OFFSET);
                        check$1.optional(function () {
                          env.assert(scope, result + '>=0', 'invalid vertex offset/element buffer too small');
                        });
                        return result;
                      });
                    } else {
                      return createStaticDecl(function (env, scope) {
                        return scope.def(env.ELEMENTS, '.vertCount');
                      });
                    }
                  } else {
                    var result = createStaticDecl(function () {
                      return -1;
                    });
                    check$1.optional(function () {
                      result.MISSING = true;
                    });
                    return result;
                  }
                } else {
                  var variable = new Declaration(elements.thisDep || OFFSET.thisDep, elements.contextDep || OFFSET.contextDep, elements.propDep || OFFSET.propDep, function (env, scope) {
                    var elements = env.ELEMENTS;
                    if (env.OFFSET) {
                      return scope.def(elements, '?', elements, '.vertCount-', env.OFFSET, ':-1');
                    }
                    return scope.def(elements, '?', elements, '.vertCount:-1');
                  });
                  check$1.optional(function () {
                    variable.DYNAMIC = true;
                  });
                  return variable;
                }
              } else if (vaoActive) {
                var countVariable = new Declaration(vao.thisDep, vao.contextDep, vao.propDep, function (env, scope) {
                  return scope.def(env.shared.vao, '.currentVAO?', env.shared.vao, '.currentVAO.count:-1');
                });
                return countVariable;
              }
              return null;
            }
            var primitive = parsePrimitive();
            var count = parseVertCount();
            var instances = parseParam(S_INSTANCES, false);
            return {
              elements: elements,
              primitive: primitive,
              count: count,
              instances: instances,
              offset: OFFSET,
              vao: vao,
              vaoActive: vaoActive,
              elementsActive: elementsActive,
              static: staticDraw
            };
          }
          function parseGLState(options, env) {
            var staticOptions = options.static;
            var dynamicOptions = options.dynamic;
            var STATE = {};
            GL_STATE_NAMES.forEach(function (prop) {
              var param = propName(prop);
              function parseParam(parseStatic, parseDynamic) {
                if ((prop in staticOptions)) {
                  var value = parseStatic(staticOptions[prop]);
                  STATE[param] = createStaticDecl(function () {
                    return value;
                  });
                } else if ((prop in dynamicOptions)) {
                  var dyn = dynamicOptions[prop];
                  STATE[param] = createDynamicDecl(dyn, function (env, scope) {
                    return parseDynamic(env, scope, env.invoke(scope, dyn));
                  });
                }
              }
              switch (prop) {
                case S_CULL_ENABLE:
                case S_BLEND_ENABLE:
                case S_DITHER:
                case S_STENCIL_ENABLE:
                case S_DEPTH_ENABLE:
                case S_SCISSOR_ENABLE:
                case S_POLYGON_OFFSET_ENABLE:
                case S_SAMPLE_ALPHA:
                case S_SAMPLE_ENABLE:
                case S_DEPTH_MASK:
                  return parseParam(function (value) {
                    check$1.commandType(value, 'boolean', prop, env.commandStr);
                    return value;
                  }, function (env, scope, value) {
                    check$1.optional(function () {
                      env.assert(scope, 'typeof ' + value + '==="boolean"', 'invalid flag ' + prop, env.commandStr);
                    });
                    return value;
                  });
                case S_DEPTH_FUNC:
                  return parseParam(function (value) {
                    check$1.commandParameter(value, compareFuncs, 'invalid ' + prop, env.commandStr);
                    return compareFuncs[value];
                  }, function (env, scope, value) {
                    var COMPARE_FUNCS = env.constants.compareFuncs;
                    check$1.optional(function () {
                      env.assert(scope, value + ' in ' + COMPARE_FUNCS, 'invalid ' + prop + ', must be one of ' + Object.keys(compareFuncs));
                    });
                    return scope.def(COMPARE_FUNCS, '[', value, ']');
                  });
                case S_DEPTH_RANGE:
                  return parseParam(function (value) {
                    check$1.command(isArrayLike(value) && value.length === 2 && typeof value[0] === 'number' && typeof value[1] === 'number' && value[0] <= value[1], 'depth range is 2d array', env.commandStr);
                    return value;
                  }, function (env, scope, value) {
                    check$1.optional(function () {
                      env.assert(scope, env.shared.isArrayLike + '(' + value + ')&&' + value + '.length===2&&' + 'typeof ' + value + '[0]==="number"&&' + 'typeof ' + value + '[1]==="number"&&' + value + '[0]<=' + value + '[1]', 'depth range must be a 2d array');
                    });
                    var Z_NEAR = scope.def('+', value, '[0]');
                    var Z_FAR = scope.def('+', value, '[1]');
                    return [Z_NEAR, Z_FAR];
                  });
                case S_BLEND_FUNC:
                  return parseParam(function (value) {
                    check$1.commandType(value, 'object', 'blend.func', env.commandStr);
                    var srcRGB = ('srcRGB' in value) ? value.srcRGB : value.src;
                    var srcAlpha = ('srcAlpha' in value) ? value.srcAlpha : value.src;
                    var dstRGB = ('dstRGB' in value) ? value.dstRGB : value.dst;
                    var dstAlpha = ('dstAlpha' in value) ? value.dstAlpha : value.dst;
                    check$1.commandParameter(srcRGB, blendFuncs, param + '.srcRGB', env.commandStr);
                    check$1.commandParameter(srcAlpha, blendFuncs, param + '.srcAlpha', env.commandStr);
                    check$1.commandParameter(dstRGB, blendFuncs, param + '.dstRGB', env.commandStr);
                    check$1.commandParameter(dstAlpha, blendFuncs, param + '.dstAlpha', env.commandStr);
                    check$1.command(invalidBlendCombinations.indexOf(srcRGB + ', ' + dstRGB) === -1, 'unallowed blending combination (srcRGB, dstRGB) = (' + srcRGB + ', ' + dstRGB + ')', env.commandStr);
                    return [blendFuncs[srcRGB], blendFuncs[dstRGB], blendFuncs[srcAlpha], blendFuncs[dstAlpha]];
                  }, function (env, scope, value) {
                    var BLEND_FUNCS = env.constants.blendFuncs;
                    check$1.optional(function () {
                      env.assert(scope, value + '&&typeof ' + value + '==="object"', 'invalid blend func, must be an object');
                    });
                    function read(prefix, suffix) {
                      var func = scope.def('"', prefix, suffix, '" in ', value, '?', value, '.', prefix, suffix, ':', value, '.', prefix);
                      check$1.optional(function () {
                        env.assert(scope, func + ' in ' + BLEND_FUNCS, 'invalid ' + prop + '.' + prefix + suffix + ', must be one of ' + Object.keys(blendFuncs));
                      });
                      return func;
                    }
                    var srcRGB = read('src', 'RGB');
                    var dstRGB = read('dst', 'RGB');
                    check$1.optional(function () {
                      var INVALID_BLEND_COMBINATIONS = env.constants.invalidBlendCombinations;
                      env.assert(scope, INVALID_BLEND_COMBINATIONS + '.indexOf(' + srcRGB + '+", "+' + dstRGB + ') === -1 ', 'unallowed blending combination for (srcRGB, dstRGB)');
                    });
                    var SRC_RGB = scope.def(BLEND_FUNCS, '[', srcRGB, ']');
                    var SRC_ALPHA = scope.def(BLEND_FUNCS, '[', read('src', 'Alpha'), ']');
                    var DST_RGB = scope.def(BLEND_FUNCS, '[', dstRGB, ']');
                    var DST_ALPHA = scope.def(BLEND_FUNCS, '[', read('dst', 'Alpha'), ']');
                    return [SRC_RGB, DST_RGB, SRC_ALPHA, DST_ALPHA];
                  });
                case S_BLEND_EQUATION:
                  return parseParam(function (value) {
                    if (typeof value === 'string') {
                      check$1.commandParameter(value, blendEquations, 'invalid ' + prop, env.commandStr);
                      return [blendEquations[value], blendEquations[value]];
                    } else if (typeof value === 'object') {
                      check$1.commandParameter(value.rgb, blendEquations, prop + '.rgb', env.commandStr);
                      check$1.commandParameter(value.alpha, blendEquations, prop + '.alpha', env.commandStr);
                      return [blendEquations[value.rgb], blendEquations[value.alpha]];
                    } else {
                      check$1.commandRaise('invalid blend.equation', env.commandStr);
                    }
                  }, function (env, scope, value) {
                    var BLEND_EQUATIONS = env.constants.blendEquations;
                    var RGB = scope.def();
                    var ALPHA = scope.def();
                    var ifte = env.cond('typeof ', value, '==="string"');
                    check$1.optional(function () {
                      function checkProp(block, name, value) {
                        env.assert(block, value + ' in ' + BLEND_EQUATIONS, 'invalid ' + name + ', must be one of ' + Object.keys(blendEquations));
                      }
                      checkProp(ifte.then, prop, value);
                      env.assert(ifte.else, value + '&&typeof ' + value + '==="object"', 'invalid ' + prop);
                      checkProp(ifte.else, prop + '.rgb', value + '.rgb');
                      checkProp(ifte.else, prop + '.alpha', value + '.alpha');
                    });
                    ifte.then(RGB, '=', ALPHA, '=', BLEND_EQUATIONS, '[', value, '];');
                    ifte.else(RGB, '=', BLEND_EQUATIONS, '[', value, '.rgb];', ALPHA, '=', BLEND_EQUATIONS, '[', value, '.alpha];');
                    scope(ifte);
                    return [RGB, ALPHA];
                  });
                case S_BLEND_COLOR:
                  return parseParam(function (value) {
                    check$1.command(isArrayLike(value) && value.length === 4, 'blend.color must be a 4d array', env.commandStr);
                    return loop(4, function (i) {
                      return +value[i];
                    });
                  }, function (env, scope, value) {
                    check$1.optional(function () {
                      env.assert(scope, env.shared.isArrayLike + '(' + value + ')&&' + value + '.length===4', 'blend.color must be a 4d array');
                    });
                    return loop(4, function (i) {
                      return scope.def('+', value, '[', i, ']');
                    });
                  });
                case S_STENCIL_MASK:
                  return parseParam(function (value) {
                    check$1.commandType(value, 'number', param, env.commandStr);
                    return value | 0;
                  }, function (env, scope, value) {
                    check$1.optional(function () {
                      env.assert(scope, 'typeof ' + value + '==="number"', 'invalid stencil.mask');
                    });
                    return scope.def(value, '|0');
                  });
                case S_STENCIL_FUNC:
                  return parseParam(function (value) {
                    check$1.commandType(value, 'object', param, env.commandStr);
                    var cmp = value.cmp || 'keep';
                    var ref = value.ref || 0;
                    var mask = ('mask' in value) ? value.mask : -1;
                    check$1.commandParameter(cmp, compareFuncs, prop + '.cmp', env.commandStr);
                    check$1.commandType(ref, 'number', prop + '.ref', env.commandStr);
                    check$1.commandType(mask, 'number', prop + '.mask', env.commandStr);
                    return [compareFuncs[cmp], ref, mask];
                  }, function (env, scope, value) {
                    var COMPARE_FUNCS = env.constants.compareFuncs;
                    check$1.optional(function () {
                      function assert() {
                        env.assert(scope, Array.prototype.join.call(arguments, ''), 'invalid stencil.func');
                      }
                      assert(value + '&&typeof ', value, '==="object"');
                      assert('!("cmp" in ', value, ')||(', value, '.cmp in ', COMPARE_FUNCS, ')');
                    });
                    var cmp = scope.def('"cmp" in ', value, '?', COMPARE_FUNCS, '[', value, '.cmp]', ':', GL_KEEP);
                    var ref = scope.def(value, '.ref|0');
                    var mask = scope.def('"mask" in ', value, '?', value, '.mask|0:-1');
                    return [cmp, ref, mask];
                  });
                case S_STENCIL_OPFRONT:
                case S_STENCIL_OPBACK:
                  return parseParam(function (value) {
                    check$1.commandType(value, 'object', param, env.commandStr);
                    var fail = value.fail || 'keep';
                    var zfail = value.zfail || 'keep';
                    var zpass = value.zpass || 'keep';
                    check$1.commandParameter(fail, stencilOps, prop + '.fail', env.commandStr);
                    check$1.commandParameter(zfail, stencilOps, prop + '.zfail', env.commandStr);
                    check$1.commandParameter(zpass, stencilOps, prop + '.zpass', env.commandStr);
                    return [prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT, stencilOps[fail], stencilOps[zfail], stencilOps[zpass]];
                  }, function (env, scope, value) {
                    var STENCIL_OPS = env.constants.stencilOps;
                    check$1.optional(function () {
                      env.assert(scope, value + '&&typeof ' + value + '==="object"', 'invalid ' + prop);
                    });
                    function read(name) {
                      check$1.optional(function () {
                        env.assert(scope, '!("' + name + '" in ' + value + ')||' + '(' + value + '.' + name + ' in ' + STENCIL_OPS + ')', 'invalid ' + prop + '.' + name + ', must be one of ' + Object.keys(stencilOps));
                      });
                      return scope.def('"', name, '" in ', value, '?', STENCIL_OPS, '[', value, '.', name, ']:', GL_KEEP);
                    }
                    return [prop === S_STENCIL_OPBACK ? GL_BACK : GL_FRONT, read('fail'), read('zfail'), read('zpass')];
                  });
                case S_POLYGON_OFFSET_OFFSET:
                  return parseParam(function (value) {
                    check$1.commandType(value, 'object', param, env.commandStr);
                    var factor = value.factor | 0;
                    var units = value.units | 0;
                    check$1.commandType(factor, 'number', param + '.factor', env.commandStr);
                    check$1.commandType(units, 'number', param + '.units', env.commandStr);
                    return [factor, units];
                  }, function (env, scope, value) {
                    check$1.optional(function () {
                      env.assert(scope, value + '&&typeof ' + value + '==="object"', 'invalid ' + prop);
                    });
                    var FACTOR = scope.def(value, '.factor|0');
                    var UNITS = scope.def(value, '.units|0');
                    return [FACTOR, UNITS];
                  });
                case S_CULL_FACE:
                  return parseParam(function (value) {
                    var face = 0;
                    if (value === 'front') {
                      face = GL_FRONT;
                    } else if (value === 'back') {
                      face = GL_BACK;
                    }
                    check$1.command(!!face, param, env.commandStr);
                    return face;
                  }, function (env, scope, value) {
                    check$1.optional(function () {
                      env.assert(scope, value + '==="front"||' + value + '==="back"', 'invalid cull.face');
                    });
                    return scope.def(value, '==="front"?', GL_FRONT, ':', GL_BACK);
                  });
                case S_LINE_WIDTH:
                  return parseParam(function (value) {
                    check$1.command(typeof value === 'number' && value >= limits.lineWidthDims[0] && value <= limits.lineWidthDims[1], 'invalid line width, must be a positive number between ' + limits.lineWidthDims[0] + ' and ' + limits.lineWidthDims[1], env.commandStr);
                    return value;
                  }, function (env, scope, value) {
                    check$1.optional(function () {
                      env.assert(scope, 'typeof ' + value + '==="number"&&' + value + '>=' + limits.lineWidthDims[0] + '&&' + value + '<=' + limits.lineWidthDims[1], 'invalid line width');
                    });
                    return value;
                  });
                case S_FRONT_FACE:
                  return parseParam(function (value) {
                    check$1.commandParameter(value, orientationType, param, env.commandStr);
                    return orientationType[value];
                  }, function (env, scope, value) {
                    check$1.optional(function () {
                      env.assert(scope, value + '==="cw"||' + value + '==="ccw"', 'invalid frontFace, must be one of cw,ccw');
                    });
                    return scope.def(value + '==="cw"?' + GL_CW + ':' + GL_CCW);
                  });
                case S_COLOR_MASK:
                  return parseParam(function (value) {
                    check$1.command(isArrayLike(value) && value.length === 4, 'color.mask must be length 4 array', env.commandStr);
                    return value.map(function (v) {
                      return !!v;
                    });
                  }, function (env, scope, value) {
                    check$1.optional(function () {
                      env.assert(scope, env.shared.isArrayLike + '(' + value + ')&&' + value + '.length===4', 'invalid color.mask');
                    });
                    return loop(4, function (i) {
                      return '!!' + value + '[' + i + ']';
                    });
                  });
                case S_SAMPLE_COVERAGE:
                  return parseParam(function (value) {
                    check$1.command(typeof value === 'object' && value, param, env.commandStr);
                    var sampleValue = ('value' in value) ? value.value : 1;
                    var sampleInvert = !!value.invert;
                    check$1.command(typeof sampleValue === 'number' && sampleValue >= 0 && sampleValue <= 1, 'sample.coverage.value must be a number between 0 and 1', env.commandStr);
                    return [sampleValue, sampleInvert];
                  }, function (env, scope, value) {
                    check$1.optional(function () {
                      env.assert(scope, value + '&&typeof ' + value + '==="object"', 'invalid sample.coverage');
                    });
                    var VALUE = scope.def('"value" in ', value, '?+', value, '.value:1');
                    var INVERT = scope.def('!!', value, '.invert');
                    return [VALUE, INVERT];
                  });
              }
            });
            return STATE;
          }
          function parseUniforms(uniforms, env) {
            var staticUniforms = uniforms.static;
            var dynamicUniforms = uniforms.dynamic;
            var UNIFORMS = {};
            Object.keys(staticUniforms).forEach(function (name) {
              var value = staticUniforms[name];
              var result;
              if (typeof value === 'number' || typeof value === 'boolean') {
                result = createStaticDecl(function () {
                  return value;
                });
              } else if (typeof value === 'function') {
                var reglType = value._reglType;
                if (reglType === 'texture2d' || reglType === 'textureCube') {
                  result = createStaticDecl(function (env) {
                    return env.link(value);
                  });
                } else if (reglType === 'framebuffer' || reglType === 'framebufferCube') {
                  check$1.command(value.color.length > 0, 'missing color attachment for framebuffer sent to uniform "' + name + '"', env.commandStr);
                  result = createStaticDecl(function (env) {
                    return env.link(value.color[0]);
                  });
                } else {
                  check$1.commandRaise('invalid data for uniform "' + name + '"', env.commandStr);
                }
              } else if (isArrayLike(value)) {
                result = createStaticDecl(function (env) {
                  var ITEM = env.global.def('[', loop(value.length, function (i) {
                    check$1.command(typeof value[i] === 'number' || typeof value[i] === 'boolean', 'invalid uniform ' + name, env.commandStr);
                    return value[i];
                  }), ']');
                  return ITEM;
                });
              } else {
                check$1.commandRaise('invalid or missing data for uniform "' + name + '"', env.commandStr);
              }
              result.value = value;
              UNIFORMS[name] = result;
            });
            Object.keys(dynamicUniforms).forEach(function (key) {
              var dyn = dynamicUniforms[key];
              UNIFORMS[key] = createDynamicDecl(dyn, function (env, scope) {
                return env.invoke(scope, dyn);
              });
            });
            return UNIFORMS;
          }
          function parseAttributes(attributes, env) {
            var staticAttributes = attributes.static;
            var dynamicAttributes = attributes.dynamic;
            var attributeDefs = {};
            Object.keys(staticAttributes).forEach(function (attribute) {
              var value = staticAttributes[attribute];
              var id = stringStore.id(attribute);
              var record = new AttributeRecord();
              if (isBufferArgs(value)) {
                record.state = ATTRIB_STATE_POINTER;
                record.buffer = bufferState.getBuffer(bufferState.create(value, GL_ARRAY_BUFFER$2, false, true));
                record.type = 0;
              } else {
                var buffer = bufferState.getBuffer(value);
                if (buffer) {
                  record.state = ATTRIB_STATE_POINTER;
                  record.buffer = buffer;
                  record.type = 0;
                } else {
                  check$1.command(typeof value === 'object' && value, 'invalid data for attribute ' + attribute, env.commandStr);
                  if (('constant' in value)) {
                    var constant = value.constant;
                    record.buffer = 'null';
                    record.state = ATTRIB_STATE_CONSTANT;
                    if (typeof constant === 'number') {
                      record.x = constant;
                    } else {
                      check$1.command(isArrayLike(constant) && constant.length > 0 && constant.length <= 4, 'invalid constant for attribute ' + attribute, env.commandStr);
                      CUTE_COMPONENTS.forEach(function (c, i) {
                        if (i < constant.length) {
                          record[c] = constant[i];
                        }
                      });
                    }
                  } else {
                    if (isBufferArgs(value.buffer)) {
                      buffer = bufferState.getBuffer(bufferState.create(value.buffer, GL_ARRAY_BUFFER$2, false, true));
                    } else {
                      buffer = bufferState.getBuffer(value.buffer);
                    }
                    check$1.command(!!buffer, 'missing buffer for attribute "' + attribute + '"', env.commandStr);
                    var offset = value.offset | 0;
                    check$1.command(offset >= 0, 'invalid offset for attribute "' + attribute + '"', env.commandStr);
                    var stride = value.stride | 0;
                    check$1.command(stride >= 0 && stride < 256, 'invalid stride for attribute "' + attribute + '", must be integer betweeen [0, 255]', env.commandStr);
                    var size = value.size | 0;
                    check$1.command(!(('size' in value)) || size > 0 && size <= 4, 'invalid size for attribute "' + attribute + '", must be 1,2,3,4', env.commandStr);
                    var normalized = !!value.normalized;
                    var type = 0;
                    if (('type' in value)) {
                      check$1.commandParameter(value.type, glTypes, 'invalid type for attribute ' + attribute, env.commandStr);
                      type = glTypes[value.type];
                    }
                    var divisor = value.divisor | 0;
                    check$1.optional(function () {
                      if (('divisor' in value)) {
                        check$1.command(divisor === 0 || extInstancing, 'cannot specify divisor for attribute "' + attribute + '", instancing not supported', env.commandStr);
                        check$1.command(divisor >= 0, 'invalid divisor for attribute "' + attribute + '"', env.commandStr);
                      }
                      var command = env.commandStr;
                      var VALID_KEYS = ['buffer', 'offset', 'divisor', 'normalized', 'type', 'size', 'stride'];
                      Object.keys(value).forEach(function (prop) {
                        check$1.command(VALID_KEYS.indexOf(prop) >= 0, 'unknown parameter "' + prop + '" for attribute pointer "' + attribute + '" (valid parameters are ' + VALID_KEYS + ')', command);
                      });
                    });
                    record.buffer = buffer;
                    record.state = ATTRIB_STATE_POINTER;
                    record.size = size;
                    record.normalized = normalized;
                    record.type = type || buffer.dtype;
                    record.offset = offset;
                    record.stride = stride;
                    record.divisor = divisor;
                  }
                }
              }
              attributeDefs[attribute] = createStaticDecl(function (env, scope) {
                var cache = env.attribCache;
                if ((id in cache)) {
                  return cache[id];
                }
                var result = {
                  isStream: false
                };
                Object.keys(record).forEach(function (key) {
                  result[key] = record[key];
                });
                if (record.buffer) {
                  result.buffer = env.link(record.buffer);
                  result.type = result.type || result.buffer + '.dtype';
                }
                cache[id] = result;
                return result;
              });
            });
            Object.keys(dynamicAttributes).forEach(function (attribute) {
              var dyn = dynamicAttributes[attribute];
              function appendAttributeCode(env, block) {
                var VALUE = env.invoke(block, dyn);
                var shared = env.shared;
                var constants = env.constants;
                var IS_BUFFER_ARGS = shared.isBufferArgs;
                var BUFFER_STATE = shared.buffer;
                check$1.optional(function () {
                  env.assert(block, VALUE + '&&(typeof ' + VALUE + '==="object"||typeof ' + VALUE + '==="function")&&(' + IS_BUFFER_ARGS + '(' + VALUE + ')||' + BUFFER_STATE + '.getBuffer(' + VALUE + ')||' + BUFFER_STATE + '.getBuffer(' + VALUE + '.buffer)||' + IS_BUFFER_ARGS + '(' + VALUE + '.buffer)||' + '("constant" in ' + VALUE + '&&(typeof ' + VALUE + '.constant==="number"||' + shared.isArrayLike + '(' + VALUE + '.constant))))', 'invalid dynamic attribute "' + attribute + '"');
                });
                var result = {
                  isStream: block.def(false)
                };
                var defaultRecord = new AttributeRecord();
                defaultRecord.state = ATTRIB_STATE_POINTER;
                Object.keys(defaultRecord).forEach(function (key) {
                  result[key] = block.def('' + defaultRecord[key]);
                });
                var BUFFER = result.buffer;
                var TYPE = result.type;
                block('if(', IS_BUFFER_ARGS, '(', VALUE, ')){', result.isStream, '=true;', BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$2, ',', VALUE, ');', TYPE, '=', BUFFER, '.dtype;', '}else{', BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, ');', 'if(', BUFFER, '){', TYPE, '=', BUFFER, '.dtype;', '}else if("constant" in ', VALUE, '){', result.state, '=', ATTRIB_STATE_CONSTANT, ';', 'if(typeof ' + VALUE + '.constant === "number"){', result[CUTE_COMPONENTS[0]], '=', VALUE, '.constant;', CUTE_COMPONENTS.slice(1).map(function (n) {
                  return result[n];
                }).join('='), '=0;', '}else{', CUTE_COMPONENTS.map(function (name, i) {
                  return result[name] + '=' + VALUE + '.constant.length>' + i + '?' + VALUE + '.constant[' + i + ']:0;';
                }).join(''), '}}else{', 'if(', IS_BUFFER_ARGS, '(', VALUE, '.buffer)){', BUFFER, '=', BUFFER_STATE, '.createStream(', GL_ARRAY_BUFFER$2, ',', VALUE, '.buffer);', '}else{', BUFFER, '=', BUFFER_STATE, '.getBuffer(', VALUE, '.buffer);', '}', TYPE, '="type" in ', VALUE, '?', constants.glTypes, '[', VALUE, '.type]:', BUFFER, '.dtype;', result.normalized, '=!!', VALUE, '.normalized;');
                function emitReadRecord(name) {
                  block(result[name], '=', VALUE, '.', name, '|0;');
                }
                emitReadRecord('size');
                emitReadRecord('offset');
                emitReadRecord('stride');
                emitReadRecord('divisor');
                block('}}');
                block.exit('if(', result.isStream, '){', BUFFER_STATE, '.destroyStream(', BUFFER, ');', '}');
                return result;
              }
              attributeDefs[attribute] = createDynamicDecl(dyn, appendAttributeCode);
            });
            return attributeDefs;
          }
          function parseContext(context) {
            var staticContext = context.static;
            var dynamicContext = context.dynamic;
            var result = {};
            Object.keys(staticContext).forEach(function (name) {
              var value = staticContext[name];
              result[name] = createStaticDecl(function (env, scope) {
                if (typeof value === 'number' || typeof value === 'boolean') {
                  return '' + value;
                } else {
                  return env.link(value);
                }
              });
            });
            Object.keys(dynamicContext).forEach(function (name) {
              var dyn = dynamicContext[name];
              result[name] = createDynamicDecl(dyn, function (env, scope) {
                return env.invoke(scope, dyn);
              });
            });
            return result;
          }
          function parseArguments(options, attributes, uniforms, context, env) {
            var staticOptions = options.static;
            var dynamicOptions = options.dynamic;
            check$1.optional(function () {
              var KEY_NAMES = [S_FRAMEBUFFER, S_VERT, S_FRAG, S_ELEMENTS, S_PRIMITIVE, S_OFFSET, S_COUNT, S_INSTANCES, S_PROFILE, S_VAO].concat(GL_STATE_NAMES);
              function checkKeys(dict) {
                Object.keys(dict).forEach(function (key) {
                  check$1.command(KEY_NAMES.indexOf(key) >= 0, 'unknown parameter "' + key + '"', env.commandStr);
                });
              }
              checkKeys(staticOptions);
              checkKeys(dynamicOptions);
            });
            var attribLocations = parseAttribLocations(options, attributes);
            var framebuffer = parseFramebuffer(options);
            var viewportAndScissor = parseViewportScissor(options, framebuffer, env);
            var draw = parseDraw(options, env);
            var state = parseGLState(options, env);
            var shader = parseProgram(options, env, attribLocations);
            function copyBox(name) {
              var defn = viewportAndScissor[name];
              if (defn) {
                state[name] = defn;
              }
            }
            copyBox(S_VIEWPORT);
            copyBox(propName(S_SCISSOR_BOX));
            var dirty = Object.keys(state).length > 0;
            var result = {
              framebuffer: framebuffer,
              draw: draw,
              shader: shader,
              state: state,
              dirty: dirty,
              scopeVAO: null,
              drawVAO: null,
              useVAO: false,
              attributes: {}
            };
            result.profile = parseProfile(options);
            result.uniforms = parseUniforms(uniforms, env);
            result.drawVAO = result.scopeVAO = draw.vao;
            if (!result.drawVAO && shader.program && !attribLocations && extensions.angle_instanced_arrays && draw.static.elements) {
              var useVAO = true;
              var staticBindings = shader.program.attributes.map(function (attr) {
                var binding = attributes.static[attr];
                useVAO = useVAO && !!binding;
                return binding;
              });
              if (useVAO && staticBindings.length > 0) {
                var vao = attributeState.getVAO(attributeState.createVAO({
                  attributes: staticBindings,
                  elements: draw.static.elements
                }));
                result.drawVAO = new Declaration(null, null, null, function (env, scope) {
                  return env.link(vao);
                });
                result.useVAO = true;
              }
            }
            if (attribLocations) {
              result.useVAO = true;
            } else {
              result.attributes = parseAttributes(attributes, env);
            }
            result.context = parseContext(context);
            return result;
          }
          function emitContext(env, scope, context) {
            var shared = env.shared;
            var CONTEXT = shared.context;
            var contextEnter = env.scope();
            Object.keys(context).forEach(function (name) {
              scope.save(CONTEXT, '.' + name);
              var defn = context[name];
              var value = defn.append(env, scope);
              if (Array.isArray(value)) {
                contextEnter(CONTEXT, '.', name, '=[', value.join(), '];');
              } else {
                contextEnter(CONTEXT, '.', name, '=', value, ';');
              }
            });
            scope(contextEnter);
          }
          function emitPollFramebuffer(env, scope, framebuffer, skipCheck) {
            var shared = env.shared;
            var GL = shared.gl;
            var FRAMEBUFFER_STATE = shared.framebuffer;
            var EXT_DRAW_BUFFERS;
            if (extDrawBuffers) {
              EXT_DRAW_BUFFERS = scope.def(shared.extensions, '.webgl_draw_buffers');
            }
            var constants = env.constants;
            var DRAW_BUFFERS = constants.drawBuffer;
            var BACK_BUFFER = constants.backBuffer;
            var NEXT;
            if (framebuffer) {
              NEXT = framebuffer.append(env, scope);
            } else {
              NEXT = scope.def(FRAMEBUFFER_STATE, '.next');
            }
            if (!skipCheck) {
              scope('if(', NEXT, '!==', FRAMEBUFFER_STATE, '.cur){');
            }
            scope('if(', NEXT, '){', GL, '.bindFramebuffer(', GL_FRAMEBUFFER$2, ',', NEXT, '.framebuffer);');
            if (extDrawBuffers) {
              scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(', DRAW_BUFFERS, '[', NEXT, '.colorAttachments.length]);');
            }
            scope('}else{', GL, '.bindFramebuffer(', GL_FRAMEBUFFER$2, ',null);');
            if (extDrawBuffers) {
              scope(EXT_DRAW_BUFFERS, '.drawBuffersWEBGL(', BACK_BUFFER, ');');
            }
            scope('}', FRAMEBUFFER_STATE, '.cur=', NEXT, ';');
            if (!skipCheck) {
              scope('}');
            }
          }
          function emitPollState(env, scope, args) {
            var shared = env.shared;
            var GL = shared.gl;
            var CURRENT_VARS = env.current;
            var NEXT_VARS = env.next;
            var CURRENT_STATE = shared.current;
            var NEXT_STATE = shared.next;
            var block = env.cond(CURRENT_STATE, '.dirty');
            GL_STATE_NAMES.forEach(function (prop) {
              var param = propName(prop);
              if ((param in args.state)) {
                return;
              }
              var NEXT, CURRENT;
              if ((param in NEXT_VARS)) {
                NEXT = NEXT_VARS[param];
                CURRENT = CURRENT_VARS[param];
                var parts = loop(currentState[param].length, function (i) {
                  return block.def(NEXT, '[', i, ']');
                });
                block(env.cond(parts.map(function (p, i) {
                  return p + '!==' + CURRENT + '[' + i + ']';
                }).join('||')).then(GL, '.', GL_VARIABLES[param], '(', parts, ');', parts.map(function (p, i) {
                  return CURRENT + '[' + i + ']=' + p;
                }).join(';'), ';'));
              } else {
                NEXT = block.def(NEXT_STATE, '.', param);
                var ifte = env.cond(NEXT, '!==', CURRENT_STATE, '.', param);
                block(ifte);
                if ((param in GL_FLAGS)) {
                  ifte(env.cond(NEXT).then(GL, '.enable(', GL_FLAGS[param], ');').else(GL, '.disable(', GL_FLAGS[param], ');'), CURRENT_STATE, '.', param, '=', NEXT, ';');
                } else {
                  ifte(GL, '.', GL_VARIABLES[param], '(', NEXT, ');', CURRENT_STATE, '.', param, '=', NEXT, ';');
                }
              }
            });
            if (Object.keys(args.state).length === 0) {
              block(CURRENT_STATE, '.dirty=false;');
            }
            scope(block);
          }
          function emitSetOptions(env, scope, options, filter) {
            var shared = env.shared;
            var CURRENT_VARS = env.current;
            var CURRENT_STATE = shared.current;
            var GL = shared.gl;
            sortState(Object.keys(options)).forEach(function (param) {
              var defn = options[param];
              if (filter && !filter(defn)) {
                return;
              }
              var variable = defn.append(env, scope);
              if (GL_FLAGS[param]) {
                var flag = GL_FLAGS[param];
                if (isStatic(defn)) {
                  if (variable) {
                    scope(GL, '.enable(', flag, ');');
                  } else {
                    scope(GL, '.disable(', flag, ');');
                  }
                } else {
                  scope(env.cond(variable).then(GL, '.enable(', flag, ');').else(GL, '.disable(', flag, ');'));
                }
                scope(CURRENT_STATE, '.', param, '=', variable, ';');
              } else if (isArrayLike(variable)) {
                var CURRENT = CURRENT_VARS[param];
                scope(GL, '.', GL_VARIABLES[param], '(', variable, ');', variable.map(function (v, i) {
                  return CURRENT + '[' + i + ']=' + v;
                }).join(';'), ';');
              } else {
                scope(GL, '.', GL_VARIABLES[param], '(', variable, ');', CURRENT_STATE, '.', param, '=', variable, ';');
              }
            });
          }
          function injectExtensions(env, scope) {
            if (extInstancing) {
              env.instancing = scope.def(env.shared.extensions, '.angle_instanced_arrays');
            }
          }
          function emitProfile(env, scope, args, useScope, incrementCounter) {
            var shared = env.shared;
            var STATS = env.stats;
            var CURRENT_STATE = shared.current;
            var TIMER = shared.timer;
            var profileArg = args.profile;
            function perfCounter() {
              if (typeof performance === 'undefined') {
                return 'Date.now()';
              } else {
                return 'performance.now()';
              }
            }
            var CPU_START, QUERY_COUNTER;
            function emitProfileStart(block) {
              CPU_START = scope.def();
              block(CPU_START, '=', perfCounter(), ';');
              if (typeof incrementCounter === 'string') {
                block(STATS, '.count+=', incrementCounter, ';');
              } else {
                block(STATS, '.count++;');
              }
              if (timer) {
                if (useScope) {
                  QUERY_COUNTER = scope.def();
                  block(QUERY_COUNTER, '=', TIMER, '.getNumPendingQueries();');
                } else {
                  block(TIMER, '.beginQuery(', STATS, ');');
                }
              }
            }
            function emitProfileEnd(block) {
              block(STATS, '.cpuTime+=', perfCounter(), '-', CPU_START, ';');
              if (timer) {
                if (useScope) {
                  block(TIMER, '.pushScopeStats(', QUERY_COUNTER, ',', TIMER, '.getNumPendingQueries(),', STATS, ');');
                } else {
                  block(TIMER, '.endQuery();');
                }
              }
            }
            function scopeProfile(value) {
              var prev = scope.def(CURRENT_STATE, '.profile');
              scope(CURRENT_STATE, '.profile=', value, ';');
              scope.exit(CURRENT_STATE, '.profile=', prev, ';');
            }
            var USE_PROFILE;
            if (profileArg) {
              if (isStatic(profileArg)) {
                if (profileArg.enable) {
                  emitProfileStart(scope);
                  emitProfileEnd(scope.exit);
                  scopeProfile('true');
                } else {
                  scopeProfile('false');
                }
                return;
              }
              USE_PROFILE = profileArg.append(env, scope);
              scopeProfile(USE_PROFILE);
            } else {
              USE_PROFILE = scope.def(CURRENT_STATE, '.profile');
            }
            var start = env.block();
            emitProfileStart(start);
            scope('if(', USE_PROFILE, '){', start, '}');
            var end = env.block();
            emitProfileEnd(end);
            scope.exit('if(', USE_PROFILE, '){', end, '}');
          }
          function emitAttributes(env, scope, args, attributes, filter) {
            var shared = env.shared;
            function typeLength(x) {
              switch (x) {
                case GL_FLOAT_VEC2:
                case GL_INT_VEC2:
                case GL_BOOL_VEC2:
                  return 2;
                case GL_FLOAT_VEC3:
                case GL_INT_VEC3:
                case GL_BOOL_VEC3:
                  return 3;
                case GL_FLOAT_VEC4:
                case GL_INT_VEC4:
                case GL_BOOL_VEC4:
                  return 4;
                default:
                  return 1;
              }
            }
            function emitBindAttribute(ATTRIBUTE, size, record) {
              var GL = shared.gl;
              var LOCATION = scope.def(ATTRIBUTE, '.location');
              var BINDING = scope.def(shared.attributes, '[', LOCATION, ']');
              var STATE = record.state;
              var BUFFER = record.buffer;
              var CONST_COMPONENTS = [record.x, record.y, record.z, record.w];
              var COMMON_KEYS = ['buffer', 'normalized', 'offset', 'stride'];
              function emitBuffer() {
                scope('if(!', BINDING, '.buffer){', GL, '.enableVertexAttribArray(', LOCATION, ');}');
                var TYPE = record.type;
                var SIZE;
                if (!record.size) {
                  SIZE = size;
                } else {
                  SIZE = scope.def(record.size, '||', size);
                }
                scope('if(', BINDING, '.type!==', TYPE, '||', BINDING, '.size!==', SIZE, '||', COMMON_KEYS.map(function (key) {
                  return BINDING + '.' + key + '!==' + record[key];
                }).join('||'), '){', GL, '.bindBuffer(', GL_ARRAY_BUFFER$2, ',', BUFFER, '.buffer);', GL, '.vertexAttribPointer(', [LOCATION, SIZE, TYPE, record.normalized, record.stride, record.offset], ');', BINDING, '.type=', TYPE, ';', BINDING, '.size=', SIZE, ';', COMMON_KEYS.map(function (key) {
                  return BINDING + '.' + key + '=' + record[key] + ';';
                }).join(''), '}');
                if (extInstancing) {
                  var DIVISOR = record.divisor;
                  scope('if(', BINDING, '.divisor!==', DIVISOR, '){', env.instancing, '.vertexAttribDivisorANGLE(', [LOCATION, DIVISOR], ');', BINDING, '.divisor=', DIVISOR, ';}');
                }
              }
              function emitConstant() {
                scope('if(', BINDING, '.buffer){', GL, '.disableVertexAttribArray(', LOCATION, ');', BINDING, '.buffer=null;', '}if(', CUTE_COMPONENTS.map(function (c, i) {
                  return BINDING + '.' + c + '!==' + CONST_COMPONENTS[i];
                }).join('||'), '){', GL, '.vertexAttrib4f(', LOCATION, ',', CONST_COMPONENTS, ');', CUTE_COMPONENTS.map(function (c, i) {
                  return BINDING + '.' + c + '=' + CONST_COMPONENTS[i] + ';';
                }).join(''), '}');
              }
              if (STATE === ATTRIB_STATE_POINTER) {
                emitBuffer();
              } else if (STATE === ATTRIB_STATE_CONSTANT) {
                emitConstant();
              } else {
                scope('if(', STATE, '===', ATTRIB_STATE_POINTER, '){');
                emitBuffer();
                scope('}else{');
                emitConstant();
                scope('}');
              }
            }
            attributes.forEach(function (attribute) {
              var name = attribute.name;
              var arg = args.attributes[name];
              var record;
              if (arg) {
                if (!filter(arg)) {
                  return;
                }
                record = arg.append(env, scope);
              } else {
                if (!filter(SCOPE_DECL)) {
                  return;
                }
                var scopeAttrib = env.scopeAttrib(name);
                check$1.optional(function () {
                  env.assert(scope, scopeAttrib + '.state', 'missing attribute ' + name);
                });
                record = {};
                Object.keys(new AttributeRecord()).forEach(function (key) {
                  record[key] = scope.def(scopeAttrib, '.', key);
                });
              }
              emitBindAttribute(env.link(attribute), typeLength(attribute.info.type), record);
            });
          }
          function emitUniforms(env, scope, args, uniforms, filter, isBatchInnerLoop) {
            var shared = env.shared;
            var GL = shared.gl;
            var definedArrUniforms = {};
            var infix;
            for (var i = 0; i < uniforms.length; ++i) {
              var uniform = uniforms[i];
              var name = uniform.name;
              var type = uniform.info.type;
              var size = uniform.info.size;
              var arg = args.uniforms[name];
              if (size > 1) {
                if (!arg) {
                  continue;
                }
                var arrUniformName = name.replace('[0]', '');
                if (definedArrUniforms[arrUniformName]) {
                  continue;
                }
                definedArrUniforms[arrUniformName] = 1;
              }
              var UNIFORM = env.link(uniform);
              var LOCATION = UNIFORM + '.location';
              var VALUE;
              if (arg) {
                if (!filter(arg)) {
                  continue;
                }
                if (isStatic(arg)) {
                  var value = arg.value;
                  check$1.command(value !== null && typeof value !== 'undefined', 'missing uniform "' + name + '"', env.commandStr);
                  if (type === GL_SAMPLER_2D || type === GL_SAMPLER_CUBE) {
                    check$1.command(typeof value === 'function' && (type === GL_SAMPLER_2D && (value._reglType === 'texture2d' || value._reglType === 'framebuffer') || type === GL_SAMPLER_CUBE && (value._reglType === 'textureCube' || value._reglType === 'framebufferCube')), 'invalid texture for uniform ' + name, env.commandStr);
                    var TEX_VALUE = env.link(value._texture || value.color[0]._texture);
                    scope(GL, '.uniform1i(', LOCATION, ',', TEX_VALUE + '.bind());');
                    scope.exit(TEX_VALUE, '.unbind();');
                  } else if (type === GL_FLOAT_MAT2 || type === GL_FLOAT_MAT3 || type === GL_FLOAT_MAT4) {
                    check$1.optional(function () {
                      check$1.command(isArrayLike(value), 'invalid matrix for uniform ' + name, env.commandStr);
                      check$1.command(type === GL_FLOAT_MAT2 && value.length === 4 || type === GL_FLOAT_MAT3 && value.length === 9 || type === GL_FLOAT_MAT4 && value.length === 16, 'invalid length for matrix uniform ' + name, env.commandStr);
                    });
                    var MAT_VALUE = env.global.def('new Float32Array([' + Array.prototype.slice.call(value) + '])');
                    var dim = 2;
                    if (type === GL_FLOAT_MAT3) {
                      dim = 3;
                    } else if (type === GL_FLOAT_MAT4) {
                      dim = 4;
                    }
                    scope(GL, '.uniformMatrix', dim, 'fv(', LOCATION, ',false,', MAT_VALUE, ');');
                  } else {
                    switch (type) {
                      case GL_FLOAT$8:
                        if (size === 1) {
                          check$1.commandType(value, 'number', 'uniform ' + name, env.commandStr);
                        } else {
                          check$1.command(isArrayLike(value) && value.length === size, 'uniform ' + name, env.commandStr);
                        }
                        infix = '1f';
                        break;
                      case GL_FLOAT_VEC2:
                        check$1.command(isArrayLike(value) && (value.length && value.length % 2 === 0 && value.length <= size * 2), 'uniform ' + name, env.commandStr);
                        infix = '2f';
                        break;
                      case GL_FLOAT_VEC3:
                        check$1.command(isArrayLike(value) && (value.length && value.length % 3 === 0 && value.length <= size * 3), 'uniform ' + name, env.commandStr);
                        infix = '3f';
                        break;
                      case GL_FLOAT_VEC4:
                        check$1.command(isArrayLike(value) && (value.length && value.length % 4 === 0 && value.length <= size * 4), 'uniform ' + name, env.commandStr);
                        infix = '4f';
                        break;
                      case GL_BOOL:
                        if (size === 1) {
                          check$1.commandType(value, 'boolean', 'uniform ' + name, env.commandStr);
                        } else {
                          check$1.command(isArrayLike(value) && value.length === size, 'uniform ' + name, env.commandStr);
                        }
                        infix = '1i';
                        break;
                      case GL_INT$3:
                        if (size === 1) {
                          check$1.commandType(value, 'number', 'uniform ' + name, env.commandStr);
                        } else {
                          check$1.command(isArrayLike(value) && value.length === size, 'uniform ' + name, env.commandStr);
                        }
                        infix = '1i';
                        break;
                      case GL_BOOL_VEC2:
                        check$1.command(isArrayLike(value) && (value.length && value.length % 2 === 0 && value.length <= size * 2), 'uniform ' + name, env.commandStr);
                        infix = '2i';
                        break;
                      case GL_INT_VEC2:
                        check$1.command(isArrayLike(value) && (value.length && value.length % 2 === 0 && value.length <= size * 2), 'uniform ' + name, env.commandStr);
                        infix = '2i';
                        break;
                      case GL_BOOL_VEC3:
                        check$1.command(isArrayLike(value) && (value.length && value.length % 3 === 0 && value.length <= size * 3), 'uniform ' + name, env.commandStr);
                        infix = '3i';
                        break;
                      case GL_INT_VEC3:
                        check$1.command(isArrayLike(value) && (value.length && value.length % 3 === 0 && value.length <= size * 3), 'uniform ' + name, env.commandStr);
                        infix = '3i';
                        break;
                      case GL_BOOL_VEC4:
                        check$1.command(isArrayLike(value) && (value.length && value.length % 4 === 0 && value.length <= size * 4), 'uniform ' + name, env.commandStr);
                        infix = '4i';
                        break;
                      case GL_INT_VEC4:
                        check$1.command(isArrayLike(value) && (value.length && value.length % 4 === 0 && value.length <= size * 4), 'uniform ' + name, env.commandStr);
                        infix = '4i';
                        break;
                    }
                    if (size > 1) {
                      infix += 'v';
                      value = env.global.def('[' + Array.prototype.slice.call(value) + ']');
                    } else {
                      value = isArrayLike(value) ? Array.prototype.slice.call(value) : value;
                    }
                    scope(GL, '.uniform', infix, '(', LOCATION, ',', value, ');');
                  }
                  continue;
                } else {
                  VALUE = arg.append(env, scope);
                }
              } else {
                if (!filter(SCOPE_DECL)) {
                  continue;
                }
                VALUE = scope.def(shared.uniforms, '[', stringStore.id(name), ']');
              }
              if (type === GL_SAMPLER_2D) {
                check$1(!Array.isArray(VALUE), 'must specify a scalar prop for textures');
                scope('if(', VALUE, '&&', VALUE, '._reglType==="framebuffer"){', VALUE, '=', VALUE, '.color[0];', '}');
              } else if (type === GL_SAMPLER_CUBE) {
                check$1(!Array.isArray(VALUE), 'must specify a scalar prop for cube maps');
                scope('if(', VALUE, '&&', VALUE, '._reglType==="framebufferCube"){', VALUE, '=', VALUE, '.color[0];', '}');
              }
              check$1.optional(function () {
                function emitCheck(pred, message) {
                  env.assert(scope, pred, 'bad data or missing for uniform "' + name + '".  ' + message);
                }
                function checkType(type, size) {
                  if (size === 1) {
                    check$1(!Array.isArray(VALUE), 'must not specify an array type for uniform');
                  }
                  emitCheck('Array.isArray(' + VALUE + ') && typeof ' + VALUE + '[0]===" ' + type + '"' + ' || typeof ' + VALUE + '==="' + type + '"', 'invalid type, expected ' + type);
                }
                function checkVector(n, type, size) {
                  if (Array.isArray(VALUE)) {
                    check$1(VALUE.length && VALUE.length % n === 0 && VALUE.length <= n * size, 'must have length of ' + (size === 1 ? '' : 'n * ') + n);
                  } else {
                    emitCheck(shared.isArrayLike + '(' + VALUE + ')&&' + VALUE + '.length && ' + VALUE + '.length % ' + n + ' === 0' + ' && ' + VALUE + '.length<=' + n * size, 'invalid vector, should have length of ' + (size === 1 ? '' : 'n * ') + n, env.commandStr);
                  }
                }
                function checkTexture(target) {
                  check$1(!Array.isArray(VALUE), 'must not specify a value type');
                  emitCheck('typeof ' + VALUE + '==="function"&&' + VALUE + '._reglType==="texture' + (target === GL_TEXTURE_2D$3 ? '2d' : 'Cube') + '"', 'invalid texture type', env.commandStr);
                }
                switch (type) {
                  case GL_INT$3:
                    checkType('number', size);
                    break;
                  case GL_INT_VEC2:
                    checkVector(2, 'number', size);
                    break;
                  case GL_INT_VEC3:
                    checkVector(3, 'number', size);
                    break;
                  case GL_INT_VEC4:
                    checkVector(4, 'number', size);
                    break;
                  case GL_FLOAT$8:
                    checkType('number', size);
                    break;
                  case GL_FLOAT_VEC2:
                    checkVector(2, 'number', size);
                    break;
                  case GL_FLOAT_VEC3:
                    checkVector(3, 'number', size);
                    break;
                  case GL_FLOAT_VEC4:
                    checkVector(4, 'number', size);
                    break;
                  case GL_BOOL:
                    checkType('boolean', size);
                    break;
                  case GL_BOOL_VEC2:
                    checkVector(2, 'boolean', size);
                    break;
                  case GL_BOOL_VEC3:
                    checkVector(3, 'boolean', size);
                    break;
                  case GL_BOOL_VEC4:
                    checkVector(4, 'boolean', size);
                    break;
                  case GL_FLOAT_MAT2:
                    checkVector(4, 'number', size);
                    break;
                  case GL_FLOAT_MAT3:
                    checkVector(9, 'number', size);
                    break;
                  case GL_FLOAT_MAT4:
                    checkVector(16, 'number', size);
                    break;
                  case GL_SAMPLER_2D:
                    checkTexture(GL_TEXTURE_2D$3);
                    break;
                  case GL_SAMPLER_CUBE:
                    checkTexture(GL_TEXTURE_CUBE_MAP$2);
                    break;
                }
              });
              var unroll = 1;
              switch (type) {
                case GL_SAMPLER_2D:
                case GL_SAMPLER_CUBE:
                  var TEX = scope.def(VALUE, '._texture');
                  scope(GL, '.uniform1i(', LOCATION, ',', TEX, '.bind());');
                  scope.exit(TEX, '.unbind();');
                  continue;
                case GL_INT$3:
                case GL_BOOL:
                  infix = '1i';
                  break;
                case GL_INT_VEC2:
                case GL_BOOL_VEC2:
                  infix = '2i';
                  unroll = 2;
                  break;
                case GL_INT_VEC3:
                case GL_BOOL_VEC3:
                  infix = '3i';
                  unroll = 3;
                  break;
                case GL_INT_VEC4:
                case GL_BOOL_VEC4:
                  infix = '4i';
                  unroll = 4;
                  break;
                case GL_FLOAT$8:
                  infix = '1f';
                  break;
                case GL_FLOAT_VEC2:
                  infix = '2f';
                  unroll = 2;
                  break;
                case GL_FLOAT_VEC3:
                  infix = '3f';
                  unroll = 3;
                  break;
                case GL_FLOAT_VEC4:
                  infix = '4f';
                  unroll = 4;
                  break;
                case GL_FLOAT_MAT2:
                  infix = 'Matrix2fv';
                  break;
                case GL_FLOAT_MAT3:
                  infix = 'Matrix3fv';
                  break;
                case GL_FLOAT_MAT4:
                  infix = 'Matrix4fv';
                  break;
              }
              if (infix.indexOf('Matrix') === -1 && size > 1) {
                infix += 'v';
                unroll = 1;
              }
              if (infix.charAt(0) === 'M') {
                scope(GL, '.uniform', infix, '(', LOCATION, ',');
                var matSize = Math.pow(type - GL_FLOAT_MAT2 + 2, 2);
                var STORAGE = env.global.def('new Float32Array(', matSize, ')');
                if (Array.isArray(VALUE)) {
                  scope('false,(', loop(matSize, function (i) {
                    return STORAGE + '[' + i + ']=' + VALUE[i];
                  }), ',', STORAGE, ')');
                } else {
                  scope('false,(Array.isArray(', VALUE, ')||', VALUE, ' instanceof Float32Array)?', VALUE, ':(', loop(matSize, function (i) {
                    return STORAGE + '[' + i + ']=' + VALUE + '[' + i + ']';
                  }), ',', STORAGE, ')');
                }
                scope(');');
              } else if (unroll > 1) {
                var prev = [];
                var cur = [];
                for (var j = 0; j < unroll; ++j) {
                  if (Array.isArray(VALUE)) {
                    cur.push(VALUE[j]);
                  } else {
                    cur.push(scope.def(VALUE + '[' + j + ']'));
                  }
                  if (isBatchInnerLoop) {
                    prev.push(scope.def());
                  }
                }
                if (isBatchInnerLoop) {
                  scope('if(!', env.batchId, '||', prev.map(function (p, i) {
                    return p + '!==' + cur[i];
                  }).join('||'), '){', prev.map(function (p, i) {
                    return p + '=' + cur[i] + ';';
                  }).join(''));
                }
                scope(GL, '.uniform', infix, '(', LOCATION, ',', cur.join(','), ');');
                if (isBatchInnerLoop) {
                  scope('}');
                }
              } else {
                check$1(!Array.isArray(VALUE), 'uniform value must not be an array');
                if (isBatchInnerLoop) {
                  var prevS = scope.def();
                  scope('if(!', env.batchId, '||', prevS, '!==', VALUE, '){', prevS, '=', VALUE, ';');
                }
                scope(GL, '.uniform', infix, '(', LOCATION, ',', VALUE, ');');
                if (isBatchInnerLoop) {
                  scope('}');
                }
              }
            }
          }
          function emitDraw(env, outer, inner, args) {
            var shared = env.shared;
            var GL = shared.gl;
            var DRAW_STATE = shared.draw;
            var drawOptions = args.draw;
            function emitElements() {
              var defn = drawOptions.elements;
              var ELEMENTS;
              var scope = outer;
              if (defn) {
                if (defn.contextDep && args.contextDynamic || defn.propDep) {
                  scope = inner;
                }
                ELEMENTS = defn.append(env, scope);
                if (drawOptions.elementsActive) {
                  scope('if(' + ELEMENTS + ')' + GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$2 + ',' + ELEMENTS + '.buffer.buffer);');
                }
              } else {
                ELEMENTS = scope.def();
                scope(ELEMENTS, '=', DRAW_STATE, '.', S_ELEMENTS, ';', 'if(', ELEMENTS, '){', GL, '.bindBuffer(', GL_ELEMENT_ARRAY_BUFFER$2, ',', ELEMENTS, '.buffer.buffer);}', 'else if(', shared.vao, '.currentVAO){', ELEMENTS, '=', env.shared.elements + '.getElements(' + shared.vao, '.currentVAO.elements);', !extVertexArrays ? 'if(' + ELEMENTS + ')' + GL + '.bindBuffer(' + GL_ELEMENT_ARRAY_BUFFER$2 + ',' + ELEMENTS + '.buffer.buffer);' : '', '}');
              }
              return ELEMENTS;
            }
            function emitCount() {
              var defn = drawOptions.count;
              var COUNT;
              var scope = outer;
              if (defn) {
                if (defn.contextDep && args.contextDynamic || defn.propDep) {
                  scope = inner;
                }
                COUNT = defn.append(env, scope);
                check$1.optional(function () {
                  if (defn.MISSING) {
                    env.assert(outer, 'false', 'missing vertex count');
                  }
                  if (defn.DYNAMIC) {
                    env.assert(scope, COUNT + '>=0', 'missing vertex count');
                  }
                });
              } else {
                COUNT = scope.def(DRAW_STATE, '.', S_COUNT);
                check$1.optional(function () {
                  env.assert(scope, COUNT + '>=0', 'missing vertex count');
                });
              }
              return COUNT;
            }
            var ELEMENTS = emitElements();
            function emitValue(name) {
              var defn = drawOptions[name];
              if (defn) {
                if (defn.contextDep && args.contextDynamic || defn.propDep) {
                  return defn.append(env, inner);
                } else {
                  return defn.append(env, outer);
                }
              } else {
                return outer.def(DRAW_STATE, '.', name);
              }
            }
            var PRIMITIVE = emitValue(S_PRIMITIVE);
            var OFFSET = emitValue(S_OFFSET);
            var COUNT = emitCount();
            if (typeof COUNT === 'number') {
              if (COUNT === 0) {
                return;
              }
            } else {
              inner('if(', COUNT, '){');
              inner.exit('}');
            }
            var INSTANCES, EXT_INSTANCING;
            if (extInstancing) {
              INSTANCES = emitValue(S_INSTANCES);
              EXT_INSTANCING = env.instancing;
            }
            var ELEMENT_TYPE = ELEMENTS + '.type';
            var elementsStatic = drawOptions.elements && isStatic(drawOptions.elements) && !drawOptions.vaoActive;
            function emitInstancing() {
              function drawElements() {
                inner(EXT_INSTANCING, '.drawElementsInstancedANGLE(', [PRIMITIVE, COUNT, ELEMENT_TYPE, OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$8 + ')>>1)', INSTANCES], ');');
              }
              function drawArrays() {
                inner(EXT_INSTANCING, '.drawArraysInstancedANGLE(', [PRIMITIVE, OFFSET, COUNT, INSTANCES], ');');
              }
              if (ELEMENTS && ELEMENTS !== 'null') {
                if (!elementsStatic) {
                  inner('if(', ELEMENTS, '){');
                  drawElements();
                  inner('}else{');
                  drawArrays();
                  inner('}');
                } else {
                  drawElements();
                }
              } else {
                drawArrays();
              }
            }
            function emitRegular() {
              function drawElements() {
                inner(GL + '.drawElements(' + [PRIMITIVE, COUNT, ELEMENT_TYPE, OFFSET + '<<((' + ELEMENT_TYPE + '-' + GL_UNSIGNED_BYTE$8 + ')>>1)'] + ');');
              }
              function drawArrays() {
                inner(GL + '.drawArrays(' + [PRIMITIVE, OFFSET, COUNT] + ');');
              }
              if (ELEMENTS && ELEMENTS !== 'null') {
                if (!elementsStatic) {
                  inner('if(', ELEMENTS, '){');
                  drawElements();
                  inner('}else{');
                  drawArrays();
                  inner('}');
                } else {
                  drawElements();
                }
              } else {
                drawArrays();
              }
            }
            if (extInstancing && (typeof INSTANCES !== 'number' || INSTANCES >= 0)) {
              if (typeof INSTANCES === 'string') {
                inner('if(', INSTANCES, '>0){');
                emitInstancing();
                inner('}else if(', INSTANCES, '<0){');
                emitRegular();
                inner('}');
              } else {
                emitInstancing();
              }
            } else {
              emitRegular();
            }
          }
          function createBody(emitBody, parentEnv, args, program, count) {
            var env = createREGLEnvironment();
            var scope = env.proc('body', count);
            check$1.optional(function () {
              env.commandStr = parentEnv.commandStr;
              env.command = env.link(parentEnv.commandStr);
            });
            if (extInstancing) {
              env.instancing = scope.def(env.shared.extensions, '.angle_instanced_arrays');
            }
            emitBody(env, scope, args, program);
            return env.compile().body;
          }
          function emitDrawBody(env, draw, args, program) {
            injectExtensions(env, draw);
            if (args.useVAO) {
              if (args.drawVAO) {
                draw(env.shared.vao, '.setVAO(', args.drawVAO.append(env, draw), ');');
              } else {
                draw(env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);');
              }
            } else {
              draw(env.shared.vao, '.setVAO(null);');
              emitAttributes(env, draw, args, program.attributes, function () {
                return true;
              });
            }
            emitUniforms(env, draw, args, program.uniforms, function () {
              return true;
            }, false);
            emitDraw(env, draw, draw, args);
          }
          function emitDrawProc(env, args) {
            var draw = env.proc('draw', 1);
            injectExtensions(env, draw);
            emitContext(env, draw, args.context);
            emitPollFramebuffer(env, draw, args.framebuffer);
            emitPollState(env, draw, args);
            emitSetOptions(env, draw, args.state);
            emitProfile(env, draw, args, false, true);
            var program = args.shader.progVar.append(env, draw);
            draw(env.shared.gl, '.useProgram(', program, '.program);');
            if (args.shader.program) {
              emitDrawBody(env, draw, args, args.shader.program);
            } else {
              draw(env.shared.vao, '.setVAO(null);');
              var drawCache = env.global.def('{}');
              var PROG_ID = draw.def(program, '.id');
              var CACHED_PROC = draw.def(drawCache, '[', PROG_ID, ']');
              draw(env.cond(CACHED_PROC).then(CACHED_PROC, '.call(this,a0);').else(CACHED_PROC, '=', drawCache, '[', PROG_ID, ']=', env.link(function (program) {
                return createBody(emitDrawBody, env, args, program, 1);
              }), '(', program, ');', CACHED_PROC, '.call(this,a0);'));
            }
            if (Object.keys(args.state).length > 0) {
              draw(env.shared.current, '.dirty=true;');
            }
            if (env.shared.vao) {
              draw(env.shared.vao, '.setVAO(null);');
            }
          }
          function emitBatchDynamicShaderBody(env, scope, args, program) {
            env.batchId = 'a1';
            injectExtensions(env, scope);
            function all() {
              return true;
            }
            emitAttributes(env, scope, args, program.attributes, all);
            emitUniforms(env, scope, args, program.uniforms, all, false);
            emitDraw(env, scope, scope, args);
          }
          function emitBatchBody(env, scope, args, program) {
            injectExtensions(env, scope);
            var contextDynamic = args.contextDep;
            var BATCH_ID = scope.def();
            var PROP_LIST = 'a0';
            var NUM_PROPS = 'a1';
            var PROPS = scope.def();
            env.shared.props = PROPS;
            env.batchId = BATCH_ID;
            var outer = env.scope();
            var inner = env.scope();
            scope(outer.entry, 'for(', BATCH_ID, '=0;', BATCH_ID, '<', NUM_PROPS, ';++', BATCH_ID, '){', PROPS, '=', PROP_LIST, '[', BATCH_ID, '];', inner, '}', outer.exit);
            function isInnerDefn(defn) {
              return defn.contextDep && contextDynamic || defn.propDep;
            }
            function isOuterDefn(defn) {
              return !isInnerDefn(defn);
            }
            if (args.needsContext) {
              emitContext(env, inner, args.context);
            }
            if (args.needsFramebuffer) {
              emitPollFramebuffer(env, inner, args.framebuffer);
            }
            emitSetOptions(env, inner, args.state, isInnerDefn);
            if (args.profile && isInnerDefn(args.profile)) {
              emitProfile(env, inner, args, false, true);
            }
            if (!program) {
              var progCache = env.global.def('{}');
              var PROGRAM = args.shader.progVar.append(env, inner);
              var PROG_ID = inner.def(PROGRAM, '.id');
              var CACHED_PROC = inner.def(progCache, '[', PROG_ID, ']');
              inner(env.shared.gl, '.useProgram(', PROGRAM, '.program);', 'if(!', CACHED_PROC, '){', CACHED_PROC, '=', progCache, '[', PROG_ID, ']=', env.link(function (program) {
                return createBody(emitBatchDynamicShaderBody, env, args, program, 2);
              }), '(', PROGRAM, ');}', CACHED_PROC, '.call(this,a0[', BATCH_ID, '],', BATCH_ID, ');');
            } else {
              if (args.useVAO) {
                if (args.drawVAO) {
                  if (isInnerDefn(args.drawVAO)) {
                    inner(env.shared.vao, '.setVAO(', args.drawVAO.append(env, inner), ');');
                  } else {
                    outer(env.shared.vao, '.setVAO(', args.drawVAO.append(env, outer), ');');
                  }
                } else {
                  outer(env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);');
                }
              } else {
                outer(env.shared.vao, '.setVAO(null);');
                emitAttributes(env, outer, args, program.attributes, isOuterDefn);
                emitAttributes(env, inner, args, program.attributes, isInnerDefn);
              }
              emitUniforms(env, outer, args, program.uniforms, isOuterDefn, false);
              emitUniforms(env, inner, args, program.uniforms, isInnerDefn, true);
              emitDraw(env, outer, inner, args);
            }
          }
          function emitBatchProc(env, args) {
            var batch = env.proc('batch', 2);
            env.batchId = '0';
            injectExtensions(env, batch);
            var contextDynamic = false;
            var needsContext = true;
            Object.keys(args.context).forEach(function (name) {
              contextDynamic = contextDynamic || args.context[name].propDep;
            });
            if (!contextDynamic) {
              emitContext(env, batch, args.context);
              needsContext = false;
            }
            var framebuffer = args.framebuffer;
            var needsFramebuffer = false;
            if (framebuffer) {
              if (framebuffer.propDep) {
                contextDynamic = needsFramebuffer = true;
              } else if (framebuffer.contextDep && contextDynamic) {
                needsFramebuffer = true;
              }
              if (!needsFramebuffer) {
                emitPollFramebuffer(env, batch, framebuffer);
              }
            } else {
              emitPollFramebuffer(env, batch, null);
            }
            if (args.state.viewport && args.state.viewport.propDep) {
              contextDynamic = true;
            }
            function isInnerDefn(defn) {
              return defn.contextDep && contextDynamic || defn.propDep;
            }
            emitPollState(env, batch, args);
            emitSetOptions(env, batch, args.state, function (defn) {
              return !isInnerDefn(defn);
            });
            if (!args.profile || !isInnerDefn(args.profile)) {
              emitProfile(env, batch, args, false, 'a1');
            }
            args.contextDep = contextDynamic;
            args.needsContext = needsContext;
            args.needsFramebuffer = needsFramebuffer;
            var progDefn = args.shader.progVar;
            if (progDefn.contextDep && contextDynamic || progDefn.propDep) {
              emitBatchBody(env, batch, args, null);
            } else {
              var PROGRAM = progDefn.append(env, batch);
              batch(env.shared.gl, '.useProgram(', PROGRAM, '.program);');
              if (args.shader.program) {
                emitBatchBody(env, batch, args, args.shader.program);
              } else {
                batch(env.shared.vao, '.setVAO(null);');
                var batchCache = env.global.def('{}');
                var PROG_ID = batch.def(PROGRAM, '.id');
                var CACHED_PROC = batch.def(batchCache, '[', PROG_ID, ']');
                batch(env.cond(CACHED_PROC).then(CACHED_PROC, '.call(this,a0,a1);').else(CACHED_PROC, '=', batchCache, '[', PROG_ID, ']=', env.link(function (program) {
                  return createBody(emitBatchBody, env, args, program, 2);
                }), '(', PROGRAM, ');', CACHED_PROC, '.call(this,a0,a1);'));
              }
            }
            if (Object.keys(args.state).length > 0) {
              batch(env.shared.current, '.dirty=true;');
            }
            if (env.shared.vao) {
              batch(env.shared.vao, '.setVAO(null);');
            }
          }
          function emitScopeProc(env, args) {
            var scope = env.proc('scope', 3);
            env.batchId = 'a2';
            var shared = env.shared;
            var CURRENT_STATE = shared.current;
            emitContext(env, scope, args.context);
            if (args.framebuffer) {
              args.framebuffer.append(env, scope);
            }
            sortState(Object.keys(args.state)).forEach(function (name) {
              var defn = args.state[name];
              var value = defn.append(env, scope);
              if (isArrayLike(value)) {
                value.forEach(function (v, i) {
                  scope.set(env.next[name], '[' + i + ']', v);
                });
              } else {
                scope.set(shared.next, '.' + name, value);
              }
            });
            emitProfile(env, scope, args, true, true);
            [S_ELEMENTS, S_OFFSET, S_COUNT, S_INSTANCES, S_PRIMITIVE].forEach(function (opt) {
              var variable = args.draw[opt];
              if (!variable) {
                return;
              }
              scope.set(shared.draw, '.' + opt, '' + variable.append(env, scope));
            });
            Object.keys(args.uniforms).forEach(function (opt) {
              var value = args.uniforms[opt].append(env, scope);
              if (Array.isArray(value)) {
                value = '[' + value.join() + ']';
              }
              scope.set(shared.uniforms, '[' + stringStore.id(opt) + ']', value);
            });
            Object.keys(args.attributes).forEach(function (name) {
              var record = args.attributes[name].append(env, scope);
              var scopeAttrib = env.scopeAttrib(name);
              Object.keys(new AttributeRecord()).forEach(function (prop) {
                scope.set(scopeAttrib, '.' + prop, record[prop]);
              });
            });
            if (args.scopeVAO) {
              scope.set(shared.vao, '.targetVAO', args.scopeVAO.append(env, scope));
            }
            function saveShader(name) {
              var shader = args.shader[name];
              if (shader) {
                scope.set(shared.shader, '.' + name, shader.append(env, scope));
              }
            }
            saveShader(S_VERT);
            saveShader(S_FRAG);
            if (Object.keys(args.state).length > 0) {
              scope(CURRENT_STATE, '.dirty=true;');
              scope.exit(CURRENT_STATE, '.dirty=true;');
            }
            scope('a1(', env.shared.context, ',a0,', env.batchId, ');');
          }
          function isDynamicObject(object) {
            if (typeof object !== 'object' || isArrayLike(object)) {
              return;
            }
            var props = Object.keys(object);
            for (var i = 0; i < props.length; ++i) {
              if (dynamic.isDynamic(object[props[i]])) {
                return true;
              }
            }
            return false;
          }
          function splatObject(env, options, name) {
            var object = options.static[name];
            if (!object || !isDynamicObject(object)) {
              return;
            }
            var globals = env.global;
            var keys = Object.keys(object);
            var thisDep = false;
            var contextDep = false;
            var propDep = false;
            var objectRef = env.global.def('{}');
            keys.forEach(function (key) {
              var value = object[key];
              if (dynamic.isDynamic(value)) {
                if (typeof value === 'function') {
                  value = object[key] = dynamic.unbox(value);
                }
                var deps = createDynamicDecl(value, null);
                thisDep = thisDep || deps.thisDep;
                propDep = propDep || deps.propDep;
                contextDep = contextDep || deps.contextDep;
              } else {
                globals(objectRef, '.', key, '=');
                switch (typeof value) {
                  case 'number':
                    globals(value);
                    break;
                  case 'string':
                    globals('"', value, '"');
                    break;
                  case 'object':
                    if (Array.isArray(value)) {
                      globals('[', value.join(), ']');
                    }
                    break;
                  default:
                    globals(env.link(value));
                    break;
                }
                globals(';');
              }
            });
            function appendBlock(env, block) {
              keys.forEach(function (key) {
                var value = object[key];
                if (!dynamic.isDynamic(value)) {
                  return;
                }
                var ref = env.invoke(block, value);
                block(objectRef, '.', key, '=', ref, ';');
              });
            }
            options.dynamic[name] = new dynamic.DynamicVariable(DYN_THUNK, {
              thisDep: thisDep,
              contextDep: contextDep,
              propDep: propDep,
              ref: objectRef,
              append: appendBlock
            });
            delete options.static[name];
          }
          function compileCommand(options, attributes, uniforms, context, stats) {
            var env = createREGLEnvironment();
            env.stats = env.link(stats);
            Object.keys(attributes.static).forEach(function (key) {
              splatObject(env, attributes, key);
            });
            NESTED_OPTIONS.forEach(function (name) {
              splatObject(env, options, name);
            });
            var args = parseArguments(options, attributes, uniforms, context, env);
            emitDrawProc(env, args);
            emitScopeProc(env, args);
            emitBatchProc(env, args);
            return extend(env.compile(), {
              destroy: function () {
                args.shader.program.destroy();
              }
            });
          }
          return {
            next: nextState,
            current: currentState,
            procs: (function () {
              var env = createREGLEnvironment();
              var poll = env.proc('poll');
              var refresh = env.proc('refresh');
              var common = env.block();
              poll(common);
              refresh(common);
              var shared = env.shared;
              var GL = shared.gl;
              var NEXT_STATE = shared.next;
              var CURRENT_STATE = shared.current;
              common(CURRENT_STATE, '.dirty=false;');
              emitPollFramebuffer(env, poll);
              emitPollFramebuffer(env, refresh, null, true);
              var INSTANCING;
              if (extInstancing) {
                INSTANCING = env.link(extInstancing);
              }
              if (extensions.oes_vertex_array_object) {
                refresh(env.link(extensions.oes_vertex_array_object), '.bindVertexArrayOES(null);');
              }
              for (var i = 0; i < limits.maxAttributes; ++i) {
                var BINDING = refresh.def(shared.attributes, '[', i, ']');
                var ifte = env.cond(BINDING, '.buffer');
                ifte.then(GL, '.enableVertexAttribArray(', i, ');', GL, '.bindBuffer(', GL_ARRAY_BUFFER$2, ',', BINDING, '.buffer.buffer);', GL, '.vertexAttribPointer(', i, ',', BINDING, '.size,', BINDING, '.type,', BINDING, '.normalized,', BINDING, '.stride,', BINDING, '.offset);').else(GL, '.disableVertexAttribArray(', i, ');', GL, '.vertexAttrib4f(', i, ',', BINDING, '.x,', BINDING, '.y,', BINDING, '.z,', BINDING, '.w);', BINDING, '.buffer=null;');
                refresh(ifte);
                if (extInstancing) {
                  refresh(INSTANCING, '.vertexAttribDivisorANGLE(', i, ',', BINDING, '.divisor);');
                }
              }
              refresh(env.shared.vao, '.currentVAO=null;', env.shared.vao, '.setVAO(', env.shared.vao, '.targetVAO);');
              Object.keys(GL_FLAGS).forEach(function (flag) {
                var cap = GL_FLAGS[flag];
                var NEXT = common.def(NEXT_STATE, '.', flag);
                var block = env.block();
                block('if(', NEXT, '){', GL, '.enable(', cap, ')}else{', GL, '.disable(', cap, ')}', CURRENT_STATE, '.', flag, '=', NEXT, ';');
                refresh(block);
                poll('if(', NEXT, '!==', CURRENT_STATE, '.', flag, '){', block, '}');
              });
              Object.keys(GL_VARIABLES).forEach(function (name) {
                var func = GL_VARIABLES[name];
                var init = currentState[name];
                var NEXT, CURRENT;
                var block = env.block();
                block(GL, '.', func, '(');
                if (isArrayLike(init)) {
                  var n = init.length;
                  NEXT = env.global.def(NEXT_STATE, '.', name);
                  CURRENT = env.global.def(CURRENT_STATE, '.', name);
                  block(loop(n, function (i) {
                    return NEXT + '[' + i + ']';
                  }), ');', loop(n, function (i) {
                    return CURRENT + '[' + i + ']=' + NEXT + '[' + i + '];';
                  }).join(''));
                  poll('if(', loop(n, function (i) {
                    return NEXT + '[' + i + ']!==' + CURRENT + '[' + i + ']';
                  }).join('||'), '){', block, '}');
                } else {
                  NEXT = common.def(NEXT_STATE, '.', name);
                  CURRENT = common.def(CURRENT_STATE, '.', name);
                  block(NEXT, ');', CURRENT_STATE, '.', name, '=', NEXT, ';');
                  poll('if(', NEXT, '!==', CURRENT, '){', block, '}');
                }
                refresh(block);
              });
              return env.compile();
            })(),
            compile: compileCommand
          };
        }
        function stats() {
          return {
            vaoCount: 0,
            bufferCount: 0,
            elementsCount: 0,
            framebufferCount: 0,
            shaderCount: 0,
            textureCount: 0,
            cubeCount: 0,
            renderbufferCount: 0,
            maxTextureUnits: 0
          };
        }
        var GL_QUERY_RESULT_EXT = 0x8866;
        var GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867;
        var GL_TIME_ELAPSED_EXT = 0x88BF;
        var createTimer = function (gl, extensions) {
          if (!extensions.ext_disjoint_timer_query) {
            return null;
          }
          var queryPool = [];
          function allocQuery() {
            return queryPool.pop() || extensions.ext_disjoint_timer_query.createQueryEXT();
          }
          function freeQuery(query) {
            queryPool.push(query);
          }
          var pendingQueries = [];
          function beginQuery(stats) {
            var query = allocQuery();
            extensions.ext_disjoint_timer_query.beginQueryEXT(GL_TIME_ELAPSED_EXT, query);
            pendingQueries.push(query);
            pushScopeStats(pendingQueries.length - 1, pendingQueries.length, stats);
          }
          function endQuery() {
            extensions.ext_disjoint_timer_query.endQueryEXT(GL_TIME_ELAPSED_EXT);
          }
          function PendingStats() {
            this.startQueryIndex = -1;
            this.endQueryIndex = -1;
            this.sum = 0;
            this.stats = null;
          }
          var pendingStatsPool = [];
          function allocPendingStats() {
            return pendingStatsPool.pop() || new PendingStats();
          }
          function freePendingStats(pendingStats) {
            pendingStatsPool.push(pendingStats);
          }
          var pendingStats = [];
          function pushScopeStats(start, end, stats) {
            var ps = allocPendingStats();
            ps.startQueryIndex = start;
            ps.endQueryIndex = end;
            ps.sum = 0;
            ps.stats = stats;
            pendingStats.push(ps);
          }
          var timeSum = [];
          var queryPtr = [];
          function update() {
            var ptr, i;
            var n = pendingQueries.length;
            if (n === 0) {
              return;
            }
            queryPtr.length = Math.max(queryPtr.length, n + 1);
            timeSum.length = Math.max(timeSum.length, n + 1);
            timeSum[0] = 0;
            queryPtr[0] = 0;
            var queryTime = 0;
            ptr = 0;
            for (i = 0; i < pendingQueries.length; ++i) {
              var query = pendingQueries[i];
              if (extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_AVAILABLE_EXT)) {
                queryTime += extensions.ext_disjoint_timer_query.getQueryObjectEXT(query, GL_QUERY_RESULT_EXT);
                freeQuery(query);
              } else {
                pendingQueries[ptr++] = query;
              }
              timeSum[i + 1] = queryTime;
              queryPtr[i + 1] = ptr;
            }
            pendingQueries.length = ptr;
            ptr = 0;
            for (i = 0; i < pendingStats.length; ++i) {
              var stats = pendingStats[i];
              var start = stats.startQueryIndex;
              var end = stats.endQueryIndex;
              stats.sum += timeSum[end] - timeSum[start];
              var startPtr = queryPtr[start];
              var endPtr = queryPtr[end];
              if (endPtr === startPtr) {
                stats.stats.gpuTime += stats.sum / 1e6;
                freePendingStats(stats);
              } else {
                stats.startQueryIndex = startPtr;
                stats.endQueryIndex = endPtr;
                pendingStats[ptr++] = stats;
              }
            }
            pendingStats.length = ptr;
          }
          return {
            beginQuery: beginQuery,
            endQuery: endQuery,
            pushScopeStats: pushScopeStats,
            update: update,
            getNumPendingQueries: function () {
              return pendingQueries.length;
            },
            clear: function () {
              queryPool.push.apply(queryPool, pendingQueries);
              for (var i = 0; i < queryPool.length; i++) {
                extensions.ext_disjoint_timer_query.deleteQueryEXT(queryPool[i]);
              }
              pendingQueries.length = 0;
              queryPool.length = 0;
            },
            restore: function () {
              pendingQueries.length = 0;
              queryPool.length = 0;
            }
          };
        };
        var GL_COLOR_BUFFER_BIT = 16384;
        var GL_DEPTH_BUFFER_BIT = 256;
        var GL_STENCIL_BUFFER_BIT = 1024;
        var GL_ARRAY_BUFFER = 34962;
        var CONTEXT_LOST_EVENT = 'webglcontextlost';
        var CONTEXT_RESTORED_EVENT = 'webglcontextrestored';
        var DYN_PROP = 1;
        var DYN_CONTEXT = 2;
        var DYN_STATE = 3;
        function find(haystack, needle) {
          for (var i = 0; i < haystack.length; ++i) {
            if (haystack[i] === needle) {
              return i;
            }
          }
          return -1;
        }
        function wrapREGL(args) {
          var config = parseArgs(args);
          if (!config) {
            return null;
          }
          var gl = config.gl;
          var glAttributes = gl.getContextAttributes();
          var contextLost = gl.isContextLost();
          var extensionState = createExtensionCache(gl, config);
          if (!extensionState) {
            return null;
          }
          var stringStore = createStringStore();
          var stats$$1 = stats();
          var extensions = extensionState.extensions;
          var timer = createTimer(gl, extensions);
          var START_TIME = clock();
          var WIDTH = gl.drawingBufferWidth;
          var HEIGHT = gl.drawingBufferHeight;
          var contextState = {
            tick: 0,
            time: 0,
            viewportWidth: WIDTH,
            viewportHeight: HEIGHT,
            framebufferWidth: WIDTH,
            framebufferHeight: HEIGHT,
            drawingBufferWidth: WIDTH,
            drawingBufferHeight: HEIGHT,
            pixelRatio: config.pixelRatio
          };
          var uniformState = {};
          var drawState = {
            elements: null,
            primitive: 4,
            count: -1,
            offset: 0,
            instances: -1
          };
          var limits = wrapLimits(gl, extensions);
          var bufferState = wrapBufferState(gl, stats$$1, config, destroyBuffer);
          var elementState = wrapElementsState(gl, extensions, bufferState, stats$$1);
          var attributeState = wrapAttributeState(gl, extensions, limits, stats$$1, bufferState, elementState, drawState);
          function destroyBuffer(buffer) {
            return attributeState.destroyBuffer(buffer);
          }
          var shaderState = wrapShaderState(gl, stringStore, stats$$1, config);
          var textureState = createTextureSet(gl, extensions, limits, function () {
            core.procs.poll();
          }, contextState, stats$$1, config);
          var renderbufferState = wrapRenderbuffers(gl, extensions, limits, stats$$1, config);
          var framebufferState = wrapFBOState(gl, extensions, limits, textureState, renderbufferState, stats$$1);
          var core = reglCore(gl, stringStore, extensions, limits, bufferState, elementState, textureState, framebufferState, uniformState, attributeState, shaderState, drawState, contextState, timer, config);
          var readPixels = wrapReadPixels(gl, framebufferState, core.procs.poll, contextState, glAttributes, extensions, limits);
          var nextState = core.next;
          var canvas = gl.canvas;
          var rafCallbacks = [];
          var lossCallbacks = [];
          var restoreCallbacks = [];
          var destroyCallbacks = [config.onDestroy];
          var activeRAF = null;
          function handleRAF() {
            if (rafCallbacks.length === 0) {
              if (timer) {
                timer.update();
              }
              activeRAF = null;
              return;
            }
            activeRAF = raf.next(handleRAF);
            poll();
            for (var i = rafCallbacks.length - 1; i >= 0; --i) {
              var cb = rafCallbacks[i];
              if (cb) {
                cb(contextState, null, 0);
              }
            }
            gl.flush();
            if (timer) {
              timer.update();
            }
          }
          function startRAF() {
            if (!activeRAF && rafCallbacks.length > 0) {
              activeRAF = raf.next(handleRAF);
            }
          }
          function stopRAF() {
            if (activeRAF) {
              raf.cancel(handleRAF);
              activeRAF = null;
            }
          }
          function handleContextLoss(event) {
            event.preventDefault();
            contextLost = true;
            stopRAF();
            lossCallbacks.forEach(function (cb) {
              cb();
            });
          }
          function handleContextRestored(event) {
            gl.getError();
            contextLost = false;
            extensionState.restore();
            shaderState.restore();
            bufferState.restore();
            textureState.restore();
            renderbufferState.restore();
            framebufferState.restore();
            attributeState.restore();
            if (timer) {
              timer.restore();
            }
            core.procs.refresh();
            startRAF();
            restoreCallbacks.forEach(function (cb) {
              cb();
            });
          }
          if (canvas) {
            canvas.addEventListener(CONTEXT_LOST_EVENT, handleContextLoss, false);
            canvas.addEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored, false);
          }
          function destroy() {
            rafCallbacks.length = 0;
            stopRAF();
            if (canvas) {
              canvas.removeEventListener(CONTEXT_LOST_EVENT, handleContextLoss);
              canvas.removeEventListener(CONTEXT_RESTORED_EVENT, handleContextRestored);
            }
            shaderState.clear();
            framebufferState.clear();
            renderbufferState.clear();
            attributeState.clear();
            textureState.clear();
            elementState.clear();
            bufferState.clear();
            if (timer) {
              timer.clear();
            }
            destroyCallbacks.forEach(function (cb) {
              cb();
            });
          }
          function compileProcedure(options) {
            check$1(!!options, 'invalid args to regl({...})');
            check$1.type(options, 'object', 'invalid args to regl({...})');
            function flattenNestedOptions(options) {
              var result = extend({}, options);
              delete result.uniforms;
              delete result.attributes;
              delete result.context;
              delete result.vao;
              if (('stencil' in result) && result.stencil.op) {
                result.stencil.opBack = result.stencil.opFront = result.stencil.op;
                delete result.stencil.op;
              }
              function merge(name) {
                if ((name in result)) {
                  var child = result[name];
                  delete result[name];
                  Object.keys(child).forEach(function (prop) {
                    result[name + '.' + prop] = child[prop];
                  });
                }
              }
              merge('blend');
              merge('depth');
              merge('cull');
              merge('stencil');
              merge('polygonOffset');
              merge('scissor');
              merge('sample');
              if (('vao' in options)) {
                result.vao = options.vao;
              }
              return result;
            }
            function separateDynamic(object, useArrays) {
              var staticItems = {};
              var dynamicItems = {};
              Object.keys(object).forEach(function (option) {
                var value = object[option];
                if (dynamic.isDynamic(value)) {
                  dynamicItems[option] = dynamic.unbox(value, option);
                  return;
                } else if (useArrays && Array.isArray(value)) {
                  for (var i = 0; i < value.length; ++i) {
                    if (dynamic.isDynamic(value[i])) {
                      dynamicItems[option] = dynamic.unbox(value, option);
                      return;
                    }
                  }
                }
                staticItems[option] = value;
              });
              return {
                dynamic: dynamicItems,
                static: staticItems
              };
            }
            var context = separateDynamic(options.context || ({}), true);
            var uniforms = separateDynamic(options.uniforms || ({}), true);
            var attributes = separateDynamic(options.attributes || ({}), false);
            var opts = separateDynamic(flattenNestedOptions(options), false);
            var stats$$1 = {
              gpuTime: 0.0,
              cpuTime: 0.0,
              count: 0
            };
            var compiled = core.compile(opts, attributes, uniforms, context, stats$$1);
            var draw = compiled.draw;
            var batch = compiled.batch;
            var scope = compiled.scope;
            var EMPTY_ARRAY = [];
            function reserve(count) {
              while (EMPTY_ARRAY.length < count) {
                EMPTY_ARRAY.push(null);
              }
              return EMPTY_ARRAY;
            }
            function REGLCommand(args, body) {
              var i;
              if (contextLost) {
                check$1.raise('context lost');
              }
              if (typeof args === 'function') {
                return scope.call(this, null, args, 0);
              } else if (typeof body === 'function') {
                if (typeof args === 'number') {
                  for (i = 0; i < args; ++i) {
                    scope.call(this, null, body, i);
                  }
                } else if (Array.isArray(args)) {
                  for (i = 0; i < args.length; ++i) {
                    scope.call(this, args[i], body, i);
                  }
                } else {
                  return scope.call(this, args, body, 0);
                }
              } else if (typeof args === 'number') {
                if (args > 0) {
                  return batch.call(this, reserve(args | 0), args | 0);
                }
              } else if (Array.isArray(args)) {
                if (args.length) {
                  return batch.call(this, args, args.length);
                }
              } else {
                return draw.call(this, args);
              }
            }
            return extend(REGLCommand, {
              stats: stats$$1,
              destroy: function () {
                compiled.destroy();
              }
            });
          }
          var setFBO = framebufferState.setFBO = compileProcedure({
            framebuffer: dynamic.define.call(null, DYN_PROP, 'framebuffer')
          });
          function clearImpl(_, options) {
            var clearFlags = 0;
            core.procs.poll();
            var c = options.color;
            if (c) {
              gl.clearColor(+c[0] || 0, +c[1] || 0, +c[2] || 0, +c[3] || 0);
              clearFlags |= GL_COLOR_BUFFER_BIT;
            }
            if (('depth' in options)) {
              gl.clearDepth(+options.depth);
              clearFlags |= GL_DEPTH_BUFFER_BIT;
            }
            if (('stencil' in options)) {
              gl.clearStencil(options.stencil | 0);
              clearFlags |= GL_STENCIL_BUFFER_BIT;
            }
            check$1(!!clearFlags, 'called regl.clear with no buffer specified');
            gl.clear(clearFlags);
          }
          function clear(options) {
            check$1(typeof options === 'object' && options, 'regl.clear() takes an object as input');
            if (('framebuffer' in options)) {
              if (options.framebuffer && options.framebuffer_reglType === 'framebufferCube') {
                for (var i = 0; i < 6; ++i) {
                  setFBO(extend({
                    framebuffer: options.framebuffer.faces[i]
                  }, options), clearImpl);
                }
              } else {
                setFBO(options, clearImpl);
              }
            } else {
              clearImpl(null, options);
            }
          }
          function frame(cb) {
            check$1.type(cb, 'function', 'regl.frame() callback must be a function');
            rafCallbacks.push(cb);
            function cancel() {
              var i = find(rafCallbacks, cb);
              check$1(i >= 0, 'cannot cancel a frame twice');
              function pendingCancel() {
                var index = find(rafCallbacks, pendingCancel);
                rafCallbacks[index] = rafCallbacks[rafCallbacks.length - 1];
                rafCallbacks.length -= 1;
                if (rafCallbacks.length <= 0) {
                  stopRAF();
                }
              }
              rafCallbacks[i] = pendingCancel;
            }
            startRAF();
            return {
              cancel: cancel
            };
          }
          function pollViewport() {
            var viewport = nextState.viewport;
            var scissorBox = nextState.scissor_box;
            viewport[0] = viewport[1] = scissorBox[0] = scissorBox[1] = 0;
            contextState.viewportWidth = contextState.framebufferWidth = contextState.drawingBufferWidth = viewport[2] = scissorBox[2] = gl.drawingBufferWidth;
            contextState.viewportHeight = contextState.framebufferHeight = contextState.drawingBufferHeight = viewport[3] = scissorBox[3] = gl.drawingBufferHeight;
          }
          function poll() {
            contextState.tick += 1;
            contextState.time = now();
            pollViewport();
            core.procs.poll();
          }
          function refresh() {
            textureState.refresh();
            pollViewport();
            core.procs.refresh();
            if (timer) {
              timer.update();
            }
          }
          function now() {
            return (clock() - START_TIME) / 1000.0;
          }
          refresh();
          function addListener(event, callback) {
            check$1.type(callback, 'function', 'listener callback must be a function');
            var callbacks;
            switch (event) {
              case 'frame':
                return frame(callback);
              case 'lost':
                callbacks = lossCallbacks;
                break;
              case 'restore':
                callbacks = restoreCallbacks;
                break;
              case 'destroy':
                callbacks = destroyCallbacks;
                break;
              default:
                check$1.raise('invalid event, must be one of frame,lost,restore,destroy');
            }
            callbacks.push(callback);
            return {
              cancel: function () {
                for (var i = 0; i < callbacks.length; ++i) {
                  if (callbacks[i] === callback) {
                    callbacks[i] = callbacks[callbacks.length - 1];
                    callbacks.pop();
                    return;
                  }
                }
              }
            };
          }
          var regl = extend(compileProcedure, {
            clear: clear,
            prop: dynamic.define.bind(null, DYN_PROP),
            context: dynamic.define.bind(null, DYN_CONTEXT),
            this: dynamic.define.bind(null, DYN_STATE),
            draw: compileProcedure({}),
            buffer: function (options) {
              return bufferState.create(options, GL_ARRAY_BUFFER, false, false);
            },
            elements: function (options) {
              return elementState.create(options, false);
            },
            texture: textureState.create2D,
            cube: textureState.createCube,
            renderbuffer: renderbufferState.create,
            framebuffer: framebufferState.create,
            framebufferCube: framebufferState.createCube,
            vao: attributeState.createVAO,
            attributes: glAttributes,
            frame: frame,
            on: addListener,
            limits: limits,
            hasExtension: function (name) {
              return limits.extensions.indexOf(name.toLowerCase()) >= 0;
            },
            read: readPixels,
            destroy: destroy,
            _gl: gl,
            _refresh: refresh,
            poll: function () {
              poll();
              if (timer) {
                timer.update();
              }
            },
            now: now,
            stats: stats$$1
          });
          config.onDone(null, regl);
          return regl;
        }
        return wrapREGL;
      });
    })(regl);
    return regl.exports;
  }
  const renderContext = renderContext$1;
  const renderDefaults = renderDefaults$1;
  const prepareRender = params => {
    const defaults = {};
    const options = Object.assign({}, defaults, params.glOptions, {
      onDone: (err, callback) => {
        if (err) {
          throw err;
        }
      }
    });
    const regl = requireRegl()(options);
    const drawCache2 = new Map();
    const command = props => {
      props.rendering = Object.assign({}, renderDefaults, props.rendering);
      renderContext(regl)(props, context => {
        regl.clear({
          color: props.rendering.background,
          depth: 1
        });
        if (props.entities) {
          props.entities.sort((a, b) => {
            const aTransparent = ('transparent' in a.visuals) ? a.visuals.transparent : false;
            const bTransparent = ('transparent' in b.visuals) ? b.visuals.transparent : false;
            return aTransparent === bTransparent ? 0 : aTransparent ? 1 : -1;
          }).forEach(entity => {
            const {visuals} = entity;
            const show = ('show' in visuals) ? visuals.show : true;
            if (show && visuals.drawCmd && props.drawCommands[visuals.drawCmd]) {
              let drawCmd;
              if (visuals.cacheId) {
                drawCmd = drawCache2.get(visuals.cacheId);
              } else {
                visuals.cacheId = drawCache2.size;
                drawCmd = props.drawCommands[visuals.drawCmd](regl, entity);
                drawCache2.set(visuals.cacheId, drawCmd);
              }
              const drawParams = {
                ...entity,
                ...visuals,
                camera: props.camera
              };
              drawCmd(drawParams);
            }
          });
        }
      });
    };
    return function render(data) {
      regl.poll();
      command(data);
    };
  };
  var render = prepareRender;
  var drawGrid;
  var hasRequiredDrawGrid;
  function requireDrawGrid() {
    if (hasRequiredDrawGrid) return drawGrid;
    hasRequiredDrawGrid = 1;
    const mat4 = glMat4;
    const makeDrawGrid = (regl, params = {}) => {
      const positions = [];
      const defaults = {
        visuals: {
          color: [0, 0, 1, 1],
          fadeOut: false
        },
        ticks: 1,
        size: [16, 16],
        centered: false,
        lineWidth: 2
      };
      const visuals = Object.assign({}, defaults.visuals, params.visuals || ({}));
      const {fadeOut, color} = visuals;
      const {size, ticks, centered, lineWidth} = Object.assign({}, defaults, params);
      const width = size[0];
      const length = size[1];
      if (centered) {
        const halfWidth = width * 0.5;
        const halfLength = length * 0.5;
        const remWidth = halfWidth % ticks;
        const widthStart = -halfWidth + remWidth;
        const widthEnd = -widthStart;
        const remLength = halfLength % ticks;
        const lengthStart = -halfLength + remLength;
        const lengthEnd = -lengthStart;
        const skipEvery = 0;
        for (let i = widthStart, j = 0; i <= widthEnd; (i += ticks, j += 1)) {
          if (j % skipEvery !== 0) {
            positions.push(lengthStart, i, 0);
            positions.push(lengthEnd, i, 0);
            positions.push(lengthStart, i, 0);
          }
        }
        for (let i = lengthStart, j = 0; i <= lengthEnd; (i += ticks, j += 1)) {
          if (j % skipEvery !== 0) {
            positions.push(i, widthStart, 0);
            positions.push(i, widthEnd, 0);
            positions.push(i, widthStart, 0);
          }
        }
      } else {
        for (let i = -width * 0.5; i <= width * 0.5; i += ticks) {
          positions.push(-length * 0.5, i, 0);
          positions.push(length * 0.5, i, 0);
          positions.push(-length * 0.5, i, 0);
        }
        for (let i = -length * 0.5; i <= length * 0.5; i += ticks) {
          positions.push(i, -width * 0.5, 0);
          positions.push(i, width * 0.5, 0);
          positions.push(i, -width * 0.5, 0);
        }
      }
      return regl({
        vert: `precision mediump float;

    uniform float camNear, camFar;
    uniform mat4 model, view, projection;

    attribute vec3 position;
    varying vec3 fragNormal, fragPosition;
    varying vec4 worldPosition;

    void main() {
      fragPosition = position;
      worldPosition = model * vec4(position, 1);
      vec4 glPosition = projection * view * worldPosition;
      gl_Position = glPosition;
    }`,
        frag: `precision mediump float;
    uniform vec4 color;
    varying vec3 fragNormal, fragPosition;
    varying vec4 worldPosition;

    uniform vec4 fogColor;
    uniform bool fadeOut;
    void main() {
      float dist = .5;
      if(fadeOut){
        dist = distance( vec2(0.,0.), vec2(worldPosition.x, worldPosition.y));
        dist *= 0.0025;
        dist = sqrt(dist);
      }

      gl_FragColor = mix(color, fogColor, dist);
    }
    `,
        attributes: {
          position: regl.buffer(positions)
        },
        count: positions.length / 3,
        uniforms: {
          model: (context, props) => props && props.model ? props.model : mat4.identity([]),
          color: (context, props) => props && props.color ? props.color : color,
          fogColor: (context, props) => props && props.color ? [props.color[0], props.color[1], props.color[2], 0] : [color[0], color[1], color[2], 0.0],
          fadeOut: (context, props) => props && props.fadeOut !== undefined ? props.fadeOut : fadeOut
        },
        lineWidth: (context, props) => Math.min(props && props.lineWidth ? props.lineWidth : lineWidth, regl.limits.lineWidthDims[1]),
        primitive: 'lines',
        cull: {
          enable: true,
          face: 'front'
        },
        polygonOffset: {
          enable: true,
          offset: {
            factor: 1,
            units: Math.random() * 10
          }
        },
        blend: {
          enable: true,
          func: {
            src: 'src alpha',
            dst: 'one minus src alpha'
          }
        }
      });
    };
    drawGrid = makeDrawGrid;
    return drawGrid;
  }
  const makeDrawMultiGrid = (regl, params) => {
    const defaults = {
      size: [50, 50],
      ticks: [10, 1]
    };
    const {size, ticks} = Object.assign({}, defaults, params);
    const drawMainGrid = requireDrawGrid()(regl, {
      size,
      ticks: ticks[0]
    });
    const drawSubGrid = requireDrawGrid()(regl, {
      size,
      ticks: ticks[1]
    });
    const drawGrid = props => {
      drawMainGrid(props);
      drawSubGrid({
        color: props.subColor,
        fadeOut: props.fadeOut
      });
    };
    return drawGrid;
  };
  var multi = makeDrawMultiGrid;
  const mat4$9 = glMat4;
  const drawAxis = (regl, params) => {
    const defaults = {
      xColor: [1, 0, 0, 1],
      yColor: [0, 1, 0, 1],
      zColor: [0, 0, 1, 1],
      size: 10,
      lineWidth: 3,
      alwaysVisible: true
    };
    let {size, xColor, yColor, zColor, lineWidth, alwaysVisible} = Object.assign({}, defaults, params);
    if (lineWidth > regl.limits.lineWidthDims[1]) {
      lineWidth = regl.limits.lineWidthDims[1];
    }
    const points = [0, 0, 0, size, 0, 0];
    const commandParams = {
      frag: `precision mediump float;
    uniform vec4 color;
    void main() {
      gl_FragColor = color;
    }`,
      vert: `
    precision mediump float;
    attribute vec3 position;
    uniform mat4 model, view, projection;
    void main() {
      gl_Position = projection * view * model * vec4(position, 1);
    }`,
      uniforms: {
        model: (context, props) => props && props.model ? props.model : mat4$9.identity([]),
        color: (context, props) => props.color,
        angle: (contet, props) => props.angle
      },
      attributes: {
        position: points
      },
      count: points.length / 3,
      primitive: 'line loop',
      lineWidth,
      depth: {
        enable: !alwaysVisible
      }
    };
    const xAxisModel = mat4$9.identity([]);
    const yAxisModel = mat4$9.rotateZ(mat4$9.create(), mat4$9.identity([]), Math.PI / 2);
    const zAxisModel = mat4$9.rotateY(mat4$9.create(), mat4$9.identity([]), -Math.PI / 2);
    const single = regl(commandParams);
    return props => {
      const defaults = {
        model: mat4$9.identity([])
      };
      props = Object.assign({}, defaults, props);
      return single([{
        color: xColor,
        model: mat4$9.multiply(mat4$9.create(), props.model, xAxisModel)
      }, {
        color: yColor,
        model: mat4$9.multiply(mat4$9.create(), props.model, yAxisModel)
      }, {
        color: zColor,
        model: mat4$9.multiply(mat4$9.create(), props.model, zAxisModel)
      }]);
    };
  };
  var drawAxis_1 = drawAxis;
  var vColorShaders$1;
  var hasRequiredVColorShaders$1;
  function requireVColorShaders$1() {
    if (hasRequiredVColorShaders$1) return vColorShaders$1;
    hasRequiredVColorShaders$1 = 1;
    const vColorVert = `
precision mediump float;

uniform float camNear, camFar;
uniform mat4 model, view, projection, unormal;

attribute vec3 position, normal;
attribute vec4 color;

attribute float ao;
varying float ambientAo;

varying vec3 surfaceNormal, surfacePosition;
varying vec4 _worldSpacePosition;
varying vec4 vColor;

void main() {
  surfacePosition = (unormal * vec4(position, 1.0)).xyz;
  surfaceNormal = normalize((unormal * vec4(normal, 1.0)).xyz); //vec4 transformedNormal = uNormalMatrix * vec4(aVertexNormal, 1.0);
  vec4 worldSpacePosition = model * vec4(position, 1);
  _worldSpacePosition = worldSpacePosition;
  //gl_Position = projection * view * worldSpacePosition;

  vColor = color;

  //ambientAo = (1. - ao) * (0.5 * max(normal.x, 0.) + 0.5);

  vec4 glPosition = projection * view * model * vec4(position, 1);
  gl_Position = glPosition;
  //gl_Position = zBufferAdjust(glPosition, camNear, camFar);
}
`;
    const vColorFrag = `
precision mediump float;
varying vec3 surfaceNormal, surfacePosition;

uniform float ambientLightAmount;
uniform float diffuseLightAmount;
uniform float specularLightAmount;

uniform vec3 lightDirection;
uniform vec4 lightColor;
uniform vec3 opacity;
uniform float uMaterialShininess;

varying vec4 vColor;
uniform vec4 ucolor;
uniform float vColorToggler;

uniform vec2 printableArea;
vec4 errorColor = vec4(0.15, 0.15, 0.15, 0.3);//vec4(0.15, 0.15, 0.15, 0.3);
varying vec4 _worldSpacePosition;
varying float ambientAo;

void main () {
  vec4 depth = gl_FragCoord;
  vec4 endColor = vColor * vColorToggler + ucolor * (1.0 - vColorToggler);

  vec3 ambient = ambientLightAmount * endColor.rgb ; //ambientAo * 

  float diffuseWeight = dot(surfaceNormal, lightDirection);
  vec3 diffuse = diffuseLightAmount * endColor.rgb * clamp(diffuseWeight , 0.0, 1.0 );

  //specular
  
  vec4 specularColor = vec4(lightColor);
  vec3 eyeDirection = normalize(surfacePosition.xyz);
  vec3 reflectionDirection = reflect(-lightDirection, -surfaceNormal);
  float specularLightWeight = pow(max(dot(reflectionDirection, eyeDirection), 0.0), uMaterialShininess);
  vec3 specular = specularColor.rgb * specularLightWeight * specularLightAmount;

  gl_FragColor = vec4((ambient + diffuse + specular), endColor.a);
}
`;
    vColorShaders$1 = {
      frag: vColorFrag,
      vert: vColorVert
    };
    return vColorShaders$1;
  }
  var meshShaders$1;
  var hasRequiredMeshShaders$1;
  function requireMeshShaders$1() {
    if (hasRequiredMeshShaders$1) return meshShaders$1;
    hasRequiredMeshShaders$1 = 1;
    const meshFrag = `
precision mediump float;
varying vec3 surfaceNormal;
uniform float ambientLightAmount;
uniform float diffuseLightAmount;
uniform vec4 ucolor;
uniform vec3 lightDirection;
uniform vec3 opacity;

varying vec4 _worldSpacePosition;

uniform vec2 printableArea;

vec4 errorColor = vec4(0.15, 0.15, 0.15, 0.3);

void main () {
  vec4 depth = gl_FragCoord;

  float v = 0.8; // shadow value
  vec4 endColor = ucolor;

  vec3 ambient = ambientLightAmount * endColor.rgb;
  float cosTheta = dot(surfaceNormal, lightDirection);
  vec3 diffuse = diffuseLightAmount * endColor.rgb * clamp(cosTheta , 0.0, 1.0 );

  float cosTheta2 = dot(surfaceNormal, vec3(-lightDirection.x, -lightDirection.y, lightDirection.z));
  vec3 diffuse2 = diffuseLightAmount * endColor.rgb * clamp(cosTheta2 , 0.0, 1.0 );

  gl_FragColor = vec4((ambient + diffuse + diffuse2 * v), endColor.a);
}`;
    const meshVert = `
precision mediump float;

uniform float camNear, camFar;
uniform mat4 model, view, projection;

attribute vec3 position, normal;

varying vec3 surfaceNormal, surfacePosition;
varying vec4 _worldSpacePosition;

void main() {
  surfacePosition = position;
  surfaceNormal = normal;
  vec4 worldSpacePosition = model * vec4(position, 1);
  _worldSpacePosition = worldSpacePosition;

  vec4 glPosition = projection * view * model * vec4(position, 1);
  gl_Position = glPosition;
}
`;
    meshShaders$1 = {
      vert: meshVert,
      frag: meshFrag
    };
    return meshShaders$1;
  }
  const mat4$8 = glMat4;
  const {meshColor: meshColor$2} = renderDefaults$1;
  const drawMesh = (regl, params = {
    extras: {}
  }) => {
    const defaults = {
      useVertexColors: true,
      dynamicCulling: true,
      geometry: undefined,
      color: meshColor$2
    };
    const {geometry, dynamicCulling, useVertexColors, color, transparent} = Object.assign({}, defaults, params);
    const ambientOcclusion = regl.buffer([]);
    const hasIndices = !!(geometry.indices && geometry.indices.length > 0);
    const hasNormals = !!(geometry.normals && geometry.normals.length > 0);
    const hasVertexColors = !!(useVertexColors && geometry.colors && geometry.colors.length > 0);
    const transforms = geometry.transforms || mat4$8.create();
    const flip = mat4$8.determinant(transforms) < 0;
    const cullFace = dynamicCulling ? flip ? 'front' : 'back' : 'back';
    const vert = hasVertexColors ? requireVColorShaders$1().vert : requireMeshShaders$1().vert;
    const frag = hasVertexColors ? requireVColorShaders$1().frag : requireMeshShaders$1().frag;
    const modelMatrixInv = mat4$8.invert(mat4$8.create(), transforms);
    let commandParams = {
      primitive: 'triangles',
      vert,
      frag,
      uniforms: {
        model: (context, props) => transforms,
        ucolor: (context, props) => props && props.color ? props.color : color,
        vColorToggler: (context, props) => props && props.useVertexColors && props.useVertexColors === true ? 1.0 : 0.0,
        unormal: (context, props) => {
          const modelViewMatrix = mat4$8.invert(mat4$8.create(), props.camera.view);
          mat4$8.multiply(modelViewMatrix, modelMatrixInv, modelViewMatrix);
          mat4$8.transpose(modelViewMatrix, modelViewMatrix);
          return modelViewMatrix;
        }
      },
      attributes: {
        position: regl.buffer({
          usage: 'static',
          type: 'float',
          data: geometry.positions
        }),
        ao: ambientOcclusion
      },
      cull: {
        enable: true,
        face: cullFace
      },
      depth: {
        enable: !transparent
      }
    };
    if (transparent) {
      commandParams.blend = {
        enable: true,
        func: {
          src: 'src alpha',
          dst: 'one minus src alpha'
        }
      };
    }
    if (geometry.cells) {
      commandParams.elements = geometry.cells;
    } else if (hasIndices) {
      commandParams.elements = regl.elements({
        usage: 'static',
        type: 'uint16',
        data: geometry.indices
      });
    } else if (geometry.triangles) {
      commandParams.elements = geometry.triangles;
    } else {
      commandParams.count = geometry.positions.length / 3;
    }
    if (hasNormals) {
      commandParams.attributes.normal = regl.buffer({
        usage: 'static',
        type: 'float',
        data: geometry.normals
      });
    }
    if (hasVertexColors) {
      commandParams.attributes.color = regl.buffer({
        usage: 'static',
        type: 'float',
        data: geometry.colors
      });
    }
    commandParams = Object.assign({}, commandParams, params.extras);
    return regl(commandParams);
  };
  var drawMesh_1 = drawMesh;
  var vColorShaders;
  var hasRequiredVColorShaders;
  function requireVColorShaders() {
    if (hasRequiredVColorShaders) return vColorShaders;
    hasRequiredVColorShaders = 1;
    const vColorVert = `
precision mediump float;

uniform float camNear, camFar;
uniform mat4 model, view, projection;

attribute vec3 position, normal;
attribute vec4 color;

varying vec3 surfaceNormal, surfacePosition;
varying vec4 _worldSpacePosition;
varying vec4 vColor;

void main() {
  vColor = color;

  surfacePosition = position;
  surfaceNormal = normal;
  vec4 worldSpacePosition = model * vec4(position, 1);
  _worldSpacePosition = worldSpacePosition;

  vec4 glPosition = projection * view * model * vec4(position, 1);
  gl_Position = glPosition;
}
`;
    const vColorFrag = `
precision mediump float;
varying vec4 vColor;

void main () {
  gl_FragColor = vColor;
}
`;
    vColorShaders = {
      frag: vColorFrag,
      vert: vColorVert
    };
    return vColorShaders;
  }
  var meshShaders;
  var hasRequiredMeshShaders;
  function requireMeshShaders() {
    if (hasRequiredMeshShaders) return meshShaders;
    hasRequiredMeshShaders = 1;
    const meshVert = `
precision mediump float;

uniform float camNear, camFar;
uniform mat4 model, view, projection;

attribute vec3 position, normal;


varying vec3 surfaceNormal, surfacePosition;
varying vec4 _worldSpacePosition;


void main() {


  surfacePosition = position;
  surfaceNormal = normal;
  vec4 worldSpacePosition = model * vec4(position, 1);
  _worldSpacePosition = worldSpacePosition;

  vec4 glPosition = projection * view * model * vec4(position, 1);
  gl_Position = glPosition;
}
`;
    const meshFrag = `
precision mediump float;
varying vec3 surfaceNormal;
uniform float ambientLightAmount;
uniform float diffuseLightAmount;
uniform vec4 ucolor;
uniform vec3 lightDirection;
uniform vec3 opacity;

varying vec4 _worldSpacePosition;

uniform vec2 printableArea;

vec4 errorColor = vec4(0.15, 0.15, 0.15, 0.3);

void main () {
  vec4 depth = gl_FragCoord;

  float v = 0.8; // shadow value
  vec4 endColor = ucolor;

  vec3 ambient = ambientLightAmount * endColor.rgb;
  float cosTheta = dot(surfaceNormal, lightDirection);
  vec3 diffuse = diffuseLightAmount * endColor.rgb * clamp(cosTheta , 0.0, 1.0 );

  float cosTheta2 = dot(surfaceNormal, vec3(-lightDirection.x, -lightDirection.y, lightDirection.z));
  vec3 diffuse2 = diffuseLightAmount * endColor.rgb * clamp(cosTheta2 , 0.0, 1.0 );

  gl_FragColor = vec4((ambient + diffuse + diffuse2 * v), endColor.a);
}`;
    meshShaders = {
      vert: meshVert,
      frag: meshFrag
    };
    return meshShaders;
  }
  var colorOnlyShaders;
  var hasRequiredColorOnlyShaders;
  function requireColorOnlyShaders() {
    if (hasRequiredColorOnlyShaders) return colorOnlyShaders;
    hasRequiredColorOnlyShaders = 1;
    const vColorFrag = `
precision mediump float;
uniform vec4 ucolor;

void main () {
  gl_FragColor = ucolor;
}
`;
    colorOnlyShaders = {
      frag: vColorFrag
    };
    return colorOnlyShaders;
  }
  const mat4$7 = glMat4;
  const {meshColor: meshColor$1} = renderDefaults$1;
  const drawLines = (regl, params = {}) => {
    const defaults = {
      color: meshColor$1,
      geometry: undefined
    };
    let {geometry, color, transparent} = Object.assign({}, defaults, params);
    if (('color' in geometry)) color = geometry.color;
    const hasIndices = !!(geometry.indices && geometry.indices.length > 0);
    const hasNormals = !!(geometry.normals && geometry.normals.length > 0);
    const hasVertexColors = !!(geometry.colors && geometry.colors.length > 0);
    const vert = hasVertexColors ? requireVColorShaders().vert : requireMeshShaders().vert;
    const frag = hasVertexColors ? requireVColorShaders().frag : requireColorOnlyShaders().frag;
    const commandParams = {
      primitive: 'lines',
      vert,
      frag,
      uniforms: {
        model: (context, props) => props.model || geometry.transforms || mat4$7.create(),
        ucolor: (context, props) => props && props.color ? props.color : color
      },
      attributes: {
        position: regl.buffer({
          usage: 'static',
          type: 'float',
          data: geometry.positions
        })
      },
      depth: {
        enable: !transparent
      }
    };
    if (transparent) {
      commandParams.blend = {
        enable: true,
        func: {
          src: 'src alpha',
          dst: 'one minus src alpha'
        }
      };
    }
    if (hasVertexColors) {
      commandParams.attributes.color = regl.buffer({
        usage: 'static',
        type: 'float',
        data: geometry.colors
      });
    }
    if (hasIndices) {
      commandParams.elements = regl.elements({
        usage: 'static',
        type: 'uint16',
        data: geometry.indices
      });
    }
    if (hasNormals) {
      commandParams.attributes.normal = regl.buffer({
        usage: 'static',
        type: 'float',
        data: geometry.normals
      });
    }
    return regl(commandParams);
  };
  var drawLines_1 = drawLines;
  var epsilon = 0.000001;
  var create_1 = create;
  function create() {
    var out = new Float32Array(3);
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    return out;
  }
  var clone_1 = clone;
  function clone(a) {
    var out = new Float32Array(3);
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    return out;
  }
  var fromValues_1 = fromValues$1;
  function fromValues$1(x, y, z) {
    var out = new Float32Array(3);
    out[0] = x;
    out[1] = y;
    out[2] = z;
    return out;
  }
  var normalize_1 = normalize$1;
  function normalize$1(out, a) {
    var x = a[0], y = a[1], z = a[2];
    var len = x * x + y * y + z * z;
    if (len > 0) {
      len = 1 / Math.sqrt(len);
      out[0] = a[0] * len;
      out[1] = a[1] * len;
      out[2] = a[2] * len;
    }
    return out;
  }
  var dot_1 = dot$1;
  function dot$1(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  }
  var angle_1 = angle;
  var fromValues = fromValues_1;
  var normalize = normalize_1;
  var dot = dot_1;
  function angle(a, b) {
    var tempA = fromValues(a[0], a[1], a[2]);
    var tempB = fromValues(b[0], b[1], b[2]);
    normalize(tempA, tempA);
    normalize(tempB, tempB);
    var cosine = dot(tempA, tempB);
    if (cosine > 1.0) {
      return 0;
    } else {
      return Math.acos(cosine);
    }
  }
  var copy_1 = copy;
  function copy(out, a) {
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    return out;
  }
  var set_1 = set;
  function set(out, x, y, z) {
    out[0] = x;
    out[1] = y;
    out[2] = z;
    return out;
  }
  var equals_1 = equals;
  var EPSILON = epsilon;
  function equals(a, b) {
    var a0 = a[0];
    var a1 = a[1];
    var a2 = a[2];
    var b0 = b[0];
    var b1 = b[1];
    var b2 = b[2];
    return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));
  }
  var exactEquals_1 = exactEquals;
  function exactEquals(a, b) {
    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];
  }
  var add_1 = add;
  function add(out, a, b) {
    out[0] = a[0] + b[0];
    out[1] = a[1] + b[1];
    out[2] = a[2] + b[2];
    return out;
  }
  var subtract_1 = subtract;
  function subtract(out, a, b) {
    out[0] = a[0] - b[0];
    out[1] = a[1] - b[1];
    out[2] = a[2] - b[2];
    return out;
  }
  var sub = {
    exports: {}
  };
  (function (module) {
    module.exports = subtract_1;
  })(sub);
  var multiply_1 = multiply;
  function multiply(out, a, b) {
    out[0] = a[0] * b[0];
    out[1] = a[1] * b[1];
    out[2] = a[2] * b[2];
    return out;
  }
  var mul = {
    exports: {}
  };
  (function (module) {
    module.exports = multiply_1;
  })(mul);
  var divide_1 = divide;
  function divide(out, a, b) {
    out[0] = a[0] / b[0];
    out[1] = a[1] / b[1];
    out[2] = a[2] / b[2];
    return out;
  }
  var div = {
    exports: {}
  };
  (function (module) {
    module.exports = divide_1;
  })(div);
  var min_1 = min$1;
  function min$1(out, a, b) {
    out[0] = Math.min(a[0], b[0]);
    out[1] = Math.min(a[1], b[1]);
    out[2] = Math.min(a[2], b[2]);
    return out;
  }
  var max_1 = max$1;
  function max$1(out, a, b) {
    out[0] = Math.max(a[0], b[0]);
    out[1] = Math.max(a[1], b[1]);
    out[2] = Math.max(a[2], b[2]);
    return out;
  }
  var floor_1 = floor;
  function floor(out, a) {
    out[0] = Math.floor(a[0]);
    out[1] = Math.floor(a[1]);
    out[2] = Math.floor(a[2]);
    return out;
  }
  var ceil_1 = ceil;
  function ceil(out, a) {
    out[0] = Math.ceil(a[0]);
    out[1] = Math.ceil(a[1]);
    out[2] = Math.ceil(a[2]);
    return out;
  }
  var round_1 = round;
  function round(out, a) {
    out[0] = Math.round(a[0]);
    out[1] = Math.round(a[1]);
    out[2] = Math.round(a[2]);
    return out;
  }
  var scale_1 = scale;
  function scale(out, a, b) {
    out[0] = a[0] * b;
    out[1] = a[1] * b;
    out[2] = a[2] * b;
    return out;
  }
  var scaleAndAdd_1 = scaleAndAdd;
  function scaleAndAdd(out, a, b, scale) {
    out[0] = a[0] + b[0] * scale;
    out[1] = a[1] + b[1] * scale;
    out[2] = a[2] + b[2] * scale;
    return out;
  }
  var distance_1 = distance;
  function distance(a, b) {
    var x = b[0] - a[0], y = b[1] - a[1], z = b[2] - a[2];
    return Math.sqrt(x * x + y * y + z * z);
  }
  var dist = {
    exports: {}
  };
  (function (module) {
    module.exports = distance_1;
  })(dist);
  var squaredDistance_1 = squaredDistance;
  function squaredDistance(a, b) {
    var x = b[0] - a[0], y = b[1] - a[1], z = b[2] - a[2];
    return x * x + y * y + z * z;
  }
  var sqrDist = {
    exports: {}
  };
  (function (module) {
    module.exports = squaredDistance_1;
  })(sqrDist);
  var length_1 = length;
  function length(a) {
    var x = a[0], y = a[1], z = a[2];
    return Math.sqrt(x * x + y * y + z * z);
  }
  var len = {
    exports: {}
  };
  (function (module) {
    module.exports = length_1;
  })(len);
  var squaredLength_1 = squaredLength;
  function squaredLength(a) {
    var x = a[0], y = a[1], z = a[2];
    return x * x + y * y + z * z;
  }
  var sqrLen = {
    exports: {}
  };
  (function (module) {
    module.exports = squaredLength_1;
  })(sqrLen);
  var negate_1 = negate;
  function negate(out, a) {
    out[0] = -a[0];
    out[1] = -a[1];
    out[2] = -a[2];
    return out;
  }
  var inverse_1 = inverse;
  function inverse(out, a) {
    out[0] = 1.0 / a[0];
    out[1] = 1.0 / a[1];
    out[2] = 1.0 / a[2];
    return out;
  }
  var cross_1 = cross;
  function cross(out, a, b) {
    var ax = a[0], ay = a[1], az = a[2], bx = b[0], by = b[1], bz = b[2];
    out[0] = ay * bz - az * by;
    out[1] = az * bx - ax * bz;
    out[2] = ax * by - ay * bx;
    return out;
  }
  var lerp_1 = lerp;
  function lerp(out, a, b, t) {
    var ax = a[0], ay = a[1], az = a[2];
    out[0] = ax + t * (b[0] - ax);
    out[1] = ay + t * (b[1] - ay);
    out[2] = az + t * (b[2] - az);
    return out;
  }
  var random_1 = random;
  function random(out, scale) {
    scale = scale || 1.0;
    var r = Math.random() * 2.0 * Math.PI;
    var z = Math.random() * 2.0 - 1.0;
    var zScale = Math.sqrt(1.0 - z * z) * scale;
    out[0] = Math.cos(r) * zScale;
    out[1] = Math.sin(r) * zScale;
    out[2] = z * scale;
    return out;
  }
  var transformMat4_1 = transformMat4;
  function transformMat4(out, a, m) {
    var x = a[0], y = a[1], z = a[2], w = m[3] * x + m[7] * y + m[11] * z + m[15];
    w = w || 1.0;
    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;
    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;
    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;
    return out;
  }
  var transformMat3_1 = transformMat3;
  function transformMat3(out, a, m) {
    var x = a[0], y = a[1], z = a[2];
    out[0] = x * m[0] + y * m[3] + z * m[6];
    out[1] = x * m[1] + y * m[4] + z * m[7];
    out[2] = x * m[2] + y * m[5] + z * m[8];
    return out;
  }
  var transformQuat_1 = transformQuat;
  function transformQuat(out, a, q) {
    var x = a[0], y = a[1], z = a[2], qx = q[0], qy = q[1], qz = q[2], qw = q[3], ix = qw * x + qy * z - qz * y, iy = qw * y + qz * x - qx * z, iz = qw * z + qx * y - qy * x, iw = -qx * x - qy * y - qz * z;
    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
    return out;
  }
  var rotateX_1 = rotateX;
  function rotateX(out, a, b, c) {
    var by = b[1];
    var bz = b[2];
    var py = a[1] - by;
    var pz = a[2] - bz;
    var sc = Math.sin(c);
    var cc = Math.cos(c);
    out[0] = a[0];
    out[1] = by + py * cc - pz * sc;
    out[2] = bz + py * sc + pz * cc;
    return out;
  }
  var rotateY_1 = rotateY;
  function rotateY(out, a, b, c) {
    var bx = b[0];
    var bz = b[2];
    var px = a[0] - bx;
    var pz = a[2] - bz;
    var sc = Math.sin(c);
    var cc = Math.cos(c);
    out[0] = bx + pz * sc + px * cc;
    out[1] = a[1];
    out[2] = bz + pz * cc - px * sc;
    return out;
  }
  var rotateZ_1 = rotateZ;
  function rotateZ(out, a, b, c) {
    var bx = b[0];
    var by = b[1];
    var px = a[0] - bx;
    var py = a[1] - by;
    var sc = Math.sin(c);
    var cc = Math.cos(c);
    out[0] = bx + px * cc - py * sc;
    out[1] = by + px * sc + py * cc;
    out[2] = a[2];
    return out;
  }
  var forEach_1 = forEach;
  var vec = create_1();
  function forEach(a, stride, offset, count, fn, arg) {
    var i, l;
    if (!stride) {
      stride = 3;
    }
    if (!offset) {
      offset = 0;
    }
    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }
    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];
      vec[1] = a[i + 1];
      vec[2] = a[i + 2];
      fn(vec, vec, arg);
      a[i] = vec[0];
      a[i + 1] = vec[1];
      a[i + 2] = vec[2];
    }
    return a;
  }
  var glVec3 = {
    EPSILON: epsilon,
    create: create_1,
    clone: clone_1,
    angle: angle_1,
    fromValues: fromValues_1,
    copy: copy_1,
    set: set_1,
    equals: equals_1,
    exactEquals: exactEquals_1,
    add: add_1,
    subtract: subtract_1,
    sub: sub.exports,
    multiply: multiply_1,
    mul: mul.exports,
    divide: divide_1,
    div: div.exports,
    min: min_1,
    max: max_1,
    floor: floor_1,
    ceil: ceil_1,
    round: round_1,
    scale: scale_1,
    scaleAndAdd: scaleAndAdd_1,
    distance: distance_1,
    dist: dist.exports,
    squaredDistance: squaredDistance_1,
    sqrDist: sqrDist.exports,
    length: length_1,
    len: len.exports,
    squaredLength: squaredLength_1,
    sqrLen: sqrLen.exports,
    negate: negate_1,
    inverse: inverse_1,
    normalize: normalize_1,
    dot: dot_1,
    cross: cross_1,
    lerp: lerp_1,
    random: random_1,
    transformMat4: transformMat4_1,
    transformMat3: transformMat3_1,
    transformQuat: transformQuat_1,
    rotateX: rotateX_1,
    rotateY: rotateY_1,
    rotateZ: rotateZ_1,
    forEach: forEach_1
  };
  const mat4$6 = glMat4;
  const vec3$4 = glVec3;
  const cameraState$1 = {
    view: mat4$6.identity(new Float32Array(16)),
    projection: mat4$6.identity(new Float32Array(16)),
    matrix: mat4$6.identity(new Float32Array(16)),
    near: 1,
    far: 18000,
    up: [0, 0, 1],
    eye: new Float32Array(3),
    position: [450, 550, 700],
    target: [0, 0, 0],
    fov: Math.PI / 4,
    aspect: 1,
    viewport: [0, 0, 0, 0],
    projectionType: 'perspective'
  };
  const cameraProps$1 = {};
  const defaults$1 = Object.assign({}, cameraState$1, cameraProps$1);
  const setProjection$1 = (output, camera, input) => {
    const aspect = input.width / input.height;
    const projection = mat4$6.perspective(mat4$6.identity([]), camera.fov, aspect, camera.near, camera.far);
    const viewport = [0, 0, input.width, input.height];
    const out = output || ({});
    out.projection = projection;
    out.aspect = aspect;
    out.viewport = viewport;
    return out;
  };
  const update$1 = (output, camera) => {
    if (!camera) {
      camera = output;
    }
    const {position, target, up} = camera;
    const offset = vec3$4.subtract([], position, target);
    const newPosition = vec3$4.add(vec3$4.create(), target, offset);
    const newView = mat4$6.lookAt(mat4$6.create(), newPosition, target, up);
    const out = output || ({});
    out.position = newPosition;
    out.view = newView;
    return out;
  };
  var perspectiveCamera = {
    cameraState: cameraState$1,
    cameraProps: cameraProps$1,
    defaults: defaults$1,
    setProjection: setProjection$1,
    update: update$1
  };
  const mat4$5 = glMat4;
  const cameraState = {
    view: mat4$5.identity(new Float32Array(16)),
    projection: mat4$5.identity(new Float32Array(16)),
    matrix: mat4$5.identity(new Float32Array(16)),
    near: 1,
    far: 1300,
    up: [0, 0, 1],
    eye: new Float32Array(3),
    position: [150, 250, 200],
    target: [0, 0, 0],
    fov: Math.PI / 4,
    aspect: 1,
    viewport: [0, 0, 0, 0],
    zoom: 1,
    projectionType: 'orthographic'
  };
  const cameraProps = {};
  const setProjection = (camera, input) => {
    const {width, height} = input;
    const aspect = width / height;
    const viewport = [0, 0, width, height];
    const multiplier = camera.zoom;
    const left = -width * multiplier;
    const right = width * multiplier;
    const bottom = -height * multiplier;
    const top = height * multiplier;
    const projection = mat4$5.ortho([], left, right, bottom, top, camera.near, camera.far);
    return {
      projection,
      aspect,
      viewport
    };
  };
  var orthographicCamera = {
    cameraState,
    cameraProps,
    setProjection
  };
  const vec3$3 = glVec3;
  const mat4$4 = glMat4;
  const fromOrthographicToPerspective = orthographicCamera => {
    const {near, far, fov, zoom} = orthographicCamera;
    const {viewport} = orthographicCamera;
    const projection = perspectiveCamera.setProjection(orthographicCamera, {
      width: viewport[2],
      height: viewport[3]
    });
    const {projectionType} = perspectiveCamera.cameraState;
    return Object.assign({}, orthographicCamera, projection, {
      projectionType
    }, {
      near,
      far,
      fov
    });
  };
  const fromPerspectiveToOrthographic = perspectiveCamera => {
    const {fov, aspect} = perspectiveCamera;
    const distance = vec3$3.length(vec3$3.subtract([], perspectiveCamera.position, perspectiveCamera.target)) * 0.3;
    const width = Math.tan(fov) * distance * aspect;
    const height = Math.tan(fov) * distance;
    const {near, far, viewport} = perspectiveCamera;
    const fCam = {
      zoom: 1,
      near,
      far
    };
    const orthographicCamera$1 = orthographicCamera.cameraState;
    const projection = orthographicCamera.setProjection(fCam, {
      width,
      height
    });
    return Object.assign({}, orthographicCamera$1, perspectiveCamera, projection, {
      projectionType: orthographicCamera$1.projectionType,
      viewport
    });
  };
  const toPerspectiveView = ({camera}) => {
    const offsetToTarget = vec3$3.distance(camera.position, camera.target);
    const distance = offsetToTarget;
    const position = [distance, distance, distance];
    const view = mat4$4.lookAt(mat4$4.create(), position, camera.target, camera.up);
    return {
      view,
      position
    };
  };
  const toPresetView = (viewName, {camera}) => {
    const presets = {
      top: [0, -0.000001, 1],
      bottom: [0, 0, -1],
      front: [0, 1, 0],
      back: [0, -1, 0],
      left: [-1, 0, 0],
      right: [1, 0, 0],
      undefined: [0, 0, 0]
    };
    const offsetToTarget = vec3$3.distance(camera.position, camera.target);
    const position = vec3$3.add(vec3$3.create(), presets[viewName].map(x => x * offsetToTarget), camera.target);
    const view = mat4$4.lookAt(mat4$4.create(), position, camera.target, camera.up);
    return {
      view,
      position
    };
  };
  var camera = {
    toPerspectiveView,
    toPresetView,
    fromOrthographicToPerspective,
    fromPerspectiveToOrthographic
  };
  const flatten$2 = arr => arr.reduce((acc, val) => Array.isArray(val) ? acc.concat(flatten$2(val)) : acc.concat(val), []);
  var flatten_1 = flatten$2;
  const fnNumberSort = (a, b) => a - b;
  var fnNumberSort_1 = fnNumberSort;
  const head = array => {
    if (!Array.isArray(array) || array.length === 0) {
      return undefined;
    }
    return array[0];
  };
  var head_1 = head;
  const insertSorted = (array, element, compareFunction) => {
    let leftbound = 0;
    let rightbound = array.length;
    while (rightbound > leftbound) {
      const testindex = Math.floor((leftbound + rightbound) / 2);
      const testelement = array[testindex];
      const compareresult = compareFunction(element, testelement);
      if (compareresult > 0) {
        leftbound = testindex + 1;
      } else {
        rightbound = testindex;
      }
    }
    array.splice(leftbound, 0, element);
    return array;
  };
  var insertSorted_1 = insertSorted;
  const nth = (array, index) => {
    if (!Array.isArray(array) || array.length < index) {
      return undefined;
    }
    return array[index];
  };
  var nth_1 = nth;
  const padToLength = (anArray, padding, targetLength) => {
    anArray = anArray.slice();
    while (anArray.length < targetLength) {
      anArray.push(padding);
    }
    return anArray;
  };
  var padToLength_1 = padToLength;
  const toArray$1 = array => {
    if (Array.isArray(array)) return array;
    if (array === undefined || array === null) return [];
    return [array];
  };
  var toArray_1 = toArray$1;
  var src$1 = {
    flatten: flatten_1,
    fnNumberSort: fnNumberSort_1,
    head: head_1,
    insertSorted: insertSorted_1,
    nth: nth_1,
    padToLength: padToLength_1,
    toArray: toArray_1
  };
  const boundingBox$1 = positions => {
    if (positions.length === 0) {
      return [[0, 0, 0], [0, 0, 0]];
    }
    const nested = Array.isArray(positions) && Array.isArray(positions[0]);
    const dimensions = nested ? positions[0].length : 3;
    const min = new Array(dimensions);
    const max = new Array(dimensions);
    for (let i = 0; i < dimensions; i += 1) {
      min[i] = Infinity;
      max[i] = -Infinity;
    }
    if (nested) {
      positions.forEach(position => {
        for (let i = 0; i < dimensions; i += 1) {
          const _position = nested ? position[i] : position;
          max[i] = _position > max[i] ? _position : max[i];
          min[i] = _position < min[i] ? _position : min[i];
        }
      });
    } else {
      for (let j = 0; j < positions.length; j += dimensions) {
        for (let i = 0; i < dimensions; i += 1) {
          const _position = positions[i + j];
          max[i] = _position > max[i] ? _position : max[i];
          min[i] = _position < min[i] ? _position : min[i];
        }
      }
    }
    return [min, max];
  };
  var boundingBox_1 = boundingBox$1;
  const vec3$2 = glVec3;
  const {flatten: flatten$1} = src$1;
  const boundingBox = boundingBox_1;
  const computeBounds$1 = (...geometries) => {
    geometries = flatten$1(geometries);
    let bbox;
    geometries.forEach(geometry => {
      let gbbox = boundingBox(geometry.positions);
      gbbox = gbbox.map(bounds => vec3$2.transformMat4(bounds, bounds, geometry.transforms));
      if (bbox) {
        vec3$2.min(bbox[0], bbox[0], gbbox[0]);
        vec3$2.max(bbox[1], bbox[1], gbbox[1]);
      } else {
        bbox = gbbox;
      }
    });
    const min = vec3$2.min(vec3$2.create(), bbox[1], bbox[0]);
    const max = vec3$2.max(vec3$2.create(), bbox[1], bbox[0]);
    const size = vec3$2.subtract(vec3$2.create(), max, min);
    let center = vec3$2.scale(vec3$2.create(), size, 0.5);
    center = vec3$2.add(center, min, center);
    const dia = vec3$2.distance(center, max);
    const bounds = {
      dia,
      center: [...center],
      min: [...min],
      max: [...max],
      size: [...size]
    };
    return bounds;
  };
  var computeBounds_1 = computeBounds$1;
  var projectMat4;
  var hasRequiredProjectMat4;
  function requireProjectMat4() {
    if (hasRequiredProjectMat4) return projectMat4;
    hasRequiredProjectMat4 = 1;
    projectMat4 = project;
    function project(out, vec, m) {
      var x = vec[0], y = vec[1], z = vec[2], a00 = m[0], a01 = m[1], a02 = m[2], a03 = m[3], a10 = m[4], a11 = m[5], a12 = m[6], a13 = m[7], a20 = m[8], a21 = m[9], a22 = m[10], a23 = m[11], a30 = m[12], a31 = m[13], a32 = m[14], a33 = m[15];
      var lw = 1 / (x * a03 + y * a13 + z * a23 + a33);
      out[0] = (x * a00 + y * a10 + z * a20 + a30) * lw;
      out[1] = (x * a01 + y * a11 + z * a21 + a31) * lw;
      out[2] = (x * a02 + y * a12 + z * a22 + a32) * lw;
      return out;
    }
    return projectMat4;
  }
  var cameraUnproject;
  var hasRequiredCameraUnproject;
  function requireCameraUnproject() {
    if (hasRequiredCameraUnproject) return cameraUnproject;
    hasRequiredCameraUnproject = 1;
    var transform = requireProjectMat4();
    cameraUnproject = unproject;
    function unproject(out, vec, viewport, invProjectionView) {
      var viewX = viewport[0], viewY = viewport[1], viewWidth = viewport[2], viewHeight = viewport[3];
      var x = vec[0], y = vec[1], z = vec[2];
      x = x - viewX;
      y = viewHeight - y - 1;
      y = y - viewY;
      out[0] = 2 * x / viewWidth - 1;
      out[1] = 2 * y / viewHeight - 1;
      out[2] = 2 * z - 1;
      return transform(out, out, invProjectionView);
    }
    return cameraUnproject;
  }
  const vec3$1 = glVec3;
  const mat4$3 = glMat4;
  const {max, min, sqrt, PI, sin, cos, atan2} = Math;
  const computeBounds = computeBounds_1;
  const controlsProps = {
    limits: {
      minDistance: 0.01,
      maxDistance: 10000
    },
    drag: 0.27,
    EPS: 0.000001,
    zoomToFit: {
      auto: true,
      targets: 'all',
      tightness: 1.5
    },
    userControl: {
      zoom: true,
      zoomSpeed: 1.0,
      rotate: true,
      rotateSpeed: 1.0,
      pan: true,
      panSpeed: 1.0
    },
    autoRotate: {
      enabled: false,
      speed: 1.0
    },
    autoAdjustPlanes: true
  };
  const controlsState = {
    thetaDelta: 0,
    phiDelta: 0,
    scale: 1
  };
  const defaults = Object.assign({}, controlsState, controlsProps);
  const update = ({controls, camera}, output) => {
    const {EPS, drag} = controls;
    const {position, target} = camera;
    const up = controls.up ? controls.up : camera.up;
    let curThetaDelta = controls.thetaDelta;
    const curPhiDelta = controls.phiDelta;
    const curScale = controls.scale;
    const offset = vec3$1.subtract([], position, target);
    let theta;
    let phi;
    if (up[2] === 1) {
      theta = atan2(offset[0], offset[1]);
      phi = atan2(sqrt(offset[0] * offset[0] + offset[1] * offset[1]), offset[2]);
    } else {
      theta = atan2(offset[0], offset[2]);
      phi = atan2(sqrt(offset[0] * offset[0] + offset[2] * offset[2]), offset[1]);
    }
    if (controls.autoRotate.enabled && controls.userControl.rotate) {
      curThetaDelta += 2 * Math.PI / 60 / 60 * controls.autoRotate.speed;
    }
    theta += curThetaDelta;
    phi += curPhiDelta;
    phi = max(EPS, min(PI - EPS, phi));
    const radius = max(controls.limits.minDistance, min(controls.limits.maxDistance, vec3$1.length(offset) * curScale));
    if (up[2] === 1) {
      offset[0] = radius * sin(phi) * sin(theta);
      offset[2] = radius * cos(phi);
      offset[1] = radius * sin(phi) * cos(theta);
    } else {
      offset[0] = radius * sin(phi) * sin(theta);
      offset[1] = radius * cos(phi);
      offset[2] = radius * sin(phi) * cos(theta);
    }
    const newPosition = vec3$1.add(vec3$1.create(), target, offset);
    const newView = mat4$3.lookAt(mat4$3.create(), newPosition, target, up);
    const dragEffect = 1 - max(min(drag, 1.0), 0.01);
    const positionChanged = vec3$1.distance(position, newPosition) > 0.001;
    return {
      controls: {
        thetaDelta: curThetaDelta * dragEffect,
        phiDelta: curPhiDelta * dragEffect,
        scale: 1,
        changed: positionChanged
      },
      camera: {
        position: newPosition,
        view: newView
      }
    };
  };
  const rotate$1 = ({controls, camera, speed = 1}, angle) => {
    let {thetaDelta, phiDelta} = controls;
    if (controls.userControl.rotate) {
      thetaDelta += angle[0] * speed;
      phiDelta += angle[1] * speed;
    }
    return {
      controls: {
        thetaDelta,
        phiDelta
      },
      camera
    };
  };
  const zoom = ({controls, camera, speed = 1}, zoomDelta = 0) => {
    let {scale} = controls;
    if (controls.userControl.zoom && camera && zoomDelta !== undefined && zoomDelta !== 0 && !isNaN(zoomDelta)) {
      const sign = Math.sign(zoomDelta) === 0 ? 1 : Math.sign(zoomDelta);
      zoomDelta = zoomDelta / zoomDelta * sign * speed;
      const newScale = zoomDelta + controls.scale;
      const newDistance = vec3$1.distance(camera.position, camera.target) * newScale;
      if (newDistance > controls.limits.minDistance && newDistance < controls.limits.maxDistance) {
        scale += zoomDelta;
      }
      if (camera.projectionType === 'orthographic') {
        const distance = vec3$1.length(vec3$1.subtract([], camera.position, camera.target)) * 0.3;
        const width = Math.tan(camera.fov) * distance * camera.aspect;
        const height = Math.tan(camera.fov) * distance;
        const projection = orthographicCamera.setProjection(camera, {
          width,
          height
        });
        camera = projection;
      }
    }
    return {
      controls: {
        scale
      },
      camera
    };
  };
  const pan$1 = ({controls, camera, speed = 1}, delta) => {
    const unproject = requireCameraUnproject();
    const {projection, view, viewport} = camera;
    const combinedProjView = mat4$3.multiply([], projection, view);
    const invProjView = mat4$3.invert([], combinedProjView);
    const panStart = [viewport[2], viewport[3], 0];
    const panEnd = [viewport[2] - delta[0], viewport[3] + delta[1], 0];
    const unPanStart = unproject([], panStart, viewport, invProjView);
    const unPanEnd = unproject([], panEnd, viewport, invProjView);
    const eyeDistance = vec3$1.distance(camera.position, camera.eye);
    const offset = vec3$1.subtract([], unPanStart, unPanEnd).map(x => x * speed * eyeDistance * controls.scale);
    return {
      controls,
      camera: {
        position: vec3$1.add(vec3$1.create(), camera.position, offset),
        target: vec3$1.add(vec3$1.create(), camera.target, offset)
      }
    };
  };
  const zoomToFit$1 = ({controls, camera, entities}) => {
    const {zoomToFit} = controls;
    if (zoomToFit.targets !== 'all') {
      return {
        controls,
        camera
      };
    }
    if (entities.length === 0) return {
      controls,
      camera
    };
    const geometries = entities.map(entity => entity.geometry);
    const bounds = computeBounds(geometries);
    const {fov, target, position} = camera;
    const {tightness} = Object.assign({}, zoomToFit, controlsProps.zoomToFit);
    const idealDistanceFromCamera = bounds.dia * tightness / Math.tan(fov / 2.0);
    const currentDistance = vec3$1.distance(target, position);
    const scaleForIdealDistance = idealDistanceFromCamera / currentDistance;
    return {
      camera: {
        target: bounds.center
      },
      controls: {
        scale: scaleForIdealDistance
      }
    };
  };
  const reset = ({controls, camera}, desiredState) => {
    const options = {
      camera: {
        position: desiredState.camera.position,
        target: desiredState.camera.target,
        projection: mat4$3.perspective([], camera.fov, camera.aspect, camera.near, camera.far),
        view: desiredState.camera.view
      },
      controls: {
        thetaDelta: desiredState.controls.thetaDelta,
        phiDelta: desiredState.controls.phiDelta,
        scale: desiredState.controls.scale
      }
    };
    return options;
  };
  var orbitControls = {
    controlsProps,
    controlsState,
    defaults,
    update,
    rotate: rotate$1,
    zoom,
    pan: pan$1,
    zoomToFit: zoomToFit$1,
    reset
  };
  const mat4$2 = glMat4;
  const maxIndex$2 = Math.floor(65535 / 2);
  const geom2ToGeometries$1 = (options, solid) => {
    let {color} = options;
    const sides = solid.sides;
    if (sides.length === 0) return [];
    if (('color' in solid)) color = solid.color;
    const isTransparent = color[3] < 1.0;
    const colors = [];
    const numgeometries = Math.floor(sides.length / maxIndex$2) + 1;
    const addColor = (startColor, endColor) => {
      colors.push(startColor, endColor || startColor);
    };
    const geometries = [];
    for (let g = 0; g < numgeometries; g++) {
      const offset = g * maxIndex$2;
      const endset = Math.min(offset + maxIndex$2, sides.length);
      const positions = [];
      for (let i = offset; i < endset; i++) {
        const side = sides[i];
        if (side.color) {
          if (colors.length === 0 && positions.length > 0) {
            const toFill = positions.length;
            for (let j = 0; j < toFill; j++) {
              colors.push(color);
            }
          }
          addColor(side.color, side.endColor);
        } else if (colors.length) {
          addColor(color);
        }
        positions.push([side[0][0], side[0][1], 0]);
        positions.push([side[1][0], side[1][1], 0]);
      }
      const normals = positions.map(x => [0, 0, -1]);
      const indices = positions.map((x, i) => i);
      const transforms = solid.transforms ? mat4$2.clone(solid.transforms) : mat4$2.create();
      geometries.push({
        type: '2d',
        positions,
        normals,
        indices,
        transforms,
        color,
        colors,
        isTransparent
      });
    }
    return geometries;
  };
  var geom2ToGeometries_1 = geom2ToGeometries$1;
  const vec3 = glVec3;
  const mat4$1 = glMat4;
  const maxIndex$1 = 65535;
  const geom3ToGeometries$1 = (options, solid) => {
    let {color, smoothLighting} = options;
    if (('color' in solid)) color = solid.color;
    const polygons = solid.polygons;
    const transforms = solid.transforms ? mat4$1.clone(solid.transforms) : mat4$1.create();
    const geometries = [];
    let setstart = 0;
    while (setstart < polygons.length) {
      let vcount = 0;
      let setend = setstart;
      for (let i = setstart; i < polygons.length; i++) {
        vcount += polygons[i].vertices.length;
        if (vcount > maxIndex$1) break;
        setend++;
      }
      const positions = [];
      const normals = [];
      const indices = [];
      const colors = [];
      const isTransparent = true;
      for (let i = setstart; i < setend; i++) {
        const polygon = polygons[i];
        const vertices = polygon.vertices;
        const normal = calculateNormal(polygon);
        const faceColor = polygonColor(polygon, color);
        const polygonIndices = [];
        for (let j = 0; j < vertices.length; j++) {
          const position = vertices[j];
          positions.push(position);
          normals.push(normal);
          colors.push(faceColor);
          const index = positions.length - 1;
          polygonIndices.push(index);
        }
        for (let j = 2; j < polygonIndices.length; j++) {
          indices.push([polygonIndices[0], polygonIndices[j - 1], polygonIndices[j]]);
        }
      }
      const geometry = {
        type: '3d',
        positions,
        normals,
        indices,
        colors,
        transforms,
        isTransparent
      };
      geometries.push(geometry);
      setstart = setend;
    }
    return geometries;
  };
  const polygonColor = (polygon, color) => {
    let faceColor = color;
    if (polygon.color) {
      faceColor = polygon.color;
    }
    if (faceColor && faceColor.length < 4) {
      faceColor.push(1.0);
    }
    return faceColor;
  };
  const calculateNormal = polygon => {
    if (polygon.plane) return vec3.clone(polygon.plane);
    const vertices = polygon.vertices;
    const ba = vec3.create();
    vec3.subtract(ba, vertices[1], vertices[0]);
    const ca = vec3.create();
    vec3.subtract(ca, vertices[2], vertices[0]);
    const normal = vec3.create();
    vec3.cross(normal, ba, ca);
    vec3.normalize(normal, normal);
    return normal;
  };
  var geom3ToGeometries_1 = geom3ToGeometries$1;
  const mat4 = glMat4;
  const maxIndex = Math.floor(65535 / 2) - 2;
  const path2ToGeometries$1 = (options, solid) => {
    let {color} = options;
    const points = solid.points;
    if (points.length === 0) return [];
    if (('color' in solid)) color = solid.color;
    const isTransparent = color[3] < 1.0;
    const numgeometries = Math.floor(points.length / maxIndex) + 1;
    const geometries = [];
    for (let g = 0; g < numgeometries; g++) {
      const offset = g * maxIndex;
      const endset = Math.min(offset + maxIndex, points.length);
      const positions = [];
      let prevvertice;
      for (let i = offset; i < endset; i++) {
        const point = points[i];
        if (prevvertice) {
          positions.push([prevvertice[0], prevvertice[1], 0]);
          positions.push([point[0], point[1], 0]);
        }
        prevvertice = point;
      }
      if (g + 1 === numgeometries && solid.isClosed && prevvertice) {
        const point = points[0];
        positions.push([prevvertice[0], prevvertice[1], 0]);
        positions.push([point[0], point[1], 0]);
      }
      const normals = positions.map(x => [0, 0, -1]);
      const indices = positions.map((x, i) => i);
      const transforms = solid.transforms ? mat4.clone(solid.transforms) : mat4.create();
      geometries.push({
        type: '2d',
        positions,
        normals,
        indices,
        transforms,
        color,
        isTransparent
      });
    }
    return geometries;
  };
  var path2ToGeometries_1 = path2ToGeometries$1;
  const {flatten, toArray} = src$1;
  const {meshColor} = renderDefaults$1;
  const geom2ToGeometries = geom2ToGeometries_1;
  const geom3ToGeometries = geom3ToGeometries_1;
  const path2ToGeometries = path2ToGeometries_1;
  const assembleEntities = geometries => {
    const entities = geometries.map(geometry => {
      const visuals = {
        drawCmd: geometry.type === '2d' ? 'drawLines' : 'drawMesh',
        show: true,
        transparent: geometry.isTransparent,
        useVertexColors: true
      };
      const entity = {
        geometry,
        visuals
      };
      return entity;
    });
    return entities;
  };
  const entitiesFromSolids = (options, ...solids) => {
    const defaults = {
      color: meshColor,
      smoothNormals: true
    };
    const {color, smoothNormals} = Object.assign({}, defaults, options);
    solids = flatten(toArray(solids));
    solids = solids.filter(solid => solid && solid instanceof Object);
    const entities = [];
    solids.forEach(solid => {
      let geometries = [];
      if (('sides' in solid)) {
        geometries = geom2ToGeometries({
          color
        }, solid);
      } else if (('points' in solid)) {
        geometries = path2ToGeometries({
          color
        }, solid);
      } else if (('polygons' in solid)) {
        geometries = geom3ToGeometries({
          smoothLighting: smoothNormals,
          normalThreshold: 0.3,
          color
        }, solid);
      }
      entities.push(...assembleEntities(geometries));
    });
    return entities;
  };
  var entitiesFromSolids_1 = entitiesFromSolids;
  var src = {
    prepareRender: render,
    drawCommands: {
      drawGrid: multi,
      drawAxis: drawAxis_1,
      drawMesh: drawMesh_1,
      drawLines: drawLines_1
    },
    cameras: {
      camera: camera,
      orthographic: orthographicCamera,
      perspective: perspectiveCamera
    },
    controls: {
      orbit: orbitControls
    },
    entitiesFromSolids: entitiesFromSolids_1
  };
  var orbit = src.controls.orbit;
  function solidsToGeometryEntities(solids) {
    var options = {
      color: hexToAlphaColor(DEFAULT_COLOR)
    };
    return src.entitiesFromSolids.apply(void 0, __spreadArray([options], solids, false));
  }
  function neatGridDistance(rawDistance) {
    var paddedDistance = rawDistance + GRID_PADDING;
    var roundedDistance = Math.ceil(paddedDistance / ROUND_UP_INTERVAL) * ROUND_UP_INTERVAL;
    return roundedDistance;
  }
  var MultiGridEntity = (function () {
    function MultiGridEntity(size) {
      this.visuals = {
        drawCmd: "drawGrid",
        show: true,
        color: hexToAlphaColor(BP_TEXT_COLOR),
        subColor: hexToAlphaColor(ACE_GUTTER_TEXT_COLOR)
      };
      this.ticks = [MAIN_TICKS, SUB_TICKS];
      this.size = [size, size];
    }
    return MultiGridEntity;
  })();
  var AxisEntity = (function () {
    function AxisEntity(size) {
      this.size = size;
      this.visuals = {
        drawCmd: "drawAxis",
        show: true
      };
      this.alwaysVisible = false;
    }
    return AxisEntity;
  })();
  function makeExtraEntities(renderGroup, solids) {
    var hasGrid = renderGroup.hasGrid, hasAxis = renderGroup.hasAxis;
    if (!(hasAxis || hasGrid)) return [];
    var boundingBoxes = solids.map(function (solid) {
      return measureBoundingBox_1(solid);
    });
    var minMaxXys = boundingBoxes.map(function (boundingBox) {
      var minX = boundingBox[0][0];
      var minY = boundingBox[0][1];
      var maxX = boundingBox[1][0];
      var maxY = boundingBox[1][1];
      return [minX, minY, maxX, maxY];
    });
    var xys = minMaxXys.flat(1);
    var distancesFromOrigin = xys.map(Math.abs);
    var furthestDistance = Math.max.apply(Math, distancesFromOrigin);
    var neatDistance = neatGridDistance(furthestDistance);
    var extraEntities = [];
    if (hasGrid) extraEntities.push(new MultiGridEntity(neatDistance * 2));
    if (hasAxis) extraEntities.push(new AxisEntity(neatDistance));
    return extraEntities;
  }
  function makeWrappedRendererData(renderGroup, cameraState) {
    var solids = renderGroup.shapes.map(function (shape) {
      return shape.solid;
    });
    var geometryEntities = solidsToGeometryEntities(solids);
    var extraEntities = makeExtraEntities(renderGroup, solids);
    var allEntities = __spreadArray(__spreadArray([], geometryEntities, true), extraEntities, true);
    return {
      entities: allEntities,
      geometryEntities: geometryEntities,
      camera: cameraState,
      rendering: {
        background: hexToAlphaColor(ACE_GUTTER_BACKGROUND_COLOR)
      },
      drawCommands: src.drawCommands
    };
  }
  function makeWrappedRenderer(canvas) {
    return src.prepareRender({
      glOptions: {
        canvas: canvas
      }
    });
  }
  function cloneCameraState() {
    return __assign({}, src.cameras.perspective.defaults);
  }
  function cloneControlsState() {
    return __assign({}, src.controls.orbit.defaults);
  }
  function updateProjection(cameraState, width, height) {
    src.cameras.perspective.setProjection(cameraState, cameraState, {
      width: width,
      height: height
    });
  }
  function updateStates(cameraState, controlsState) {
    var states = orbit.update({
      camera: cameraState,
      controls: controlsState
    });
    cameraState.position = states.camera.position;
    cameraState.view = states.camera.view;
    controlsState.thetaDelta = states.controls.thetaDelta;
    controlsState.phiDelta = states.controls.phiDelta;
    controlsState.scale = states.controls.scale;
  }
  function zoomToFit(cameraState, controlsState, geometryEntities) {
    var states = orbit.zoomToFit({
      camera: cameraState,
      controls: controlsState,
      entities: geometryEntities
    });
    cameraState.target = states.camera.target;
    controlsState.scale = states.controls.scale;
  }
  function rotate(cameraState, controlsState, rotateX, rotateY) {
    var states = orbit.rotate({
      camera: cameraState,
      controls: controlsState,
      speed: ROTATION_SPEED
    }, [rotateX, rotateY]);
    controlsState.thetaDelta = states.controls.thetaDelta;
    controlsState.phiDelta = states.controls.phiDelta;
  }
  function pan(cameraState, controlsState, panX, panY) {
    var states = orbit.pan({
      camera: cameraState,
      controls: controlsState
    }, [panX * X_FACTOR, panY * Y_FACTOR]);
    cameraState.position = states.camera.position;
    cameraState.target = states.camera.target;
  }
  var ListenerTracker = (function () {
    function ListenerTracker(element) {
      this.element = element;
      this.listeners = [];
    }
    ListenerTracker.prototype.addListener = function (eventType, listener, options) {
      this.listeners.push([eventType, listener]);
      this.element.addEventListener(eventType, listener, options);
    };
    ListenerTracker.prototype.removeListeners = function () {
      var _this = this;
      this.listeners.forEach(function (_a) {
        var eventType = _a[0], listener = _a[1];
        _this.element.removeEventListener(eventType, listener);
      });
    };
    return ListenerTracker;
  })();
  var MousePointer;
  (function (MousePointer) {
    MousePointer[MousePointer["LEFT"] = 0] = "LEFT";
    MousePointer[MousePointer["MIDDLE"] = 1] = "MIDDLE";
    MousePointer[MousePointer["RIGHT"] = 2] = "RIGHT";
    MousePointer[MousePointer["BACK"] = 3] = "BACK";
    MousePointer[MousePointer["FORWARD"] = 4] = "FORWARD";
    MousePointer[MousePointer["NONE"] = -1] = "NONE";
    MousePointer[MousePointer["OTHER"] = 7050] = "OTHER";
  })(MousePointer || (MousePointer = {}));
  var InputTracker = (function () {
    function InputTracker(canvas, cameraState, geometryEntities) {
      this.canvas = canvas;
      this.cameraState = cameraState;
      this.geometryEntities = geometryEntities;
      this.controlsState = cloneControlsState();
      this.zoomToFit = true;
      this.zoomTicks = 0;
      this.heldPointer = MousePointer.NONE;
      this.lastX = null;
      this.lastY = null;
      this.rotateX = 0;
      this.rotateY = 0;
      this.panX = 0;
      this.panY = 0;
      this.frameDirty = false;
      this.listenerTracker = new ListenerTracker(canvas);
    }
    InputTracker.prototype.changeZoomTicks = function (wheelDelta) {
      this.zoomTicks += Math.sign(wheelDelta);
    };
    InputTracker.prototype.setHeldPointer = function (mouseEventButton) {
      switch (mouseEventButton) {
        case MousePointer.LEFT:
        case MousePointer.RIGHT:
        case MousePointer.MIDDLE:
          this.heldPointer = mouseEventButton;
          break;
        default:
          this.heldPointer = MousePointer.OTHER;
          break;
      }
    };
    InputTracker.prototype.unsetHeldPointer = function () {
      this.heldPointer = MousePointer.NONE;
    };
    InputTracker.prototype.shouldIgnorePointerMove = function () {
      return ![MousePointer.LEFT, MousePointer.MIDDLE].includes(this.heldPointer);
    };
    InputTracker.prototype.isPointerPan = function (isShiftKey) {
      return this.heldPointer === MousePointer.MIDDLE || this.heldPointer === MousePointer.LEFT && isShiftKey;
    };
    InputTracker.prototype.unsetLastCoordinates = function () {
      this.lastX = null;
      this.lastY = null;
    };
    InputTracker.prototype.tryDynamicResize = function () {
      var _a = this.canvas, oldWidth = _a.width, oldHeight = _a.height;
      var canvasBounds = this.canvas.getBoundingClientRect();
      var devicePixelRatio = window.devicePixelRatio;
      var newWidth = Math.floor(canvasBounds.width * devicePixelRatio);
      var newHeight = Math.floor(canvasBounds.height * devicePixelRatio);
      if (oldWidth === newWidth && oldHeight === newHeight) return;
      this.frameDirty = true;
      this.canvas.width = newWidth;
      this.canvas.height = newHeight;
      updateProjection(this.cameraState, newWidth, newHeight);
    };
    InputTracker.prototype.tryZoomToFit = function () {
      if (!this.zoomToFit) return;
      this.frameDirty = true;
      zoomToFit(this.cameraState, this.controlsState, this.geometryEntities);
      this.zoomToFit = false;
    };
    InputTracker.prototype.tryZoom = function () {
      if (this.zoomTicks === 0) return;
      while (this.zoomTicks !== 0) {
        var currentTick = Math.sign(this.zoomTicks);
        this.zoomTicks -= currentTick;
        var scaledChange = currentTick * ZOOM_TICK_SCALE;
        var potentialNewScale = this.controlsState.scale + scaledChange;
        var potentialNewDistance = vec3$n.distance(this.cameraState.position, this.cameraState.target) * potentialNewScale;
        if (potentialNewDistance > this.controlsState.limits.minDistance && potentialNewDistance < this.controlsState.limits.maxDistance) {
          this.frameDirty = true;
          this.controlsState.scale = potentialNewScale;
        } else break;
      }
      this.zoomTicks = 0;
    };
    InputTracker.prototype.tryRotate = function () {
      if (this.rotateX === 0 && this.rotateY === 0) return;
      this.frameDirty = true;
      rotate(this.cameraState, this.controlsState, this.rotateX, this.rotateY);
      this.rotateX = 0;
      this.rotateY = 0;
    };
    InputTracker.prototype.tryPan = function () {
      if (this.panX === 0 && this.panY === 0) return;
      this.frameDirty = true;
      pan(this.cameraState, this.controlsState, this.panX, this.panY);
      this.panX = 0;
      this.panY = 0;
    };
    InputTracker.prototype.addListeners = function () {
      var _this = this;
      this.listenerTracker.addListener("dblclick", function (_mouseEvent) {
        _this.zoomToFit = true;
      });
      this.listenerTracker.addListener("wheel", function (wheelEvent) {
        wheelEvent.preventDefault();
        _this.changeZoomTicks(wheelEvent.deltaY);
      }, {
        passive: false
      });
      this.listenerTracker.addListener("pointerdown", function (pointerEvent) {
        pointerEvent.preventDefault();
        _this.setHeldPointer(pointerEvent.button);
        _this.lastX = pointerEvent.pageX;
        _this.lastY = pointerEvent.pageY;
        _this.canvas.setPointerCapture(pointerEvent.pointerId);
      }, {
        passive: false
      });
      this.listenerTracker.addListener("pointerup", function (pointerEvent) {
        _this.unsetHeldPointer();
        _this.unsetLastCoordinates();
        _this.canvas.releasePointerCapture(pointerEvent.pointerId);
      });
      this.listenerTracker.addListener("pointermove", function (pointerEvent) {
        if (_this.shouldIgnorePointerMove()) return;
        var currentX = pointerEvent.pageX;
        var currentY = pointerEvent.pageY;
        if (_this.lastX !== null && _this.lastY !== null) {
          var differenceX = _this.lastX - currentX;
          var differenceY = _this.lastY - currentY;
          if (_this.isPointerPan(pointerEvent.shiftKey)) {
            _this.panX += differenceX;
            _this.panY -= differenceY;
          } else {
            _this.rotateX -= differenceX;
            _this.rotateY += differenceY;
          }
        }
        _this.lastX = currentX;
        _this.lastY = currentY;
      });
    };
    InputTracker.prototype.removeListeners = function () {
      this.listenerTracker.removeListeners();
    };
    InputTracker.prototype.respondToInput = function () {
      this.tryZoomToFit();
      this.tryZoom();
      this.tryRotate();
      this.tryPan();
      if (this.frameDirty) updateStates(this.cameraState, this.controlsState);
      this.tryDynamicResize();
    };
    InputTracker.prototype.flushMidInput = function () {
      this.unsetHeldPointer();
      this.unsetLastCoordinates();
    };
    return InputTracker;
  })();
  var StatefulRenderer = (function () {
    function StatefulRenderer(canvas, renderGroup, componentNumber, loseCallback, restoreCallback) {
      this.canvas = canvas;
      this.componentNumber = componentNumber;
      this.loseCallback = loseCallback;
      this.restoreCallback = restoreCallback;
      this.isStarted = false;
      this.currentRequestId = null;
      this.cameraState = cloneCameraState();
      this.cameraState.position = [1000, 1000, 1500];
      this.webGlListenerTracker = new ListenerTracker(canvas);
      this.wrappedRendererData = makeWrappedRendererData(renderGroup, this.cameraState);
      this.inputTracker = new InputTracker(canvas, this.cameraState, this.wrappedRendererData.geometryEntities);
    }
    StatefulRenderer.prototype.addWebGlListeners = function () {
      var _this = this;
      this.webGlListenerTracker.addListener("webglcontextlost", function (contextEvent) {
        contextEvent.preventDefault();
        console.debug((">>> CONTEXT LOST FOR #").concat(_this.componentNumber));
        _this.loseCallback();
        _this.stop();
      });
      this.webGlListenerTracker.addListener("webglcontextrestored", function (_contextEvent) {
        console.debug((">>> CONTEXT RESTORED FOR #").concat(_this.componentNumber));
        _this.start();
        _this.restoreCallback();
      });
    };
    StatefulRenderer.prototype.forgetEntityCaches = function () {
      this.wrappedRendererData.entities.forEach(function (entity) {
        entity.visuals.cacheId = null;
      });
    };
    StatefulRenderer.prototype.start = function (firstStart) {
      var _this = this;
      if (firstStart === void 0) {
        firstStart = false;
      }
      if (this.isStarted) return;
      this.isStarted = true;
      if (!firstStart) {
        this.inputTracker.flushMidInput();
        this.forgetEntityCaches();
      }
      var wrappedRenderer = makeWrappedRenderer(this.canvas);
      if (firstStart) this.addWebGlListeners();
      this.inputTracker.addListeners();
      var frameCallback = function frameCallback(_timestamp) {
        _this.inputTracker.respondToInput();
        if (_this.inputTracker.frameDirty) {
          console.debug((">>> Frame for #").concat(_this.componentNumber));
          wrappedRenderer(_this.wrappedRendererData);
          _this.inputTracker.frameDirty = false;
        }
        _this.currentRequestId = window.requestAnimationFrame(frameCallback);
      };
      if (!firstStart) {
        this.inputTracker.frameDirty = true;
      }
      this.currentRequestId = window.requestAnimationFrame(frameCallback);
    };
    StatefulRenderer.prototype.stop = function (lastStop) {
      if (lastStop === void 0) {
        lastStop = false;
      }
      if (this.currentRequestId !== null) {
        window.cancelAnimationFrame(this.currentRequestId);
        this.currentRequestId = null;
      }
      this.inputTracker.removeListeners();
      if (lastStop) this.webGlListenerTracker.removeListeners();
      this.isStarted = false;
    };
    return StatefulRenderer;
  })();
  var HoverControlHint = (function (_super) {
    __extends(HoverControlHint, _super);
    function HoverControlHint(props) {
      var _this = _super.call(this, props) || this;
      _this.state = {
        showTooltip: false
      };
      return _this;
    }
    HoverControlHint.prototype.render = function () {
      var _this = this;
      return React__default["default"].createElement("div", {
        style: {
          display: "flex",
          flexDirection: "column",
          justifyContent: "center",
          height: SA_TAB_BUTTON_WIDTH
        },
        onMouseEnter: function () {
          return _this.setState({
            showTooltip: true
          });
        },
        onMouseLeave: function () {
          return _this.setState({
            showTooltip: false
          });
        }
      }, React__default["default"].createElement(Icon, {
        icon: this.props.iconName,
        size: SA_TAB_ICON_SIZE,
        color: BP_ICON_COLOR
      }), React__default["default"].createElement("span", {
        style: {
          display: this.state.showTooltip ? "inline" : "none",
          position: "absolute",
          left: ("").concat(SA_TAB_ICON_SIZE * 4, "px"),
          zIndex: 1,
          padding: BP_TOOLTIP_PADDING,
          borderRadius: BP_BORDER_RADIUS,
          color: BP_TOOLTIP_TEXT_COLOR,
          backgroundColor: BP_TOOLTIP_BACKGROUND_COLOR
        }
      }, this.props.tooltipText));
    };
    return HoverControlHint;
  })(React__default["default"].Component);
  var CanvasHolder = (function (_super) {
    __extends(CanvasHolder, _super);
    function CanvasHolder(props) {
      var _this = _super.call(this, props) || this;
      _this.canvasReference = React__default["default"].createRef();
      _this.statefulRenderer = null;
      _this.state = {
        contextLost: false
      };
      return _this;
    }
    CanvasHolder.prototype.componentDidMount = function () {
      var _this = this;
      console.debug((">>> MOUNT #").concat(this.props.componentNumber));
      var canvas = this.canvasReference.current;
      if (canvas === null) return;
      var renderGroups = this.props.moduleState.renderGroupManager.getGroupsToRender();
      var lastRenderGroup = renderGroups.at(-1);
      this.statefulRenderer = new StatefulRenderer(canvas, lastRenderGroup, this.props.componentNumber, function () {
        return _this.setState({
          contextLost: true
        });
      }, function () {
        return _this.setState({
          contextLost: false
        });
      });
      this.statefulRenderer.start(true);
    };
    CanvasHolder.prototype.componentWillUnmount = function () {
      var _a;
      console.debug((">>> UNMOUNT #").concat(this.props.componentNumber));
      (_a = this.statefulRenderer) === null || _a === void 0 ? void 0 : _a.stop(true);
    };
    CanvasHolder.prototype.render = function () {
      return React__default["default"].createElement(React__default["default"].Fragment, null, React__default["default"].createElement("div", {
        style: {
          display: this.state.contextLost ? "none" : "flex",
          justifyContent: "center"
        }
      }, React__default["default"].createElement("div", {
        style: {
          display: "flex",
          flexDirection: "column",
          gap: BP_TAB_BUTTON_MARGIN,
          marginRight: BP_TAB_PANEL_MARGIN
        }
      }, React__default["default"].createElement(HoverControlHint, {
        tooltipText: "Zoom in \u2022 Scroll up",
        iconName: IconNames.ZOOM_IN
      }), React__default["default"].createElement(HoverControlHint, {
        tooltipText: "Zoom out \u2022 Scroll down",
        iconName: IconNames.ZOOM_OUT
      }), React__default["default"].createElement(HoverControlHint, {
        tooltipText: "Zoom to fit \u2022 Double left-click",
        iconName: IconNames.ZOOM_TO_FIT
      }), React__default["default"].createElement(HoverControlHint, {
        tooltipText: "Rotate \u2022 Left-click",
        iconName: IconNames.REPEAT
      }), React__default["default"].createElement(HoverControlHint, {
        tooltipText: "Pan \u2022 Middle-click OR shift + left-click",
        iconName: IconNames.MOVE
      })), React__default["default"].createElement("div", {
        style: {
          width: "100%",
          maxWidth: "max(70vh, 30vw)",
          aspectRatio: "1"
        }
      }, React__default["default"].createElement("canvas", {
        ref: this.canvasReference,
        style: {
          display: "block",
          width: "100%",
          height: "100%",
          borderRadius: BP_BORDER_RADIUS
        },
        width: "0",
        height: "0"
      }))), React__default["default"].createElement("div", {
        className: "bp3-dark",
        style: {
          display: this.state.contextLost ? "block" : "none",
          textAlign: "center"
        }
      }, React__default["default"].createElement("h2", {
        style: {
          margin: ("0px 0px ").concat(STANDARD_MARGIN, " 0px")
        }
      }, "WebGL Context Lost"), React__default["default"].createElement(Spinner, {
        intent: "warning",
        size: SpinnerSize.LARGE
      }), React__default["default"].createElement("p", {
        style: {
          margin: ("").concat(STANDARD_MARGIN, " 0px 0px 0px")
        }
      }, "Your GPU is probably busy. Attempting to re-establish connection...")));
    };
    return CanvasHolder;
  })(React__default["default"].Component);
  var index = {
    toSpawn: function (_debuggerContext) {
      return Core.getRenderGroupManager().shouldRender();
    },
    body: function (debuggerContext) {
      var moduleContexts = debuggerContext.context.moduleContexts;
      var potentialModuleContext = getModuleContext(moduleContexts);
      if (potentialModuleContext === null) return React__default["default"].createElement("div", null);
      var moduleContext = potentialModuleContext;
      var potentialModuleState = moduleContext.state;
      if (!looseInstanceof(potentialModuleState, CsgModuleState)) {
        return React__default["default"].createElement("div", null);
      }
      var moduleState = potentialModuleState;
      Core.initialize(moduleState);
      return React__default["default"].createElement(CanvasHolder, {
        moduleState: moduleState,
        componentNumber: moduleState.nextComponent()
      });
    },
    iconName: IconNames.SHAPES,
    label: "CSG Tab"
  };
  return index;
})
