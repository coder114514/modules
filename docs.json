{
	"id": 0,
	"name": "Source Academy Modules",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 80,
			"name": "binary_tree",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`binary_tree`"
					},
					{
						"kind": "text",
						"text": " Source Module provides functions for the interaction with binary trees, as covered the textbook\r\n[Structure and Interpretation of Computer Programs, JavaScript Adaptation (SICP JS)](https://sicp.comp.nus.edu.sg/)\r\nin [section 2.3.3 Example: Representing Sets](https://sicp.comp.nus.edu.sg/chapters/37).\r\nClick on a name on the left to see how they are defined and used."
					}
				]
			},
			"originalName": "binary_tree/functions",
			"children": [
				{
					"id": 81,
					"name": "make_empty_tree",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "binary_tree/functions.ts",
							"line": 19,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/binary_tree/functions.ts#L19"
						}
					],
					"signatures": [
						{
							"id": 82,
							"name": "make_empty_tree",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an empty binary tree, represented by the empty list null"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\r\ndisplay(make_empty_tree()); // Shows \"[]\" in the REPL\r\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An empty binary tree"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "BinaryTree"
							}
						}
					]
				},
				{
					"id": 83,
					"name": "make_tree",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "binary_tree/functions.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/binary_tree/functions.ts#L35"
						}
					],
					"signatures": [
						{
							"id": 84,
							"name": "make_tree",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a binary tree node composed of the specified left subtree, value and right subtree."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\r\nconst tree = make_tree(1, make_empty_tree(), make_empty_tree());\r\ndisplay(tree); // Shows \"[null, 1, null]\" in the REPL\r\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A binary tree"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 85,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Value to be stored in the node"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 86,
									"name": "left",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Left subtree of the node"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "BinaryTree"
									}
								},
								{
									"id": 87,
									"name": "right",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Right subtree of the node"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "BinaryTree"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "BinaryTree"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						81,
						83
					]
				}
			],
			"sources": [
				{
					"fileName": "binary_tree/functions.ts",
					"line": 8,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/binary_tree/functions.ts#L8"
				}
			]
		},
		{
			"id": 1042,
			"name": "csg",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The module "
					},
					{
						"kind": "code",
						"text": "`csg`"
					},
					{
						"kind": "text",
						"text": " provides functions for drawing Constructive Solid Geometry (CSG) called "
					},
					{
						"kind": "code",
						"text": "`Shape`"
					},
					{
						"kind": "text",
						"text": ".\r\n\r\nA *Shape* is defined by its polygons and vertices."
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Liu Muchen"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Joel Leow"
							}
						]
					}
				]
			},
			"originalName": "csg/functions",
			"children": [
				{
					"id": 1193,
					"name": "black",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for black (#000000)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 171,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L171"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#000000'"
				},
				{
					"id": 1202,
					"name": "blue",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for blue (#5555FF)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 235,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L235"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#5555FF'"
				},
				{
					"id": 1188,
					"name": "cone",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of a cone."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 112,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L112"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1197,
					"name": "crimson",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for dark red (#AA0000)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 199,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L199"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#AA0000'"
				},
				{
					"id": 1182,
					"name": "cube",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of a cube."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 48,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L48"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1204,
					"name": "cyan",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for cyan (#55FFFF)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 249,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L249"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#55FFFF'"
				},
				{
					"id": 1184,
					"name": "cylinder",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of a cylinder."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 66,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L66"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1192,
					"name": "geodesic_sphere",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of a geodesic sphere."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 160,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L160"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1201,
					"name": "gray",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for dark grey (#555555)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 228,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L228"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#555555'"
				},
				{
					"id": 1195,
					"name": "green",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for green (#00AA00)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 185,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L185"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#00AA00'"
				},
				{
					"id": 1203,
					"name": "lime",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for light green (#55FF55)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 242,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L242"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#55FF55'"
				},
				{
					"id": 1194,
					"name": "navy",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for dark blue (#0000AA)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 178,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L178"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#0000AA'"
				},
				{
					"id": 1199,
					"name": "orange",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for orange (#FFAA00)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 213,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L213"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#FFAA00'"
				},
				{
					"id": 1206,
					"name": "pink",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for pink (#FF55FF)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 263,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L263"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#FF55FF'"
				},
				{
					"id": 1185,
					"name": "prism",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of a prism."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 78,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L78"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1198,
					"name": "purple",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for purple (#AA00AA)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 206,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L206"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#AA00AA'"
				},
				{
					"id": 1187,
					"name": "pyramid",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of a square pyramid."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 96,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L96"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1205,
					"name": "rose",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for light red (#FF5555)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 256,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L256"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#FF5555'"
				},
				{
					"id": 1190,
					"name": "rounded_cube",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of a rounded cube."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 139,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L139"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1191,
					"name": "rounded_cylinder",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of a rounded cylinder."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 148,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L148"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1200,
					"name": "silver",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for light grey (#AAAAAA). This is the default colour used\r\nwhen storing a Shape."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 221,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L221"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "SILVER"
				},
				{
					"id": 1183,
					"name": "sphere",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of a sphere."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 57,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L57"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1186,
					"name": "star",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of an extruded star."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 87,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L87"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1196,
					"name": "teal",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for dark cyan (#00AAAA)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 192,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L192"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#00AAAA'"
				},
				{
					"id": 1189,
					"name": "torus",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Primitive Shape of a torus."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 127,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L127"
						}
					],
					"type": {
						"type": "reference",
						"name": "Shape"
					},
					"defaultValue": "..."
				},
				{
					"id": 1208,
					"name": "white",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for white (#FFFFFF)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 277,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L277"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#FFFFFF'"
				},
				{
					"id": 1207,
					"name": "yellow",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hex colour code for yellow (#FFFF55)."
							}
						]
					},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 270,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L270"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'#FFFF55'"
				},
				{
					"id": 1085,
					"name": "area",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 433,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L433"
						}
					],
					"signatures": [
						{
							"id": 1086,
							"name": "area",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Measure the area of the provided shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The area of the shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1087,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to measure the area from"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1118,
					"name": "beside_x",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 557,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L557"
						}
					],
					"signatures": [
						{
							"id": 1119,
							"name": "beside_x",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Places the second shape "
									},
									{
										"kind": "code",
										"text": "`b`"
									},
									{
										"kind": "text",
										"text": " beside the first shape "
									},
									{
										"kind": "code",
										"text": "`a`"
									},
									{
										"kind": "text",
										"text": " in the positive x direction,\r\ncentering the "
									},
									{
										"kind": "code",
										"text": "`b`"
									},
									{
										"kind": "text",
										"text": "'s y and z on the "
									},
									{
										"kind": "code",
										"text": "`a`"
									},
									{
										"kind": "text",
										"text": "'s y and z center."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The final shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1120,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be placed beside with"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1121,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape placed beside"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1122,
					"name": "beside_y",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 583,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L583"
						}
					],
					"signatures": [
						{
							"id": 1123,
							"name": "beside_y",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Places the second shape "
									},
									{
										"kind": "code",
										"text": "`b`"
									},
									{
										"kind": "text",
										"text": " beside the first shape "
									},
									{
										"kind": "code",
										"text": "`a`"
									},
									{
										"kind": "text",
										"text": " in the positive y direction,\r\ncentering the "
									},
									{
										"kind": "code",
										"text": "`b`"
									},
									{
										"kind": "text",
										"text": "'s x and z on the "
									},
									{
										"kind": "code",
										"text": "`a`"
									},
									{
										"kind": "text",
										"text": "'s x and z center."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The final shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1124,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be placed beside with"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1125,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape placed beside"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1126,
					"name": "beside_z",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 609,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L609"
						}
					],
					"signatures": [
						{
							"id": 1127,
							"name": "beside_z",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Places the second shape "
									},
									{
										"kind": "code",
										"text": "`b`"
									},
									{
										"kind": "text",
										"text": " beside the first shape "
									},
									{
										"kind": "code",
										"text": "`a`"
									},
									{
										"kind": "text",
										"text": " in the positive z direction,\r\ncentering the "
									},
									{
										"kind": "code",
										"text": "`b`"
									},
									{
										"kind": "text",
										"text": "'s x and y on the "
									},
									{
										"kind": "code",
										"text": "`a`"
									},
									{
										"kind": "text",
										"text": "'s x and y center."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The final shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1128,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be placed beside with"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1129,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape placed beside"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1130,
					"name": "bounding_box",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 643,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L643"
						}
					],
					"signatures": [
						{
							"id": 1131,
							"name": "bounding_box",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a lambda function that contains the coordinates of the bounding box.\r\nProvided with the axis 'x', 'y' or 'z' and value 'min' for minimum and 'max'\r\nfor maximum, it returns the coordinates of the bounding box.\r\n\r\nFor example\r\n"
									},
									{
										"kind": "code",
										"text": "````\r\nconst a = bounding_box(sphere);\r\na('x', 'min'); // Returns the maximum x coordinate of the bounding box\r\n````"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A lambda function providing the\r\nshape's bounding box coordinates"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1132,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The scale to be measured"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1133,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "csg/functions.ts",
											"line": 645,
											"character": 3,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L645"
										}
									],
									"signatures": [
										{
											"id": 1134,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1135,
													"name": "axis",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "String",
														"qualifiedName": "String",
														"package": "typescript"
													}
												},
												{
													"id": 1136,
													"name": "min",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "String",
														"qualifiedName": "String",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1158,
					"name": "clone",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 740,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L740"
						}
					],
					"signatures": [
						{
							"id": 1159,
							"name": "clone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a clone of the specified Shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The cloned Shape."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1160,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Shape to be cloned."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1091,
					"name": "flip_x",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 469,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L469"
						}
					],
					"signatures": [
						{
							"id": 1092,
							"name": "flip_x",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mirror / Flip the provided shape in the x direction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The mirrored / flipped shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1093,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to mirror / flip"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1094,
					"name": "flip_y",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 479,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L479"
						}
					],
					"signatures": [
						{
							"id": 1095,
							"name": "flip_y",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mirror / Flip the provided shape in the y direction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The mirrored / flipped shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1096,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to mirror / flip"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1097,
					"name": "flip_z",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 489,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L489"
						}
					],
					"signatures": [
						{
							"id": 1098,
							"name": "flip_z",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mirror / Flip the provided shape in the z direction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The mirrored / flipped shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1099,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to mirror / flip"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1051,
					"name": "intersect",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 312,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L312"
						}
					],
					"signatures": [
						{
							"id": 1052,
							"name": "intersect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Intersection of the two shape to produce a new shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The resulting intersection shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1053,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first shape"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1054,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second shape"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1155,
					"name": "is_shape",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 730,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L730"
						}
					],
					"signatures": [
						{
							"id": 1156,
							"name": "is_shape",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Checks if the specified argument is a Shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the argument is a Shape."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1157,
									"name": "argument",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to check."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1180,
					"name": "render",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 835,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L835"
						}
					],
					"signatures": [
						{
							"id": 1181,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders using any Shapes stored thus far. The Shapes will then not be\r\nincluded in any subsequent renders."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "RenderGroup"
							}
						}
					]
				},
				{
					"id": 1178,
					"name": "render_axis",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 826,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L826"
						}
					],
					"signatures": [
						{
							"id": 1179,
							"name": "render_axis",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders using any Shapes stored thus far, along with an axis. The Shapes will\r\nthen not be included in any subsequent renders."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "RenderGroup"
							}
						}
					]
				},
				{
					"id": 1176,
					"name": "render_grid",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 817,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L817"
						}
					],
					"signatures": [
						{
							"id": 1177,
							"name": "render_grid",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders using any Shapes stored thus far, along with a grid. The Shapes will\r\nthen not be included in any subsequent renders."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "RenderGroup"
							}
						}
					]
				},
				{
					"id": 1174,
					"name": "render_grid_axis",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 807,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L807"
						}
					],
					"signatures": [
						{
							"id": 1175,
							"name": "render_grid_axis",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders using any Shapes stored thus far, along with a grid and axis. The\r\nShapes will then not be included in any subsequent renders."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "RenderGroup"
							}
						}
					]
				},
				{
					"id": 1137,
					"name": "rotate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 671,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L671"
						}
					],
					"signatures": [
						{
							"id": 1138,
							"name": "rotate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rotate the shape by the provided angles in the x, y and z direction.\r\nAngles provided are in the form of radians (i.e. 2π represent 360\r\ndegrees)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rotated shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1139,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be rotated"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1140,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle of rotation in the x direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1141,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle of rotation in the y direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1142,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle of rotation in the z direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1143,
					"name": "rotate_x",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 684,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L684"
						}
					],
					"signatures": [
						{
							"id": 1144,
							"name": "rotate_x",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rotate the shape by the provided angles in the x direction. Angles\r\nprovided are in the form of radians (i.e. 2π represent 360 degrees)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rotated shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1145,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be rotated"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1146,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle of rotation in the x direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1147,
					"name": "rotate_y",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 696,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L696"
						}
					],
					"signatures": [
						{
							"id": 1148,
							"name": "rotate_y",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rotate the shape by the provided angles in the y direction. Angles\r\nprovided are in the form of radians (i.e. 2π represent 360 degrees)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rotated shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1149,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be rotated"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1150,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle of rotation in the y direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1151,
					"name": "rotate_z",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 708,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L708"
						}
					],
					"signatures": [
						{
							"id": 1152,
							"name": "rotate_z",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rotate the shape by the provided angles in the z direction. Angles\r\nprovided are in the form of radians (i.e. 2π represent 360 degrees)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The rotated shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1153,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be rotated"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1154,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle of rotation in the z direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1055,
					"name": "scale",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 329,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L329"
						}
					],
					"signatures": [
						{
							"id": 1056,
							"name": "scale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Scales the shape in the x, y and z direction with the specified factor,\r\nranging from 0 to infinity.\r\nFor example scaling the shape by 1 in x, y and z direction results in\r\nthe original shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1057,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be scaled"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1058,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling in the x direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1059,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling in the y direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1060,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling in the z direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1061,
					"name": "scale_x",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 344,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L344"
						}
					],
					"signatures": [
						{
							"id": 1062,
							"name": "scale_x",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Scales the shape in the x direction with the specified factor,\r\nranging from 0 to infinity.\r\nFor example scaling the shape by 1 in x direction results in the\r\noriginal shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1063,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be scaled"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1064,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling in the x direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1065,
					"name": "scale_y",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 358,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L358"
						}
					],
					"signatures": [
						{
							"id": 1066,
							"name": "scale_y",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Scales the shape in the y direction with the specified factor,\r\nranging from 0 to infinity.\r\nFor example scaling the shape by 1 in y direction results in the\r\noriginal shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1067,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be scaled"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1068,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling in the y direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1069,
					"name": "scale_z",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 372,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L372"
						}
					],
					"signatures": [
						{
							"id": 1070,
							"name": "scale_z",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Scales the shape in the z direction with the specified factor,\r\nranging from 0 to infinity.\r\nFor example scaling the shape by 1 in z direction results in the\r\noriginal shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1071,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be scaled"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1072,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling in the z direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1073,
					"name": "shape_center",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 391,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L391"
						}
					],
					"signatures": [
						{
							"id": 1074,
							"name": "shape_center",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a lambda function that contains the center of the given shape in the\r\nx, y and z direction. Providing 'x', 'y', 'z' as input would return x, y and\r\nz coordinates of shape's center\r\n\r\nFor example\r\n"
									},
									{
										"kind": "code",
										"text": "````\r\nconst a = shape_center(sphere);\r\na('x'); // Returns the x coordinate of the shape's center\r\n````"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A lambda function providing the shape's center\r\ncoordinates"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1075,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The scale to be measured"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1076,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "csg/functions.ts",
											"line": 391,
											"character": 44,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L391"
										}
									],
									"signatures": [
										{
											"id": 1077,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1078,
													"name": "axis",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "String",
														"qualifiedName": "String",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1079,
					"name": "shape_set_center",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 417,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L417"
						}
					],
					"signatures": [
						{
							"id": 1080,
							"name": "shape_set_center",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the center of the shape with the provided x, y and z coordinates."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The shape with the new center"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1081,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The scale to have the center set"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1082,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The center with the x coordinate"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1083,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The center with the y coordinate"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1084,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The center with the z coordinate"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1161,
					"name": "store",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 750,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L750"
						}
					],
					"signatures": [
						{
							"id": 1162,
							"name": "store",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stores a clone of the specified Shape for later rendering. Its colour\r\ndefaults to the module's provided silver colour variable."
									}
								]
							},
							"parameters": [
								{
									"id": 1163,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Shape to be stored."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1164,
					"name": "store_as_color",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 767,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L767"
						}
					],
					"signatures": [
						{
							"id": 1165,
							"name": "store_as_color",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colours a clone of the specified Shape using the specified hex colour code,\r\nthen stores it for later rendering. You may use one of the colour variables\r\nprovided by the module, or you may specify your own custom colour code.\r\n\r\nColour codes must be of the form \"#XXXXXX\" or \"XXXXXX\", where each X\r\nrepresents a non-case sensitive hexadecimal number. Invalid colour codes\r\ndefault to black."
									}
								]
							},
							"parameters": [
								{
									"id": 1166,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Shape to be coloured and stored."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1167,
									"name": "hex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The colour code to use."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1168,
					"name": "store_as_rgb",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 785,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L785"
						}
					],
					"signatures": [
						{
							"id": 1169,
							"name": "store_as_rgb",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colours a clone of the specified Shape using the specified RGB values, then\r\nstores it for later rendering.\r\n\r\nRGB values are clamped between 0 and 1."
									}
								]
							},
							"parameters": [
								{
									"id": 1170,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Shape to be coloured and stored."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1171,
									"name": "redComponent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The colour's red component."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1172,
									"name": "greenComponent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The colour's green component."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1173,
									"name": "blueComponent",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The colour's blue component."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1047,
					"name": "subtract",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 300,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L300"
						}
					],
					"signatures": [
						{
							"id": 1048,
							"name": "subtract",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Subtraction of the second shape from the first shape to produce a new shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The resulting subtracted shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1049,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to be subtracted from"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1050,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to remove from the first shape"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1100,
					"name": "translate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 503,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L503"
						}
					],
					"signatures": [
						{
							"id": 1101,
							"name": "translate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Translate / Move the shape by the provided x, y and z units from negative\r\ninfinity to infinity."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The translated shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1102,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1103,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to shift the shape in the x direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1104,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to shift the shape in the y direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1105,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to shift the shape in the z direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1106,
					"name": "translate_x",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 521,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L521"
						}
					],
					"signatures": [
						{
							"id": 1107,
							"name": "translate_x",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Translate / Move the shape by the provided x units from negative infinity\r\nto infinity."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The translated shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1108,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1109,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to shift the shape in the x direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1110,
					"name": "translate_y",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 533,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L533"
						}
					],
					"signatures": [
						{
							"id": 1111,
							"name": "translate_y",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Translate / Move the shape by the provided y units from negative infinity\r\nto infinity."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The translated shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1112,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1113,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to shift the shape in the y direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1114,
					"name": "translate_z",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 545,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L545"
						}
					],
					"signatures": [
						{
							"id": 1115,
							"name": "translate_z",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Translate / Move the shape by the provided z units from negative infinity\r\nto infinity."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The translated shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1116,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1117,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number to shift the shape in the z direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1043,
					"name": "union",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 288,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L288"
						}
					],
					"signatures": [
						{
							"id": 1044,
							"name": "union",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Union of the two provided shapes to produce a new shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The resulting unioned shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1045,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first shape"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								},
								{
									"id": 1046,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second shape"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Shape"
							}
						}
					]
				},
				{
					"id": 1088,
					"name": "volume",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "csg/functions.ts",
							"line": 443,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L443"
						}
					],
					"signatures": [
						{
							"id": 1089,
							"name": "volume",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Measure the volume of the provided shape."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The volume of the shape"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1090,
									"name": "shape",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shape to measure the volume from"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Shape"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						1193,
						1202,
						1188,
						1197,
						1182,
						1204,
						1184,
						1192,
						1201,
						1195,
						1203,
						1194,
						1199,
						1206,
						1185,
						1198,
						1187,
						1205,
						1190,
						1191,
						1200,
						1183,
						1186,
						1196,
						1189,
						1208,
						1207
					],
					"categories": [
						{
							"title": "Colour",
							"children": [
								1193,
								1202,
								1197,
								1204,
								1201,
								1195,
								1203,
								1194,
								1199,
								1206,
								1198,
								1205,
								1200,
								1196,
								1208,
								1207
							]
						},
						{
							"title": "Primitive",
							"children": [
								1188,
								1182,
								1184,
								1192,
								1185,
								1187,
								1190,
								1191,
								1183,
								1186,
								1189
							]
						}
					]
				},
				{
					"title": "Functions",
					"children": [
						1085,
						1118,
						1122,
						1126,
						1130,
						1158,
						1091,
						1094,
						1097,
						1051,
						1155,
						1180,
						1178,
						1176,
						1174,
						1137,
						1143,
						1147,
						1151,
						1055,
						1061,
						1065,
						1069,
						1073,
						1079,
						1161,
						1164,
						1168,
						1047,
						1100,
						1106,
						1110,
						1114,
						1043,
						1088
					]
				}
			],
			"sources": [
				{
					"fileName": "csg/functions.ts",
					"line": 12,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/csg/functions.ts#L12"
				}
			]
		},
		{
			"id": 88,
			"name": "curve",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "drawing *curves*, i.e. collections of *points*, on a canvas in a tools tab\r\n\r\nA *point* is defined by its coordinates (x, y and z), and the color assigned to\r\nit (r, g, and b). A few constructors for points is given, for example\r\n"
					},
					{
						"kind": "code",
						"text": "`make_color_point`"
					},
					{
						"kind": "text",
						"text": ". Selectors allow access to the coordinates and color\r\ncomponents, for example "
					},
					{
						"kind": "code",
						"text": "`x_of`"
					},
					{
						"kind": "text",
						"text": ".\r\n\r\nA *curve* is a\r\nunary function which takes a number argument within the unit interval "
					},
					{
						"kind": "code",
						"text": "`[0,1]`"
					},
					{
						"kind": "text",
						"text": "\r\nand returns a point. If "
					},
					{
						"kind": "code",
						"text": "`C`"
					},
					{
						"kind": "text",
						"text": " is a curve, then the starting point of the curve\r\nis always "
					},
					{
						"kind": "code",
						"text": "`C(0)`"
					},
					{
						"kind": "text",
						"text": ", and the ending point is always "
					},
					{
						"kind": "code",
						"text": "`C(1)`"
					},
					{
						"kind": "text",
						"text": ".\r\n\r\nA *curve transformation* is a function that takes a curve as argument and\r\nreturns a curve. Examples of curve transformations are "
					},
					{
						"kind": "code",
						"text": "`scale`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`translate`"
					},
					{
						"kind": "text",
						"text": ".\r\n\r\nA *curve drawer* is function that takes a number argument and returns\r\na function that takes a curve as argument and visualises it in the output screen is\r\nshown in the Source Academy in the tab with the \"Curves Canvas\" icon (image).\r\nThe following [example](https://share.sourceacademy.org/unitcircle) uses\r\nthe curve drawer "
					},
					{
						"kind": "code",
						"text": "`draw_connected_full_view`"
					},
					{
						"kind": "text",
						"text": " to display a curve called\r\n"
					},
					{
						"kind": "code",
						"text": "`unit_circle`"
					},
					{
						"kind": "text",
						"text": ".\r\n"
					},
					{
						"kind": "code",
						"text": "```\r\nimport { make_point, draw_connected_full_view } from \"curve\";\r\nfunction unit_circle(t) {\r\n  return make_point(math_sin(2 * math_PI * t),\r\n                    math_cos(2 * math_PI * t));\r\n}\r\ndraw_connected_full_view(100)(unit_circle);\r\n```"
					},
					{
						"kind": "text",
						"text": "\r\ndraws a full circle in the display tab."
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Lee Zheng Han"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Ng Yong Xiang"
							}
						]
					}
				]
			},
			"originalName": "curve/functions",
			"children": [
				{
					"id": 181,
					"name": "animate_3D_curve",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 831,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L831"
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "animate_3D_curve",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a animation of curves using a curve generating function."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "3D Curve Animation"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 183,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The duration of the animation in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 184,
									"name": "fps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Framerate of the animation in frames per second"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 185,
									"name": "drawer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Draw function to the generated curves with"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "RenderFunction"
									}
								},
								{
									"id": 186,
									"name": "func",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Curve generating function. Takes in a timestamp value and returns a curve"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "CurveAnimation"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AnimatedCurve"
							}
						}
					]
				},
				{
					"id": 175,
					"name": "animate_curve",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 808,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L808"
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "animate_curve",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a animation of curves using a curve generating function."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Curve Animation"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 177,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The duration of the animation in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 178,
									"name": "fps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Framerate of the animation in frames per second"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 179,
									"name": "drawer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Draw function to the generated curves with"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "RenderFunction"
									}
								},
								{
									"id": 180,
									"name": "func",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Curve generating function. Takes in a timestamp value and returns a curve"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "CurveAnimation"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AnimatedCurve"
							}
						}
					]
				},
				{
					"id": 172,
					"name": "arc",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 796,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L796"
						}
					],
					"signatures": [
						{
							"id": 173,
							"name": "arc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function is a curve: a function from a fraction t to a point. The points\r\nlie on the right half of the unit circle. They start at Point (0,1) when t is\r\n0. When t is 0.5, they reach Point (1,0), when t is 1, they reach Point\r\n(0, -1)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Point in the arc at t"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 174,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "fraction between 0 and 1"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Point"
							}
						}
					]
				},
				{
					"id": 128,
					"name": "b_of",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 503,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L503"
						}
					],
					"signatures": [
						{
							"id": 129,
							"name": "b_of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the blue component of a given Point."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Blue component of the Point"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\nconst point = make_color_point(1, 2, 3, 50, 100, 150);\r\nb_of(point); // Returns 150\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 130,
									"name": "pt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Point"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 159,
					"name": "connect_ends",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 739,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L739"
						}
					],
					"signatures": [
						{
							"id": 160,
							"name": "connect_ends",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function is a binary Curve operator: It takes two Curves as arguments\r\nand returns a new Curve. The two Curves are combined by using the full first\r\nCurve for the first portion of the result and by using the full second Curve\r\nfor the second portion of the result. The second Curve is translated such\r\nthat its point at fraction 0 is the same as the Point of the first Curve at\r\nfraction 1."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "result Curve"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 161,
									"name": "curve1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "first Curve"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Curve"
									}
								},
								{
									"id": 162,
									"name": "curve2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "second Curve"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Curve"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Curve"
							}
						}
					]
				},
				{
					"id": 155,
					"name": "connect_rigidly",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 723,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L723"
						}
					],
					"signatures": [
						{
							"id": 156,
							"name": "connect_rigidly",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function is a binary Curve operator: It takes two Curves as arguments\r\nand returns a new Curve. The two Curves are combined by using the full first\r\nCurve for the first portion of the result and by using the full second Curve\r\nfor the second portion of the result. The second Curve is not changed, and\r\ntherefore there might be a big jump in the middle of the result Curve."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "result Curve"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 157,
									"name": "curve1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "first Curve"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Curve"
									}
								},
								{
									"id": 158,
									"name": "curve2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "second Curve"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Curve"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Curve"
							}
						}
					]
				},
				{
					"id": 205,
					"name": "draw_3D_connected",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 225,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L225"
						}
					],
					"signatures": [
						{
							"id": 206,
							"name": "draw_3D_connected",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given 3D Curve into a Drawing, by sampling\r\nthe 3D Curve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points and connecting each pair with\r\na line. The parts between (0,0,0) and (1,1,1) of the resulting Drawing are\r\nshown within the unit cube."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_3D_connected(100)(t => make_3D_point(t, t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 207,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 208,
					"name": "draw_3D_connected_full_view",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 246,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L246"
						}
					],
					"signatures": [
						{
							"id": 209,
							"name": "draw_3D_connected_full_view",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given 3D Curve into a Drawing, by sampling\r\nthe 3D Curve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points and connecting each pair with\r\na line. The Drawing is translated and stretched/shrunk to show the full\r\ncurve and maximize its width and height within the cube."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_3D_connected_full_view(100)(t => make_3D_point(t, t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 210,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 211,
					"name": "draw_3D_connected_full_view_proportional",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 267,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L267"
						}
					],
					"signatures": [
						{
							"id": 212,
							"name": "draw_3D_connected_full_view_proportional",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given 3D Curve into a Drawing, by sampling\r\nthe 3D Curve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points and connecting each pair with\r\na line. The Drawing is translated and scaled proportionally with its size\r\nmaximized to fit entirely inside the cube."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_3D_connected_full_view_proportional(100)(t => make_3D_point(t, t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 213,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 214,
					"name": "draw_3D_points",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 288,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L288"
						}
					],
					"signatures": [
						{
							"id": 215,
							"name": "draw_3D_points",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given 3D Curve into a Drawing, by sampling\r\nthe 3D Curve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points. The Drawing consists of\r\nisolated points, and does not connect them. The parts between (0,0,0)\r\nand (1,1,1) of the resulting Drawing are shown within the unit cube."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_3D_points(100)(t => make_3D_point(t, t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 216,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 217,
					"name": "draw_3D_points_full_view",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 304,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L304"
						}
					],
					"signatures": [
						{
							"id": 218,
							"name": "draw_3D_points_full_view",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given 3D Curve into a Drawing, by sampling\r\nthe 3D Curve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points. The Drawing consists of\r\nisolated points, and does not connect them. The Drawing is translated and\r\nstretched/shrunk to maximize its size to fit entirely inside the cube."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_3D_points_full_view(100)(t => make_3D_point(t, t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 219,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 220,
					"name": "draw_3D_points_full_view_proportional",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 325,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L325"
						}
					],
					"signatures": [
						{
							"id": 221,
							"name": "draw_3D_points_full_view_proportional",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given 3D Curve into a Drawing, by sampling\r\nthe 3D Curve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points. The Drawing consists of\r\nisolated points, and does not connect them. The Drawing is translated and\r\nscaled proportionally with its size maximized to fit entirely inside the cube."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_3D_points_full_view_proportional(100)(t => make_3D_point(t, t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 222,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 187,
					"name": "draw_connected",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 107,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L107"
						}
					],
					"signatures": [
						{
							"id": 188,
							"name": "draw_connected",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given Curve into a Drawing, by sampling the\r\nCurve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points and connecting each pair with a line.\r\nThe parts between (0,0) and (1,1) of the resulting Drawing are shown in the window."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_connected(100)(t => make_point(t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 189,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 190,
					"name": "draw_connected_full_view",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 123,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L123"
						}
					],
					"signatures": [
						{
							"id": 191,
							"name": "draw_connected_full_view",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given Curve into a Drawing, by sampling the\r\nCurve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points and connecting each pair with a line. The Drawing is\r\ntranslated and stretched/shrunk to show the full curve and maximize its width\r\nand height, with some padding."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_connected_full_view(100)(t => make_point(t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 192,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 193,
					"name": "draw_connected_full_view_proportional",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 144,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L144"
						}
					],
					"signatures": [
						{
							"id": 194,
							"name": "draw_connected_full_view_proportional",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given Curve into a Drawing, by sampling the\r\nCurve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points and connecting each pair with a line. The Drawing\r\nis translated and scaled proportionally to show the full curve and maximize\r\nits size, with some padding."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_connected_full_view_proportional(100)(t => make_point(t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 195,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "draw_points",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 165,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L165"
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "draw_points",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given Curve into a Drawing, by sampling the\r\nCurve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points. The Drawing consists of isolated\r\npoints, and does not connect them. The parts between (0,0) and (1,1) of the\r\nresulting Drawing are shown in the window."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_points(100)(t => make_point(t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 198,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 199,
					"name": "draw_points_full_view",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 182,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L182"
						}
					],
					"signatures": [
						{
							"id": 200,
							"name": "draw_points_full_view",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given Curve into a Drawing, by sampling the\r\nCurve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points. The Drawing consists of isolated\r\npoints, and does not connect them. The Drawing is translated and\r\nstretched/shrunk to show the full curve and maximize its width and height,\r\nwith some padding."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_points_full_view(100)(t => make_point(t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 201,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 202,
					"name": "draw_points_full_view_proportional",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 204,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L204"
						}
					],
					"signatures": [
						{
							"id": 203,
							"name": "draw_points_full_view_proportional",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a function that turns a given Curve into a Drawing, by sampling the\r\nCurve at "
									},
									{
										"kind": "code",
										"text": "`num`"
									},
									{
										"kind": "text",
										"text": " sample points. The Drawing consists of isolated\r\npoints, and does not connect them. The Drawing is translated and scaled\r\nproportionally with its size maximized to fit entirely inside the window,\r\nwith some padding."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function of type Curve → Drawing"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\ndraw_points_full_view_proportional(100)(t => make_point(t, t));\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 204,
									"name": "numPoints",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "RenderFunction"
							}
						}
					]
				},
				{
					"id": 125,
					"name": "g_of",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 488,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L488"
						}
					],
					"signatures": [
						{
							"id": 126,
							"name": "g_of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the green component of a given Point."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Green component of the Point"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\nconst point = make_color_point(1, 2, 3, 50, 100, 150);\r\ng_of(point); // Returns 100\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 127,
									"name": "pt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Point"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 131,
					"name": "invert",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 516,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L516"
						}
					],
					"signatures": [
						{
							"id": 132,
							"name": "invert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function is a Curve transformation: a function from a Curve to a Curve.\r\nThe points of the result Curve are the same points as the points of the\r\noriginal Curve, but in reverse: The result Curve applied to 0 is the original\r\nCurve applied to 1 and vice versa."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "result Curve"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 133,
									"name": "curve",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Curve"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Curve"
							}
						}
					]
				},
				{
					"id": 105,
					"name": "make_3D_color_point",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 406,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L406"
						}
					],
					"signatures": [
						{
							"id": 106,
							"name": "make_3D_color_point",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a 3D color Point with given x, y and z coordinates, and RGB values\r\nranging from 0 to 255. Any input lower than 0 for RGB will be rounded up to\r\n0, and any input higher than 255 will be rounded down to 255."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "with x, y and z as coordinates, and r, g and b as RGB values"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\nconst redPoint = make_color_point(0.5, 0.5, 0.5, 255, 0, 0);\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 107,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x-coordinate of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 108,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y-coordinate of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 109,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "z-coordinate of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 110,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "red component of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 111,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "green component of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 112,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "blue component of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Point"
							}
						}
					]
				},
				{
					"id": 93,
					"name": "make_3D_point",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 359,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L359"
						}
					],
					"signatures": [
						{
							"id": 94,
							"name": "make_3D_point",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a 3D Point with given x, y and z coordinates."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "with x, y and z as coordinates"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\nconst point = make_3D_point(0.5, 0.5, 0.5);\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 95,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x-coordinate of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 96,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y-coordinate of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 97,
									"name": "z",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "z-coordinate of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Point"
							}
						}
					]
				},
				{
					"id": 98,
					"name": "make_color_point",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 379,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L379"
						}
					],
					"signatures": [
						{
							"id": 99,
							"name": "make_color_point",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a color Point with given x and y coordinates, and RGB values ranging\r\nfrom 0 to 255. Any input lower than 0 for RGB will be rounded up to 0, and\r\nany input higher than 255 will be rounded down to 255."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "with x and y as coordinates, and r, g and b as RGB values"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\nconst redPoint = make_color_point(0.5, 0.5, 255, 0, 0);\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 100,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x-coordinate of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 101,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y-coordinate of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 102,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "red component of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 103,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "green component of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 104,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "blue component of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Point"
							}
						}
					]
				},
				{
					"id": 89,
					"name": "make_point",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 343,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L343"
						}
					],
					"signatures": [
						{
							"id": 90,
							"name": "make_point",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a Point with given x and y coordinates."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "with x and y as coordinates"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\nconst point = make_point(0.5, 0.5);\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 91,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x-coordinate of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 92,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y-coordinate of new point"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Point"
							}
						}
					]
				},
				{
					"id": 152,
					"name": "put_in_standard_position",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 694,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L694"
						}
					],
					"signatures": [
						{
							"id": 153,
							"name": "put_in_standard_position",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function is a Curve transformation: It takes a Curve as argument and\r\nreturns a new Curve, as follows. A Curve is in standard position if it\r\nstarts at (0,0) ends at (1,0). This function puts the given Curve in\r\nstandard position by rigidly translating it so its start Point is at the\r\norigin (0,0), then rotating it about the origin to put its endpoint on the\r\nx axis, then scaling it to put the endpoint at (1,0). Behavior is unspecified\r\non closed Curves where start-point equal end-point."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "result Curve"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 154,
									"name": "curve",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given Curve"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Curve"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Curve"
							}
						}
					]
				},
				{
					"id": 122,
					"name": "r_of",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 473,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L473"
						}
					],
					"signatures": [
						{
							"id": 123,
							"name": "r_of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the red component of a given Point."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Red component of the Point"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\nconst point = make_color_point(1, 2, 3, 50, 100, 150);\r\nr_of(point); // Returns 50\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 124,
									"name": "pt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Point"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 139,
					"name": "rotate_around_origin",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 568,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L568"
						}
					],
					"signatures": [
						{
							"id": 140,
							"name": "rotate_around_origin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function takes 3 angles, a, b and c in radians as parameter\r\nand returns a Curve transformation: a function that takes a Curve as argument\r\nand returns a new Curve, which is the original Curve rotated\r\nextrinsically with Euler angles (a, b, c) about x, y,\r\nand z axes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function that takes a Curve and returns a Curve"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 141,
									"name": "theta1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 142,
									"name": "theta2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 143,
									"name": "theta3",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveTransformer"
							}
						}
					]
				},
				{
					"id": 144,
					"name": "scale",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 651,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L651"
						}
					],
					"signatures": [
						{
							"id": 145,
							"name": "scale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function takes scaling factors "
									},
									{
										"kind": "code",
										"text": "`a`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`b`"
									},
									{
										"kind": "text",
										"text": " and\r\n"
									},
									{
										"kind": "code",
										"text": "`c`"
									},
									{
										"kind": "text",
										"text": ", as arguments and returns a\r\nCurve transformation that scales a given Curve by "
									},
									{
										"kind": "code",
										"text": "`a`"
									},
									{
										"kind": "text",
										"text": " in\r\nx-direction, "
									},
									{
										"kind": "code",
										"text": "`b`"
									},
									{
										"kind": "text",
										"text": " in y-direction and "
									},
									{
										"kind": "code",
										"text": "`c`"
									},
									{
										"kind": "text",
										"text": " in z-direction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function that takes a Curve and returns a Curve"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 146,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "scaling factor in x-direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 147,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "scaling factor in y-direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 148,
									"name": "c",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "scaling factor in z-direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveTransformer"
							}
						}
					]
				},
				{
					"id": 149,
					"name": "scale_proportional",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 678,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L678"
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "scale_proportional",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function takes a scaling factor s argument and returns a Curve\r\ntransformation that scales a given Curve by s in x, y and z direction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function that takes a Curve and returns a Curve"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 151,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "scaling factor"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveTransformer"
							}
						}
					]
				},
				{
					"id": 134,
					"name": "translate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 532,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L532"
						}
					],
					"signatures": [
						{
							"id": 135,
							"name": "translate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function returns a Curve transformation: It takes an x-value x0, a\r\ny-value y0 and a z-value z0, as arguments and\r\nreturns a Curve transformation that takes a Curve as argument and returns a\r\nnew Curve, by translating the original by x0 in x-direction, y0 in\r\ny-direction and z0 in z-direction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Curve transformation"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 136,
									"name": "x0",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x-value"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 137,
									"name": "y0",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y-value"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 138,
									"name": "z0",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "z-value"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CurveTransformer"
							}
						}
					]
				},
				{
					"id": 163,
					"name": "unit_circle",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 760,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L760"
						}
					],
					"signatures": [
						{
							"id": 164,
							"name": "unit_circle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function is a curve: a function from a fraction t to a point. The points\r\nlie on the unit circle. They start at Point (1,0) when t is 0. When t is\r\n0.25, they reach Point (0,1), when t is 0.5, they reach Point (-1, 0), etc."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Point on the circle at t"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 165,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "fraction between 0 and 1"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Point"
							}
						}
					]
				},
				{
					"id": 166,
					"name": "unit_line",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 771,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L771"
						}
					],
					"signatures": [
						{
							"id": 167,
							"name": "unit_line",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function is a curve: a function from a fraction t to a point. The\r\nx-coordinate at fraction t is t, and the y-coordinate is 0."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Point on the line at t"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 168,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "fraction between 0 and 1"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Point"
							}
						}
					]
				},
				{
					"id": 169,
					"name": "unit_line_at",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 783,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L783"
						}
					],
					"signatures": [
						{
							"id": 170,
							"name": "unit_line_at",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function is a Curve generator: it takes a number and returns a\r\nhorizontal curve. The number is a y-coordinate, and the Curve generates only\r\npoints with the given y-coordinate."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "horizontal Curve"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 171,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "fraction between 0 and 1"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Curve"
							}
						}
					]
				},
				{
					"id": 113,
					"name": "x_of",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 428,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L428"
						}
					],
					"signatures": [
						{
							"id": 114,
							"name": "x_of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the x-coordinate of a given Point."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "x-coordinate of the Point"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\nconst point = make_color_point(1, 2, 3, 50, 100, 150);\r\nx_of(point); // Returns 1\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 115,
									"name": "pt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Point"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 116,
					"name": "y_of",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 443,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L443"
						}
					],
					"signatures": [
						{
							"id": 117,
							"name": "y_of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the y-coordinate of a given Point."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "y-coordinate of the Point"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\nconst point = make_color_point(1, 2, 3, 50, 100, 150);\r\ny_of(point); // Returns 2\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 118,
									"name": "pt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Point"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 119,
					"name": "z_of",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "curve/functions.ts",
							"line": 458,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L458"
						}
					],
					"signatures": [
						{
							"id": 120,
							"name": "z_of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves the z-coordinate of a given Point."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "z-coordinate of the Point"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\r\nconst point = make_color_point(1, 2, 3, 50, 100, 150);\r\nz_of(point); // Returns 3\r\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 121,
									"name": "pt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Point"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						181,
						175,
						172,
						128,
						159,
						155,
						205,
						208,
						211,
						214,
						217,
						220,
						187,
						190,
						193,
						196,
						199,
						202,
						125,
						131,
						105,
						93,
						98,
						89,
						152,
						122,
						139,
						144,
						149,
						134,
						163,
						166,
						169,
						113,
						116,
						119
					]
				}
			],
			"sources": [
				{
					"fileName": "curve/functions.ts",
					"line": 39,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/curve/functions.ts#L39"
				}
			]
		},
		{
			"id": 485,
			"name": "game",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Game library that translates Phaser 3 API into Source.\r\n\r\nMore in-depth explanation of the Phaser 3 API can be found at\r\nPhaser 3 documentation itself.\r\n\r\nFor Phaser 3 API Documentation, check:\r\nhttps://photonstorm.github.io/phaser3-docs/"
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Anthony Halim"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Chi Xu"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Chong Sia Tiffany"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Gokul Rajiv"
							}
						]
					}
				]
			},
			"originalName": "game/functions",
			"children": [
				{
					"id": 574,
					"name": "add",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1086,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1086"
						}
					],
					"signatures": [
						{
							"id": 575,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add the object to the scene. Only objects added to the scene\r\nwill appear."
									}
								]
							},
							"parameters": [
								{
									"id": 576,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "game object to be added"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 677,
					"name": "add_keyboard_listener",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1506,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1506"
						}
					],
					"signatures": [
						{
							"id": 678,
							"name": "add_keyboard_listener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attach a listener to the object. The callback will be executed\r\nwhen the event is emitted.\r\nMutate the object.\r\n\r\nFor all available events, see:\r\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Input.Events.html\r\n\r\nFor list of keycodes, see:\r\nhttps://github.com/photonstorm/phaser/blob/v3.22.0/src/input/keyboard/keys/KeyCodes.js"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "listener game object"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 679,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "keyboard key to trigger listener"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 680,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the event name"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 681,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "listener function, executed on event"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Function",
										"qualifiedName": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "GameObject"
							}
						}
					]
				},
				{
					"id": 672,
					"name": "add_listener",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1482,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1482"
						}
					],
					"signatures": [
						{
							"id": 673,
							"name": "add_listener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Attach a listener to the object. The callback will be executed\r\nwhen the event is emitted.\r\nMutate the object.\r\n\r\nFor all available events, see:\r\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Input.Events.html"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "listener game object"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 674,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object to be added to"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 675,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the event name"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 676,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "listener function, executed on event"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Function",
										"qualifiedName": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 624,
					"name": "add_to_container",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1300,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1300"
						}
					],
					"signatures": [
						{
							"id": 625,
							"name": "add_to_container",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add the given game object to the container.\r\nMutates the container."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "container object"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 626,
									"name": "container",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "container object"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 627,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "game object to add to the container"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 668,
					"name": "add_tween",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1460,
							"character": 22,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1460"
						}
					],
					"signatures": [
						{
							"id": 669,
							"name": "add_tween",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a tween to the object and plays it.\r\nMutate the object."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 670,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object to be added to"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 671,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "tween config"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "ObjectConfig"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "GameObject"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 581,
					"name": "create_anim",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1117,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1117"
						}
					],
					"signatures": [
						{
							"id": 582,
							"name": "create_anim",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new animation and add it to the available animations.\r\nAnimations are global i.e. once created, it can be used anytime, anywhere.\r\n\r\nNOTE: Anims DO NOT need to be added into the scene to be used.\r\nIt is automatically added to the scene when it is created.\r\n\r\nWill return true if the animation key is valid\r\n(key is specified within the anim_config); false if the key\r\nis already in use."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "true if animation is successfully created, false otherwise"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 583,
									"name": "anim_config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ObjectConfig"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 527,
					"name": "create_anim_config",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 927,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L927"
						}
					],
					"signatures": [
						{
							"id": 528,
							"name": "create_anim_config",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create anims config, can be used to configure anims\r\n\r\nFor more details about the config object, see:\r\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Animations.html#.Animation"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "animation config"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 529,
									"name": "anims_key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key that the animation will be associated with"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 530,
									"name": "anim_frames",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "data used to generate the frames for animation"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ObjectConfig"
										}
									}
								},
								{
									"id": 531,
									"name": "frame_rate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "frame rate of playback in frames per second"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "24"
								},
								{
									"id": 532,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "how long the animation should play in seconds.\r\n                If null, will be derived from frame_rate"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "null"
								},
								{
									"id": 533,
									"name": "repeat",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "number of times to repeat the animation, -1 for infinity"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "-1"
								},
								{
									"id": 534,
									"name": "yoyo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "should the animation yoyo (reverse back down to the start)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 535,
									"name": "show_on_start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "should the sprite be visible when the anims start?"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								},
								{
									"id": 536,
									"name": "hide_on_complete",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "should the sprite be not visible when the anims finish?"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"name": "ObjectConfig"
							}
						}
					]
				},
				{
					"id": 537,
					"name": "create_anim_frame_config",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 953,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L953"
						}
					],
					"signatures": [
						{
							"id": 538,
							"name": "create_anim_frame_config",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create animation frame config, can be used to configure a specific frame\r\nwithin an animation.\r\n\r\nThe key should refer to an image that is already loaded.\r\nTo make frame_config from spritesheet based on its frames,\r\nuse create_anim_spritesheet_frame_configs instead."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "animation frame config"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 539,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key that is associated with the sprite at this frame"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 540,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration, in ms, of this frame of the animation"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 541,
									"name": "visible",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "should the parent object be visible during this frame?"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "reference",
								"name": "ObjectConfig"
							}
						}
					]
				},
				{
					"id": 542,
					"name": "create_anim_spritesheet_frame_configs",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 977,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L977"
						}
					],
					"signatures": [
						{
							"id": 543,
							"name": "create_anim_spritesheet_frame_configs",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create list of animation frame config, can be used directly as part of\r\nanim_config's "
									},
									{
										"kind": "code",
										"text": "`frames`"
									},
									{
										"kind": "text",
										"text": " parameter.\r\n\r\nThis function will generate list of frame configs based on the\r\nspritesheet_config attached to the associated spritesheet.\r\nThis function requires that the given key is a spritesheet key\r\ni.e. a key associated with loaded spritesheet, loaded in using\r\nload_spritesheet function.\r\n\r\nWill return empty frame configs if key is not associated with\r\na spritesheet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "animation frame configs"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 544,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key associated with spritesheet"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ObjectConfig"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 593,
					"name": "create_award",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1173,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1173"
						}
					],
					"signatures": [
						{
							"id": 594,
							"name": "create_award",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create an award using the key associated with the award.\r\nThe award key can be obtained from the Awards Hall or\r\nAwards menu, after attaining the award.\r\n\r\nValid award will have an on-hover VERIFIED tag to distinguish\r\nit from images created by create_image.\r\n\r\nIf student does not possess the award, this function will\r\nreturn a untagged, default image."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "award game object"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 595,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x position of the image. 0 is at the left side"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 596,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y position of the image. 0 is at the top side"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 597,
									"name": "award_key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key for award"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "GameObject"
							}
						}
					]
				},
				{
					"id": 489,
					"name": "create_config",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 795,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L795"
						}
					],
					"signatures": [
						{
							"id": 490,
							"name": "create_config",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Transforms the given list into an object config. The list follows\r\nthe format of list([key1, value1], [key2, value2]).\r\n\r\ne.g list([\"alpha\", 0], [\"duration\", 1000])"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "object config"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 491,
									"name": "lst",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the list to be turned into object config."
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "List"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ObjectConfig"
							}
						}
					]
				},
				{
					"id": 620,
					"name": "create_container",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1285,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1285"
						}
					],
					"signatures": [
						{
							"id": 621,
							"name": "create_container",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a container object. Container is able to contain any other game object,\r\nand the positions of contained game object will be relative to the container.\r\n\r\nRendering the container as visible or invisible will also affect the contained\r\ngame object.\r\n\r\nContainer can also contain another container.\r\n\r\n0, 0 is located at the top, left hand side.\r\n\r\nFor more details about container object, see:\r\nhttps://photonstorm.github.io/phaser3-docs/Phaser.GameObjects.Container.html"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "container object"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 622,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x position of the container"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 623,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y position of the container"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "GameObject"
							}
						}
					]
				},
				{
					"id": 612,
					"name": "create_ellipse",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1251,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1251"
						}
					],
					"signatures": [
						{
							"id": 613,
							"name": "create_ellipse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create an ellipse object."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "ellipse object"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 614,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x coordinate of the centre of ellipse"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 615,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y coordinate of the centre of ellipse"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 616,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "width of ellipse"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 617,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "height of ellipse"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 618,
									"name": "fill",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "colour fill, in hext e.g 0xffffff"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 619,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value between 0 and 1 to denote alpha"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "reference",
								"name": "GameObject"
							}
						}
					]
				},
				{
					"id": 588,
					"name": "create_image",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1147,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1147"
						}
					],
					"signatures": [
						{
							"id": 589,
							"name": "create_image",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create an image using the key associated with a loaded image.\r\nIf key is not associated with any loaded image, throws error.\r\n\r\n0, 0 is located at the top, left hand side."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "image game object"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 590,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x position of the image. 0 is at the left side"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 591,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y position of the image. 0 is at the top side"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 592,
									"name": "asset_key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to loaded image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 500,
					"name": "create_interactive_config",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 841,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L841"
						}
					],
					"signatures": [
						{
							"id": 501,
							"name": "create_interactive_config",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create interactive config object, can be used to configure interactive settings.\r\n\r\nFor more details about interactive config object, see:\r\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Input.html#.InputConfiguration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "interactive config"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 502,
									"name": "draggable",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object will be set draggable"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 503,
									"name": "use_hand_cursor",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "if true, pointer will be set to 'pointer' when a pointer is over it"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 504,
									"name": "pixel_perfect",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "pixel perfect function will be set for the hit area. Only works for texture based object"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 505,
									"name": "alpha_tolerance",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "if pixel_perfect is set, this is the alpha tolerance threshold value used in the callback"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "reference",
								"name": "ObjectConfig"
							}
						}
					]
				},
				{
					"id": 604,
					"name": "create_rect",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1224,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1224"
						}
					],
					"signatures": [
						{
							"id": 605,
							"name": "create_rect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a rectangle object.\r\n\r\n0, 0 is located at the top, left hand side."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "rectangle object"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 606,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x coordinate of the top, left corner posiiton"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 607,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y coordinate of the top, left corner position"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 608,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "width of rectangle"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 609,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "height of rectangle"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 610,
									"name": "fill",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "colour fill, in hext e.g 0xffffff"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 611,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value between 0 and 1 to denote alpha"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "reference",
								"name": "GameObject"
							}
						}
					]
				},
				{
					"id": 506,
					"name": "create_sound_config",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 865,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L865"
						}
					],
					"signatures": [
						{
							"id": 507,
							"name": "create_sound_config",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create sound config object, can be used to configure sound settings.\r\n\r\nFor more details about sound config object, see:\r\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Sound.html#.SoundConfig"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "sound config"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 508,
									"name": "mute",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "whether the sound should be muted or not"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 509,
									"name": "volume",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "value between 0(silence) and 1(full volume)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 510,
									"name": "rate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the speed at which the sound is played"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 511,
									"name": "detune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "detuning of the sound, in cents"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 512,
									"name": "seek",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "position of playback for the sound, in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 513,
									"name": "loop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "whether or not the sound should loop"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 514,
									"name": "delay",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "time, in seconds, that elapse before the sound actually starts"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"name": "ObjectConfig"
							}
						}
					]
				},
				{
					"id": 545,
					"name": "create_spritesheet_config",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 994,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L994"
						}
					],
					"signatures": [
						{
							"id": 546,
							"name": "create_spritesheet_config",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create spritesheet config, can be used to configure the frames within the\r\nspritesheet. Can be used as config at load_spritesheet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "spritesheet config"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 547,
									"name": "frame_width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "width of frame in pixels"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 548,
									"name": "frame_height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "height of frame in pixels"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 549,
									"name": "start_frame",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "first frame to start parsing from"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 550,
									"name": "margin",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "margin in the image; this is the space around the edge of the frames"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 551,
									"name": "spacing",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the spacing between each frame in the image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"name": "ObjectConfig"
							}
						}
					]
				},
				{
					"id": 598,
					"name": "create_text",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1197,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1197"
						}
					],
					"signatures": [
						{
							"id": 599,
							"name": "create_text",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a text object.\r\n\r\n0, 0 is located at the top, left hand side."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "text game object"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 600,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "x position of the text"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 601,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "y position of the text"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 602,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "text to be shown"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 603,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "text configuration to be used"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "ObjectConfig"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"name": "GameObject"
							}
						}
					]
				},
				{
					"id": 492,
					"name": "create_text_config",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 818,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L818"
						}
					],
					"signatures": [
						{
							"id": 493,
							"name": "create_text_config",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create text config object, can be used to stylise text object.\r\n\r\nfont_family: for available font_family, see:\r\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/font-family#Valid_family_names\r\n\r\nalign: must be either 'left', 'right', 'center', or 'justify'\r\n\r\nFor more details about text config, see:\r\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.GameObjects.Text.html#.TextStyle"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "text config"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 494,
									"name": "font_family",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "font to be used"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'Courier'"
								},
								{
									"id": 495,
									"name": "font_size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "size of font, must be appended with 'px' e.g. '16px'"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'16px'"
								},
								{
									"id": 496,
									"name": "color",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "colour of font, in hex e.g. '#fff'"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'#fff'"
								},
								{
									"id": 497,
									"name": "stroke",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "colour of stroke, in hex e.g. '#fff'"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'#fff'"
								},
								{
									"id": 498,
									"name": "stroke_thickness",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "thickness of stroke"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 499,
									"name": "align",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "text alignment"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'left'"
								}
							],
							"type": {
								"type": "reference",
								"name": "ObjectConfig"
							}
						}
					]
				},
				{
					"id": 515,
					"name": "create_tween_config",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 895,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L895"
						}
					],
					"signatures": [
						{
							"id": 516,
							"name": "create_tween_config",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create tween config object, can be used to configure tween settings.\r\n\r\nFor more details about tween config object, see:\r\nhttps://photonstorm.github.io/phaser3-docs/Phaser.Types.Tweens.html#.TweenBuilderConfig"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "tween config"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 517,
									"name": "target_prop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "target to tween, e.g. x, y, alpha"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'x'"
								},
								{
									"id": 518,
									"name": "target_value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the property value to tween to"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"defaultValue": "0"
								},
								{
									"id": 519,
									"name": "delay",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "time in ms/frames before tween will start"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 520,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration of tween in ms/frames, exclude yoyos or repeats"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1000"
								},
								{
									"id": 521,
									"name": "ease",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "ease function to use, e.g. 'Power0', 'Power1', 'Power2'"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Function",
												"qualifiedName": "Function",
												"package": "typescript"
											}
										]
									},
									"defaultValue": "'Power0'"
								},
								{
									"id": 522,
									"name": "on_complete",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "function to execute when tween completes"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Function",
										"qualifiedName": "Function",
										"package": "typescript"
									}
								},
								{
									"id": 523,
									"name": "yoyo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "if set to true, once tween complete, reverses the values incrementally to get back to the starting tween values"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 524,
									"name": "loop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "number of times the tween should loop, or -1 to loop indefinitely"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 525,
									"name": "loop_delay",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The time the tween will pause before starting either a yoyo or returning to the start for a repeat"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 526,
									"name": "on_loop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "function to execute each time the tween loops"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Function",
										"qualifiedName": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "ObjectConfig"
							}
						}
					]
				},
				{
					"id": 628,
					"name": "destroy_obj",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1316,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1316"
						}
					],
					"signatures": [
						{
							"id": 629,
							"name": "destroy_obj",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Destroy the given game object. Destroyed game object\r\nis removed from the scene, and all of its listeners\r\nis also removed."
									}
								]
							},
							"parameters": [
								{
									"id": 630,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 558,
					"name": "get_screen_display_height",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1038,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1038"
						}
					],
					"signatures": [
						{
							"id": 559,
							"name": "get_screen_display_height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get game screen display height (accounting window size)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "screen display height"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 556,
					"name": "get_screen_display_width",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1029,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1029"
						}
					],
					"signatures": [
						{
							"id": 557,
							"name": "get_screen_display_width",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get game screen display width (accounting window size)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "screen display width"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 554,
					"name": "get_screen_height",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1020,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1020"
						}
					],
					"signatures": [
						{
							"id": 555,
							"name": "get_screen_height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get in-game screen height."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "screen height"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 552,
					"name": "get_screen_width",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1011,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1011"
						}
					],
					"signatures": [
						{
							"id": 553,
							"name": "get_screen_width",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get in-game screen width."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "screen width"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 560,
					"name": "load_image",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1051,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1051"
						}
					],
					"signatures": [
						{
							"id": 561,
							"name": "load_image",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Load the image asset into the scene for use. All images\r\nmust be loaded before used in create_image."
									}
								]
							},
							"parameters": [
								{
									"id": 562,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to be associated with the image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 563,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "path to the image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 564,
					"name": "load_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1060,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1060"
						}
					],
					"signatures": [
						{
							"id": 565,
							"name": "load_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Load the sound asset into the scene for use. All sound\r\nmust be loaded before used in play_sound."
									}
								]
							},
							"parameters": [
								{
									"id": 566,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to be associated with the sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 567,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "path to the sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 568,
					"name": "load_spritesheet",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1070,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1070"
						}
					],
					"signatures": [
						{
							"id": 569,
							"name": "load_spritesheet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Load the spritesheet into the scene for use. All spritesheet must\r\nbe loaded before used in create_image."
									}
								]
							},
							"parameters": [
								{
									"id": 570,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key associated with the spritesheet"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 571,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "path to the sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 572,
									"name": "spritesheet_config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "config to determines frames within the spritesheet"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "ObjectConfig"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 573,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "game/functions.ts",
											"line": 1075,
											"character": 9,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1075"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 584,
					"name": "play_anim_on_image",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1127,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1127"
						}
					],
					"signatures": [
						{
							"id": 585,
							"name": "play_anim_on_image",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Start playing the given animation on image game object."
									}
								]
							},
							"parameters": [
								{
									"id": 586,
									"name": "image",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "image game object"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 587,
									"name": "anims_key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key associated with an animation"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 577,
					"name": "play_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1099,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1099"
						}
					],
					"signatures": [
						{
							"id": 578,
							"name": "play_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Play the sound associated with the key.\r\nThrows error if key is non-existent."
									}
								]
							},
							"parameters": [
								{
									"id": 579,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "key to the sound to be played"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 580,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "sound config to be used"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "ObjectConfig"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 486,
					"name": "prepend_remote_url",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 782,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L782"
						}
					],
					"signatures": [
						{
							"id": 487,
							"name": "prepend_remote_url",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Prepend the given asset key with the remote path (S3 path)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "prepended path"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 488,
									"name": "asset_key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 682,
					"name": "remove_listener",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1523,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1523"
						}
					],
					"signatures": [
						{
							"id": 683,
							"name": "remove_listener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Deactivate and remove listener."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "if successful"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 684,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 636,
					"name": "set_alpha",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1343,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1343"
						}
					],
					"signatures": [
						{
							"id": 637,
							"name": "set_alpha",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the alpha of the object.\r\nMutate the object."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 638,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object to be set"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 639,
									"name": "alpha",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "new alpha"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 631,
					"name": "set_display_size",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1327,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1327"
						}
					],
					"signatures": [
						{
							"id": 632,
							"name": "set_display_size",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the display size of the object.\r\nMutate the object."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 633,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object to be set"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 634,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "new display width size"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 635,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "new display height size"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 663,
					"name": "set_flip",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1444,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1444"
						}
					],
					"signatures": [
						{
							"id": 664,
							"name": "set_flip",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the horizontal and flipped state of the object.\r\nMutate the object."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 665,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 666,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "to flip in the horizontal state"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 667,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "to flip in the vertical state"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 640,
					"name": "set_interactive",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1361,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1361"
						}
					],
					"signatures": [
						{
							"id": 641,
							"name": "set_interactive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the interactivity of the object.\r\nMutate the object.\r\n\r\nRectangle and Ellipse are not able to receive configs, only boolean\r\ni.e. set_interactive(rect, true); set_interactive(ellipse, false)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 642,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object to be set"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 643,
									"name": "config",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "interactive config to be used"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "ObjectConfig"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 644,
					"name": "set_origin",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1378,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1378"
						}
					],
					"signatures": [
						{
							"id": 645,
							"name": "set_origin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the origin in which all position related will be relative to.\r\nIn other words, the anchor of the object.\r\nMutate the object."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 646,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object to be set"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 647,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "new anchor x coordinate, between value 0 to 1."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 648,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "new anchor y coordinate, between value 0 to 1."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 649,
					"name": "set_position",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1395,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1395"
						}
					],
					"signatures": [
						{
							"id": 650,
							"name": "set_position",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the position of the game object\r\nMutate the object"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 651,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object to be set"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 652,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "new x position"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 653,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "new y position"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 659,
					"name": "set_rotation",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1428,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1428"
						}
					],
					"signatures": [
						{
							"id": 660,
							"name": "set_rotation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the rotation of the object.\r\nMutate the object."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 661,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object to be set"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 662,
									"name": "rad",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the rotation, in radians"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				},
				{
					"id": 654,
					"name": "set_scale",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "game/functions.ts",
							"line": 1412,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L1412"
						}
					],
					"signatures": [
						{
							"id": 655,
							"name": "set_scale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the scale of the object.\r\nMutate the object."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "game object itself"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 656,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "object to be set"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "GameObject"
									}
								},
								{
									"id": 657,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "new x scale"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 658,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "new y scale"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "GameObject"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						574,
						677,
						672,
						624,
						668,
						581,
						527,
						537,
						542,
						593,
						489,
						620,
						612,
						588,
						500,
						604,
						506,
						545,
						598,
						492,
						515,
						628,
						558,
						556,
						554,
						552,
						560,
						564,
						568,
						584,
						577,
						486,
						682,
						636,
						631,
						663,
						640,
						644,
						649,
						659,
						654
					]
				}
			],
			"sources": [
				{
					"fileName": "game/functions.ts",
					"line": 18,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/game/functions.ts#L18"
				}
			]
		},
		{
			"id": 12,
			"name": "pix_n_flix",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The pix_n_flix module allows us to process still images and videos.\r\n\r\nAn Image (which is a still image or a frame of a video) is a\r\ntwo-dimensional array of Pixels, and a Pixel consists of red, blue and green color\r\nvalues, each ranging from 0 to 255. To access these color values of a Pixel, we\r\nprovide the functions red_of, blue_of and green_of.\r\n\r\nA central element of pix_n_flix is the notion of a Filter, a function that is applied\r\nto two Images: the source Image and the destination Image. When a Filter is installed\r\n(using the function install_filter), it transforms each source Image from the live camera\r\nor from a local/remote file to a destination Image that is then displayed on screen\r\nin the Source Academy \"Pix N Flix\" tab (with a camera icon).\r\n\r\nThe dimensions (i.e. width and height) of the displayed images can be set by the user using\r\nthe function set_dimensions, and all source and destination Images of the Filters will\r\nalso be set to the same dimensions. To access the current dimensions of the Images, the user\r\ncan use the functions image_width and image_height."
					}
				]
			},
			"originalName": "pix_n_flix/functions",
			"children": [
				{
					"id": 24,
					"name": "alpha_of",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 559,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L559"
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "alpha_of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the alpha component of the given pixel."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The alpha component as a number between 0 and 255"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 26,
									"name": "pixel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The given pixel"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Pixel"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 21,
					"name": "blue_of",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 548,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L548"
						}
					],
					"signatures": [
						{
							"id": 22,
							"name": "blue_of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the blue component of the given pixel."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The blue component as a number between 0 and 255"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 23,
									"name": "pixel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The given pixel"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Pixel"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 47,
					"name": "compose_filter",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 669,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L669"
						}
					],
					"signatures": [
						{
							"id": 48,
							"name": "compose_filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new filter that is equivalent to applying\r\nfilter1 and then filter2."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The filter equivalent to applying filter1 and then filter2"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 49,
									"name": "filter1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first filter"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Filter"
									}
								},
								{
									"id": 50,
									"name": "filter2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second filter"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Filter"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Filter"
							}
						}
					]
				},
				{
					"id": 38,
					"name": "copy_image",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 615,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L615"
						}
					],
					"signatures": [
						{
							"id": 39,
							"name": "copy_image",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The default filter that just copies the source image to the\r\ndestination image."
									}
								]
							},
							"parameters": [
								{
									"id": 40,
									"name": "src",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Source image"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Pixels"
									}
								},
								{
									"id": 41,
									"name": "dest",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Destination image"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Pixels"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 72,
					"name": "get_video_time",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 758,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L758"
						}
					],
					"signatures": [
						{
							"id": 73,
							"name": "get_video_time",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the elapsed time in milliseconds since the start of the video."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The elapsed time in milliseconds since the start of the video"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 18,
					"name": "green_of",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 537,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L537"
						}
					],
					"signatures": [
						{
							"id": 19,
							"name": "green_of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the green component of the given pixel."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The green component as a number between 0 and 255"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 20,
									"name": "pixel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The given pixel"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Pixel"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 34,
					"name": "image_height",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 594,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L594"
						}
					],
					"signatures": [
						{
							"id": 35,
							"name": "image_height",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current height of the displayed images in\r\npixels, i.e. the number of pixels in the vertical dimension."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The height of the displayed images (in pixels)"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 36,
					"name": "image_width",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 604,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L604"
						}
					],
					"signatures": [
						{
							"id": 37,
							"name": "image_width",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current width of the displayed images in\r\npixels, i.e. the number of pixels in the horizontal dimension."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The width of the displayed images (in pixels)"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 42,
					"name": "install_filter",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 634,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L634"
						}
					],
					"signatures": [
						{
							"id": 43,
							"name": "install_filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Installs the given filter to be used to transform each source image from\r\nthe live camera or from a local/remote file to a destination image that\r\nis then displayed on screen.\r\n\r\nA filter is a function that is applied to two\r\ntwo-dimensional arrays of Pixels:\r\nthe source image and the destination image."
									}
								]
							},
							"parameters": [
								{
									"id": 44,
									"name": "_filter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Filter"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 74,
					"name": "keep_aspect_ratio",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 767,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L767"
						}
					],
					"signatures": [
						{
							"id": 75,
							"name": "keep_aspect_ratio",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets pix_n_flix to preserve the aspect ratio of the video or image"
									}
								]
							},
							"parameters": [
								{
									"id": 76,
									"name": "_keepAspectRatio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 51,
					"name": "pause_at",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 682,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L682"
						}
					],
					"signatures": [
						{
							"id": 52,
							"name": "pause_at",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Pauses the video at a set time after the video starts."
									}
								]
							},
							"parameters": [
								{
									"id": 53,
									"name": "pause_time",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Time in ms after the video starts."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 15,
					"name": "red_of",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 526,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L526"
						}
					],
					"signatures": [
						{
							"id": 16,
							"name": "red_of",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the red component of the given pixel."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The red component as a number between 0 and 255"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 17,
									"name": "pixel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The given pixel"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Pixel"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 45,
					"name": "reset_filter",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 641,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L641"
						}
					],
					"signatures": [
						{
							"id": 46,
							"name": "reset_filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resets the installed filter to the default filter."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 54,
					"name": "set_dimensions",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 699,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L699"
						}
					],
					"signatures": [
						{
							"id": 55,
							"name": "set_dimensions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the diemsions of the displayed images.\r\nNote: Only accepts width and height values within the range of 1 to 500."
									}
								]
							},
							"parameters": [
								{
									"id": 56,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The width of the displayed images (default value: 300)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 57,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The height of the displayed images (default value: 400)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58,
					"name": "set_fps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 709,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L709"
						}
					],
					"signatures": [
						{
							"id": 59,
							"name": "set_fps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the framerate (i.e. frames per second (FPS)) of the video.\r\nNote: Only accepts FPS values within the range of 2 to 30."
									}
								]
							},
							"parameters": [
								{
									"id": 60,
									"name": "fps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "FPS of video (default value: 10)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 77,
					"name": "set_loop_count",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 777,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L777"
						}
					],
					"signatures": [
						{
							"id": 78,
							"name": "set_loop_count",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the number of times the video is played.\r\nIf the number of times the video repeats is negative, the video will loop forever."
									}
								]
							},
							"parameters": [
								{
									"id": 79,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "number of times the video repeats after the first iteration. If n < 1, n will be taken to be 1. (Default value of Infinity)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 27,
					"name": "set_rgba",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 574,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L574"
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "set_rgba",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Assigns the given red, green, blue and alpha component values to\r\nthe given pixel."
									}
								]
							},
							"parameters": [
								{
									"id": 29,
									"name": "pixel",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The given pixel"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Pixel"
									}
								},
								{
									"id": 30,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The red component as a number between 0 and 255"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 31,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The green component as a number between 0 and 255"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 32,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The blue component as a number between 0 and 255"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 33,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The alpha component as a number between 0 and 255"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 61,
					"name": "set_volume",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 719,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L719"
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "set_volume",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the audio volume of the local video file played.\r\nNote: Only accepts volume value within the range of 0 to 100."
									}
								]
							},
							"parameters": [
								{
									"id": 63,
									"name": "volume",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Volume of video (Default value of 50)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 13,
					"name": "start",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 507,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L507"
						}
					],
					"signatures": [
						{
							"id": 14,
							"name": "start",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Starts processing the image or video using the installed filter."
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "StartPacket"
							}
						}
					]
				},
				{
					"id": 66,
					"name": "use_image_url",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 737,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L737"
						}
					],
					"signatures": [
						{
							"id": 67,
							"name": "use_image_url",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets pix_n_flix to use the image from the given URL as the image feed\r\ninstead of using the default live camera feed."
									}
								]
							},
							"parameters": [
								{
									"id": 68,
									"name": "URL",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "URL of the image"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 64,
					"name": "use_local_file",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 727,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L727"
						}
					],
					"signatures": [
						{
							"id": 65,
							"name": "use_local_file",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets pix_n_flix to use video or image feed from a local file\r\ninstead of using the default live camera feed."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 69,
					"name": "use_video_url",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "pix_n_flix/functions.ts",
							"line": 748,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L748"
						}
					],
					"signatures": [
						{
							"id": 70,
							"name": "use_video_url",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets pix_n_flix to use the video from the given URL as the video feed\r\ninstead of using the default live camera feed."
									}
								]
							},
							"parameters": [
								{
									"id": 71,
									"name": "URL",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "URL of the video"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						24,
						21,
						47,
						38,
						72,
						18,
						34,
						36,
						42,
						74,
						51,
						15,
						45,
						54,
						58,
						77,
						27,
						61,
						13,
						66,
						64,
						69
					]
				}
			],
			"sources": [
				{
					"fileName": "pix_n_flix/functions.ts",
					"line": 24,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/pix_n_flix/functions.ts#L24"
				}
			]
		},
		{
			"id": 1,
			"name": "repeat",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This is the official documentation for the repeat module."
					}
				]
			},
			"originalName": "repeat/functions",
			"children": [
				{
					"id": 2,
					"name": "repeat",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "repeat/functions.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/repeat/functions.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "repeat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new function which when applied to an argument, has the same effect\r\nas applying the specified function to the same argument n times."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\r\nconst plusTen = repeat(x => x + 2, 5);\r\nplusTen(0); // Returns 10\r\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the new function that has the same effect as func repeated n times"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4,
									"name": "func",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the function to be repeated"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Function",
										"qualifiedName": "Function",
										"package": "typescript"
									}
								},
								{
									"id": 5,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the number of times to repeat the function"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Function",
								"qualifiedName": "Function",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9,
					"name": "thrice",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "repeat/functions.ts",
							"line": 48,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/repeat/functions.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "thrice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new function which when applied to an argument, has the same effect\r\nas applying the specified function to the same argument 3 times."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\r\nconst plusNine = thrice(x => x + 3);\r\nplusNine(0); // Returns 9\r\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the new function that has the same effect as "
											},
											{
												"kind": "code",
												"text": "`(x => func(func(func(x))))`"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 11,
									"name": "func",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the function to be repeated"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Function",
										"qualifiedName": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Function",
								"qualifiedName": "Function",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6,
					"name": "twice",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "repeat/functions.ts",
							"line": 33,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/repeat/functions.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 7,
							"name": "twice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a new function which when applied to an argument, has the same effect\r\nas applying the specified function to the same argument 2 times."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\r\nconst plusTwo = twice(x => x + 1);\r\nplusTwo(2); // Returns 4\r\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the new function that has the same effect as "
											},
											{
												"kind": "code",
												"text": "`(x => func(func(x)))`"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8,
									"name": "func",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the function to be repeated"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Function",
										"qualifiedName": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Function",
								"qualifiedName": "Function",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						2,
						9,
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "repeat/functions.ts",
					"line": 18,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/repeat/functions.ts#L18"
				}
			]
		},
		{
			"id": 690,
			"name": "rune",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The module "
					},
					{
						"kind": "code",
						"text": "`rune`"
					},
					{
						"kind": "text",
						"text": " provides functions for drawing runes.\r\n\r\nA *Rune* is defined by its vertices (x,y,z,t), the colors on its vertices (r,g,b,a), a transformation matrix for rendering the Rune and a (could be empty) list of its sub-Runes."
					}
				]
			},
			"originalName": "rune/functions",
			"children": [
				{
					"id": 835,
					"name": "blank",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a blank square"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 61,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L61"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 841,
					"name": "circle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a circle"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 103,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L103"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 839,
					"name": "corner",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with black triangle,\r\nfilling upper right corner"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 89,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 842,
					"name": "heart",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a heart"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 109,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L109"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 840,
					"name": "nova",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of two overlapping\r\ntriangles, residing in the upper half\r\nof the shape"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 97,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L97"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 843,
					"name": "pentagram",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a pentagram"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 115,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L115"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 836,
					"name": "rcross",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a\r\nsmall square inside a large square,\r\neach diagonally split into a\r\nblack and white half"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 70,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L70"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 844,
					"name": "ribbon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a ribbon\r\nwinding outwards in an anticlockwise spiral"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 122,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L122"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 837,
					"name": "sail",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a sail"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 76,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L76"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 834,
					"name": "square",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a full square"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 55,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L55"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 838,
					"name": "triangle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a triangle"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 82,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"name": "Rune"
					},
					"defaultValue": "..."
				},
				{
					"id": 814,
					"name": "anaglyph",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 831,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L831"
						}
					],
					"signatures": [
						{
							"id": 815,
							"name": "anaglyph",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the specified Rune in a tab as an anaglyph. Use 3D glasses to view the\r\nanaglyph."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The specified Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 816,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Rune to render"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 829,
					"name": "animate_anaglyph",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 1014,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L1014"
						}
					],
					"signatures": [
						{
							"id": 830,
							"name": "animate_anaglyph",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create an animation of anaglyph runes"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A rune animation"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 831,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Duration of the entire animation in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 832,
									"name": "fps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Duration of each frame in frames per seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 833,
									"name": "func",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Takes in the timestamp and returns a Rune to draw"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "RuneAnimation"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AnimatedRune"
							}
						}
					]
				},
				{
					"id": 824,
					"name": "animate_rune",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 991,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L991"
						}
					],
					"signatures": [
						{
							"id": 825,
							"name": "animate_rune",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create an animation of runes"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A rune animation"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 826,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Duration of the entire animation in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 827,
									"name": "fps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Duration of each frame in frames per seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 828,
									"name": "func",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Takes in the timestamp and returns a Rune to draw"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "RuneAnimation"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AnimatedRune"
							}
						}
					]
				},
				{
					"id": 739,
					"name": "beside",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 374,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L374"
						}
					],
					"signatures": [
						{
							"id": 740,
							"name": "beside",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from two given Runes by\r\nplacing the first on the left of the second,\r\nboth occupying equal portions of the width\r\nof the result"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 741,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								},
								{
									"id": 742,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 734,
					"name": "beside_frac",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 349,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L349"
						}
					],
					"signatures": [
						{
							"id": 735,
							"name": "beside_frac",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from two given Runes by\r\nplacing the first on the left of the second\r\nsuch that the first one occupies frac\r\nportion of the width of the result and\r\nthe second the rest"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 736,
									"name": "frac",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fraction between 0 and 1 (inclusive)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 737,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								},
								{
									"id": 738,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 805,
					"name": "black",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 679,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L679"
						}
					],
					"signatures": [
						{
							"id": 806,
							"name": "black",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune black (#000000)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 807,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 790,
					"name": "blue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 619,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L619"
						}
					],
					"signatures": [
						{
							"id": 791,
							"name": "blue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune blue (#2196F3)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 792,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 802,
					"name": "brown",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 667,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L667"
						}
					],
					"signatures": [
						{
							"id": 803,
							"name": "brown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune brown."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 804,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 769,
					"name": "color",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 533,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L533"
						}
					],
					"signatures": [
						{
							"id": 770,
							"name": "color",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds color to rune by specifying\r\nthe red, green, blue (RGB) value, ranging from 0.0 to 1.0.\r\nRGB is additive: if all values are 1, the color is white,\r\nand if all values are 0, the color is black."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 771,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to add color to"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								},
								{
									"id": 772,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Red value [0.0-1.0]"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 773,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Green value [0.0-1.0]"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 774,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Blue value [0.0-1.0]"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 746,
					"name": "flip_horiz",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 402,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L402"
						}
					],
					"signatures": [
						{
							"id": 747,
							"name": "flip_horiz",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune by\r\nflipping it around a vertical axis,\r\ncreating a mirror image"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 748,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 743,
					"name": "flip_vert",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 388,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L388"
						}
					],
					"signatures": [
						{
							"id": 744,
							"name": "flip_vert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune by\r\nflipping it around a horizontal axis,\r\nturning it upside down"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 745,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 691,
					"name": "from_url",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 135,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L135"
						}
					],
					"signatures": [
						{
							"id": 692,
							"name": "from_url",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a rune using the image provided in the url"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Rune created using the image."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 693,
									"name": "imageUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "URL to the image that is used to create the rune.\r\nNote that the url must be from a domain that allows CORS."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 793,
					"name": "green",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 631,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L631"
						}
					],
					"signatures": [
						{
							"id": 794,
							"name": "green",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune green (#4CAF50)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 795,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 821,
					"name": "hollusion",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 977,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L977"
						}
					],
					"signatures": [
						{
							"id": 822,
							"name": "hollusion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the specified Rune in a tab as a hollusion, with a default magnitude\r\nof 0.1."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The specified Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 823,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Rune to render"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 817,
					"name": "hollusion_magnitude",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 963,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L963"
						}
					],
					"signatures": [
						{
							"id": 818,
							"name": "hollusion_magnitude",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the specified Rune in a tab as a hollusion, using the specified\r\nmagnitude."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The specified Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 819,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Rune to render"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								},
								{
									"id": 820,
									"name": "magnitude",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hollusion's magnitude"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 787,
					"name": "indigo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 607,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L607"
						}
					],
					"signatures": [
						{
							"id": 788,
							"name": "indigo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune indigo (#3F51B5)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 789,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 749,
					"name": "make_cross",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 416,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L416"
						}
					],
					"signatures": [
						{
							"id": 750,
							"name": "make_cross",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune by\r\narranging into a square for copies of the\r\ngiven Rune in different orientations"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 751,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 799,
					"name": "orange",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 655,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L655"
						}
					],
					"signatures": [
						{
							"id": 800,
							"name": "orange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune orange (#FF9800)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 801,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 765,
					"name": "overlay",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 510,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L510"
						}
					],
					"signatures": [
						{
							"id": 766,
							"name": "overlay",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The depth range of the z-axis of a rune is [0,-1], this function maps the depth range of rune1 and rune2 to [0,-0.5] and [-0.5,-1] respectively."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Runes"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 767,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								},
								{
									"id": 768,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 760,
					"name": "overlay_frac",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 458,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L458"
						}
					],
					"signatures": [
						{
							"id": 761,
							"name": "overlay_frac",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The depth range of the z-axis of a rune is [0,-1], this function gives a [0, -frac] of the depth range to rune1 and the rest to rune2."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 762,
									"name": "frac",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fraction between 0 and 1 (inclusive)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 763,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								},
								{
									"id": 764,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 781,
					"name": "pink",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 583,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L583"
						}
					],
					"signatures": [
						{
							"id": 782,
							"name": "pink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune pink (#E91E63s)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 783,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 784,
					"name": "purple",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 595,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L595"
						}
					],
					"signatures": [
						{
							"id": 785,
							"name": "purple",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune purple (#AA00FF)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 786,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 728,
					"name": "quarter_turn_left",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 318,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L318"
						}
					],
					"signatures": [
						{
							"id": 729,
							"name": "quarter_turn_left",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune\r\nby turning it a quarter-turn in\r\nanti-clockwise direction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 730,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 725,
					"name": "quarter_turn_right",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 304,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L304"
						}
					],
					"signatures": [
						{
							"id": 726,
							"name": "quarter_turn_right",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune\r\nby turning it a quarter-turn around the centre in\r\nclockwise direction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 727,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 775,
					"name": "random_color",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 552,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L552"
						}
					],
					"signatures": [
						{
							"id": 776,
							"name": "random_color",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gives random color to the given rune.\r\nThe color is chosen randomly from the following nine\r\ncolors: red, pink, purple, indigo, blue, green, yellow, orange, brown"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 777,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 778,
					"name": "red",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 571,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L571"
						}
					],
					"signatures": [
						{
							"id": 779,
							"name": "red",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune red (#F44336)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 780,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 752,
					"name": "repeat_pattern",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 434,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L434"
						}
					],
					"signatures": [
						{
							"id": 753,
							"name": "repeat_pattern",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Applies a given function n times to an initial value"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "- Result of n times application of pattern to initial:\r\npattern(pattern(...pattern(pattern(initial))...))"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 754,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative integer"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 755,
									"name": "pattern",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unary function from Rune to Rune"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 756,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "rune/functions.ts",
													"line": 436,
													"character": 11,
													"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L436"
												}
											],
											"signatures": [
												{
													"id": 757,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 758,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Rune"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Rune"
													}
												}
											]
										}
									}
								},
								{
									"id": 759,
									"name": "initial",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The initial Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 708,
					"name": "rotate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 221,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L221"
						}
					],
					"signatures": [
						{
							"id": 709,
							"name": "rotate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rotates a given Rune by a given angle,\r\ngiven in radians, in anti-clockwise direction.\r\nNote that parts of the Rune\r\nmay be cropped as a result."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Rotated Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 710,
									"name": "rad",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle in radians"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 711,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 699,
					"name": "scale",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 182,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L182"
						}
					],
					"signatures": [
						{
							"id": 700,
							"name": "scale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Scales a given Rune by a given factor in both x and y direction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting scaled Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 701,
									"name": "ratio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling factor"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 702,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 694,
					"name": "scale_independent",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 156,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L156"
						}
					],
					"signatures": [
						{
							"id": 695,
							"name": "scale_independent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Scales a given Rune by separate factors in x and y direction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting scaled Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 696,
									"name": "ratio_x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling factor in x direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 697,
									"name": "ratio_y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling factor in y direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 698,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 811,
					"name": "show",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 707,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L707"
						}
					],
					"signatures": [
						{
							"id": 812,
							"name": "show",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the specified Rune in a tab as a basic drawing."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The specified Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 813,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Rune to render"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 717,
					"name": "stack",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 273,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L273"
						}
					],
					"signatures": [
						{
							"id": 718,
							"name": "stack",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from two given Runes by\r\nplacing the first on top of the second, each\r\noccupying equal parts of the height of the\r\nresult"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 719,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								},
								{
									"id": 720,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 712,
					"name": "stack_frac",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 247,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L247"
						}
					],
					"signatures": [
						{
							"id": 713,
							"name": "stack_frac",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from two given Runes by\r\nplacing the first on top of the second\r\nsuch that the first one occupies frac\r\nportion of the height of the result and\r\nthe second the rest"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 714,
									"name": "frac",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fraction between 0 and 1 (inclusive)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 715,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								},
								{
									"id": 716,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 721,
					"name": "stackn",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 287,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L287"
						}
					],
					"signatures": [
						{
							"id": 722,
							"name": "stackn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune\r\nby vertically stacking n copies of it"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 723,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Positive integer"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 724,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 703,
					"name": "translate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 196,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L196"
						}
					],
					"signatures": [
						{
							"id": 704,
							"name": "translate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Translates a given Rune by given values in x and y direction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting translated Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 705,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Translation in x direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 706,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Translation in y direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 707,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 731,
					"name": "turn_upside_down",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 331,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L331"
						}
					],
					"signatures": [
						{
							"id": 732,
							"name": "turn_upside_down",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune\r\nby turning it upside-down"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 733,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 808,
					"name": "white",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 691,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L691"
						}
					],
					"signatures": [
						{
							"id": 809,
							"name": "white",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune white (#FFFFFF)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 810,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				},
				{
					"id": 796,
					"name": "yellow",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune/functions.ts",
							"line": 643,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L643"
						}
					],
					"signatures": [
						{
							"id": 797,
							"name": "yellow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune yellow (#FFEB3B)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 798,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Rune"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Rune"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						835,
						841,
						839,
						842,
						840,
						843,
						836,
						844,
						837,
						834,
						838
					],
					"categories": [
						{
							"title": "Primitive",
							"children": [
								835,
								841,
								839,
								842,
								840,
								843,
								836,
								844,
								837,
								834,
								838
							]
						}
					]
				},
				{
					"title": "Functions",
					"children": [
						814,
						829,
						824,
						739,
						734,
						805,
						790,
						802,
						769,
						746,
						743,
						691,
						793,
						821,
						817,
						787,
						749,
						799,
						765,
						760,
						781,
						784,
						728,
						725,
						775,
						778,
						752,
						708,
						699,
						694,
						811,
						717,
						712,
						721,
						703,
						731,
						808,
						796
					],
					"categories": [
						{
							"title": "Color",
							"children": [
								805,
								790,
								802,
								769,
								793,
								787,
								799,
								781,
								784,
								775,
								778,
								808,
								796
							]
						},
						{
							"title": "Main",
							"children": [
								814,
								829,
								824,
								739,
								734,
								746,
								743,
								691,
								821,
								817,
								749,
								765,
								760,
								728,
								725,
								752,
								708,
								699,
								694,
								811,
								717,
								712,
								721,
								703,
								731
							]
						}
					]
				}
			],
			"sources": [
				{
					"fileName": "rune/functions.ts",
					"line": 7,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune/functions.ts#L7"
				}
			]
		},
		{
			"id": 875,
			"name": "rune_in_words",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The module "
					},
					{
						"kind": "code",
						"text": "`rune_in_words`"
					},
					{
						"kind": "text",
						"text": " provides functions for computing with runes using text instead of graphics.\r\n\r\nA *Rune* is defined by its vertices (x,y,z,t), the colors on its vertices (r,g,b,a), a transformation matrix for rendering the Rune and a (could be empty) list of its sub-Runes. In this module, runes are represented as strings that approximate the way they are created. No graphical output is generated."
					}
				]
			},
			"originalName": "rune_in_words/functions",
			"children": [
				{
					"id": 1006,
					"name": "blank",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a blank square"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 40,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1012,
					"name": "circle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a circle"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 82,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L82"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1010,
					"name": "corner",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with black triangle,\r\nfilling upper right corner"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 68,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L68"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1013,
					"name": "heart",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a heart"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 88,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L88"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1011,
					"name": "nova",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of two overlapping\r\ntriangles, residing in the upper half\r\nof the shape"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 76,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1014,
					"name": "pentagram",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a pentagram"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 94,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L94"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1007,
					"name": "rcross",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a\r\nsmall square inside a large square,\r\neach diagonally split into a\r\nblack and white half"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 49,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1015,
					"name": "ribbon",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a ribbon\r\nwinding outwards in an anticlockwise spiral"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 101,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L101"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1008,
					"name": "sail",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a sail"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 55,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1005,
					"name": "square",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a full square"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 34,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L34"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 1009,
					"name": "triangle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Rune with the shape of a triangle"
							}
						]
					},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 61,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L61"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 999,
					"name": "anaglyph",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 600,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L600"
						}
					],
					"signatures": [
						{
							"id": 1000,
							"name": "anaglyph",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the specified Rune in a tab as an anaglyph. Use 3D glasses to view the\r\nanaglyph."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The specified Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1001,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Rune to render"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 924,
					"name": "beside",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 305,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L305"
						}
					],
					"signatures": [
						{
							"id": 925,
							"name": "beside",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from two given Runes by\r\nplacing the first on the left of the second,\r\nboth occupying equal portions of the width\r\nof the result"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 926,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 927,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 919,
					"name": "beside_frac",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 288,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L288"
						}
					],
					"signatures": [
						{
							"id": 920,
							"name": "beside_frac",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from two given Runes by\r\nplacing the first on the left of the second\r\nsuch that the first one occupies frac\r\nportion of the width of the result and\r\nthe second the rest"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 921,
									"name": "frac",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fraction between 0 and 1 (inclusive)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 922,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 923,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 990,
					"name": "black",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 559,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L559"
						}
					],
					"signatures": [
						{
							"id": 991,
							"name": "black",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune black (#000000)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 992,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 975,
					"name": "blue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 499,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L499"
						}
					],
					"signatures": [
						{
							"id": 976,
							"name": "blue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune blue (#2196F3)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 977,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 987,
					"name": "brown",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 547,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L547"
						}
					],
					"signatures": [
						{
							"id": 988,
							"name": "brown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune brown."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 989,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 954,
					"name": "color",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 425,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L425"
						}
					],
					"signatures": [
						{
							"id": 955,
							"name": "color",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds color to rune by specifying\r\nthe red, green, blue (RGB) value, ranging from 0.0 to 1.0.\r\nRGB is additive: if all values are 1, the color is white,\r\nand if all values are 0, the color is black."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 956,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to add color to"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 957,
									"name": "r",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Red value [0.0-1.0]"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 958,
									"name": "g",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Green value [0.0-1.0]"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 959,
									"name": "b",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Blue value [0.0-1.0]"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 931,
					"name": "flip_horiz",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 333,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L333"
						}
					],
					"signatures": [
						{
							"id": 932,
							"name": "flip_horiz",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune by\r\nflipping it around a vertical axis,\r\ncreating a mirror image"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 933,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 928,
					"name": "flip_vert",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 319,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L319"
						}
					],
					"signatures": [
						{
							"id": 929,
							"name": "flip_vert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune by\r\nflipping it around a horizontal axis,\r\nturning it upside down"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 930,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 876,
					"name": "from_url",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 114,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L114"
						}
					],
					"signatures": [
						{
							"id": 877,
							"name": "from_url",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a rune using the image provided in the url"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Rune created using the image."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 878,
									"name": "imageUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "URL to the image that is used to create the rune.\r\nNote that the url must be from a domain that allows CORS."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 978,
					"name": "green",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 511,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L511"
						}
					],
					"signatures": [
						{
							"id": 979,
							"name": "green",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune green (#4CAF50)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 980,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1002,
					"name": "hollusion",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 613,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L613"
						}
					],
					"signatures": [
						{
							"id": 1003,
							"name": "hollusion",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the specified Rune in a tab as a hollusion, with a default magnitude\r\nof 0.1."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The specified Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 1004,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Rune to render"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 972,
					"name": "indigo",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 487,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L487"
						}
					],
					"signatures": [
						{
							"id": 973,
							"name": "indigo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune indigo (#3F51B5)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 974,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 934,
					"name": "make_cross",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 347,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L347"
						}
					],
					"signatures": [
						{
							"id": 935,
							"name": "make_cross",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune by\r\narranging into a square for copies of the\r\ngiven Rune in different orientations"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 936,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 984,
					"name": "orange",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 535,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L535"
						}
					],
					"signatures": [
						{
							"id": 985,
							"name": "orange",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune orange (#FF9800)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 986,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 950,
					"name": "overlay",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 402,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L402"
						}
					],
					"signatures": [
						{
							"id": 951,
							"name": "overlay",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The depth range of the z-axis of a rune is [0,-1], this function maps the depth range of rune1 and rune2 to [0,-0.5] and [-0.5,-1] respectively."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Runes"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 952,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 953,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 945,
					"name": "overlay_frac",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 388,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L388"
						}
					],
					"signatures": [
						{
							"id": 946,
							"name": "overlay_frac",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The depth range of the z-axis of a rune is [0,-1], this function gives a [0, -frac] of the depth range to rune1 and the rest to rune2."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 947,
									"name": "frac",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fraction between 0 and 1 (inclusive)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 948,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 949,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 966,
					"name": "pink",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 463,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L463"
						}
					],
					"signatures": [
						{
							"id": 967,
							"name": "pink",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune pink (#E91E63s)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 968,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 969,
					"name": "purple",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 475,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L475"
						}
					],
					"signatures": [
						{
							"id": 970,
							"name": "purple",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune purple (#AA00FF)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 971,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 913,
					"name": "quarter_turn_left",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 257,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L257"
						}
					],
					"signatures": [
						{
							"id": 914,
							"name": "quarter_turn_left",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune\r\nby turning it a quarter-turn in\r\nanti-clockwise direction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 915,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 910,
					"name": "quarter_turn_right",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 243,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L243"
						}
					],
					"signatures": [
						{
							"id": 911,
							"name": "quarter_turn_right",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune\r\nby turning it a quarter-turn around the centre in\r\nclockwise direction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 912,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 960,
					"name": "random_color",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 439,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L439"
						}
					],
					"signatures": [
						{
							"id": 961,
							"name": "random_color",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gives random color to the given rune.\r\nThe color is chosen randomly from the following nine\r\ncolors: red, pink, purple, indigo, blue, green, yellow, orange, brown"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 962,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 963,
					"name": "red",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 451,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L451"
						}
					],
					"signatures": [
						{
							"id": 964,
							"name": "red",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune red (#F44336)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 965,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 937,
					"name": "repeat_pattern",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 364,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L364"
						}
					],
					"signatures": [
						{
							"id": 938,
							"name": "repeat_pattern",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Applies a given function n times to an initial value"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "- Result of n times application of pattern to initial:\r\npattern(pattern(...pattern(pattern(initial))...))"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 939,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative integer"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 940,
									"name": "pattern",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unary function from Rune to Rune"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 941,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "rune_in_words/functions.ts",
													"line": 366,
													"character": 11,
													"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L366"
												}
											],
											"signatures": [
												{
													"id": 942,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 943,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 944,
									"name": "initial",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The initial Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 893,
					"name": "rotate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 178,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L178"
						}
					],
					"signatures": [
						{
							"id": 894,
							"name": "rotate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rotates a given Rune by a given angle,\r\ngiven in radians, in anti-clockwise direction.\r\nNote that parts of the Rune\r\nmay be cropped as a result."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Rotated Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 895,
									"name": "rad",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Angle in radians"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 896,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 884,
					"name": "scale",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 148,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L148"
						}
					],
					"signatures": [
						{
							"id": 885,
							"name": "scale",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Scales a given Rune by a given factor in both x and y direction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting scaled Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 886,
									"name": "ratio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling factor"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 887,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 879,
					"name": "scale_independent",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 131,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L131"
						}
					],
					"signatures": [
						{
							"id": 880,
							"name": "scale_independent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Scales a given Rune by separate factors in x and y direction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting scaled Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 881,
									"name": "ratio_x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling factor in x direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 882,
									"name": "ratio_y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Scaling factor in y direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 883,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 996,
					"name": "show",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 587,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L587"
						}
					],
					"signatures": [
						{
							"id": 997,
							"name": "show",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Renders the specified Rune in a tab as a basic drawing."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The specified Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 998,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Rune to render"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 902,
					"name": "stack",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 214,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L214"
						}
					],
					"signatures": [
						{
							"id": 903,
							"name": "stack",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from two given Runes by\r\nplacing the first on top of the second, each\r\noccupying equal parts of the height of the\r\nresult"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 904,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 905,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 897,
					"name": "stack_frac",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 196,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L196"
						}
					],
					"signatures": [
						{
							"id": 898,
							"name": "stack_frac",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from two given Runes by\r\nplacing the first on top of the second\r\nsuch that the first one occupies frac\r\nportion of the height of the result and\r\nthe second the rest"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 899,
									"name": "frac",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fraction between 0 and 1 (inclusive)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 900,
									"name": "rune1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 901,
									"name": "rune2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 906,
					"name": "stackn",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 228,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L228"
						}
					],
					"signatures": [
						{
							"id": 907,
							"name": "stackn",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune\r\nby vertically stacking n copies of it"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 908,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Positive integer"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 909,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 888,
					"name": "translate",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 162,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L162"
						}
					],
					"signatures": [
						{
							"id": 889,
							"name": "translate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Translates a given Rune by given values in x and y direction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting translated Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 890,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Translation in x direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 891,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Translation in y direction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 892,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 916,
					"name": "turn_upside_down",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 270,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L270"
						}
					],
					"signatures": [
						{
							"id": 917,
							"name": "turn_upside_down",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Rune from a given Rune\r\nby turning it upside-down"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resulting Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 918,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Given Rune"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 993,
					"name": "white",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 571,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L571"
						}
					],
					"signatures": [
						{
							"id": 994,
							"name": "white",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune white (#FFFFFF)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 995,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 981,
					"name": "yellow",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "rune_in_words/functions.ts",
							"line": 523,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L523"
						}
					],
					"signatures": [
						{
							"id": 982,
							"name": "yellow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Colors the given rune yellow (#FFEB3B)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The colored Rune"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 983,
									"name": "rune",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The rune to color"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						1006,
						1012,
						1010,
						1013,
						1011,
						1014,
						1007,
						1015,
						1008,
						1005,
						1009
					],
					"categories": [
						{
							"title": "Primitive",
							"children": [
								1006,
								1012,
								1010,
								1013,
								1011,
								1014,
								1007,
								1015,
								1008,
								1005,
								1009
							]
						}
					]
				},
				{
					"title": "Functions",
					"children": [
						999,
						924,
						919,
						990,
						975,
						987,
						954,
						931,
						928,
						876,
						978,
						1002,
						972,
						934,
						984,
						950,
						945,
						966,
						969,
						913,
						910,
						960,
						963,
						937,
						893,
						884,
						879,
						996,
						902,
						897,
						906,
						888,
						916,
						993,
						981
					],
					"categories": [
						{
							"title": "Color",
							"children": [
								990,
								975,
								987,
								954,
								978,
								972,
								984,
								966,
								969,
								960,
								963,
								993,
								981
							]
						},
						{
							"title": "Main",
							"children": [
								999,
								924,
								919,
								931,
								928,
								876,
								1002,
								934,
								950,
								945,
								913,
								910,
								937,
								893,
								884,
								879,
								996,
								902,
								897,
								906,
								888,
								916
							]
						}
					]
				}
			],
			"sources": [
				{
					"fileName": "rune_in_words/functions.ts",
					"line": 7,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/rune_in_words/functions.ts#L7"
				}
			]
		},
		{
			"id": 338,
			"name": "scrabble",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`scrabble`"
					},
					{
						"kind": "text",
						"text": " Source Module provides the allowable\r\nwords in Scrabble in a list and in an array, according to\r\nhttps://github.com/benjamincrom/scrabble/blob/master/scrabble/dictionary.json"
					}
				]
			},
			"originalName": "scrabble/functions",
			"children": [
				{
					"id": 346,
					"name": "scrabble_array",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`scrabble_array`"
							},
							{
								"kind": "text",
								"text": " is an array of strings, each representing\r\nan allowed word in Scrabble."
							}
						]
					},
					"sources": [
						{
							"fileName": "scrabble/functions.ts",
							"line": 15,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/scrabble/functions.ts#L15"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 347,
					"name": "scrabble_list",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`scrabble_list`"
							},
							{
								"kind": "text",
								"text": " is a list of strings, each representing\r\nan allowed word in Scrabble."
							}
						]
					},
					"sources": [
						{
							"fileName": "scrabble/functions.ts",
							"line": 67609,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/scrabble/functions.ts#L67609"
						}
					],
					"type": {
						"type": "reference",
						"name": "List"
					},
					"defaultValue": "current_list"
				},
				{
					"id": 343,
					"name": "arrayLength",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "scrabble/functions.ts",
							"line": 67616,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/scrabble/functions.ts#L67616"
						}
					],
					"signatures": [
						{
							"id": 344,
							"name": "arrayLength",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 345,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 339,
					"name": "charAt",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "scrabble/functions.ts",
							"line": 67611,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/scrabble/functions.ts#L67611"
						}
					],
					"signatures": [
						{
							"id": 340,
							"name": "charAt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 341,
									"name": "s",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 342,
									"name": "i",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						346,
						347
					]
				},
				{
					"title": "Functions",
					"children": [
						343,
						339
					]
				}
			],
			"sources": [
				{
					"fileName": "scrabble/functions.ts",
					"line": 8,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/scrabble/functions.ts#L8"
				}
			]
		},
		{
			"id": 223,
			"name": "sound",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The sounds library provides functions for constructing and playing sounds.\r\n\r\nA wave is a function that takes in a number "
					},
					{
						"kind": "code",
						"text": "`t`"
					},
					{
						"kind": "text",
						"text": " and returns\r\na number representing the amplitude at time "
					},
					{
						"kind": "code",
						"text": "`t`"
					},
					{
						"kind": "text",
						"text": ".\r\nThe amplitude should fall within the range of [-1, 1].\r\n\r\nA Sound is a pair(wave, duration) where duration is the length of the sound in seconds.\r\nThe constructor make_sound and accessors get_wave and get_duration are provided.\r\n\r\nSound Discipline:\r\nFor all sounds, the wave function applied to and time "
					},
					{
						"kind": "code",
						"text": "`t`"
					},
					{
						"kind": "text",
						"text": " beyond its duration returns 0, that is:\r\n"
					},
					{
						"kind": "code",
						"text": "`(get_wave(sound))(get_duration(sound) + x) === 0`"
					},
					{
						"kind": "text",
						"text": " for any x >= 0.\r\n\r\nTwo functions which combine Sounds, "
					},
					{
						"kind": "code",
						"text": "`consecutively`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`simultaneously`"
					},
					{
						"kind": "text",
						"text": " are given.\r\nAdditionally, we provide sound transformation functions "
					},
					{
						"kind": "code",
						"text": "`adsr`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`phase_mod`"
					},
					{
						"kind": "text",
						"text": "\r\nwhich take in a Sound and return a Sound.\r\n\r\nFinally, the provided "
					},
					{
						"kind": "code",
						"text": "`play`"
					},
					{
						"kind": "text",
						"text": " function takes in a Sound and plays it using your\r\ncomputer's sound system."
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Koh Shang Hui"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Samyukta Sounderraman"
							}
						]
					}
				]
			},
			"originalName": "sound/functions",
			"children": [
				{
					"id": 292,
					"name": "adsr",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 659,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L659"
						}
					],
					"signatures": [
						{
							"id": 293,
							"name": "adsr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an envelope: a function from Sound to Sound.\r\nWhen the adsr envelope is applied to a Sound, it returns\r\na new Sound with its amplitude modified according to parameters\r\nThe relative amplitude increases from 0 to 1 linearly over the\r\nattack proportion, then decreases from 1 to sustain level over the\r\ndecay proportion, and remains at that level until the release\r\nproportion when it decays back to 0."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Envelope a function from Sound to Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nadsr(0.2, 0.3, 0.3, 0.1)(sound);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 294,
									"name": "attack_ratio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "proportion of Sound in attack phase"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 295,
									"name": "decay_ratio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "proportion of Sound decay phase"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 296,
									"name": "sustain_level",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "sustain level between 0 and 1"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 297,
									"name": "release_ratio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "proportion of Sound in release phase"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SoundTransformer"
							}
						}
					]
				},
				{
					"id": 318,
					"name": "bell",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 855,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L855"
						}
					],
					"signatures": [
						{
							"id": 319,
							"name": "bell",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "returns a Sound reminiscent of a bell, playing\r\na given note for a given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting bell Sound with given pitch and duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nbell(40, 1);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 320,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 321,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 322,
					"name": "cello",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 877,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L877"
						}
					],
					"signatures": [
						{
							"id": 323,
							"name": "cello",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "returns a Sound reminiscent of a cello, playing\r\na given note for a given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting cello Sound with given pitch and duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ncello(36, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 324,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 325,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 286,
					"name": "consecutively",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 605,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L605"
						}
					],
					"signatures": [
						{
							"id": 287,
							"name": "consecutively",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Sound by combining the sounds in a given list\r\nwhere the second sound is appended to the end of the first sound,\r\nthe third sound is appended to the end of the second sound, and\r\nso on. The effect is that the sounds in the list are joined end-to-end"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the combined Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconsecutively(list(sine_sound(200, 2), sine_sound(400, 3)));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 288,
									"name": "list_of_sounds",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given list of sounds"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "List"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 246,
					"name": "get_duration",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 300,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L300"
						}
					],
					"signatures": [
						{
							"id": 247,
							"name": "get_duration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Accesses the duration of a given Sound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the duration of the Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nget_duration(make_sound(t => Math_sin(2 * Math_PI * 440 * t), 5)); // Returns 5\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 248,
									"name": "sound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given Sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 243,
					"name": "get_wave",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 289,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L289"
						}
					],
					"signatures": [
						{
							"id": 244,
							"name": "get_wave",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Accesses the wave function of a given Sound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the wave function of the Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nget_wave(make_sound(t => Math_sin(2 * Math_PI * 440 * t), 5)); // Returns t => Math_sin(2 * Math_PI * 440 * t)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 245,
									"name": "sound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given Sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Wave"
							}
						}
					]
				},
				{
					"id": 224,
					"name": "init_record",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 170,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L170"
						}
					],
					"signatures": [
						{
							"id": 225,
							"name": "init_record",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initialize recording by obtaining permission\r\nto use the default device microphone"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "string \"obtaining recording permission\""
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 249,
					"name": "is_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 311,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L311"
						}
					],
					"signatures": [
						{
							"id": 250,
							"name": "is_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Checks if the argument is a Sound"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "true if x is a Sound, false otherwise"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nis_sound(make_sound(t => 0, 2)); // Returns true\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 251,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "input to be checked"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 315,
					"name": "letter_name_to_frequency",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 841,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L841"
						}
					],
					"signatures": [
						{
							"id": 316,
							"name": "letter_name_to_frequency",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a letter name to its corresponding frequency."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the corresponding frequency"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nletter_name_to_frequency(\"A4\"); // Returns 440\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 317,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 309,
					"name": "letter_name_to_midi_note",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 770,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L770"
						}
					],
					"signatures": [
						{
							"id": 310,
							"name": "letter_name_to_midi_note",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a letter name to its corresponding MIDI note.\r\nThe letter name is represented in standard pitch notation.\r\nExamples are \"A5\", \"Db3\", \"C#7\".\r\nRefer to <a href=\"https://i.imgur.com/qGQgmYr.png\">this mapping from\r\nletter name to midi notes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the corresponding midi note"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nletter_name_to_midi_note(\"C4\"); // Returns 60\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 311,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 239,
					"name": "make_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 278,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L278"
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "make_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a Sound with given wave function and duration.\r\nThe wave function is a function: number -> number\r\nthat takes in a non-negative input time and returns an amplitude\r\nbetween -1 and 1."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "with wave as wave function and duration as duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst s = make_sound(t => Math_sin(2 * Math_PI * 440 * t), 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 241,
									"name": "wave",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "wave function of the sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Wave"
									}
								},
								{
									"id": 242,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration of the sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 312,
					"name": "midi_note_to_frequency",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 829,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L829"
						}
					],
					"signatures": [
						{
							"id": 313,
							"name": "midi_note_to_frequency",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a MIDI note to its corresponding frequency."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the frequency of the MIDI note"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nmidi_note_to_frequency(69); // Returns 440\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 314,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 264,
					"name": "noise_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 498,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L498"
						}
					],
					"signatures": [
						{
							"id": 265,
							"name": "noise_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a noise sound with given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting noise sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nnoise_sound(5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 266,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the noise sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 304,
					"name": "phase_mod",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 746,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L746"
						}
					],
					"signatures": [
						{
							"id": 305,
							"name": "phase_mod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a SoundTransformer which uses its argument\r\nto modulate the phase of a (carrier) sine wave\r\nof given frequency and duration with a given Sound.\r\nModulating with a low frequency Sound results in a vibrato effect.\r\nModulating with a Sound with frequencies comparable to\r\nthe sine wave frequency results in more complex wave forms."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function which takes in a Sound and returns a Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nphase_mod(440, 5, 1)(sine_sound(220, 5));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 306,
									"name": "freq",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the frequency of the sine wave to be modulated"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 307,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the output soud"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 308,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the amount of modulation to apply to the carrier sine wave"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SoundTransformer"
							}
						}
					]
				},
				{
					"id": 326,
					"name": "piano",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 894,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L894"
						}
					],
					"signatures": [
						{
							"id": 327,
							"name": "piano",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "returns a Sound reminiscent of a piano, playing\r\na given note for a given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting piano Sound with given pitch and duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\npiano(48, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 328,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 329,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 256,
					"name": "play",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 340,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L340"
						}
					],
					"signatures": [
						{
							"id": 257,
							"name": "play",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Plays the given Sound using the computer’s sound device.\r\nThe sound is only played if no other sounds are currently being played."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the given sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nplay(sine_sound(440, 5));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 258,
									"name": "sound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the sound to play"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AudioPlayed"
							}
						}
					]
				},
				{
					"id": 259,
					"name": "play_concurrently",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 423,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L423"
						}
					],
					"signatures": [
						{
							"id": 260,
							"name": "play_concurrently",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Plays the given Sound using the computer’s sound device\r\non top of any sounds that are currently playing."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nplay_concurrently(sine_sound(440, 5));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 261,
									"name": "sound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the sound to play"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 252,
					"name": "play_wave",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 328,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L328"
						}
					],
					"signatures": [
						{
							"id": 253,
							"name": "play_wave",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Plays the given Wave using the computer’s sound device, for the duration\r\ngiven in seconds.\r\nThe sound is only played if no other sounds are currently being played."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the given sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nplay_wave(t => math_sin(t * 3000), 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 254,
									"name": "wave",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the wave function to play, starting at 0"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Wave"
									}
								},
								{
									"id": 255,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AudioPlayed"
							}
						}
					]
				},
				{
					"id": 226,
					"name": "record",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 193,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L193"
						}
					],
					"signatures": [
						{
							"id": 227,
							"name": "record",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "takes a <CODE>buffer</CODE> duration (in seconds) as argument, and\r\nreturns a nullary stop function <CODE>stop</CODE>. A call\r\n<CODE>stop()</CODE> returns a sound promise: a nullary function\r\nthat returns a sound. Example: <PRE><CODE>init_record();\r\nconst stop = record(0.5);\r\n// record after 0.5 seconds. Then in next query:\r\nconst promise = stop();\r\n// In next query, you can play the promised sound, by\r\n// applying the promise:\r\nplay(promise());</CODE></PRE>"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "nullary <CODE>stop</CODE> function;\r\n<CODE>stop()</CODE> stops the recording and\r\nreturns a sound promise: a nullary function that returns the recorded sound"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 228,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "pause before recording, in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 229,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "sound/functions.ts",
											"line": 193,
											"character": 40,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L193"
										}
									],
									"signatures": [
										{
											"id": 230,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 231,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "sound/functions.ts",
															"line": 193,
															"character": 46,
															"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L193"
														}
													],
													"signatures": [
														{
															"id": 232,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Sound"
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 233,
					"name": "record_for",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 226,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L226"
						}
					],
					"signatures": [
						{
							"id": 234,
							"name": "record_for",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Records a sound of given <CODE>duration</CODE> in seconds, after\r\na <CODE>buffer</CODE> also in seconds, and\r\nreturns a sound promise: a nullary function\r\nthat returns a sound. Example: <PRE><CODE>init_record();\r\nconst promise = record_for(2, 0.5);\r\n// In next query, you can play the promised sound, by\r\n// applying the promise:\r\nplay(promise());</CODE></PRE>"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "<CODE>promise</CODE>: nullary function which returns recorded sound"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 235,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 236,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "pause before recording, in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 237,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "sound/functions.ts",
											"line": 226,
											"character": 62,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L226"
										}
									],
									"signatures": [
										{
											"id": 238,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Sound"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 282,
					"name": "sawtooth_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 579,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L579"
						}
					],
					"signatures": [
						{
							"id": 283,
							"name": "sawtooth_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a sawtooth wave sound with given frequency and duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting sawtooth wave sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsawtooth_sound(440, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 284,
									"name": "freq",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the frequency of the sawtooth wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 285,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the sawtooth wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 267,
					"name": "silence_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 509,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L509"
						}
					],
					"signatures": [
						{
							"id": 268,
							"name": "silence_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a silence sound with given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting silence sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsilence_sound(5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 269,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the silence sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 289,
					"name": "simultaneously",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 625,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L625"
						}
					],
					"signatures": [
						{
							"id": 290,
							"name": "simultaneously",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Sound by combining the sounds in a given list\r\nwhere all the sounds are overlapped on top of each other."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the combined Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsimultaneously(list(sine_sound(200, 2), sine_sound(400, 3)))\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 291,
									"name": "list_of_sounds",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given list of sounds"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "List"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 270,
					"name": "sine_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 521,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L521"
						}
					],
					"signatures": [
						{
							"id": 271,
							"name": "sine_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a sine wave sound with given frequency and duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting sine wave sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsine_sound(440, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 272,
									"name": "freq",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the frequency of the sine wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 273,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the sine wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 274,
					"name": "square_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 533,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L533"
						}
					],
					"signatures": [
						{
							"id": 275,
							"name": "square_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a square wave sound with given frequency and duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting square wave sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsquare_sound(440, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 276,
									"name": "f",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 277,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the square wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 298,
					"name": "stacking_adsr",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 710,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L710"
						}
					],
					"signatures": [
						{
							"id": 299,
							"name": "stacking_adsr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a Sound that results from applying a list of envelopes\r\nto a given wave form. The wave form is a Sound generator that\r\ntakes a frequency and a duration as arguments and produces a\r\nSound with the given frequency and duration. Each envelope is\r\napplied to a harmonic: the first harmonic has the given frequency,\r\nthe second has twice the frequency, the third three times the\r\nfrequency etc. The harmonics are then layered simultaneously to\r\nproduce the resulting Sound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nstacking_adsr(sine_sound, 300, 5, list(adsr(0.1, 0.3, 0.2, 0.5), adsr(0.2, 0.5, 0.6, 0.1), adsr(0.3, 0.1, 0.7, 0.3)));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 300,
									"name": "waveform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "function from pair(frequency, duration) to Sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "SoundProducer"
									}
								},
								{
									"id": 301,
									"name": "base_frequency",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "frequency of the first harmonic"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 302,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration of the produced Sound, in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 303,
									"name": "envelopes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "– list of envelopes, which are functions from Sound to Sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "List"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 262,
					"name": "stop",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 484,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L484"
						}
					],
					"signatures": [
						{
							"id": 263,
							"name": "stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stops all currently playing sounds."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 278,
					"name": "triangle_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 555,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L555"
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "triangle_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a triangle wave sound with given frequency and duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting triangle wave sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ntriangle_sound(440, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 280,
									"name": "freq",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the frequency of the triangle wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 281,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the triangle wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 330,
					"name": "trombone",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 911,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L911"
						}
					],
					"signatures": [
						{
							"id": 331,
							"name": "trombone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "returns a Sound reminiscent of a trombone, playing\r\na given note for a given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting trombone Sound with given pitch and duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ntrombone(60, 2);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 332,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 333,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 334,
					"name": "violin",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound/functions.ts",
							"line": 928,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L928"
						}
					],
					"signatures": [
						{
							"id": 335,
							"name": "violin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "returns a Sound reminiscent of a violin, playing\r\na given note for a given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting violin Sound with given pitch and duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nviolin(53, 4);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 336,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 337,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						292,
						318,
						322,
						286,
						246,
						243,
						224,
						249,
						315,
						309,
						239,
						312,
						264,
						304,
						326,
						256,
						259,
						252,
						226,
						233,
						282,
						267,
						289,
						270,
						274,
						298,
						262,
						278,
						330,
						334
					]
				}
			],
			"sources": [
				{
					"fileName": "sound/functions.ts",
					"line": 28,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound/functions.ts#L28"
				}
			]
		},
		{
			"id": 1016,
			"name": "sound_matrix/functions",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 1027,
					"name": "ToneMatrix",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"sources": [
						{
							"fileName": "sound_matrix/functions.ts",
							"line": 16,
							"character": 13,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L16"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1028,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1039,
									"name": "bindMatrixButtons",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "sound_matrix/functions.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L20"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1040,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "sound_matrix/functions.ts",
													"line": 326,
													"character": 9,
													"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L326"
												}
											],
											"signatures": [
												{
													"id": 1041,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 1033,
									"name": "clear_matrix",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "sound_matrix/functions.ts",
											"line": 18,
											"character": 2,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L18"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1034,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "sound_matrix/functions.ts",
													"line": 358,
													"character": 16,
													"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L358"
												}
											],
											"signatures": [
												{
													"id": 1035,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 1029,
									"name": "initialise_matrix",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "sound_matrix/functions.ts",
											"line": 17,
											"character": 2,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L17"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1030,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "sound_matrix/functions.ts",
													"line": 190,
													"character": 9,
													"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L190"
												}
											],
											"signatures": [
												{
													"id": 1031,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 1032,
															"name": "$container",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HTMLElement",
																"qualifiedName": "HTMLElement",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 1036,
									"name": "randomise_matrix",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "sound_matrix/functions.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L19"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1037,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "sound_matrix/functions.ts",
													"line": 304,
													"character": 9,
													"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L304"
												}
											],
											"signatures": [
												{
													"id": 1038,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1039,
										1033,
										1029,
										1036
									]
								}
							],
							"sources": [
								{
									"fileName": "sound_matrix/functions.ts",
									"line": 16,
									"character": 26,
									"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L16"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 1025,
					"name": "clear_all_timeout",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound_matrix/functions.ts",
							"line": 387,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L387"
						}
					],
					"signatures": [
						{
							"id": 1026,
							"name": "clear_all_timeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1019,
					"name": "clear_matrix",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound_matrix/functions.ts",
							"line": 358,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L358"
						}
					],
					"signatures": [
						{
							"id": 1020,
							"name": "clear_matrix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1017,
					"name": "get_matrix",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound_matrix/functions.ts",
							"line": 342,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L342"
						}
					],
					"signatures": [
						{
							"id": 1018,
							"name": "get_matrix",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "List"
							}
						}
					]
				},
				{
					"id": 1021,
					"name": "set_timeout",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "sound_matrix/functions.ts",
							"line": 376,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L376"
						}
					],
					"signatures": [
						{
							"id": 1022,
							"name": "set_timeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 1023,
									"name": "f",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1024,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						1027
					]
				},
				{
					"title": "Functions",
					"children": [
						1025,
						1019,
						1017,
						1021
					]
				}
			],
			"sources": [
				{
					"fileName": "sound_matrix/functions.ts",
					"line": 13,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/sound_matrix/functions.ts#L13"
				}
			]
		},
		{
			"id": 348,
			"name": "stereo_sound",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The stereo sounds library build on the sounds library by accommodating stereo sounds.\r\nWithin this library, all sounds are represented in stereo, with two waves, left and right.\r\n\r\nA Stereo Sound is a "
					},
					{
						"kind": "code",
						"text": "`pair(pair(left_wave, right_wave), duration)`"
					},
					{
						"kind": "text",
						"text": " where duration is the length of the sound in seconds.\r\nThe constructor "
					},
					{
						"kind": "code",
						"text": "`make_stereo_sound`"
					},
					{
						"kind": "text",
						"text": " and accessors "
					},
					{
						"kind": "code",
						"text": "`get_left_wave`"
					},
					{
						"kind": "text",
						"text": ", "
					},
					{
						"kind": "code",
						"text": "`get_right_wave`"
					},
					{
						"kind": "text",
						"text": ", and "
					},
					{
						"kind": "code",
						"text": "`get_duration`"
					},
					{
						"kind": "text",
						"text": " are provided.\r\nThe "
					},
					{
						"kind": "code",
						"text": "`make_sound`"
					},
					{
						"kind": "text",
						"text": " constructor from sounds is syntatic sugar for "
					},
					{
						"kind": "code",
						"text": "`make_stereo_sounds`"
					},
					{
						"kind": "text",
						"text": " with equal waves."
					}
				],
				"blockTags": [
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Koh Shang Hui"
							}
						]
					},
					{
						"tag": "@author",
						"content": [
							{
								"kind": "text",
								"text": "Samyukta Sounderraman"
							}
						]
					}
				]
			},
			"originalName": "stereo_sound/functions",
			"children": [
				{
					"id": 439,
					"name": "adsr",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 827,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L827"
						}
					],
					"signatures": [
						{
							"id": 440,
							"name": "adsr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an envelope: a function from Sound to Sound.\r\nWhen the adsr envelope is applied to a Sound, it returns\r\na new Sound with its amplitude modified according to parameters\r\nThe relative amplitude increases from 0 to 1 linearly over the\r\nattack proportion, then decreases from 1 to sustain level over the\r\ndecay proportion, and remains at that level until the release\r\nproportion when it decays back to 0."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Envelope a function from Sound to Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nadsr(0.2, 0.3, 0.3, 0.1)(sound);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 441,
									"name": "attack_ratio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "proportion of Sound in attack phase"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 442,
									"name": "decay_ratio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "proportion of Sound decay phase"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 443,
									"name": "sustain_level",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "sustain level between 0 and 1"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 444,
									"name": "release_ratio",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "proportion of Sound in release phase"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SoundTransformer"
							}
						}
					]
				},
				{
					"id": 465,
					"name": "bell",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 1031,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L1031"
						}
					],
					"signatures": [
						{
							"id": 466,
							"name": "bell",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "returns a Sound reminiscent of a bell, playing\r\na given note for a given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting bell Sound with given pitch and duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nbell(40, 1);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 467,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 468,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 469,
					"name": "cello",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 1053,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L1053"
						}
					],
					"signatures": [
						{
							"id": 470,
							"name": "cello",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "returns a Sound reminiscent of a cello, playing\r\na given note for a given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting cello Sound with given pitch and duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ncello(36, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 471,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 472,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 433,
					"name": "consecutively",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 763,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L763"
						}
					],
					"signatures": [
						{
							"id": 434,
							"name": "consecutively",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Sound by combining the sounds in a given list\r\nwhere the second sound is appended to the end of the first sound,\r\nthe third sound is appended to the end of the second sound, and\r\nso on. The effect is that the sounds in the list are joined end-to-end"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the combined Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconsecutively(list(sine_sound(200, 2), sine_sound(400, 3)));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 435,
									"name": "list_of_sounds",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given list of sounds"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "List"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 379,
					"name": "get_duration",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 315,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L315"
						}
					],
					"signatures": [
						{
							"id": 380,
							"name": "get_duration",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Accesses the duration of a given Sound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the duration of the Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nget_duration(make_sound(t => Math_sin(2 * Math_PI * 440 * t), 5)); // Returns 5\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 381,
									"name": "sound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given Sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 373,
					"name": "get_left_wave",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 293,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L293"
						}
					],
					"signatures": [
						{
							"id": 374,
							"name": "get_left_wave",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Accesses the left wave function of a given Sound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the wave function of the Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nget_wave(make_sound(t => Math_sin(2 * Math_PI * 440 * t), 5)); // Returns t => Math_sin(2 * Math_PI * 440 * t)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 375,
									"name": "sound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given Sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Wave"
							}
						}
					]
				},
				{
					"id": 376,
					"name": "get_right_wave",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 304,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L304"
						}
					],
					"signatures": [
						{
							"id": 377,
							"name": "get_right_wave",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Accesses the left wave function of a given Sound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the wave function of the Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nget_wave(make_sound(t => Math_sin(2 * Math_PI * 440 * t), 5)); // Returns t => Math_sin(2 * Math_PI * 440 * t)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 378,
									"name": "sound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given Sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Wave"
							}
						}
					]
				},
				{
					"id": 349,
					"name": "init_record",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 157,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L157"
						}
					],
					"signatures": [
						{
							"id": 350,
							"name": "init_record",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initialize recording by obtaining permission\r\nto use the default device microphone"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "string \"obtaining recording permission\""
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 382,
					"name": "is_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 326,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L326"
						}
					],
					"signatures": [
						{
							"id": 383,
							"name": "is_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Checks if the argument is a Sound"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "true if x is a Sound, false otherwise"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nis_sound(make_sound(t => 0, 2)); // Returns true\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 384,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "input to be checked"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 462,
					"name": "letter_name_to_frequency",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 1017,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L1017"
						}
					],
					"signatures": [
						{
							"id": 463,
							"name": "letter_name_to_frequency",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a letter name to its corresponding frequency."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the corresponding frequency"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nletter_name_to_frequency(\"A4\"); // Returns 440\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 464,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 456,
					"name": "letter_name_to_midi_note",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 946,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L946"
						}
					],
					"signatures": [
						{
							"id": 457,
							"name": "letter_name_to_midi_note",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a letter name to its corresponding MIDI note.\r\nThe letter name is represented in standard pitch notation.\r\nExamples are \"A5\", \"Db3\", \"C#7\".\r\nRefer to <a href=\"https://i.imgur.com/qGQgmYr.png\">this mapping from\r\nletter name to midi notes."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the corresponding midi note"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nletter_name_to_midi_note(\"C4\"); // Returns 60\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 458,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 369,
					"name": "make_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 282,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L282"
						}
					],
					"signatures": [
						{
							"id": 370,
							"name": "make_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a Sound with given wave function and duration.\r\nThe wave function is a function: number -> number\r\nthat takes in a non-negative input time and returns an amplitude\r\nbetween -1 and 1."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "with wave as wave function and duration as duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst s = make_sound(t => Math_sin(2 * Math_PI * 440 * t), 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 371,
									"name": "wave",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "wave function of the sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Wave"
									}
								},
								{
									"id": 372,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration of the sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 364,
					"name": "make_stereo_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 257,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L257"
						}
					],
					"signatures": [
						{
							"id": 365,
							"name": "make_stereo_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a Stereo Sound with given wave function and duration.\r\nThe wave function is a function: number -> number\r\nthat takes in a non-negative input time and returns an amplitude\r\nbetween -1 and 1."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting stereo sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst s = make_stereo_sound(t => Math_sin(2 * Math_PI * 440 * t), t => Math_sin(2 * Math_PI * 300 * t), 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 366,
									"name": "left_wave",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "wave function of the left channel of the sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Wave"
									}
								},
								{
									"id": 367,
									"name": "right_wave",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "wave function of the right channel of the sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Wave"
									}
								},
								{
									"id": 368,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration of the sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 459,
					"name": "midi_note_to_frequency",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 1005,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L1005"
						}
					],
					"signatures": [
						{
							"id": 460,
							"name": "midi_note_to_frequency",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Converts a MIDI note to its corresponding frequency."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the frequency of the MIDI note"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nmidi_note_to_frequency(69); // Returns 440\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 461,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 411,
					"name": "noise_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 656,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L656"
						}
					],
					"signatures": [
						{
							"id": 412,
							"name": "noise_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a noise sound with given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting noise sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nnoise_sound(5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 413,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the noise sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 405,
					"name": "pan",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 600,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L600"
						}
					],
					"signatures": [
						{
							"id": 406,
							"name": "pan",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a Sound Transformer that pans a sound based on the pan amount.\r\nThe input sound is first squashed to mono.\r\nAn amount of "
									},
									{
										"kind": "code",
										"text": "`-1`"
									},
									{
										"kind": "text",
										"text": " is a hard left pan, "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": " is balanced, "
									},
									{
										"kind": "code",
										"text": "`1`"
									},
									{
										"kind": "text",
										"text": " is hard right pan."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a Sound Transformer that pans a Sound"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 407,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the pan amount, from -1 to 1"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SoundTransformer"
							}
						}
					]
				},
				{
					"id": 408,
					"name": "pan_mod",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 626,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L626"
						}
					],
					"signatures": [
						{
							"id": 409,
							"name": "pan_mod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a Sound Transformer that uses a Sound to pan another Sound.\r\nThe modulator is treated as a mono sound and its output is used to pan\r\nan input Sound.\r\n"
									},
									{
										"kind": "code",
										"text": "`-1`"
									},
									{
										"kind": "text",
										"text": " is a hard left pan, "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": " is balanced, "
									},
									{
										"kind": "code",
										"text": "`1`"
									},
									{
										"kind": "text",
										"text": " is hard right pan."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a Sound Transformer that pans a Sound"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 410,
									"name": "modulator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the Sound used to modulate the pan of another sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SoundTransformer"
							}
						}
					]
				},
				{
					"id": 451,
					"name": "phase_mod",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 919,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L919"
						}
					],
					"signatures": [
						{
							"id": 452,
							"name": "phase_mod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a SoundTransformer which uses its argument\r\nto modulate the phase of a (carrier) sine wave\r\nof given frequency and duration with a given Sound.\r\nModulating with a low frequency Sound results in a vibrato effect.\r\nModulating with a Sound with frequencies comparable to\r\nthe sine wave frequency results in more complex wave forms."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "function which takes in a Sound and returns a Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nphase_mod(440, 5, 1)(sine_sound(220, 5));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 453,
									"name": "freq",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the frequency of the sine wave to be modulated"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 454,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the output soud"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 455,
									"name": "amount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the amount of modulation to apply to the carrier sine wave"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SoundTransformer"
							}
						}
					]
				},
				{
					"id": 473,
					"name": "piano",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 1070,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L1070"
						}
					],
					"signatures": [
						{
							"id": 474,
							"name": "piano",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "returns a Sound reminiscent of a piano, playing\r\na given note for a given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting piano Sound with given pitch and duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\npiano(48, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 475,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 476,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 394,
					"name": "play",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 375,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L375"
						}
					],
					"signatures": [
						{
							"id": 395,
							"name": "play",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Plays the given Sound using the computer’s sound device.\r\nThe sound is only played if no other sounds are currently being played."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the given sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nplay(sine_sound(440, 5));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 396,
									"name": "sound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the sound to play"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AudioPlayed"
							}
						}
					]
				},
				{
					"id": 397,
					"name": "play_concurrently",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 483,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L483"
						}
					],
					"signatures": [
						{
							"id": 398,
							"name": "play_concurrently",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Plays the given Sound using the computer’s sound device\r\non top of any sounds that are currently playing."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nplay_concurrently(sine_sound(440, 5));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 399,
									"name": "sound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the sound to play"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 385,
					"name": "play_wave",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 344,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L344"
						}
					],
					"signatures": [
						{
							"id": 386,
							"name": "play_wave",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Plays the given Wave using the computer’s sound device, for the duration\r\ngiven in seconds.\r\nThe sound is only played if no other sounds are currently being played."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the given sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nplay_wave(t => math_sin(t * 3000), 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 387,
									"name": "wave",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the wave function to play, starting at 0"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Wave"
									}
								},
								{
									"id": 388,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AudioPlayed"
							}
						}
					]
				},
				{
					"id": 389,
					"name": "play_waves",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 359,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L359"
						}
					],
					"signatures": [
						{
							"id": 390,
							"name": "play_waves",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Plays the given two Waves using the computer’s sound device, for the duration\r\ngiven in seconds. The first Wave is for the left channel, the second for the\r\nright channel.\r\nThe sound is only played if no other sounds are currently being played."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the given sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nplay_waves(t => math_sin(t * 3000), t => math_sin(t * 6000), 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 391,
									"name": "wave1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the wave function to play on the left channel, starting at 0"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Wave"
									}
								},
								{
									"id": 392,
									"name": "wave2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the wave function to play on the right channel, starting at 0"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Wave"
									}
								},
								{
									"id": 393,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "AudioPlayed"
							}
						}
					]
				},
				{
					"id": 351,
					"name": "record",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 180,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L180"
						}
					],
					"signatures": [
						{
							"id": 352,
							"name": "record",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "takes a <CODE>buffer</CODE> duration (in seconds) as argument, and\r\nreturns a nullary stop function <CODE>stop</CODE>. A call\r\n<CODE>stop()</CODE> returns a sound promise: a nullary function\r\nthat returns a sound. Example: <PRE><CODE>init_record();\r\nconst stop = record(0.5);\r\n// record after 0.5 seconds. Then in next query:\r\nconst promise = stop();\r\n// In next query, you can play the promised sound, by\r\n// applying the promise:\r\nplay(promise());</CODE></PRE>"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "nullary <CODE>stop</CODE> function;\r\n<CODE>stop()</CODE> stops the recording and\r\nreturns a sound promise: a nullary function that returns the recorded sound"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 353,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "pause before recording, in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 354,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "stereo_sound/functions.ts",
											"line": 180,
											"character": 40,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L180"
										}
									],
									"signatures": [
										{
											"id": 355,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 356,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "stereo_sound/functions.ts",
															"line": 180,
															"character": 46,
															"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L180"
														}
													],
													"signatures": [
														{
															"id": 357,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Sound"
															}
														}
													]
												}
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 358,
					"name": "record_for",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 213,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L213"
						}
					],
					"signatures": [
						{
							"id": 359,
							"name": "record_for",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Records a sound of given <CODE>duration</CODE> in seconds, after\r\na <CODE>buffer</CODE> also in seconds, and\r\nreturns a sound promise: a nullary function\r\nthat returns a sound. Example: <PRE><CODE>init_record();\r\nconst promise = record_for(2, 0.5);\r\n// In next query, you can play the promised sound, by\r\n// applying the promise:\r\nplay(promise());</CODE></PRE>"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "<CODE>promise</CODE>: nullary function which returns the recorded sound"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 360,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 361,
									"name": "buffer",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "pause before recording, in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 362,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "stereo_sound/functions.ts",
											"line": 213,
											"character": 62,
											"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L213"
										}
									],
									"signatures": [
										{
											"id": 363,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Sound"
											}
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 429,
					"name": "sawtooth_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 737,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L737"
						}
					],
					"signatures": [
						{
							"id": 430,
							"name": "sawtooth_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a sawtooth wave sound with given frequency and duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting sawtooth wave sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsawtooth_sound(440, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 431,
									"name": "freq",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the frequency of the sawtooth wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 432,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the sawtooth wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 414,
					"name": "silence_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 667,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L667"
						}
					],
					"signatures": [
						{
							"id": 415,
							"name": "silence_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a silence sound with given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting silence sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsilence_sound(5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 416,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the silence sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 436,
					"name": "simultaneously",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 786,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L786"
						}
					],
					"signatures": [
						{
							"id": 437,
							"name": "simultaneously",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a new Sound by combining the sounds in a given list\r\nwhere all the sounds are overlapped on top of each other."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the combined Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsimultaneously(list(sine_sound(200, 2), sine_sound(400, 3)))\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 438,
									"name": "list_of_sounds",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "given list of sounds"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "List"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 417,
					"name": "sine_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 679,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L679"
						}
					],
					"signatures": [
						{
							"id": 418,
							"name": "sine_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a sine wave sound with given frequency and duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting sine wave sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsine_sound(440, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 419,
									"name": "freq",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the frequency of the sine wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 420,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the sine wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 421,
					"name": "square_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 691,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L691"
						}
					],
					"signatures": [
						{
							"id": 422,
							"name": "square_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a square wave sound with given frequency and duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting square wave sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nsquare_sound(440, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 423,
									"name": "f",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 424,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the square wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 402,
					"name": "squash",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 586,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L586"
						}
					],
					"signatures": [
						{
							"id": 403,
							"name": "squash",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Centers a Sound by averaging its left and right channels,\r\nresulting in an effectively mono sound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a new sound with the left and right channels averaged"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 404,
									"name": "sound",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the sound to be squashed"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Sound"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 445,
					"name": "stacking_adsr",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 883,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L883"
						}
					],
					"signatures": [
						{
							"id": 446,
							"name": "stacking_adsr",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a Sound that results from applying a list of envelopes\r\nto a given wave form. The wave form is a Sound generator that\r\ntakes a frequency and a duration as arguments and produces a\r\nSound with the given frequency and duration. Each envelope is\r\napplied to a harmonic: the first harmonic has the given frequency,\r\nthe second has twice the frequency, the third three times the\r\nfrequency etc. The harmonics are then layered simultaneously to\r\nproduce the resulting Sound."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting Sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nstacking_adsr(sine_sound, 300, 5, list(adsr(0.1, 0.3, 0.2, 0.5), adsr(0.2, 0.5, 0.6, 0.1), adsr(0.3, 0.1, 0.7, 0.3)));\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 447,
									"name": "waveform",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "function from pair(frequency, duration) to Sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "SoundProducer"
									}
								},
								{
									"id": 448,
									"name": "base_frequency",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "frequency of the first harmonic"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 449,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration of the produced Sound, in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 450,
									"name": "envelopes",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "– list of envelopes, which are functions from Sound to Sound"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "List"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 400,
					"name": "stop",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 572,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L572"
						}
					],
					"signatures": [
						{
							"id": 401,
							"name": "stop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stops all currently playing sounds."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 425,
					"name": "triangle_sound",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 713,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L713"
						}
					],
					"signatures": [
						{
							"id": 426,
							"name": "triangle_sound",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Makes a triangle wave sound with given frequency and duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "resulting triangle wave sound"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ntriangle_sound(440, 5);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 427,
									"name": "freq",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the frequency of the triangle wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 428,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the duration of the triangle wave sound"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 477,
					"name": "trombone",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 1087,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L1087"
						}
					],
					"signatures": [
						{
							"id": 478,
							"name": "trombone",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "returns a Sound reminiscent of a trombone, playing\r\na given note for a given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting trombone Sound with given pitch and duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ntrombone(60, 2);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 479,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 480,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				},
				{
					"id": 481,
					"name": "violin",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "stereo_sound/functions.ts",
							"line": 1104,
							"character": 16,
							"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L1104"
						}
					],
					"signatures": [
						{
							"id": 482,
							"name": "violin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "returns a Sound reminiscent of a violin, playing\r\na given note for a given duration"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Sound resulting violin Sound with given pitch and duration"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nviolin(53, 4);\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 483,
									"name": "note",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "MIDI note"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 484,
									"name": "duration",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "duration in seconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "Sound"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						439,
						465,
						469,
						433,
						379,
						373,
						376,
						349,
						382,
						462,
						456,
						369,
						364,
						459,
						411,
						405,
						408,
						451,
						473,
						394,
						397,
						385,
						389,
						351,
						358,
						429,
						414,
						436,
						417,
						421,
						402,
						445,
						400,
						425,
						477,
						481
					]
				}
			],
			"sources": [
				{
					"fileName": "stereo_sound/functions.ts",
					"line": 16,
					"character": 0,
					"url": "https://github.com/source-academy/modules/blob/e21c865/src/bundles/stereo_sound/functions.ts#L16"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				80,
				1042,
				88,
				485,
				12,
				1,
				690,
				875,
				338,
				223,
				1016,
				348
			]
		}
	]
}